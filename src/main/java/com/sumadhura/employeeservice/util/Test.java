package com.sumadhura.employeeservice.util;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import org.apache.commons.codec.binary.Base64;

import com.sumadhura.employeeservice.dto.FileInfo;


public class Test {

	
	public static void main(String[] args) { 
	
	

	
		
		
		
		
		
		
		
		
		
		





	}

	@SuppressWarnings("unused")
	private static void convertBase64ToFile() {
		FileInfo fileInfo = new FileInfo();
		fileInfo.setName("venkatesh.jpg");
		String base64 = "sdadshdfdsfefsds::;;;;";
		fileInfo.setBase64(base64);
		String fileName = fileInfo.getName().substring(0, fileInfo.getName().lastIndexOf('.'));
		String extension = fileInfo.getName().substring((fileInfo.getName().lastIndexOf('.')));
		String name = fileName + "_" + new Date().getTime() + extension;
		String imagePath = "D:\\CUSTOMERAPP_CUG\\images\\sumadhura_projects_images\\referfriend";
		File file = new File(imagePath, name);
		try {
			file.createNewFile();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		if (fileInfo.getBase64().split(",").length > 1) {
			writeBase64StringToFile(file, fileInfo.getBase64().split(",")[1]);
		} else {
			writeBase64StringToFile(file, fileInfo.getBase64());
		}

	}

	private static void writeBase64StringToFile(File targetFile, String content) {
		try (BufferedOutputStream writer = new BufferedOutputStream(new FileOutputStream(targetFile))) {
			writer.write(Base64.decodeBase64(content.getBytes()));
			writer.flush();
			System.out.println("**** The file saved successfully into the server successfully ****"
					+ targetFile.length() + " bytes");
			// throw new IOException();
		} catch (IOException ex) {
			ex.printStackTrace();
			System.out.println("****Exception is occured while uploading file into Server****" + ex.getMessage()
					+ " and " + ex.getStackTrace());
			System.out.println("****Base64 Content is ****" + content);
		}
	}

	static void sort(String[] s, int n) {
		for (int i = 1; i < n; i++) {
			String temp = s[i];

			// Insert s[j] at its correct position
			int j = i - 1;
			while (j >= 0 && temp.length() < s[j].length()) {
				s[j + 1] = s[j];
				j--;
			}
			s[j + 1] = temp;
		}
	}

}
