package com.sumadhura.employeeservice.enums;

public enum FinancialQuerys {
;

	 public static final String QRY_TO_GET_FIN_BOOKING_FORM_RECEIPTS_ENTRY_COUNT = new StringBuilder("SELECT   ")
			 .append(" FBFR.FIN_BOK_FRM_RCPT_ID,NVL(FBFR.PAID_AMOUNT,0) AS PAID_AMOUNT,FBFR.PAID_DATE,")
			  .append(" FBFR.BOOKING_FORM_ID,FBFR.FIN_TRN_SET_OFF_ENT_ID,NVL(FTE.AMOUNT,0) AS TRANSACTION_AMOUNT ")
			  .append("  FROM FIN_BOOKING_FORM_RECEIPTS  FBFR ,")
			  .append(" FIN_TRANSACTION_SET_OFF_ENTRY FTSOE,")
			  .append(" FIN_TRANSACTION_ENTRY FTR")
			  .append(" WHERE FTSOE.FIN_TRN_SET_OFF_ENT_ID = FBFR.FIN_TRN_SET_OFF_ENT_ID")
			  .append(" AND FTR.FIN_TRANSACTION_ENTRY_ID = FTSOE.FIN_TRANSACTION_ENTRY_ID")
			  //.append(" AND FBFR.FIN_TRN_SET_OFF_ENT_ID = :FIN_TRN_SET_OFF_ENT_ID ")
			  .append(" AND FTE.FIN_TRANSACTION_ENTRY_ID = :FIN_TRANSACTION_ENTRY_ID ")
			  .append(" AND FBFR.BOOKING_FORM_ID = :BOOKING_FORM_ID AND FBFR.STATUS_ID = :STATUS_ID")
			  .toString();
	 
	  public static final StringBuilder QRY_TO_GET_FIN_ANONYMOUS_ENTRY_DATA_FOR_REPORT =new StringBuilder("")
			  .append(" select ")
			  .append("	distinct SI.SITE_ID,SI.NAME, ")
			  .append("	(SELECT nvl(sum(FAEN1.AMOUNT),0) FROM  FIN_ANONYMOUS_ENTRY FAEN1 WHERE  FAEN1.SITE_ID = FAEN.SITE_ID ")
			  .append("		       AND TRUNC(FAEN1.RECEIVED_DATE) BETWEEN TRUNC(sysdate-30) AND TRUNC(sysdate) and FAEN1.STATUS_ID IN (6,38) ")
			  .append("		      ) ")
			  .append("		 AS zero_to_thirty ")
			  .append("		 , ")
			  .append("	(SELECT nvl(sum(FAEN1.AMOUNT),0) FROM  FIN_ANONYMOUS_ENTRY FAEN1 WHERE  FAEN1.SITE_ID = FAEN.SITE_ID ")
			  .append("		       AND TRUNC(FAEN1.RECEIVED_DATE) BETWEEN TRUNC(sysdate-45) AND TRUNC(sysdate-31) and FAEN1.STATUS_ID IN (6,38)  ")
			  .append("		      ) ")
			  .append("		 AS thirty_to_foutyfive ")
			  .append("		 , ")
			  .append("	(SELECT nvl(sum(FAEN1.AMOUNT),0) FROM  FIN_ANONYMOUS_ENTRY FAEN1 WHERE  FAEN1.SITE_ID = FAEN.SITE_ID ")
			  .append("		       AND TRUNC(FAEN1.RECEIVED_DATE) BETWEEN TRUNC(sysdate-60) AND TRUNC(sysdate-46) and FAEN1.STATUS_ID IN (6,38)  ")
			  .append("		      ) ")
			  .append("		 AS foutyfive_to_sixty ")
			  .append("		 , ")
			  .append("	(SELECT nvl(sum(FAEN1.AMOUNT),0) FROM  FIN_ANONYMOUS_ENTRY FAEN1 WHERE  FAEN1.SITE_ID = FAEN.SITE_ID ")
			  .append("		       AND TRUNC(FAEN1.RECEIVED_DATE) BETWEEN TRUNC(sysdate-90) AND TRUNC(sysdate-61) and FAEN1.STATUS_ID IN (6,38)  ")
			  .append("		      ) ")
			  .append("		 AS sixty_to_ninty ")
			  .append("		 , ")
			  .append("	(SELECT nvl(sum(FAEN1.AMOUNT),0) FROM  FIN_ANONYMOUS_ENTRY FAEN1 WHERE  FAEN1.SITE_ID = FAEN.SITE_ID ")
			  //.append("		       AND TRUNC(FAEN1.RECEIVED_DATE) BETWEEN TRUNC(sysdate-9000) AND TRUNC(sysdate-91)  ")
			  .append(" AND TRUNC(FAEN1.RECEIVED_DATE) <= TRUNC(sysdate-91) and FAEN1.STATUS_ID IN (6,38) ")
			  .append("		      ) ")
			  .append("		 AS ninty_to_above ")
			  .append("		 , ")
			  .append("	(SELECT nvl(sum(FAEN1.AMOUNT),0) FROM  FIN_ANONYMOUS_ENTRY FAEN1 WHERE  FAEN1.SITE_ID = FAEN.SITE_ID ")
			  //.append("		       AND TRUNC(FAEN1.RECEIVED_DATE) BETWEEN TRUNC(sysdate-9000) AND TRUNC(sysdate-91)  ")
			  .append(" AND TRUNC(FAEN1.RECEIVED_DATE) <= TRUNC(sysdate) and FAEN1.STATUS_ID IN (6,38) ")
			  .append("		      ) ")
			  .append("		 AS sum_of_all ")
			  
			  .append("	 FROM FIN_ANONYMOUS_ENTRY FAEN  ")
			  .append("	 JOIN SITE SI  ")
			  .append("	 ON (SI.SITE_ID = FAEN.SITE_ID) ")
			  .append("  WHERE FAEN.STATUS_ID IN (6) ")
			  .append("  order by SI.SITE_ID ");
	  
	  public static final String QRY_TO_UPDATE_FIN_BOOKING_FORM_ACC_PAY_AMT = new StringBuilder(" ")
			  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS ")
			  .append(" SET PAY_AMOUNT = :payAmount ")
			  .append(",PRINCIPAL_AMOUNT = :principalAmount ")
			  .append(",TAX_AMOUNT = :taxAmount ")
			  .append(",BALANCE_AMOUNT = :balanceAmount ")
			  .append(",PAYMENT_STATUS = :paymentStatus ")
			  .append(",MODIFIED_BY = :createdBy ")
			  .append(",MODIFIED_DATE = SYSDATE ")
			  .append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :finBookingFormAccountsId ")
			  .append(" AND STATUS_ID = :statusId ")
			  .append(" AND BOOKING_FORM_ID = :bookingFormId ")
			  .append(" AND TYPE = :type ")
			  .toString();
	  
	  public static final String QRY_TO_CLEARED_TRANSACTION_LIST = new StringBuffer("")
		  .append("SELECT FTE.FIN_TRANSACTION_TYPE_ID,FSO.FLATS_SALE_OWNERS_ID, ")
		  .append("SI.SALES_FORCE_SITE_NAME AS SALES_FORCE_SITE_NAME,FTE.SITE_ID ")
		  .append(",SUM(FTSO.SET_OFF_AMOUNT) as TRANSACTION_AMOUNT ")
		  .append(",FSO.FLAT_SALE_OWNER ")
		  .append(" FROM ")
		  .append(" FLAT_BOOKING FB INNER JOIN FLAT F ")
		  .append(" ON FB.FLAT_ID = F.FLAT_ID ")
		  .append(" inner join FLAT_COST fc ON FB.FLAT_ID = Fc.FLAT_ID  and fc.status_id = 6 ")
		  .append(" inner join FLAT_DETAILS fd on fd.FLAT_ID = Fb.FLAT_ID  and fd.status_id = 6 ")
		  .append(" INNER JOIN FLATS_SALE_OWNERS FSO ON FSO.FLATS_SALE_OWNERS_ID = FD.FLATS_SALE_OWNERS_ID ")
		  .append(" INNER JOIN FLOOR_DETAILS FD 			  ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID ")
		  .append(" INNER JOIN FLOOR FL 			  ON FL.FLOOR_ID = FD.FLOOR_ID ")
		  .append(" INNER JOIN BLOCK_DETAILS BD 			  ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID  ")
		  .append(" INNER JOIN BLOCK BL 			  ON BL.BLOCK_ID = BD.BLOCK_ID  ")
		  .append(" INNER JOIN SITE S 			  ON BD.SITE_ID = S.SITE_ID ")
		  .append(" INNER JOIN FIN_TRANSACTION_ENTRY FTE 			  ON FB.flat_book_id = FTE.BOOKING_FORM_ID ")
		  .append(" INNER JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSE 			  ON FTE.FIN_TRANSACTION_ENTRY_ID = FTSE.FIN_TRANSACTION_ENTRY_ID ")
		  .append(" INNER JOIN FIN_TRANSACTION_SET_OFF FTSO 			  ON  FTSO.FIN_TRN_SET_OFF_ENT_ID = FTSE.FIN_TRN_SET_OFF_ENT_ID ")
		  .append(" INNER JOIN METADATA_TYPES MT  			  ON  MT.METADATA_TYPES_ID = FTSO.SET_OFF_TYPE ")
		  .append(" INNER JOIN FIN_TRANSACTION_TYPE FTP			  ON FTE.FIN_TRANSACTION_TYPE_ID = FTP.TRANSACTION_TYPE_ID ")
		  .append(" INNER JOIN FIN_TRANSACTION_MODE FTM 			  ON FTE.FIN_TRANSACTION_MODE_ID = FTM.TRANSACTION_MODE_ID ")
		  .append(" INNER JOIN STATUS ST			  ON FTE.TRANSACTION_STATUS_ID = ST.STATUS_ID ")
		  .append(" INNER JOIN SITE SI			  ON FTE.SITE_ID = SI.SITE_ID ")
		  .append(" LEFT OUTER JOIN FIN_BANK FB 			  ON FTE.FIN_BANK_ID = FB.FIN_BANK_ID ")
		  .append(" LEFT JOIN FIN_TRANSACTION_ONLINE FTO 			  ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTO.FIN_TRANSACTION_ENTRY_ID ")
		  .append(" LEFT OUTER JOIN FIN_TRANSFER_MODE FTMM			  ON FTO.FIN_TRANSFER_MODE_ID =  FTMM.TRANSFER_MODE_ID ")
		  .append(" LEFT JOIN FIN_TRANSACTION_CHEQUE FTC 			  ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTC.FIN_TRANSACTION_ENTRY_ID  ")
		  .append(" WHERE FTE.STATUS_ID = :STATUS_ID  AND FB.STATUS_ID = :STATUS_ID ")
		  .append(" AND FTSO.SET_OFF_TYPE in (:SET_OFF_TYPE) AND FTSO.STATUS_ID = :STATUS_ID ")
		  .append(" AND FTE.TRANSACTION_STATUS_ID  in (:TRANSACTION_STATUS_ID) ")
		  
		  //.append("--AND FTE.TRANSACTION_STATUS_ID  in (23,38,20,14,49) ")
		  //.append("--and trunc(NVL(FTE.RECEIVED_DATE,FTE.PAYMENT_DATE)) BETWEEN to_date('01-05-2022','dd-MM-yyyy') AND to_date('27-05-2022','dd-MM-yyyy') ")
		  .append(" and FTE.FIN_TRANSACTION_TYPE_ID in (1,2) ")
		  .append(" and FTE.FIN_TRANSACTION_MODE_ID in (1,2) ")
		  
	  .toString();
	  
	  
	  public static final String QRY_TO_PENDING_TRANSACTION_LIST = new StringBuffer("")
		  .append("SELECT FTE.FIN_TRANSACTION_TYPE_ID,FSO.FLATS_SALE_OWNERS_ID, ")
		  .append("SI.SALES_FORCE_SITE_NAME AS SALES_FORCE_SITE_NAME,FTE.SITE_ID ")
		  .append(",SUM(FTSO.SET_OFF_AMOUNT) as TRANSACTION_AMOUNT ")
		  .append(",FSO.FLAT_SALE_OWNER ")
		  .append(" FROM ")
		  .append(" FLAT_BOOKING FB INNER JOIN FLAT F ")
		  .append(" ON FB.FLAT_ID = F.FLAT_ID ")
		  .append(" inner join FLAT_COST fc ON FB.FLAT_ID = Fc.FLAT_ID  and fc.status_id = 6 ")
		  .append(" inner join FLAT_DETAILS fd on fd.FLAT_ID = Fb.FLAT_ID  and fd.status_id = 6 ")
		  .append(" INNER JOIN FLATS_SALE_OWNERS FSO ON FSO.FLATS_SALE_OWNERS_ID = FD.FLATS_SALE_OWNERS_ID ")
		  .append(" INNER JOIN FLOOR_DETAILS FD 			  ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID ")
		  .append(" INNER JOIN FLOOR FL 			  ON FL.FLOOR_ID = FD.FLOOR_ID ")
		  .append(" INNER JOIN BLOCK_DETAILS BD 			  ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID  ")
		  .append(" INNER JOIN BLOCK BL 			  ON BL.BLOCK_ID = BD.BLOCK_ID  ")
		  .append(" INNER JOIN SITE S 			  ON BD.SITE_ID = S.SITE_ID ")
		  .append(" INNER JOIN FIN_TRANSACTION_ENTRY FTE 			  ON FB.flat_book_id = FTE.BOOKING_FORM_ID ")
		  .append(" INNER JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSE 			  ON FTE.FIN_TRANSACTION_ENTRY_ID = FTSE.FIN_TRANSACTION_ENTRY_ID ")
		  .append(" INNER JOIN FIN_TRANSACTION_SET_OFF FTSO 			  ON  FTSO.FIN_TRN_SET_OFF_ENT_ID = FTSE.FIN_TRN_SET_OFF_ENT_ID ")
		  .append(" INNER JOIN METADATA_TYPES MT  			  ON  MT.METADATA_TYPES_ID = FTSO.SET_OFF_TYPE ")
		  .append(" INNER JOIN FIN_TRANSACTION_TYPE FTP			  ON FTE.FIN_TRANSACTION_TYPE_ID = FTP.TRANSACTION_TYPE_ID ")
		  .append(" INNER JOIN FIN_TRANSACTION_MODE FTM 			  ON FTE.FIN_TRANSACTION_MODE_ID = FTM.TRANSACTION_MODE_ID ")
		  .append(" INNER JOIN STATUS ST			  ON FTE.TRANSACTION_STATUS_ID = ST.STATUS_ID ")
		  .append(" INNER JOIN SITE SI			  ON FTE.SITE_ID = SI.SITE_ID ")
		  .append(" LEFT OUTER JOIN FIN_BANK FB 			  ON FTE.FIN_BANK_ID = FB.FIN_BANK_ID ")
		  .append(" LEFT JOIN FIN_TRANSACTION_ONLINE FTO 			  ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTO.FIN_TRANSACTION_ENTRY_ID ")
		  .append(" LEFT OUTER JOIN FIN_TRANSFER_MODE FTMM			  ON FTO.FIN_TRANSFER_MODE_ID =  FTMM.TRANSFER_MODE_ID ")
		  .append(" LEFT JOIN FIN_TRANSACTION_CHEQUE FTC 			  ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTC.FIN_TRANSACTION_ENTRY_ID  ")
		  .append(" WHERE FTE.STATUS_ID = :STATUS_ID  AND FB.STATUS_ID = :STATUS_ID ")
		  .append(" AND FTSO.SET_OFF_TYPE in (:SET_OFF_TYPE) AND FTSO.STATUS_ID = :STATUS_ID ")
		  .append(" AND FTE.TRANSACTION_STATUS_ID  in (:TRANSACTION_STATUS_ID) ")
		  
		  //.append("--AND FTE.TRANSACTION_STATUS_ID  in (23,38,20,14,49) ")
		  //.append("--and trunc(NVL(FTE.RECEIVED_DATE,FTE.PAYMENT_DATE)) BETWEEN to_date('01-05-2022','dd-MM-yyyy') AND to_date('27-05-2022','dd-MM-yyyy') ")
		  .append(" and FTE.FIN_TRANSACTION_TYPE_ID in (1,2) ")
		  .append(" and FTE.FIN_TRANSACTION_MODE_ID in (1,2) ")
		  
	  .toString();

/*	  SELECT SI.NAME,FAEN.AMOUNT,FAEN.REFERENCE_NUMBER ,FPA.ACCOUNT_NO,TO_CHAR(FAEN.RECEIVED_DATE,'dd-MM-yyyy') as RECEIVED_DATE
	  ,TO_CHAR(FAEN.CREATED_DATE,'dd-MM-yyyy') as CREATED_DATE
	  FROM  FIN_ANONYMOUS_ENTRY FAEN
	  ,SITE SI,FIN_SITE_PROJ_ACC_MAPPING FSPAM
	  ,FIN_PROJECT_ACCOUNTS FPA
	  WHERE SI.SITE_ID = FAEN.SITE_ID 
	  AND FSPAM.FIN_SITE_PROJ_ACC_MAP_ID = FAEN.FIN_SITE_PROJ_ACC_MAP_ID
	  AND FSPAM.FIN_PROJ_ACC_ID =FPA.FIN_PROJ_ACC_ID
	  AND TRUNC(FAEN.RECEIVED_DATE) <= TRUNC(sysdate) and FAEN.STATUS_ID IN (6,38) ;
*/
	  
		public static final String QRY_TO_GET_DEMAND_NOTE_FORMATS = new StringBuilder(" SELECT DEMAND_NOTE_FORMAT_ID,  FORMAT_NAME,  FORMAT_VALUE,  STATUS_ID ")
				.append(" FROM FIN_DEMAND_NOTE_FORMATS ")
				.append(" WHERE STATUS_ID = :STATUS_ID ")
				.toString();
		
		  public static final String QRY_TO_DESCREASE_EXTRA_PAID_AMT=new StringBuilder("")
				  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS ")
				  .append(" SET PAID_AMOUNT = NVL(PAID_AMOUNT,0) - :paidAmount ")
				  .append(",BALANCE_AMOUNT = NVL(BALANCE_AMOUNT,0) + :balanceAmount ")
				  .append(",PAYMENT_STATUS = :paymentStatus ")
				  .append(",MODIFIED_BY = :modifiedBy ")
				  .append(",MODIFIED_DATE = SYSDATE ")
				  .append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :finBookingFormAccountsId ") 
				  .toString();

		  public static final StringBuilder QRY_TO_GET_FIN_BOOKING_FORM_ACCOUNTS_PAID_NON_PAID_DATA=new StringBuilder("")
				  .append("SELECT  FBFA.FIN_BOOKING_FORM_ACCOUNTS_ID, FBFA.PAYMENT_STATUS,")
				  .append("(NVL(PAY_AMOUNT,0) - NVL(PAID_AMOUNT,0)) AS BALANCE_AMOUNT ")
				  .append("FROM  FIN_BOOKING_FORM_MILESTONES FBFM ")
				  .append("JOIN FIN_BOOKING_FORM_ACCOUNTS FBFA ")
				  .append("ON FBFM.FIN_BOOKING_FORM_MILESTONES_ID = FBFA.TYPE_ID ")
				  .append("WHERE FBFM.STATUS_ID = :STATUS_ID AND FBFA.STATUS_ID = :STATUS_ID AND FBFA.PAYMENT_STATUS IN (:PAYMENT_STATUS) ")
				  .append("AND FBFM.PROJECT_MILESTONE_ID IN (:PROJECT_MILESTONE_IDS) ")
				  .append("AND FBFA.BOOKING_FORM_ID IN (:BOOKING_FORM_IDS)")
				  ;
		  
			 public static final StringBuilder QRY_TO_GET_EMP_EMAILS_TO_FOR_RATE_OF_INTEREST=new StringBuilder("SELECT ")
					 .append(" EDSM.EMP_DEP_SITE_MAP_ID,  EDSM.SITE_ID,  EDSM.BLOCK_ID,  EDSM.DEPT_ID,DP.NAME AS DEPT_NAME,")
					 .append(" EL.EMP_ID,EDSM.ROLE_ID,ER.NAME AS ROLL_NAME, EL.FIRST_NAME,  EL.LAST_NAME,  EL.EMAIL")
					 .append(" FROM EMPLOYEE_DEPT_SITE_MAPPING EDSM INNER JOIN DEPARTMENT DP ON DP.DEPT_ID = EDSM.DEPT_ID ,")
					 .append(" EMPLOYEE EL INNER JOIN ")
					 .append(" EMPLOYEE_DEPARTMENT_MAPING EDM  ON EL.EMP_ID = EDM.EMPLOYEE_ID")
					 .append(" INNER JOIN   DEPARTMENT_ROLE_MAPPING  DRM ON EDM.DEPARTMENT_ROLE_MAPPING_ID = DRM.DEPARTMENT_ROLE_MAPPING_ID  ")
					 .append(" INNER JOIN EMPLOYEE_ROLES ER ON DRM.ROLE_ID = ER.ROLE_ID")
					 .append(" WHERE EL.EMP_ID = EDSM.EMPLOYEE_ID")
					 .append(" AND EDSM.SITE_ID = :SITE_ID ")
					 .append(" AND EDSM.STATUS_ID = :STATUS_ID  AND EL.STATUS_ID = :STATUS_ID ");

		public static final String QRY_TO_LOAD_PENALTY_STATISTICS_DATA = new StringBuilder(" SELECT FP.FIN_BOOKING_FORM_ACCOUNTS_ID, FPS.DAYS_DIFF AS DAYS_DIFFERENCE")
				.append(" , NVL(FPS.INTEREST_CAL_ON_AMOUNT,0) as INTEREST_CAL_ON_AMOUNT, NVL(FPS.PAID_AMOUNT,0) as PAID_AMOUNT, NVL(FPS.STAT_TOTAL_AMOUNT,0) AS STAT_TOTAL_AMOUNT, ")
				.append(" NVL(FPS.PAID_TAX_AMOUNT,0) as PAID_TAX_AMOUNT, NVL(FPS.TAX_AMOUNT,0) as TAX_AMOUNT, FPS.FIN_INTEREST_RATES_ID, NVL(FPS.AMOUNT,0) as AMOUNT,")
				.append(" FPS.START_DATE, FPS.END_DATE, FPS.FIN_PNT_STAT_ID, FPS.FIN_PENALTY_ID ")
				.append(" FROM FIN_PENALTY_STATISTICS FPS, ")
				.append(" FIN_PENALTY FP ")
				.append(" WHERE FP.FIN_PENALTY_ID = FPS.FIN_PENALTY_ID AND FP.STATUS_ID = :STATUS_ID AND FPS.FIN_PENALTY_ID = :FIN_PENALTY_ID ")
				.append(" ORDER BY FPS.FIN_PNT_STAT_ID ASC")
				.toString();

		public static final String QRY_TO_UPDATE_PENALTY_STATISTICS_PAID_DATA = new StringBuilder(" ")
				 .append(" UPDATE FIN_PENALTY_STATISTICS SET PAID_AMOUNT = NVL(PAID_AMOUNT,0) + :PAID_AMOUNT")
				 .append(" ,PAID_TAX_AMOUNT = NVL(PAID_TAX_AMOUNT,0) + :PAID_TAX_AMOUNT")
				 .append(",MODIFIED_DATE = SYSDATE ")
				 .append(" WHERE FIN_PNT_STAT_ID = :FIN_PNT_STAT_ID ")
				 .toString();

		public static final String RESET_PENALTY_STATISTICS_PAID_DATA = new StringBuilder(" ")
				 .append(" UPDATE FIN_PENALTY_STATISTICS SET PAID_AMOUNT = :PAID_AMOUNT")
				 .append(" ,PAID_TAX_AMOUNT =  :PAID_TAX_AMOUNT")
				 .append(",MODIFIED_DATE = SYSDATE ")
				 .append(" WHERE FIN_PNT_STAT_ID = :FIN_PNT_STAT_ID ")
				 .toString();

		public static final String UPDATE_OLD_PENALTY_STATISTICS_PAID_DATA = new StringBuilder(" ")
				 .append(" UPDATE FIN_PENALTY_STATISTICS SET TAX_AMOUNT = NVL(TAX_AMOUNT,0) + :TAX_AMOUNT")
				 .append(" ,STAT_TOTAL_AMOUNT =  NVL(STAT_TOTAL_AMOUNT,0) + :STAT_TOTAL_AMOUNT")
				 .append(",MODIFIED_DATE = SYSDATE ")
				 .append(" WHERE FIN_PNT_STAT_ID = :FIN_PNT_STAT_ID ")
				 .toString();

		public static final String QRY_TO_DESCREASE_PENALTY_STATISTICS_PAID_DATA = new StringBuilder(" ")
				 .append(" UPDATE FIN_PENALTY_STATISTICS SET PAID_AMOUNT = NVL(PAID_AMOUNT,0) - :PAID_AMOUNT")
				 .append(" ,PAID_TAX_AMOUNT = NVL(PAID_TAX_AMOUNT,0) - :PAID_TAX_AMOUNT")
				 .append(",MODIFIED_DATE = SYSDATE ")
				 .append(" WHERE FIN_PNT_STAT_ID = :FIN_PNT_STAT_ID ")
				 .toString();
		
		public static final String QRY_TO_UPDATE_PENALTY_TAX_DATA = new StringBuilder("")
				 .append(" UPDATE FIN_PENALTY_TAX_MAPPING SET ")
				 .append(" TAX_PAID_AMOUNT = NVL(TAX_PAID_AMOUNT,0) + :TAX_PAID_AMOUNT")
				 .append(",PAID_TOTAL_INTEREST_AMOUNT = NVL(PAID_TOTAL_INTEREST_AMOUNT,0) + :PAID_TOTAL_INTEREST_AMOUNT")
				 .append(",MODIFIED_DATE = SYSDATE ")
				 //.append(",MODIFIED_BY = :MODIFIED_BY ")
				 .append(" WHERE FIN_PEN_TAX_MAP_ID = :FIN_PEN_TAX_MAP_ID ")
				 .toString();

		public static final String RESET_PENALTY_TAX_DATA = new StringBuilder("")
				 .append(" UPDATE FIN_PENALTY_TAX_MAPPING SET ")
				 .append(" TAX_PAID_AMOUNT =  :TAX_PAID_AMOUNT")
				 .append(",PAID_TOTAL_INTEREST_AMOUNT = :PAID_TOTAL_INTEREST_AMOUNT")
				 .append(",MODIFIED_DATE = SYSDATE ")
				 //.append(",MODIFIED_BY = :MODIFIED_BY ")
				 .append(" WHERE FIN_PEN_TAX_MAP_ID = :FIN_PEN_TAX_MAP_ID ")
				 .toString();

		public static final String UPDATE_OLD_RECORDS_PENALTY_TAX_DATA = new StringBuilder("")
				 .append(" UPDATE FIN_PENALTY_TAX_MAPPING SET ")
				 .append(" START_DATE =  :gstStartDate")
				 .append(",END_DATE = :gstEndDate")
				 .append(",DAYS_DIFF = :daysDifference")
				 .append(",GST_CALC_ON_AMT = :gstCalculationOnAmount")
				 .append(",TOTAL_INTEREST_AMOUNT = :totalInterestAmount ")
				 .append(",MODIFIED_BY = :modifiedBy ")
				 .append(",MODIFIED_DATE = SYSDATE ")
				 .append(" WHERE FIN_PEN_TAX_MAP_ID = :finPenTaxMapId ")
				 .toString();

		
		public static final String QRY_TO_DECREASE_PENALTY_PAID_TAX_DATA = new StringBuilder(" ")
				 .append(" UPDATE FIN_PENALTY_TAX_MAPPING SET ")
				 .append(" TAX_PAID_AMOUNT = NVL(TAX_PAID_AMOUNT,0) - :TAX_PAID_AMOUNT")
				 .append(",PAID_TOTAL_INTEREST_AMOUNT = NVL(PAID_TOTAL_INTEREST_AMOUNT,0) - :PAID_TOTAL_INTEREST_AMOUNT")
				 .append(",MODIFIED_DATE = SYSDATE ")
				 //.append(",MODIFIED_BY = :MODIFIED_BY ")
				 .append(" WHERE FIN_PEN_TAX_MAP_ID = :FIN_PEN_TAX_MAP_ID ")
				 .toString();

		
		public static final String QRY_TO_LOAD_FIN_PENALTY_TAX_MAPPING = new StringBuilder()
				.append("SELECT FTX.PERCENTAGE_ID as PERCENTAGE_ID,PERR.PERCENTAGE as PERCENTAGE_VALUE,FTX.SITE_ID,FTX.TAX_TYPE,FPTM.FIN_PEN_TAX_MAP_ID,")
				.append(" FPTM.FIN_PENALTY_ID,FPTM.FIN_TAX_MAPING_ID,FPTM.FIN_PNT_STAT_ID,NVL(FPTM.TOTAL_INTEREST_AMOUNT,0) AS TOTAL_INTEREST_AMOUNT, ")
				.append(" NVL(FPTM.PAID_TOTAL_INTEREST_AMOUNT,0) AS PAID_TOTAL_INTEREST_AMOUNT,NVL(FPTM.GST_CALC_ON_AMT,0) AS GST_CALC_ON_AMT,NVL(FPTM.AMOUNT,0) AS AMOUNT,NVL(FPTM.TAX_PAID_AMOUNT,0) as TAX_PAID_AMOUNT, FPTM.START_DATE,FPTM.END_DATE,	FPTM.DAYS_DIFF ")
				.append(" FROM FIN_PENALTY_TAX_MAPPING FPTM ")
				.append(" INNER JOIN FIN_TAX_MAPPING FTX ON FPTM.FIN_TAX_MAPING_ID = FTX.FIN_TAX_MAPING_ID ")
				.append(" INNER JOIN PERCENTAGES PERR ON  FTX.PERCENTAGE_ID = PERR.PERCENTAGE_ID ")
				.append(" WHERE FPTM.FIN_PNT_STAT_ID = :FIN_PNT_STAT_ID ")
				.append(" ORDER BY FPTM.FIN_PEN_TAX_MAP_ID ASC")
				.toString();

		public static final String QRY_TO_GET_COUNT_FIN_PENALTY_RECORD=new StringBuffer("SELECT FP.FIN_PENALTY_ID ")
				.append(" FROM FIN_PENALTY FP,FIN_BOOKING_FORM_ACCOUNTS FBFA")
				.append(" WHERE FBFA.FIN_BOOKING_FORM_ACCOUNTS_ID = FP.FIN_BOOKING_FORM_ACCOUNTS_ID AND FP.STATUS_ID = :STATUS_ID AND FBFA.STATUS_ID = :STATUS_ID ")
				.append(" AND FBFA.TYPE_ID = :TYPE_ID AND FBFA.TYPE = :TYPE ")
				.append(" AND FBFA.BOOKING_FORM_ID = :BOOKING_FORM_ID")
				.append(" AND FBFA.FIN_BOOKING_FORM_ACCOUNTS_ID = :FIN_BOOKING_FORM_ACCOUNTS_ID").toString();

		
	 	public static final String QRY_TO_CHECK_FIN_PENALTY_STATISTICS_DATA=new StringBuilder("")
				  .append("SELECT FPS.END_DATE ")
				  .append(" FROM FIN_PENALTY FP LEFT OUTER JOIN FIN_PENALTY_STATISTICS FPS ")
				  .append(" ON FP.FIN_PENALTY_ID = FPS.FIN_PENALTY_ID ")
				  .append(" WHERE FP.FIN_BOOKING_FORM_ACCOUNTS_ID = :FIN_BOOKING_FORM_ACCOUNTS_ID AND FP.STATUS_ID = :STATUS_ID ")
				  .append(" AND TRUNC(FPS.START_DATE) = :START_DATE AND TRUNC(FPS.END_DATE) = :END_DATE ")
				  .toString();
		
		/*public static final String QRY_TO_LOAD_PENALTY_STATISTICS_DATA = new StringBuilder(" SELECT FP.FIN_BOOKING_FORM_ACCOUNTS_ID, FPS.DAYS_DIFF, FPS.INTEREST_CAL_ON_AMOUNT, FPS.PAID_AMOUNT,")
				.append(" FPS.PAID_TAX_AMOUNT, FPS.TAX_AMOUNT, FPS.FIN_INTEREST_RATES_ID, FPS.AMOUNT,")
				.append("FPS.START_DATE, FPS.END_DATE, FPS.FIN_PNT_STAT_ID, FPS.FIN_PENALTY_ID ")
				.append(" FROM FIN_PENALTY_STATISTICS FPS, ")
				.append("FIN_PENALTY FP ")
				.append(" WHERE FP.FIN_PENALTY_ID = FPS.FIN_PENALTY_ID AND FP.STATUS_ID = :STATUS_ID AND FPS.FIN_PENALTY_ID = :FIN_PENALTY_ID ").toString();*/
		

		  public static final String QRY_TO_UPDATE_FIN_PROJECT_MILESTONES_STATUS=new StringBuilder()
				  .append("UPDATE FIN_PROJECT_MILESTONES")
				  .append(" SET PROJECT_MS_STATUS_ID  = :PROJECT_MS_STATUS_ID,")
				  .append(" MS_EDITED_BY = :MODIFIED_BY,")
				  .append(" MS_EDITED_DATE = SYSDATE,")
				  .append(" MODIFIED_BY = :MODIFIED_BY,")
				  .append(" MODIFIED_DATE = SYSDATE")
				  .append(" WHERE PROJECT_MILESTONE_ID = :PROJECT_MILESTONE_ID")
				  .append(" AND STATUS_ID  = :STATUS_ID")
				  .toString();

		
		public static final String QRY_TO_GET_DEMAND_NOTE = new StringBuilder("")
				.append("SELECT FPM.MILE_STONE_NO,FBFM.FIN_BOOKING_FORM_MILESTONES_ID,LOCATION,DOC_NAME,DOC_PATH,FBFM.PROJECT_MILESTONE_ID,FBFDND.FIN_BOK_FOM_DMD_NOTE_ID")
				.append(" FROM FIN_BOOKING_FORM_DEMAND_NOTE FBFDN,")
				.append(" FIN_BOOKING_FORM_DEMAND_NOTE_DOC FBFDND,")
				.append(" FIN_BOOKING_FORM_MILESTONES FBFM,")
				.append(" FIN_PROJECT_MILESTONES FPM ")
				.append(" where FPM.PROJECT_MILESTONE_ID = FBFM.PROJECT_MILESTONE_ID and FPM.status_id = 6")
				.append(" and FBFM.FIN_BOK_FOM_DMD_NOTE_ID = FBFDND.FIN_BOK_FOM_DMD_NOTE_ID")
				.append(" and  FBFDN.FIN_BOK_FOM_DMD_NOTE_ID = FBFDND.FIN_BOK_FOM_DMD_NOTE_ID and FBFM.status_id = 6")
				.append(" and FPM.MILE_STONE_NO IN (2) ").toString();
		
		/* To Get Interest Waived and Paid Details By Malladi */
		public static final String QRY_TO_GET_INTEREST_WAIVED_AND_PAID_DETAILS = new StringBuilder("SELECT DISTINCT ")
				.append(" FTE.FIN_TRANSACTION_ENTRY_ID,                                                             ")                                           
				.append(" FTSO.FIN_TRN_SET_OFF_ID,                                                                  ")
				.append(" FTSO.FIN_BOK_ACC_INVOICE_NO,                                                              ")
				.append(" FTSOE.FIN_TRN_SET_OFF_ENT_ID,                                                             ")                                         
				.append(" ST.NAME AS SITE_NAME,                                                                     ")
				.append(" FT.FLAT_NO,                                                                               ")
				.append(" FT.FLAT_ID,                                                                               ")
				.append(" FB.FLAT_BOOK_ID,                                                                          ")                 
				.append(" FTE.TRANSACTION_CLOSED_DATE,                                                              ")
				.append(" FTE.PAYMENT_DATE,                                                                         ")
				.append(" CASE                                                                                      ")
				.append(" WHEN FTSO.SET_OFF_TYPE=:SET_OFF_INTEREST_WAIVER_TYPE                                      ")
				.append(" AND FTE.FIN_TRANSACTION_TYPE_ID=:FIN_TRANSACTION_INTEREST_WAIVER_TYPE_ID                  ")
				.append(" THEN FTSO.SET_OFF_AMOUNT                                                                  ")
				.append(" ELSE NULL                                                                                 ")
				.append(" END AS INTEREST_WAIVED_AMOUNT,                                                            ")
				.append(" CASE                                                                                      ")
				.append(" WHEN FTSO.SET_OFF_TYPE=:SET_OFF_FIN_PENALTY_TYPE                                          ")
				.append(" AND FTE.FIN_TRANSACTION_TYPE_ID=:FIN_TRANSACTION_RECEIPT_TYPE_ID                          ")
				.append(" THEN FTSO.SET_OFF_AMOUNT                                                                  ")
				.append(" ELSE NULL                                                                                 ")
				.append(" END AS PAID_PENALTY_AMOUNT,                                                               ")
				.append(" FTED.LOCATION,                                                                            ")
				.append(" FTED.DOC_NAME                                                                             ")
				.append(" FROM FIN_TRANSACTION_SET_OFF FTSO                                                         ")
				.append(" INNER JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSOE                                            ")
				.append(" ON(FTSOE.FIN_TRN_SET_OFF_ENT_ID=FTSO.FIN_TRN_SET_OFF_ENT_ID)                              ")
				.append(" INNER JOIN FIN_TRANSACTION_ENTRY FTE                                                      ")
				.append(" ON(FTE.FIN_TRANSACTION_ENTRY_ID=FTSOE.FIN_TRANSACTION_ENTRY_ID)                           ")
				.append(" LEFT OUTER JOIN FIN_TRANSACTION_ENTRY_DOC FTED                                                  ")
				.append(" ON(FTED.FIN_TRANSACTION_ENTRY_ID=FTE.FIN_TRANSACTION_ENTRY_ID AND FTED.RECEIPT_TYPE=:SET_OFF_FIN_PENALTY_TYPE)                            ")
				.append(" INNER JOIN FLAT_BOOKING FB                                                                ")
				.append(" ON(FB.FLAT_BOOK_ID=FTE.BOOKING_FORM_ID)                                                   ")
				.append(" INNER JOIN FLAT FT                                                                        ")
				.append(" ON(FT.FLAT_ID=FB.FLAT_ID)                                                                 ")
				.append(" INNER JOIN FLOOR_DETAILS FLD                                                              ")
				.append(" ON(FLD.FLOOR_DET_ID=FT.FLOOR_DET_ID)                                                      ")
				.append(" INNER JOIN BLOCK_DETAILS BLD                                                              ")
				.append(" ON(BLD.BLOCK_DET_ID=FLD.BLOCK_DET_ID)                                                     ")
				.append(" INNER JOIN SITE ST                                                                        ")
				.append(" ON(ST.SITE_ID=BLD.SITE_ID)                                                                ")              
				.append(" WHERE FTSO.STATUS_ID=:STATUS_ID AND FTE.STATUS_ID=:STATUS_ID                              ")
				.append(" AND FB.STATUS_ID=:STATUS_ID                                                               ")
				.append(" AND FTSO.SET_OFF_TYPE IN(:SET_OFF_TYPE)                                                   ")
				.append(" AND FTE.FIN_TRANSACTION_TYPE_ID IN(:FIN_TRANSACTION_TYPE_ID)                              ")
				.append(" AND FTE.TRANSACTION_STATUS_ID IN(:TRANSACTION_STATUS_IDS)                                 ")
				.append("")
				.toString();
		
		/* To get All Invoices By Malladi */
		public static final String QRY_TO_GET_ALL_CUSTOMERS_INVOICES_DETAILS = new StringBuilder("SELECT ")
				.append(" ST.NAME AS SITE_NAME,                                                          ")
				.append(" CUST.CUST_ID,                                                                  ")
				.append(" CUST.FIRST_NAME AS CUST_NAME,                                                  ")
				.append(" FT.FLAT_ID,                                                                    ")
				.append(" FT.FLAT_NO,                                                                    ")
				.append(" FBFA.FIN_BOOKING_FORM_ACCOUNTS_ID,                                             ")
				.append(" FBFA.TYPE_ID,                                                                  ")
				.append(" FBFA.TYPE,                                                                     ")
				.append(" NVL(FBFA.PAY_AMOUNT,0) as PAY_AMOUNT,                                          ")
				.append(" NVL(FBFA.PAID_AMOUNT,0) as PAID_AMOUNT,                                        ")
				.append(" NVL(FBFA.BALANCE_AMOUNT,0) as BALANCE_AMOUNT,                                  ")
				.append(" FBFA.STATUS_ID,                                                                ")
				.append(" FBFA.BOOKING_FORM_ID,                                                          ")
				.append(" FBFA.PAYMENT_STATUS,                                                           ")
				.append(" FBFA.CREATED_DATE,                                                             ")
				.append(" FBFA.FIN_BOK_ACC_INVOICE_NO,                                                   ")
				.append(" MDTY.NAME AS METADATA_NAME,                                                    ")
				.append(" MDTY.DESCRIPTION AS METADATA_DESC,                                             ")
				.append(" FIDL.DOC_NAME,                                                                 ")
				.append(" FIDL.DOC_PATH AS LOCATION                                                      ")
				.append(" FROM FIN_BOOKING_FORM_ACCOUNTS FBFA                                            ")
				.append(" JOIN METADATA_TYPES MDTY ON(MDTY.METADATA_TYPES_ID=FBFA.TYPE)                  ")
				.append(" INNER JOIN FIN_INVOICE_DOCUMENT_LOCATION FIDL                                  ")
				.append(" ON (FIDL.TYPE = FBFA.TYPE AND FIDL.TYPE_ID =FBFA.TYPE_ID)                      ")
				.append(" INNER JOIN FLAT_BOOKING FB                                                     ")
				.append(" ON(FB.FLAT_BOOK_ID=FBFA.BOOKING_FORM_ID)                                       ")
				.append(" INNER JOIN CUSTOMER CUST                                                       ")
				.append(" ON(CUST.CUST_ID=FB.CUST_ID)                                                    ")
				.append(" INNER JOIN FLAT FT                                                             ")
				.append(" ON(FT.FLAT_ID=FB.FLAT_ID)                                                      ")
				.append(" INNER JOIN FLOOR_DETAILS FLD                                                   ")
				.append(" ON(FLD.FLOOR_DET_ID=FT.FLOOR_DET_ID)                                           ")
				.append(" INNER JOIN BLOCK_DETAILS BLD                                                   ")
				.append(" ON(BLD.BLOCK_DET_ID=FLD.BLOCK_DET_ID)                                          ")
				.append(" INNER JOIN SITE ST                                                             ")
				.append(" ON(ST.SITE_ID=BLD.SITE_ID)                                                     ")
				.append(" WHERE FBFA.STATUS_ID=:STATUS_ID                                                ")
				.append(" AND FB.STATUS_ID=:STATUS_ID                                                    ")
				.append(" AND FBFA.PAYMENT_STATUS IN (:PAYMENT_STATUS)                                   ")
				.append(" AND FBFA.TYPE IN(:TYPE)                                                        ")
				.toString();
		
		public static final String QRY_TO_INSERT_MAINTENANANCE_CHARGES = new StringBuilder("")
				.append(" INSERT INTO FIN_BOOKING_FORM_MAINTENANCE (")
				.append(" FIN_BOK_FRM_MAINTENANCE_ID, BOOKING_FORM_ID, BASIC_AMOUNT,")
				.append(" TAX_AMOUNT, TOTAL_AMOUNT, STATUS_ID, CREATED_BY,  CREATED_DATE)")
				.append(" VALUES ( FIN_BOOKING_FORM_MAINTENANCE_SEQ.NEXTVAL,:bookingFormId,:basicAmount,")
				.append(":taxAmount,:totalAmount,:statusId,:createdBy,SYSDATE ) ")
				.toString();
		
		public static final String QRY_TO_INSERT_MAINTENANANCE_CHARGES_DETAILS = new StringBuilder("")
				.append(" INSERT INTO FIN_BOK_FORM_MAINTENANCE_DTLS ")
				.append("(FIN_BOK_FORM_MAINTENANCE_DTLS_ID,    FIN_BOK_FRM_MAINTENANCE_ID, BASIC_AMOUNT,    TAX_AMOUNT, ")
				.append(" DESCRIPTION,    CREATED_BY,    CREATED_DATE ) ")
				.append(" VALUES ( FIN_BOK_FORM_MAINTENANCE_DTLS_SEQ.NEXTVAL,:finBokFrmMaintenanceId,:basicAmount,:taxAmount, ")
				.append(" :description,:createdBy,SYSDATE ) ")
				.toString();

		public static final String QRY_TO_INSERT_MAINTENANANCE_CHARGES_TAX = new StringBuilder("")
				.append(" INSERT INTO FIN_BOK_FRM_MAINTENANCE_TAX ")
				.append(" (FIN_BOK_FRM_MAINTENANCE_TAX_ID,    FIN_TAX_MAPING_ID,    FIN_BOK_FORM_MAINTENANCE_DTLS_ID,AMOUNT ) ")
				.append(" VALUES( FIN_BOK_FRM_MAINTENANCE_TAX_SEQ.NEXTVAL,:finTaxMappingId,:finBokFormMaintenanceDtlsId,:amount) ")
				.toString();

		public static final String QRY_TO_GET_MAINTENANANCE_CHARGES_DETAILS = new StringBuilder("")
				.append("SELECT FBFMD.FIN_BOK_FORM_MAINTENANCE_DTLS_ID, ")
				.append(" FBFMD.FIN_BOK_FRM_MAINTENANCE_ID, ")
				.append(" FBFMD.BASIC_AMOUNT,FBFMD.TAX_AMOUNT,(FBFMD.BASIC_AMOUNT+FBFMD.TAX_AMOUNT) AS TOTAL_AMOUNT,FBFMD.DESCRIPTION ")
				.append(" FROM FIN_BOK_FORM_MAINTENANCE_DTLS FBFMD WHERE FBFMD.FIN_BOK_FRM_MAINTENANCE_ID = :FIN_BOK_FRM_MAINTENANCE_ID ")
				.toString();
		
		public static final String QRY_TO_GET_MAINTENANANCE_CHARGES_TAX_DETAILS = new StringBuilder("")
				.append(" SELECT FBFMT.FIN_BOK_FRM_MAINTENANCE_TAX_ID,")
				.append(" FBFMT.FIN_TAX_MAPING_ID,")
				.append(" FBFMT.FIN_BOK_FORM_MAINTENANCE_DTLS_ID,")
				.append(" FBFMT.AMOUNT,FTX.PERCENTAGE_ID as PERCENTAGE_ID,PERR.PERCENTAGE as PERCENTAGE_VALUE ")
				.append(" FROM FIN_BOK_FRM_MAINTENANCE_TAX FBFMT ")
				.append(" INNER JOIN FIN_TAX_MAPPING FTX ON FBFMT.FIN_TAX_MAPING_ID = FTX.FIN_TAX_MAPING_ID ")
				.append(" INNER JOIN PERCENTAGES PERR ON  FTX.PERCENTAGE_ID = PERR.PERCENTAGE_ID ")
				.append(" WHERE FBFMT.FIN_BOK_FORM_MAINTENANCE_DTLS_ID = :FIN_BOK_FORM_MAINTENANCE_DTLS_ID ")
				.toString();

		public static final String QRY_TO_GET_FLAT_KHATA_CHARGES_DETAILS = new StringBuilder("")
				.append(" SELECT FBFFKD.FIN_BOK_FORM_FLAT_KHATA_DTLS_ID,")
				.append("   FBFFKD.FIN_BOK_FRM_FLAT_KHATA_ID,")
				.append("   FBFFKD.BASIC_AMOUNT,  FBFFKD.TAX_AMOUNT, ")
				.append("   (FBFFKD.BASIC_AMOUNT+FBFFKD.TAX_AMOUNT) AS TOTAL_AMOUNT, ")
				.append("   FBFFKD.DESCRIPTION ")
				.append(" FROM FIN_BOK_FORM_FLAT_KHATA_DTLS FBFFKD ")
				.append(" WHERE FBFFKD.FIN_BOK_FRM_FLAT_KHATA_ID = :FIN_BOK_FRM_FLAT_KHATA_ID ")
				.toString();
		
		public static final String QRY_TO_GET_FLAT_KHATA_CHARGES_TAX_DETAILS = new StringBuilder("")
				.append(" SELECT FBFFKT.FIN_BOK_FRM_FLAT_KHATA_TAX_ID,")
				.append(" FBFFKT.FIN_TAX_MAPING_ID,")
				.append(" FBFFKT.FIN_BOK_FORM_FLAT_KHATA_DTLS_ID, ")
				.append(" FBFFKT.AMOUNT,FTX.PERCENTAGE_ID as PERCENTAGE_ID,PERR.PERCENTAGE as PERCENTAGE_VALUE ")
				.append(" FROM FIN_BOK_FRM_FLAT_KHATA_TAX FBFFKT ")
				.append(" INNER JOIN FIN_TAX_MAPPING FTX ON FBFFKT.FIN_TAX_MAPING_ID = FTX.FIN_TAX_MAPING_ID ")
				.append(" INNER JOIN PERCENTAGES PERR ON  FTX.PERCENTAGE_ID = PERR.PERCENTAGE_ID ")
				.append(" WHERE FBFFKT.FIN_BOK_FORM_FLAT_KHATA_DTLS_ID = :FIN_BOK_FORM_FLAT_KHATA_DTLS_ID  ")
				.toString();
		
	    public static final String QRY_TO_INSERT_FLAT_KHATA_CHARGES = new StringBuilder("")
				.append(" INSERT INTO FIN_BOOKING_FORM_FLAT_KHATA (")
				.append(" FIN_BOK_FRM_FLAT_KHATA_ID, BOOKING_FORM_ID, BASIC_AMOUNT,")
				.append(" TAX_AMOUNT, TOTAL_AMOUNT, STATUS_ID, CREATED_BY,  CREATED_DATE)")
				.append(" VALUES ( FIN_BOOKING_FORM_FLAT_KHATA_SEQ.NEXTVAL,:bookingFormId,:basicAmount,")
				.append(":taxAmount,:totalAmount,:statusId,:createdBy,SYSDATE ) ")
				.toString();
			
			public static final String QRY_TO_INSERT_FLAT_KHATA_CHARGES_DETAILS = new StringBuilder("")
					.append(" INSERT INTO FIN_BOK_FORM_FLAT_KHATA_DTLS ")
					.append("(FIN_BOK_FORM_FLAT_KHATA_DTLS_ID,    FIN_BOK_FRM_FLAT_KHATA_ID, BASIC_AMOUNT,    TAX_AMOUNT, ")
					.append(" DESCRIPTION,    CREATED_BY,    CREATED_DATE ) ")
					.append(" VALUES (FIN_BOK_FORM_FLAT_KHATA_DTLS_SEQ.NEXTVAL,:finBokFrmFlatKhataId,:basicAmount,:taxAmount, ")
					.append(" :description,:createdBy,SYSDATE ) ")
					.toString();

			public static final String QRY_TO_INSERT_FLAT_KHATA_CHARGES_TAX = new StringBuilder("")
					.append(" INSERT INTO FIN_BOK_FRM_FLAT_KHATA_TAX ")
					.append(" (FIN_BOK_FRM_FLAT_KHATA_TAX_ID,    FIN_TAX_MAPING_ID,    FIN_BOK_FORM_FLAT_KHATA_DTLS_ID,AMOUNT ) ")
					.append(" VALUES( FIN_BOK_FRM_FLAT_KHATA_TAX_SEQ.NEXTVAL,:finTaxMappingId,:finBokFormFlatKhataDetailsId,:amount) ")
					.toString();


		    public static final String QRY_TO_INSERT_CORPUS_FUND_CHARGES = new StringBuilder("")
						.append(" INSERT INTO FIN_BOOKING_FORM_CORPUS_FUND (")
						.append(" FIN_BOK_FRM_CORPUS_FUND_ID, BOOKING_FORM_ID, BASIC_AMOUNT,")
						.append(" TAX_AMOUNT, TOTAL_AMOUNT, STATUS_ID, CREATED_BY,  CREATED_DATE)")
						.append(" VALUES ( FIN_BOOKING_FORM_CORPUS_FUND_SEQ.NEXTVAL,:bookingFormId,:basicAmount,")
						.append(":taxAmount,:totalAmount,:statusId,:createdBy,SYSDATE ) ")
						.toString();
		    
		    public static final String QRY_TO_TRANSACTIONS_LEVEL_ONE_EMP = new StringBuilder("")
		    .append(" SELECT FTSOLM.EMP_ID")
		    .append(" FROM FIN_TRN_EMP_SET_OFF_LEVEL_MAPPING FTSOLM")
		    .append(" ,FIN_TRANSACTION_SET_OFF_LEVEL FTSOL")
		    .append(" ,FIN_TRN_SET_OFF_APPR_TYPE FTSOAP")
		    .append(" WHERE FTSOL.FIN_TRAN_SET_OFF_LEVEL_ID = FTSOLM.FIN_TRAN_SET_OFF_LEVEL_ID")
		    .append(" AND FTSOL.FIN_TRAN_SET_OFF_LEVEL_ID = FTSOAP.FIN_TRAN_SET_OFF_LEVEL_ID")
		     .append(" AND FTSOL.FIN_TRANSACTION_TYPE_ID = :FIN_TRANSACTION_TYPE_ID")
		    .append(" AND  FTSOL.FIN_TRANSACTION_MODE_ID =:FIN_TRANSACTION_MODE_ID ")
		    .append(" AND  FTSOL.SITE_ID =  :SITE_ID")
		    .append(" AND  FTSOL.FIN_LEVEL_ID = :FIN_LEVEL_ID")
		    .append(" AND  FTSOL.STATUS_ID = :STATUS_ID AND  FTSOLM.STATUS_ID = :STATUS_ID ")
		    .append(" FETCH FIRST ROW ONLY ").toString();

		    public static final String QRY_TO_LOAD_OLD_BOOKING_TRANSACTIONS = new StringBuilder("")
					 .append(" SELECT 'TRANSACTION' AS TYPE,FTE.SITE_ID ,SI.NAME AS SITE_NAME ,FTE.FIN_TRANSACTION_ENTRY_ID,FTSE.FIN_TRN_SET_OFF_ENT_ID ,FTE.TRANSACTION_RECEIPT_NO ")
					 .append("  ,BL.NAME AS BLOCK_NAME,FB.FLAT_ID ,F .FLAT_NO ,FTE.BOOKING_FORM_ID AS FLAT_BOOK_ID ")
					 .append("	,FTP.NAME AS TRANSACTION_TYPE ,FTM.NAME AS TRANSACTION_MODE	,NVL(FTMM.NAME,'Cheque') AS ONLINE_TRANSFER_MODE ")
					 .append("  ,CASE WHEN FTE.FIN_TRANSACTION_TYPE_ID = 1 THEN   (CASE WHEN FTSO.SET_OFF_TYPE = 29 THEN 'Principal'   ")
					 .append(" WHEN  FTSO.SET_OFF_TYPE = 35 THEN 'Legal Charges' ")
					 .append(" WHEN FTSO.SET_OFF_TYPE = 27 THEN 'Interest' ")
					 .append(" WHEN FTSO.SET_OFF_TYPE = 102 THEN 'Khata Charges' ")
					 .append(" WHEN FTSO.SET_OFF_TYPE = 103 THEN 'Maintenance' ")
					 .append(" WHEN FTSO.SET_OFF_TYPE = 104 THEN 'Corpus Fund' ")
					 .append(" WHEN FTSO.SET_OFF_TYPE = 34 THEN 'Modification Charges' ")
					 .append(" WHEN FTSO.SET_OFF_TYPE = 62 THEN 'Refundable Advance'")
					 .append(" WHEN FTSO.SET_OFF_TYPE = 32 THEN 'TDS'")
					 .append(" END)")
					 .append(" ELSE 'Amount Refund' END")
					 .append("	 AS TRANSACTION_FOR")
					 .append(" ,FTSO.FIN_BOK_ACC_INVOICE_NO,FTSO.PAID_BY")
					 .append("	,CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.CHEQUE_NO ELSE  FTO.REFERENCE_NO END AS ONLINE_TR_REFERENCE_NO")
					 .append("	,CASE WHEN FTE.FIN_TRANSACTION_TYPE_ID = 1 THEN  FTE.RECEIVED_DATE  ELSE   FTE.PAYMENT_DATE END AS ONLINE_TR_RECEIVE_DATE")
					 .append("	, FTE.PAYMENT_DATE  AS CHEQUE_DATE")
					 .append("	,CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.CHEQUE_DEPOSITED_DATE ELSE FTE.RECEIVED_DATE END AS CHEQUE_DEPOSITED_DATE")
					 .append("	,CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.CLEARANCE_DATE ELSE FTE.RECEIVED_DATE  END AS CHEQUE_CLEARECENCE_DATE")
					 .append("	,CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.CHEQUE_NO ELSE  FTO.REFERENCE_NO END AS CHEQUE_NUMBER")
					 .append("	,CASE WHEN FTE.FIN_TRANSACTION_TYPE_ID = 1 THEN FTE.RECEIVED_DATE ELSE  FTE.PAYMENT_DATE END AS CHEQUE_RECEIVE_DATE")
					 .append("	,FTE.AMOUNT as TRANSACTION_AMOUNT")
					 .append("	,CASE WHEN FB.BANK_NAME ='N/A' THEN null ELSE FB.BANK_NAME END as BANK_NAME")
					 .append("	,FTE.FIN_SITE_PROJ_ACC_MAP_ID AS SITE_BANK_ACCOUNT_ID")
					 .append("	,(select ACCOUNT_NO from FIN_PROJECT_ACCOUNTS where FIN_PROJ_ACC_ID = (select FIN_PROJ_ACC_ID from FIN_SITE_PROJ_ACC_MAPPING where FIN_SITE_PROJ_ACC_MAP_ID = FTE.FIN_SITE_PROJ_ACC_MAP_ID)) AS SITE_BANK_ACCOUNT_NUMBER")
					 .append("        ,CASE WHEN FTSO.SET_OFF_TYPE = 29 THEN FTSO.SET_OFF_AMOUNT  ELSE NULL END AS PRINCIPAL_AMOUNT")
					 .append("	,CASE WHEN FTSO.SET_OFF_TYPE = 27 THEN FTSO.SET_OFF_AMOUNT  ELSE NULL END AS PENALTY_AMOUNT")
					 .append("	,CASE WHEN FTSO.SET_OFF_TYPE = 34 THEN FTSO.SET_OFF_AMOUNT  ELSE NULL END AS MODIFICATION_COST")
					 .append("	,CASE WHEN FTSO.SET_OFF_TYPE = 35 THEN FTSO.SET_OFF_AMOUNT ELSE NULL END AS LEGAL_COST")
					 .append("	,CASE WHEN FTSO.SET_OFF_TYPE = 62 THEN FTSO.SET_OFF_AMOUNT ELSE NULL END AS REFUNDABLE_ADVANCE")
					 .append("	,CASE WHEN FTSO.SET_OFF_TYPE = 32 THEN FTSO.SET_OFF_AMOUNT ELSE NULL END AS TDS_AMOUNT")
					 .append("   ,CASE WHEN FTSO.SET_OFF_TYPE = 102 THEN FTSO.SET_OFF_AMOUNT ELSE NULL END AS FLAT_KHATA_AMOUNT")
					 .append("   ,CASE WHEN FTSO.SET_OFF_TYPE = 103 THEN FTSO.SET_OFF_AMOUNT ELSE NULL END AS MAINTENANCE_AMOUNT")
					 .append("   ,CASE WHEN FTSO.SET_OFF_TYPE = 104 THEN FTSO.SET_OFF_AMOUNT ELSE NULL END AS CORPUS_AMOUNT")
					 .append("	,NULL AS COMMENTs")
					 .append("	,FTE.AMOUNT  AS TOTAL_AMOUNT")
					 .append("	,FTE.TRANSACTION_CLOSED_DATE AS TRANSACTION_CLOSED_DATE")
					 .append("	,CASE WHEN FTE.TRANSACTION_STATUS_ID = 37 THEN 'Cleared' when  FTE.TRANSACTION_STATUS_ID = 51  then 'Bounce'  ELSE  'Received' END AS RECEIPT_STAGE")
					 .append("	,'TRUE' AS SHOW_GST_IN_PDF")
					 .append("	  ,FTE.TRANSACTION_RECEIPT_NO AS EXCEL_RECORD_NO")
					 .append("	,FTE.SOURCE_OF_FUNDS")
					 .append("	,(select FS.NAME from FLAT_BOK_SCHM_MAPPING FBSM,FIN_SCHEME_TAX_MAPPING FSTM,FIN_SCHEME FS")
					 .append("	WHERE FBSM.FIN_SCHE_TAX_MAP_ID = FSTM.FIN_SCHE_TAX_MAP_ID")
					 .append("	AND FSTM.FIN_SCHEME_ID = FS.FIN_SCHEME_ID AND FS.STATUS_ID = 6 AND FBSM.STATUS_ID = 6")
					 .append("	AND FB.FLAT_BOOK_ID = FBSM.FLAT_BOOK_ID")
					 .append("	) as Scheme")
					 .append("	,(select PER.PERCENTAGE from FLAT_BOK_SCHM_MAPPING FBSM,FIN_SCHEME_TAX_MAPPING FSTM,PERCENTAGES PER")
					 .append("	 WHERE FBSM.FIN_SCHE_TAX_MAP_ID = FSTM.FIN_SCHE_TAX_MAP_ID")
					 .append("	AND FBSM.STATUS_ID = 6 AND PER.PERCENTAGE_ID = FSTM.PERCENTAGE_ID")
					 .append("  AND FB.FLAT_BOOK_ID = FBSM.FLAT_BOOK_ID")
					 .append("	) as GST,sysdate as data_export_time ")

					 .append("	 FROM   FLAT_BOOKING FB INNER JOIN FLAT F ")
					 .append("	 ON FB.FLAT_ID = F.FLAT_ID")
					 //.append("   --  inner join FLAT_COST fc ON FB.FLAT_ID = Fc.FLAT_ID  and fc.status_id = fb.status_id")
					 .append("  inner join FLAT_DETAILS fd on fd.FLAT_ID = Fb.FLAT_ID  and fd.status_id = 6")
					 .append("  INNER JOIN FLOOR_DETAILS FD 	  ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID ")
					 .append("  INNER JOIN FLOOR FL   ON FL.FLOOR_ID = FD.FLOOR_ID ")
					 .append("  INNER JOIN BLOCK_DETAILS BD   ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID ")
					 .append("	INNER JOIN BLOCK BL   ON BL.BLOCK_ID = BD.BLOCK_ID ")
					 .append("	INNER JOIN SITE S   ON BD.SITE_ID = S.SITE_ID")
					 .append("	INNER JOIN FIN_TRANSACTION_ENTRY FTE  ON FB.FLAT_BOOK_ID = FTE.BOOKING_FORM_ID")
					 .append("	INNER JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSE   ON FTE.FIN_TRANSACTION_ENTRY_ID = FTSE.FIN_TRANSACTION_ENTRY_ID ")
					 .append("	INNER JOIN FIN_TRANSACTION_SET_OFF FTSO   ON  FTSO.FIN_TRN_SET_OFF_ENT_ID = FTSE.FIN_TRN_SET_OFF_ENT_ID ")
					 .append("	INNER JOIN METADATA_TYPES MT  	  ON  MT.METADATA_TYPES_ID = FTSO.SET_OFF_TYPE  ")
					 .append("	INNER JOIN FIN_TRANSACTION_TYPE FTP	  ON FTE.FIN_TRANSACTION_TYPE_ID = FTP.TRANSACTION_TYPE_ID  ")
					 .append("	INNER JOIN FIN_TRANSACTION_MODE FTM   ON FTE.FIN_TRANSACTION_MODE_ID = FTM.TRANSACTION_MODE_ID ")
					 .append("	INNER JOIN STATUS ST ON FTE.TRANSACTION_STATUS_ID = ST.STATUS_ID ")
					 .append("	INNER JOIN SITE SI  ON FTE.SITE_ID = SI.SITE_ID ")
					 .append("	LEFT OUTER JOIN FIN_BANK FB  ON FTE.FIN_BANK_ID = FB.FIN_BANK_ID ")
					 .append("	LEFT JOIN FIN_TRANSACTION_ONLINE FTO  ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTO.FIN_TRANSACTION_ENTRY_ID ")
					 .append("	LEFT OUTER JOIN FIN_TRANSFER_MODE FTMM  ON FTO.FIN_TRANSFER_MODE_ID =  FTMM.TRANSFER_MODE_ID ")
					 .append("	LEFT JOIN FIN_TRANSACTION_CHEQUE FTC  ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTC.FIN_TRANSACTION_ENTRY_ID ")
					 .append("	WHERE FTE.STATUS_ID = :STATUS_ID AND FB.FLAT_BOOK_ID = :FLAT_BOOK_ID AND FB.STATUS_ID = :FB_STATUS_ID ")
					 .append("	AND FTSO.SET_OFF_TYPE in (29,27,35,34,102,103,104,62,32)  AND FTSO.STATUS_ID = :STATUS_ID ")
					 .append("  AND F.FLAT_NO = :FLAT_NO ")
					 //.append("	 --AND FTE.TRANSACTION_STATUS_ID  in (37,49,23,38,14,20) ")
					 .append(" AND FTE.TRANSACTION_STATUS_ID  in (37,51) ")
					 .append(" AND FTE.FIN_TRANSACTION_TYPE_ID IN(:FIN_TRANSACTION_TYPE_ID) ")
					 .append(" ORDER BY F.FLAT_NO,NVL(FTE.RECEIVED_DATE,FTE.PAYMENT_DATE),FTE.FIN_TRANSACTION_ENTRY_ID ")
		    		.toString();

		    public static final String QRY_TO_ACTIVE_SUSPENSE_ENTRY = new StringBuilder("")
		    		.append(" UPDATE FIN_ANONYMOUS_ENTRY SET STATUS_ID = 6,MODIFIED_DATE = SYSDATE,MODIFIED_BY = 30072021  WHERE STATUS_ID IN (37,6) AND SITE_ID = :SITE_ID ")
		    		 .append(" AND FIN_ANMS_ENTRY_ID IN (SELECT C.FIN_ANMS_ENTRY_ID  ")
		    		 .append(" FROM FIN_TRANSACTION_ONLINE B,  FIN_TRANSACTION_ENTRY A,  FIN_TRAN_ANNY_ENTRY_MAPPING C ")
		    		 .append(" WHERE A.FIN_TRANSACTION_ENTRY_ID = B.FIN_TRANSACTION_ENTRY_ID ")
		    		 .append(" AND A.FIN_TRANSACTION_ENTRY_ID   = C.FIN_TRANSACTION_ENTRY_ID ")
		    		 .append(" AND A.STATUS_ID = 6 AND A.SITE_ID = :SITE_ID ")
		    		  .append(" AND A.FIN_TRANSACTION_ENTRY_ID IN (SELECT A.FIN_TRANSACTION_ENTRY_ID ")
		    		.append(" FROM FIN_TRANSACTION_SET_OFF_ENTRY B,  FIN_TRANSACTION_ENTRY A  INNER JOIN STATUS ST ")
		    		.append("  ON A.TRANSACTION_STATUS_ID = ST.STATUS_ID,FIN_TRANSACTION_SET_OFF C,FLAT_BOOKING FB ")
		    		.append(" WHERE A.SITE_ID = :SITE_ID  AND A.STATUS_ID = :STATUS_ID AND  A.FIN_TRANSACTION_ENTRY_ID = B.FIN_TRANSACTION_ENTRY_ID ")
		    		.append(" AND B.FIN_TRN_SET_OFF_ENT_ID = C.FIN_TRN_SET_OFF_ENT_ID ")
		    		.append(" AND  A.BOOKING_FORM_ID = FB.FLAT_BOOK_ID  ")
		    		.append(" AND TRANSACTION_STATUS_ID IN (37,51) ")
		    		.append(" AND C.STATUS_ID = :STATUS_ID   AND C.STATUS_ID = :STATUS_ID) ")
		    		.append(" AND A.BOOKING_FORM_ID = :FLAT_BOOK_ID ")
		    		.append("  AND A.BOOKING_FORM_ID IN ( ")
		    		.append("   SELECT		FB.FLAT_BOOK_ID  ")
		    		.append("  			 FROM FLAT_BOOKING FB INNER JOIN FLAT F  ")
		    		.append("  			ON FB.FLAT_ID = F.FLAT_ID   ")
		    		.append("  			INNER JOIN FLOOR_DETAILS FD  ")
		    		.append(" 			ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  ")
		    		.append(" 			INNER JOIN FLOOR FL  ")
		    		.append(" 			ON FL.FLOOR_ID = FD.FLOOR_ID  ")
		    		.append(" 			INNER JOIN BLOCK_DETAILS BD  ")
		    		.append(" 			ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID  ")
		    		.append(" 			INNER JOIN BLOCK BL  ")
		    		.append(" 			ON BL.BLOCK_ID = BD.BLOCK_ID  ")
		    		.append(" 			INNER JOIN SITE S  ")
		    		.append(" 			ON BD.SITE_ID = S.SITE_ID ") 
		    		.append("         AND BD.SITE_ID =  :SITE_ID ")
		    		.append("     WHERE FB.FLAT_BOOK_ID = :FLAT_BOOK_ID FETCH FIRST ROW ONLY ")
		    		.append(" ) ")
		    		.append(" ) ")
		    		.toString();

			  public static final StringBuilder QRY_TO_GET_SUM_BOOKING_FORM_ACCOUNTS_PAID_BY_INVOICE_NO = new StringBuilder("")
					  .append(" SELECT  SUM(NVL(FBFA.PAY_AMOUNT,0)) AS PAY_AMOUNT ")
					  .append(",SUM(NVL(FBFA.PAID_AMOUNT,0)) AS PAID_AMOUNT ")
					  .append(",SUM(NVL(FBFA.BALANCE_AMOUNT,0)) AS BALANCE_AMOUNT ")
					  .append(",SUM(NVL(FBFA.INTEREST_WAIVER_AMT,0)) AS INTEREST_WAIVER_AMT ")
					  .append(",SUM(NVL(FBFA.REFUND_AMOUNT,0)) AS REFUND_AMOUNT ")
					  .append(",FBFA.TYPE,(SELECT MT.NAME FROM METADATA_TYPES MT WHERE FBFA.TYPE = MT.METADATA_TYPES_ID ) AS METADATA_NAME ")
					  .append(",FBFA.FIN_BOK_ACC_INVOICE_NO")
					 .append(" FROM FIN_BOOKING_FORM_ACCOUNTS FBFA ")
					 .append(" WHERE FBFA.BOOKING_FORM_ID = :BOOKING_FORM_ID AND FBFA.TYPE IN (:TYPEs) AND FBFA.STATUS_ID = :STATUS_ID ")
					 .append(" GROUP BY FBFA.TYPE,FBFA.FIN_BOK_ACC_INVOICE_NO ");

				 public static final StringBuffer QRY_TO_CHECK_ACCOUNT_DETAILS = new StringBuffer("")
					.append("SELECT COUNT(*) FROM FIN_SITE_PROJ_ACC_MAPPING ")
					.append("  WHERE ACCOUNT_TYPE = :ACCOUNT_TYPE AND STATUS_ID =:STATUS_ID ")
					.append(" AND SITE_ID = :SITE_ID ")
					.append(" AND FLATS_SALE_OWNERS_ID = :FLATS_SALE_OWNERS_ID ")
					;

				 public static final StringBuffer QRY_TO_CHECK_SCHEME_ENTRY_DETAILS = new StringBuffer("")
					.append("SELECT COUNT(*) FROM FLAT_BOK_SCHM_MAPPING WHERE FLAT_BOOK_ID = :BOOKING_FORM_ID AND STATUS_ID =:STATUS_ID");

			  //view completed transaction and excel format
		/*	  SELECT null as sr_no,
        FB.SALESFORCE_BOOKING_ID,FB.SALESFORCE_TRANSACTION_ID
			   ,SI.NAME AS SALES_FORCE_SITE_NAME
			  ,(select ACCOUNT_NO from FIN_PROJECT_ACCOUNTS where FIN_PROJ_ACC_ID = (select FIN_PROJ_ACC_ID from FIN_SITE_PROJ_ACC_MAPPING where FIN_SITE_PROJ_ACC_MAP_ID = FTE.FIN_SITE_PROJ_ACC_MAP_ID)) AS SITE_BANK_ACCOUNT_NUMBER			 
        ,(SELECT CONCAT(NAME_PREFIX,' '||FIRST_NAME) FROM CUSTOMER CSS WHERE FB.CUST_ID = CSS.CUST_ID) AS CUSTOMER_NAME
			  ,F .FLAT_NO
			 , FTP.NAME AS TRANSACTION_TYPE 
			  --,NVL(FTMM.NAME,'Cheque') AS ONLINE_TRANSFER_MODE
      ,  CASE WHEN FTE.FIN_TRANSACTION_TYPE_ID = 1 THEN   (CASE WHEN FTSO.SET_OFF_TYPE = 29 THEN 'Principal'  
         when  FTSO.SET_OFF_TYPE = 35 THEN 'Legal Charges'
         WHEN FTSO.SET_OFF_TYPE = 27 THEN 'Interest'
         WHEN FTSO.SET_OFF_TYPE = 102 THEN 'Khata Charges'
         WHEN FTSO.SET_OFF_TYPE = 103 THEN 'Maintenance'
         WHEN FTSO.SET_OFF_TYPE = 104 THEN 'Corpus Fund'
         WHEN FTSO.SET_OFF_TYPE = 34 THEN 'Modification Charges'
         WHEN FTSO.SET_OFF_TYPE = 62 THEN 'Refundable Advance'
         WHEN FTSO.SET_OFF_TYPE = 32 THEN 'TDS'
         END)
         ELSE 'Amount Refund' END
				  AS RECEIPT_TYPE
          ,FTM.NAME AS TRANSACTION_MODE
			  ,CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.CHEQUE_NO ELSE  FTO.REFERENCE_NO END AS CHEQUE_OR_REFERENCE_NUMBER
			  ,CASE WHEN FTE.FIN_TRANSACTION_TYPE_ID = 1 THEN to_char(FTE.RECEIVED_DATE,'dd-MM-yyyy') ELSE  to_char(FTE.PAYMENT_DATE,'dd-MM-yyyy') END AS RECEIVED_DATE
			  ,to_char(FTE.PAYMENT_DATE,'dd-MM-yyyy') AS CHEQUE_OR_ONLINE_DATE
			  ,CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  to_char(FTC.CHEQUE_DEPOSITED_DATE,'dd-MM-yyyy') ELSE to_char(FTE.RECEIVED_DATE,'dd-MM-yyyy') END AS CHEQUE_DEPOSITED_DATE
			  ,CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  to_char(FTC.CLEARANCE_DATE,'dd-MM-yyyy') ELSE to_char(FTE.RECEIVED_DATE,'dd-MM-yyyy') END AS CHEQUE_CLEARECENCE_DATE
			  ,FTSO.SET_OFF_AMOUNT as TRANSACTION_AMOUNT
			  ,CASE WHEN FB.BANK_NAME ='-' THEN null ELSE FB.BANK_NAME END as BANK_NAME
			  ,CASE WHEN FTE.TRANSACTION_STATUS_ID = 37 THEN 'Cleared' when  FTE.TRANSACTION_STATUS_ID = 51  then 'Bounce'  ELSE  'Received' END AS RECEIPT_STAGE
        ,FTE.SOURCE_OF_FUNDS AS SOURCE_OF_FUNDS
        ,to_char(FTE.TRANSACTION_CLOSED_DATE,'dd-MM-yyyy') AS TRANSACTION_CLOSED_DATE
        ,FTC.CHEQUE_BOUNCE_DATE
        ,FTC.CHEQUE_BOUNCE_COMMENT
        ,FTE.FIN_TRANSACTION_ENTRY_ID as TRANSACTION_ID
			  FROM 
			  FLAT_BOOKING FB INNER JOIN FLAT F 
			  ON FB.FLAT_ID = F.FLAT_ID 
			  inner join FLAT_COST fc ON FB.FLAT_ID = Fc.FLAT_ID  and fc.status_id = 6
			  inner join FLAT_DETAILS fd on fd.FLAT_ID = Fb.FLAT_ID  and fd.status_id = 6
			  INNER JOIN FLOOR_DETAILS FD 
			  ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID 
			  INNER JOIN FLOOR FL 
			  ON FL.FLOOR_ID = FD.FLOOR_ID 
			  INNER JOIN BLOCK_DETAILS BD 
			  ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID 
			  INNER JOIN BLOCK BL 
			  ON BL.BLOCK_ID = BD.BLOCK_ID 
			  INNER JOIN SITE S 
			  ON BD.SITE_ID = S.SITE_ID

			  INNER JOIN FIN_TRANSACTION_ENTRY FTE 
			  ON FB.flat_book_id = FTE.BOOKING_FORM_ID

			  INNER JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSE 
			  ON FTE.FIN_TRANSACTION_ENTRY_ID = FTSE.FIN_TRANSACTION_ENTRY_ID 

			  INNER JOIN FIN_TRANSACTION_SET_OFF FTSO 
			  ON  FTSO.FIN_TRN_SET_OFF_ENT_ID = FTSE.FIN_TRN_SET_OFF_ENT_ID 

			  INNER JOIN METADATA_TYPES MT  
			  ON  MT.METADATA_TYPES_ID = FTSO.SET_OFF_TYPE 

			  INNER JOIN FIN_TRANSACTION_TYPE FTP
			  ON FTE.FIN_TRANSACTION_TYPE_ID = FTP.TRANSACTION_TYPE_ID 
			  INNER JOIN FIN_TRANSACTION_MODE FTM 
			  ON FTE.FIN_TRANSACTION_MODE_ID = FTM.TRANSACTION_MODE_ID
			  INNER JOIN STATUS ST
			  ON FTE.TRANSACTION_STATUS_ID = ST.STATUS_ID
			  INNER JOIN SITE SI
			  ON FTE.SITE_ID = SI.SITE_ID
			  LEFT OUTER JOIN FIN_BANK FB 
			  ON FTE.FIN_BANK_ID = FB.FIN_BANK_ID 
			  LEFT JOIN FIN_TRANSACTION_ONLINE FTO 
			  ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTO.FIN_TRANSACTION_ENTRY_ID
			  LEFT OUTER JOIN FIN_TRANSFER_MODE FTMM
			  ON FTO.FIN_TRANSFER_MODE_ID =  FTMM.TRANSFER_MODE_ID
			  LEFT JOIN FIN_TRANSACTION_CHEQUE FTC 
			  ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTC.FIN_TRANSACTION_ENTRY_ID 
			  WHERE FTE.STATUS_ID = 6  AND FB.STATUS_ID = 6
			  AND FTSO.SET_OFF_TYPE in (29)  AND FTSO.STATUS_ID = 6 
			    AND FTE.TRANSACTION_STATUS_ID  in (37)
          and trunc(fte.CREATED_DATE)  >= to_date('01-03-2022','dd-MM-yyyy')
          and FTE.FIN_TRANSACTION_TYPE_ID in (1,2)
			   order by f.flat_no,NVL(FTE.RECEIVED_DATE,FTE.PAYMENT_DATE),FTE.FIN_TRANSACTION_ENTRY_ID;
			   
			   
			   update FIN_TRANSACTION_ENTRY FTE set FTE.TEMP_CLEARANCE_DATE =
(SELECT CLEARANCE_DATE FROM FIN_TRANSACTION_CHEQUE FTQ WHERE FTE.FIN_TRANSACTION_ENTRY_ID = FTQ.FIN_TRANSACTION_ENTRY_ID) where 
FTE.FIN_TRANSACTION_TYPE_ID in (2,1)
and FTE.FIN_TRANSACTION_MODE_ID = 1
AND FTE.FIN_TRANSACTION_ENTRY_ID = (SELECT FTQ.FIN_TRANSACTION_ENTRY_ID FROM FIN_TRANSACTION_CHEQUE FTQ WHERE FTE.FIN_TRANSACTION_ENTRY_ID = FTQ.FIN_TRANSACTION_ENTRY_ID)
;
  SELECT sum(FTSO.SET_OFF_AMOUNT) as SET_OFF_AMOUNT  ,SI.SALES_FORCE_SITE_NAME ,FSO.FLAT_SALE_OWNER
			    FROM FIN_TRANSACTION_SET_OFF FTSO, 
			   FIN_TRANSACTION_SET_OFF_ENTRY FTSOE,FIN_TRANSACTION_ENTRY FTR,SITE SI, 
          FLAT_BOOKING FB inner join FLAT_DETAILS fd on fd.FLAT_ID = Fb.FLAT_ID and fd.status_id = 6
          INNER JOIN FLATS_SALE_OWNERS FSO ON FD.FLATS_SALE_OWNERS_ID = FSO.FLATS_SALE_OWNERS_ID
			    WHERE FTSOE.FIN_TRN_SET_OFF_ENT_ID = FTSO.FIN_TRN_SET_OFF_ENT_ID 
          AND FB.FLAT_BOOK_ID = FTR.BOOKING_FORM_ID AND  FB.status_id = 6
          AND FTR.SITE_ID = SI.SITE_ID
			     AND FTSOE.FIN_TRANSACTION_ENTRY_ID = FTR.FIN_TRANSACTION_ENTRY_ID  
			    AND FTSO.STATUS_ID = 6 and FTSO.SET_OFF_TYPE = 29  AND FTR.STATUS_ID = 6
			    AND NVL(FTSO.SET_OFF_AMOUNT,0) != 0  
          and FTR.TRANSACTION_STATUS_ID in (37)
          and FTR.FIN_TRANSACTION_TYPE_ID in (1)
          and FTR.FIN_TRANSACTION_MODE_ID in (1,2)
          --and FTE.TEMP_CLEARANCE_DATE between in 
          and trunc(FTR.TEMP_CLEARANCE_DATE)  between to_date('01-04-2022','dd-MM-yyyy')  and  to_date('30-04-2022','dd-MM-yyyy') 
          GROUP BY   SI.SALES_FORCE_SITE_NAME ,FSO.FLAT_SALE_OWNER;
          
*/
			  
			  public static final String QRY_TO_EXPORTS_TRANSACTION_DATA=new StringBuilder("")
			  .append("SELECT --fte.IS_RECORD_UPLOADED,")
			  .append("'TRANSACTION' as Type")
			   .append(",SI.NAME AS SITE_NAME")
			   .append(",FTE.TRANSACTION_RECEIPT_NO")
			  .append(",BL.NAME AS BLOCK_NAME")
			  .append(",F .FLAT_NO")
			  .append(",fte.booking_form_id AS flat_book_id")
			  .append(",FTP.NAME AS TRANSACTION_TYPE")
			  .append(",FTM.NAME AS TRANSACTION_MODE")
			  .append(",NVL(FTMM.NAME,'Cheque') AS ONLINE_TRANSFER_MODE")
			  .append("--,  CASE WHEN FTE.FIN_TRANSACTION_TYPE_ID = 1 THEN 'Principal' ELSE 'Amount Refund' END")
			  .append("-- AS TRANSACTION_FOR")
			  
			  .append(" ,  CASE WHEN FTE.FIN_TRANSACTION_TYPE_ID = 1 THEN   (CASE WHEN FTSO.SET_OFF_TYPE = 29 THEN 'Principal'  ")
		      .append("  when  FTSO.SET_OFF_TYPE = 35 THEN 'Legal Charges' ELSE NULL END)   ELSE 'Amount Refund' END ")
			  .append(" AS TRANSACTION_FOR ")
			  
			  .append(",CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.CHEQUE_NO ELSE  FTO.REFERENCE_NO END AS ONLINE_TR_REFERENCE_NO")
			  .append(",CASE WHEN FTE.FIN_TRANSACTION_TYPE_ID = 1 THEN to_char(FTE.RECEIVED_DATE,'dd-MM-yyyy') ELSE  to_char(FTE.PAYMENT_DATE,'dd-MM-yyyy') END AS ONLINE_TR_RECEIVE_DATE")
			  .append(",to_char(FTE.PAYMENT_DATE,'dd-MM-yyyy') AS CHEQUE_DATE")
			  .append(",CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  to_char(FTC.CHEQUE_DEPOSITED_DATE,'dd-MM-yyyy') ELSE to_char(FTE.RECEIVED_DATE,'dd-MM-yyyy') END AS CHEQUE_DEPOSITED_DATE")
			  .append(",CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  to_char(FTC.CLEARANCE_DATE,'dd-MM-yyyy') ELSE to_char(FTE.RECEIVED_DATE,'dd-MM-yyyy') END AS CHEQUE_CLEARECENCE_DATE")
			  .append(",CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.CHEQUE_NO ELSE  FTO.REFERENCE_NO END AS CHEQUE_NUMBER")
			  .append(",CASE WHEN FTE.FIN_TRANSACTION_TYPE_ID = 1 THEN to_char(FTE.RECEIVED_DATE,'dd-MM-yyyy') ELSE  to_char(FTE.PAYMENT_DATE,'dd-MM-yyyy') END AS CHEQUE_RECEIVE_DATE")
			  .append(",FTE.AMOUNT as TRANSACTION_AMOUNT")
			  .append(",CASE WHEN FB.BANK_NAME ='N/A' THEN null ELSE FB.BANK_NAME END as BANK_NAME")
			  .append(",FTE.FIN_SITE_PROJ_ACC_MAP_ID AS SITE_BANK_ACCOUNT_ID")
			  .append(",(select ACCOUNT_NO from FIN_PROJECT_ACCOUNTS where FIN_PROJ_ACC_ID = (select FIN_PROJ_ACC_ID from FIN_SITE_PROJ_ACC_MAPPING where FIN_SITE_PROJ_ACC_MAP_ID = FTE.FIN_SITE_PROJ_ACC_MAP_ID))  AS SITE_BANK_ACCOUNT_NUMBER")
			  .append(",CASE WHEN FTSO.SET_OFF_TYPE = 29 THEN FTSO.SET_OFF_AMOUNT  ELSE NULL END AS PRINCIPAL_AMOUNT")
			  .append(",NULL AS PENALTY_AMOUNT")
			  .append(",NULL AS MODIFICATION_COST")
			  .append(",CASE WHEN FTSO.SET_OFF_TYPE = 35 THEN FTSO.SET_OFF_AMOUNT ELSE NULL END AS LEGAL_COST")
			  .append(",NULL AS	REFUNDABLE_ADVANCE")
			  .append(",NULL AS TDS_AMOUNT")
			  .append(",NULL AS COMMENTs")
			  .append(",FTE.AMOUNT  AS TOTAL_AMOUNT")
			  .append(",NULL AS TRANSACTION_CLOSED_DATE")
			  .append(",CASE WHEN FTE.TRANSACTION_STATUS_ID = 37 THEN 'Cleared' when  FTE.TRANSACTION_STATUS_ID = 51  then 'Bounce'  ELSE  'Received' END AS RECEIPT_STAGE")
			  .append("--,ST.STATUS AS RECEIPT_STAGE")
			  .append(",NULL AS SHOW_GST_IN_PDF")
			    .append(",FTE.TRANSACTION_RECEIPT_NO AS EXCEL_RECORD_NO")
			    .append("--,NULL AS Scheme")
			    
			  .append("  ,(select FS.NAME from FLAT_BOK_SCHM_MAPPING FBSM,FIN_SCHEME_TAX_MAPPING FSTM,FIN_SCHEME FS")
			    .append("WHERE FBSM.FIN_SCHE_TAX_MAP_ID = FSTM.FIN_SCHE_TAX_MAP_ID")
			    .append("AND FSTM.FIN_SCHEME_ID = FS.FIN_SCHEME_ID AND FS.STATUS_ID = 6 AND FBSM.STATUS_ID = 6")
			    .append("AND FB.FLAT_BOOK_ID = FBSM.FLAT_BOOK_ID")
			    .append(") as Scheme")
			   .append("-- ,NULL AS GST")
			    .append(",(select PER.PERCENTAGE from FLAT_BOK_SCHM_MAPPING FBSM,FIN_SCHEME_TAX_MAPPING FSTM,PERCENTAGES PER")
			    .append("WHERE FBSM.FIN_SCHE_TAX_MAP_ID = FSTM.FIN_SCHE_TAX_MAP_ID")
			    .append("AND FBSM.STATUS_ID = 6 AND PER.PERCENTAGE_ID = FSTM.PERCENTAGE_ID")
			    .append("AND FB.FLAT_BOOK_ID = FBSM.FLAT_BOOK_ID")
			    .append(") as GST")

			  .append("FROM ")
			  .append("FLAT_BOOKING FB INNER JOIN FLAT F ")
			  .append("ON FB.FLAT_ID = F.FLAT_ID ")
			  .append("inner join FLAT_COST fc ON FB.FLAT_ID = Fc.FLAT_ID  and fc.status_id = 6")
			  .append("inner join FLAT_DETAILS fd on fd.FLAT_ID = Fb.FLAT_ID  and fd.status_id = 6")
			  .append("INNER JOIN FLOOR_DETAILS FD ")
			  .append("ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID ")
			  .append("INNER JOIN FLOOR FL ")
			  .append("ON FL.FLOOR_ID = FD.FLOOR_ID ")
			  .append("INNER JOIN BLOCK_DETAILS BD ")
			  .append("ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID ")
			  .append("INNER JOIN BLOCK BL ")
			  .append("ON BL.BLOCK_ID = BD.BLOCK_ID ")
			  .append("INNER JOIN SITE S ")
			  .append("ON BD.SITE_ID = S.SITE_ID")

			  .append("INNER JOIN FIN_TRANSACTION_ENTRY FTE ")
			  .append("ON FB.flat_book_id = FTE.BOOKING_FORM_ID")

			  .append("INNER JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSE ")
			  .append("ON FTE.FIN_TRANSACTION_ENTRY_ID = FTSE.FIN_TRANSACTION_ENTRY_ID ")

			  .append("INNER JOIN FIN_TRANSACTION_SET_OFF FTSO ")
			  .append("ON  FTSO.FIN_TRN_SET_OFF_ENT_ID = FTSE.FIN_TRN_SET_OFF_ENT_ID ")

			  .append("INNER JOIN METADATA_TYPES MT  ")
			  .append("ON  MT.METADATA_TYPES_ID = FTSO.SET_OFF_TYPE ")

			  .append("INNER JOIN FIN_TRANSACTION_TYPE FTP")
			  .append("ON FTE.FIN_TRANSACTION_TYPE_ID = FTP.TRANSACTION_TYPE_ID ")
			  .append("INNER JOIN FIN_TRANSACTION_MODE FTM ")
			  .append("ON FTE.FIN_TRANSACTION_MODE_ID = FTM.TRANSACTION_MODE_ID")
			  .append("INNER JOIN STATUS ST")
			  .append("ON FTE.TRANSACTION_STATUS_ID = ST.STATUS_ID")
			  .append("INNER JOIN SITE SI")
			  .append("ON FTE.SITE_ID = SI.SITE_ID")
			  .append("LEFT OUTER JOIN FIN_BANK FB ")
			  .append("ON FTE.FIN_BANK_ID = FB.FIN_BANK_ID ")
			  .append("LEFT JOIN FIN_TRANSACTION_ONLINE FTO ")
			  .append("ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTO.FIN_TRANSACTION_ENTRY_ID")
			  .append("LEFT OUTER JOIN FIN_TRANSFER_MODE FTMM")
			  .append("ON FTO.FIN_TRANSFER_MODE_ID =  FTMM.TRANSFER_MODE_ID")
			  .append("LEFT JOIN FIN_TRANSACTION_CHEQUE FTC ")
			  .append("ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTC.FIN_TRANSACTION_ENTRY_ID") 
			  .append("WHERE FTE.SITE_ID =107  AND FTE.STATUS_ID = 6  AND FB.STATUS_ID = 6")
			  .append("AND FTSO.SET_OFF_TYPE = 29  AND FTSO.STATUS_ID = 6 ")
			  .append("--AND BL.BLOCK_ID= 143")
			  .append("and BL.NAME = 'Wing A'")
			  .append("--        and f.flat_no = 'B1206'")
			  .append("--        AND FB.FLAT_BOOK_ID =")
			   .append("--AND FTE.TRANSACTION_STATUS_ID  in (37,49,23,38,14,20)")
			    .append("AND FTE.TRANSACTION_STATUS_ID  in (37)")
			  .append("order by f.flat_no,NVL(FTE.RECEIVED_DATE,FTE.PAYMENT_DATE),FTE.FIN_TRANSACTION_ENTRY_ID").toString();
				
			  
		

			 public static final StringBuffer SQL_QRY_FOR_TRANSACTION_COUNT = new StringBuffer("")
				.append("SELECT COUNT(*) FROM FIN_TRANSACTION_ENTRY WHERE BOOKING_FORM_ID =:BOOKING_FORM_ID AND STATUS_ID =:STATUS_ID");
			 
	  
			  public static final String QRY_TO_GET_FLAT_SALE_OWNERS_BY_ACCOUNT = new StringBuilder("")
						.append(" SELECT distinct FSO.FLATS_SALE_OWNERS_ID ,FSO.FLAT_SALE_OWNER,FSPAM.FIN_SITE_PROJ_ACC_MAP_ID ")
						.append(" FROM  FIN_TRANSACTION_ENTRY FTE   ")
						.append(" INNER JOIN FIN_SITE_PROJ_ACC_MAPPING FSPAM  ON FSPAM.FIN_SITE_PROJ_ACC_MAP_ID=FTE.FIN_SITE_PROJ_ACC_MAP_ID   ")
						.append(" INNER JOIN FLATS_SALE_OWNERS FSO ON FSO.FLATS_SALE_OWNERS_ID=FSPAM.FLATS_SALE_OWNERS_ID   ")
						//.append(" WHERE FSPAM.FIN_PROJ_ACC_ID=:FIN_PROJ_ACC_ID AND FSPAM.STATUS_ID=:STATUS_ID AND FSO.STATUS_ID=:STATUS_ID ")
						.append(" WHERE   FSPAM.STATUS_ID=:STATUS_ID AND FSO.STATUS_ID=:STATUS_ID ")
						.append(" AND FSPAM.SITE_ID=:SITE_ID ")
						.append(" AND FTE.FIN_TRANSACTION_ENTRY_ID=:FIN_TRANSACTION_ENTRY_ID and FTE.STATUS_ID=:STATUS_ID ")
						.toString();
			  
			  
			  
			  public static final String QRY_TO_CLEARED_TRANSACTION_REPORT = new StringBuffer("")
				  .append("SELECT FTE.FIN_TRANSACTION_TYPE_ID,FSO.FLATS_SALE_OWNERS_ID, ")
				  .append("SI.SALES_FORCE_SITE_NAME AS SALES_FORCE_SITE_NAME,FTE.SITE_ID ")
				  .append(",SUM(FTSO.SET_OFF_AMOUNT) as TRANSACTION_AMOUNT ")
				  .append(",FSO.FLAT_SALE_OWNER ")
				  .append(" FROM ")
				  .append(" FLAT_BOOKING FB INNER JOIN FLAT F ")
				  .append(" ON FB.FLAT_ID = F.FLAT_ID AND FB.status_id = 6 ")
				  .append(" inner join FLAT_COST fc ON FB.FLAT_ID = Fc.FLAT_ID  and fc.status_id = 6 ")
				  .append(" inner join FLAT_DETAILS fd on fd.FLAT_ID = Fb.FLAT_ID  and fd.status_id = 6 ")
				  .append(" INNER JOIN FLATS_SALE_OWNERS FSO ON FSO.FLATS_SALE_OWNERS_ID = FD.FLATS_SALE_OWNERS_ID ")
				  .append(" INNER JOIN FLOOR_DETAILS FD 			  ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID ")
				  .append(" INNER JOIN FLOOR FL 			  ON FL.FLOOR_ID = FD.FLOOR_ID ")
				  .append(" INNER JOIN BLOCK_DETAILS BD 			  ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID  ")
				  .append(" INNER JOIN BLOCK BL 			  ON BL.BLOCK_ID = BD.BLOCK_ID  ")
				  .append(" INNER JOIN SITE S 			  ON BD.SITE_ID = S.SITE_ID ")
				  .append(" INNER JOIN FIN_TRANSACTION_ENTRY FTE 			  ON FB.flat_book_id = FTE.BOOKING_FORM_ID ")
				  .append(" INNER JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSE 			  ON FTE.FIN_TRANSACTION_ENTRY_ID = FTSE.FIN_TRANSACTION_ENTRY_ID ")
				  .append(" INNER JOIN FIN_TRANSACTION_SET_OFF FTSO 			  ON  FTSO.FIN_TRN_SET_OFF_ENT_ID = FTSE.FIN_TRN_SET_OFF_ENT_ID ")
				  .append(" INNER JOIN METADATA_TYPES MT  			  ON  MT.METADATA_TYPES_ID = FTSO.SET_OFF_TYPE ")
				  .append(" INNER JOIN FIN_TRANSACTION_TYPE FTP			  ON FTE.FIN_TRANSACTION_TYPE_ID = FTP.TRANSACTION_TYPE_ID ")
				  .append(" INNER JOIN FIN_TRANSACTION_MODE FTM 			  ON FTE.FIN_TRANSACTION_MODE_ID = FTM.TRANSACTION_MODE_ID ")
				  .append(" INNER JOIN STATUS ST			  ON FTE.TRANSACTION_STATUS_ID = ST.STATUS_ID ")
				  .append(" INNER JOIN SITE SI			  ON FTE.SITE_ID = SI.SITE_ID ")
				  .append(" LEFT OUTER JOIN FIN_BANK FIN_B1 			  ON FTE.FIN_BANK_ID = FIN_B1.FIN_BANK_ID ")
				  .append(" LEFT JOIN FIN_TRANSACTION_ONLINE FTO 			  ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTO.FIN_TRANSACTION_ENTRY_ID ")
				  .append(" LEFT OUTER JOIN FIN_TRANSFER_MODE FTMM			  ON FTO.FIN_TRANSFER_MODE_ID =  FTMM.TRANSFER_MODE_ID ")
				  .append(" LEFT JOIN FIN_TRANSACTION_CHEQUE FTC 			  ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTC.FIN_TRANSACTION_ENTRY_ID  ")
				  .append(" WHERE FTE.STATUS_ID = :STATUS_ID  AND FB.STATUS_ID = :STATUS_ID ")
				  .append(" AND FTSO.SET_OFF_TYPE in (:SET_OFF_TYPE) AND FTSO.STATUS_ID = :STATUS_ID ")
				  .append(" AND FTE.TRANSACTION_STATUS_ID  in (:TRANSACTION_STATUS_ID) ")
				  
				  //.append("--AND FTE.TRANSACTION_STATUS_ID  in (23,38,20,14,49) ")
				  //.append("--and trunc(NVL(FTE.RECEIVED_DATE,FTE.PAYMENT_DATE)) BETWEEN to_date('01-05-2022','dd-MM-yyyy') AND to_date('27-05-2022','dd-MM-yyyy') ")
//				  .append(" and FTE.FIN_TRANSACTION_TYPE_ID in (1,2) ")
//				  .append(" and FTE.FIN_TRANSACTION_MODE_ID in (1,2) ")
				  
			  .toString();
			  
			  
			  public static final String QRY_TO_GET_FLAT_SALE_OWNERS_WISE_SUSPENSE_ENTRY_REPORT = new StringBuilder("")
						.append(" SELECT S.SALES_FORCE_SITE_NAME AS SALES_FORCE_SITE_NAME, ")
						.append(" FSO.FLATS_SALE_OWNERS_ID,  FSO.FLAT_SALE_OWNER,S.SITE_ID,SUM(FAE.AMOUNT) as TRANSACTION_AMOUNT ")
						.append(" FROM FIN_ANONYMOUS_ENTRY FAE ")
						.append(" INNER JOIN FIN_SITE_PROJ_ACC_MAPPING FSPAM  ON FSPAM.FIN_SITE_PROJ_ACC_MAP_ID=FAE.FIN_SITE_PROJ_ACC_MAP_ID ")
						.append(" INNER JOIN FLATS_SALE_OWNERS FSO ON FSO.FLATS_SALE_OWNERS_ID=FSPAM.FLATS_SALE_OWNERS_ID  ")
						.append(" INNER JOIN SITE S ON FAE.SITE_ID = S.SITE_ID   ")
						.append(" WHERE FAE.STATUS_ID = :STATUS_ID   ")
						.toString();
			  
			  
			  

				public static final String QRY_TO_GET_FINANCIAL_DETAILS = new StringBuilder(" SELECT ")
						//   .append("(SELECT   FB.STATUS_ID  FROM  BLOCK_DETAILS BD  INNER JOIN FLOOR_DETAILS FD  ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID    INNER JOIN FLAT F  ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  INNER JOIN  FLAT_BOOKING FB  ON FB.FLAT_ID = F.FLAT_ID AND FB.FLAT_BOOK_ID IN (:FLAT_BOOK_ID)) AS FB_STATUS_ID,")
						   .append("FPM.PROJECT_MILESTONE_ID,")			
						   .append("FPM.MILESTONE_NAME,")
						  // .append("FPM.FIN_MILESTONE_CLASSIFIDES_ID,")
						  // .append("FPM.PERCENTAGE_ID,")
						 //  .append("FPM.CREATED_BY,")
						 //  .append("FPM.CREATED_DATE,")
						 //  .append("FPM.MODIFIED_BY,")
						 //  .append("FPM.MODIFIED_DATE,")
						 //  .append("FPM.MILESTONE_DATE,")
						 //  .append("FPM.MILE_STONE_NO,")
						 //  .append("FPM.MASTER_DMD_NOTE_DATE,")
						//   .append("FPM.MASTER_DMD_DUE_DATE,")
						//   .append("FPM.STATUS_ID,")
						//   .append("ST.STATUS AS MILESTONE_STATUS,")
						 //  .append("P.PERCENTAGE,")
						//   .append("P.DESCRIPTION,")
						//   .append("FBM.FIN_BOOKING_FORM_MILESTONES_ID,")
						//   .append("FBM.MS_DMD_NOTE_DATE,")
						 //  .append("FBM.MS_STATUS_ID,")
						//   .append("NVL(FBA.PAY_AMOUNT,0) AS PAY_AMOUNT,")
						//   .append("NVL(FBA.PAID_AMOUNT,0) AS PAID_AMOUNT,")
						//   .append("(NVL(FBA.PAY_AMOUNT,0) - NVL(FBA.PAID_AMOUNT,0)) AS MILESTONE_AMOUNT_DUE, ")
						//   .append("FBA.DUE_DATE, ")
						   .append("FBA.DUE_DATE ")
						//   .append("FBA.PAYMENT_STATUS")
						//   .append(",(SELECT MAX(PAID_DATE) FROM FIN_BOOKING_FORM_ACCOUNTS_STATEMENT FBFAS WHERE FBA.FIN_BOOKING_FORM_ACCOUNTS_ID = FBFAS.FIN_BOOKING_FORM_ACCOUNTS_ID AND STATUS_ID = 6 ) AS LAST_RECEIPT_DATE")
						//   .append(",(SELECT PAYABLE_AMOUNT FROM FIN_BOOKING_FORM_ACCOUNT_SUMMARY FBAS  WHERE FBAS.BOOKING_FORM_ID IN(:FLAT_BOOK_ID) AND FBAS.TYPE = 33) PAYABLE_AMOUNT ")
						//   .append(",NVL(FP.TOTAL_AMOUNT,0.0) AS TOTAL_PENALITY_AMOUNT ")
						//   .append(",NVL(FBFDN.TOTAL_AMOUNT,0.0) AS TOTAL_DN_AMOUNT ")
						//   .append(",FBFDN.DEMAND_NOTE_NO ")
						//   .append(",FBFDN.DEMAND_NOTE_DATE ")
						//   .append(",FBFDND.LOCATION,FBFDND.DOC_NAME ")
						   .append(" FROM FIN_PROJECT_MILESTONES FPM ")
						   .append("INNER JOIN STATUS ST ON FPM.PROJECT_MS_STATUS_ID = ST.STATUS_ID ")
						   .append("INNER JOIN FIN_MILESTONE_CLASSIFIDES FMC ")
						   .append("ON FPM.FIN_MILESTONE_CLASSIFIDES_ID = FMC.FIN_MILESTONE_CLASSIFIDES_ID AND FMC.STATUS_ID = :STATUS_ID ")
						   .append("INNER JOIN FIN_MIL_CLS_MAPPING_BLOCKS FMCMMB ")
						   .append("ON FMCMMB.FIN_MILESTONE_CLASSIFIDES_ID = FMC.FIN_MILESTONE_CLASSIFIDES_ID ")
						   .append("INNER JOIN PERCENTAGES P ")
						   .append("ON P.PERCENTAGE_ID = FPM.PERCENTAGE_ID ")
						   .append("LEFT OUTER JOIN FIN_BOOKING_FORM_MILESTONES FBM ")
						   .append("ON FBM.PROJECT_MILESTONE_ID = FPM.PROJECT_MILESTONE_ID AND FBM.BOOKING_FORM_ID = :FLAT_BOOK_ID  AND FBM.STATUS_ID = :STATUS_ID  ")
						   .append(" LEFT OUTER JOIN FIN_BOOKING_FORM_DEMAND_NOTE FBFDN ON FBFDN.FIN_BOK_FOM_DMD_NOTE_ID = FBM.FIN_BOK_FOM_DMD_NOTE_ID AND FBFDN.STATUS_ID = :STATUS_ID ")
						   .append(" LEFT OUTER JOIN FIN_BOOKING_FORM_DEMAND_NOTE_DOC FBFDND ON (FBFDN.FIN_BOK_FOM_DMD_NOTE_ID = FBFDND.FIN_BOK_FOM_DMD_NOTE_ID AND FBFDN.STATUS_ID = :STATUS_ID)")
						   .append("LEFT OUTER JOIN FIN_BOOKING_FORM_ACCOUNTS FBA ")
						   .append("ON FBA.TYPE_ID = FBM.FIN_BOOKING_FORM_MILESTONES_ID AND FBA.TYPE = 29  AND FBA.STATUS_ID = :STATUS_ID ")
						   .append(" LEFT OUTER JOIN FIN_PENALTY FP ON FP.FIN_BOOKING_FORM_ACCOUNTS_ID = FBA.FIN_BOOKING_FORM_ACCOUNTS_ID AND FP.STATUS_ID = :STATUS_ID ")
						   .append("WHERE FMCMMB.BLOCK_ID IN( ")
						   .append(" SELECT  ")
						   .append(" BD.BLOCK_ID ")
						   .append(" FROM ")
						   .append(" BLOCK_DETAILS BD ")
						   .append(" INNER JOIN FLOOR_DETAILS FD ")
						   .append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID ")
						   .append(" INNER JOIN FLAT F ")
						   .append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID ")
						   .append(" INNER JOIN  FLAT_BOOKING FB ")
						   .append(" ON FB.FLAT_ID = F.FLAT_ID AND FB.FLAT_BOOK_ID IN (:FLAT_BOOK_ID) ")
						   .append(" )")
						   .append(" AND FMC.SITE_ID = :SITE_ID ")
						   .append(" ORDER BY FPM.MILE_STONE_NO ")
						   .toString();
				
				
				/* QRY_TO_GET_CUSTOMER_PROPERTY_DETAILS  FROM FLAT_BOOKING,FLAT,FLOOR,BLOCK,SITE  */
				public static final String QRY_TO_GET_CUSTOMER_PROPERTY_DETAILS = new StringBuilder(" SELECT ")
						.append("(SELECT  CUST.CUST_ID  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS CUST_ID,")
						.append("(SELECT  CUST.NAME_PREFIX ||' '|| CUST.FIRST_NAME ||' '|| CUST.LAST_NAME  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS CUST_NAME,")
						.append("(SELECT  CUST.PANCARD  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS PANCARD, ")
						
						.append("(SELECT  DISTINCT  CASE WHEN COUNT(AR.CUST_ID)>0 THEN 'Registered' ELSE 'Not Registered' END AS APP_STATUS FROM CUSTOMER CUST INNER JOIN APP_REGISTRATION AR ON CUST.CUST_ID=AR.CUST_ID WHERE AR.STATUS_ID=:AR_STATUS_ID AND CUST.CUST_ID=FB.CUST_ID) AS APP_STATUS, ")
						.append("(SELECT MAX(LAST_LOGIN_TIME) FROM CUSTOMER CUST INNER JOIN APP_REGISTRATION AR ON CUST.CUST_ID=AR.CUST_ID WHERE AR.STATUS_ID=:AR_STATUS_ID AND CUST.CUST_ID=FB.CUST_ID) AS LAST_LOGIN_TIME, ")
						
						//.append("(SELECT  CBI.EMAIL FROM CUST_BOOK_INFO CBI WHERE CBI.FLAT_BOOK_ID = FB.FLAT_BOOK_ID AND CBI.CUST_ID = FB.CUST_ID ) AS CUST_EMAIL,")
						.append("(SELECT  CI.CONTACT_NO FROM CONTACT_INFORMATION  CI WHERE  CI.FLATBOOKING_ID = FB.FLAT_BOOK_ID ) AS CONTACT_NO,")
						.append("(SELECT  CI.ALTERNATIVE_CONTACT_NO FROM CONTACT_INFORMATION  CI WHERE  CI.FLATBOOKING_ID = FB.FLAT_BOOK_ID ) AS ALTERNATIVE_CONTACT_NO,")
						.append("(SELECT  CI.EMAIL_ID FROM CONTACT_INFORMATION  CI WHERE  CI.FLATBOOKING_ID = FB.FLAT_BOOK_ID ) AS CUST_EMAIL,")
						.append("(SELECT  CUST.PROFILE_PIC FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS CUST_PROFILE_PIC,")
						.append("(SELECT  CBI.SALES_TEAM_LEAD_ID FROM CUST_BOOK_INFO CBI WHERE CBI.FLAT_BOOK_ID = FB.FLAT_BOOK_ID AND CBI.CUST_ID = FB.CUST_ID ) AS SALES_TEAM_LEAD_ID,")
						
						.append("(SELECT  FC.FLAT_COST FROM FLAT_COST FC WHERE FB.FLAT_BOOK_ID = FC.FLAT_BOOK_ID AND FC.STATUS_ID = 6 ORDER BY FC.CREATED_DATE  FETCH FIRST ROW ONLY ) AS TOTAL_COST_WITH_GST,")
						/* Malladi Changes */
						.append("(SELECT  FC.BASIC_FLAT_COST FROM FLAT_COST FC WHERE FB.FLAT_BOOK_ID = FC.FLAT_BOOK_ID AND FC.STATUS_ID = 6 ORDER BY FC.CREATED_DATE  FETCH FIRST ROW ONLY ) AS BASIC_FLAT_COST, ")
						.append("(SELECT  FC.AMENITIES_FLAT_COST FROM FLAT_COST FC WHERE FB.FLAT_BOOK_ID = FC.FLAT_BOOK_ID AND FC.STATUS_ID = 6 ORDER BY FC.CREATED_DATE  FETCH FIRST ROW ONLY ) AS AMENITIES_FLAT_COST, ")
						.append("(SELECT  SUM(FC.BASIC_FLAT_COST+FC.AMENITIES_FLAT_COST) FROM FLAT_COST FC WHERE FB.FLAT_BOOK_ID = FC.FLAT_BOOK_ID AND FC.STATUS_ID = 6  ) AS TOTAL_FLAT_COST_EXCL_GST, ")
						.append(" FB.SALE_DEED_DATE, FB.HANDING_OVER_DATE, FB.REG_DATE, ")
						
						.append(" FSO.FLATS_SALE_OWNERS_ID as FLATS_SALE_OWNERS_ID,")
						.append(" NVL(FSO.FLAT_SALE_OWNER,' ') AS FLAT_SALE_OWNER,")
						.append("FB.FLAT_BOOK_ID AS FLAT_BOOK_ID,")
						.append("FB.SALESFORCE_BOOKING_ID AS SALESFORCE_BOOKING_ID,FB.SALESFORCE_TRANSACTION_ID AS SALESFORCE_TRANSACTION_ID,")
						.append("FB.BOOKING_DATE,")
						.append("FB.AGREEMENT_DATE,")
						.append("NVL(FB.MILESTONE_DAYS,0) AS MILESTONE_DAYS,")
						.append("F.FLAT_ID AS FLAT_ID,")
						.append("F.FLAT_NO AS FLAT_NO,")
						.append("FD.FLOOR_ID AS FLOOR_ID,")
						.append("FL.NAME AS FLOOR_NAME,")
						.append("BD.BLOCK_ID AS BLOCK_ID,")
						.append("BL.NAME AS BLOCK_NAME,")
						.append("S.SITE_ID AS SITE_ID,")
						.append("S.NAME AS SITE_NAME, ")
						.append("S.SALES_FORCE_SITE_NAME AS SALES_FORCE_SITE_NAME, ")
						.append(" FDT.SBUA, ")
						.append(" FDT.BHK, ")
						.append("S.SHORT_FORM AS SITE_SHORT_FORM ")
						.append(" FROM FLAT_BOOKING FB INNER JOIN FLAT F ")
						.append("ON FB.FLAT_ID = F.FLAT_ID ")
						.append("INNER JOIN FLOOR_DETAILS FD ")
						.append("ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID ")
						.append("INNER JOIN FLOOR FL ")
						.append("ON FL.FLOOR_ID = FD.FLOOR_ID ")
						.append("INNER JOIN BLOCK_DETAILS BD ")
						.append("ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID ")
						.append("INNER JOIN BLOCK BL ")
						.append("ON BL.BLOCK_ID = BD.BLOCK_ID ")
						.append("INNER JOIN SITE S ")
						.append("ON BD.SITE_ID = S.SITE_ID ")
						.append(" INNER JOIN FLAT_DETAILS FDT ")
						.append(" ON (FDT.FLAT_ID=F.FLAT_ID) ")
						.append(" FULL JOIN FLATS_SALE_OWNERS FSO ON FSO.FLATS_SALE_OWNERS_ID = FDT.FLATS_SALE_OWNERS_ID AND FSO.STATUS_ID = 6 ")
						.toString();
				
				/* TRANSACTION REPORT */
				public static final String QRY_TO_GET_CLEARED_TRANSACTIONS_REPORT = new StringBuilder("  ")
						.append("  SELECT DISTINCT FTE.FIN_TRANSACTION_ENTRY_ID,                                          ")
						.append("                  FTE.FIN_TRANSACTION_TYPE_ID,                                           ")
						.append("                  FTE.FIN_TRANSACTION_MODE_ID,                                           ")
						.append("                  FTE.SITE_ID,                                                           ")
						.append("                  FTE.BOOKING_FORM_ID,                                                   ")
						.append("                  FTE.TRANSACTION_STATUS_ID,FTSO.SET_OFF_TYPE,                                             ")
						.append("                  FTC.CLEARANCE_DATE                                                     ")
						.append("                  AS CHEQUE_CLEARANCE_DATE,                                              ")
						.append("                  FTE.RECEIVED_DATE,                                                     ")
						.append("                  FTE.PAYMENT_DATE,                                                      ")
						.append("                  FTE.FIN_SITE_PROJ_ACC_MAP_ID,                                          ")
						.append("            FPA.FIN_PROJ_ACC_ID, FPA.ACCOUNT_NO, S.NAME AS SITE_NAME,                    ")
						.append("  NVL(FTC.CLEARANCE_DATE, NVL(FTE.RECEIVED_DATE, FTE.PAYMENT_DATE)) AS                   ")
						.append("  TX_CLEARANCE_DATE,                                                                     ")
						.append("  NVL(FTC.CHEQUE_NO, FTO.REFERENCE_NO)                              AS                   ")
						.append("                  CHEQUE_OR_REFERENCE_NO,                                                ")
						.append("  FTE.AMOUNT,                                                                            ")
						.append("  CASE                                                                                   ")
						.append("    WHEN FTE.FIN_TRANSACTION_TYPE_ID = 1 THEN 'Cr'                                       ")
						.append("    WHEN FTE.FIN_TRANSACTION_TYPE_ID = 2 THEN 'Dr'                                       ")
						.append("  END                                                               AS DR_CR,            ")
						.append("  CASE                                                                                   ")
						.append("    WHEN FTE.TRANSACTION_STATUS_ID = 37 THEN                                             ")
						.append("    'Transaction Cleared-Receipt Generated'                                            ")
						.append("    WHEN FTE.TRANSACTION_STATUS_ID IN ( 23, 20 ) THEN                                    ")
						.append("    'Pending Transactions For Approval'                                                  ")
						.append("    WHEN FTE.TRANSACTION_STATUS_ID = 38 THEN 'Modify Transaction'                        ")
						.append("    WHEN FTE.TRANSACTION_STATUS_ID = 49 THEN 'Uncleared Cheque'                          ")
						.append("  END                                                               AS                   ")
						.append("                  PENDING_MODULE_NAME,                                                   ")
						.append("  (SELECT LISTAGG(NVL(( EMP.FIRST_NAME                                                   ")
						.append("                        || ' '                                                           ")
						.append("                        || EMP.LAST_NAME ), 'N/A'), ',')                                 ")
						.append("            WITHIN GROUP (ORDER BY FTESOLM1.FIN_TRAN_SET_OFF_LEVEL_ID) AS EMP_NAME       ")
						.append("   FROM   FIN_TRN_EMP_SET_OFF_LEVEL_MAPPING FTESOLM1                                     ")
						.append("          JOIN EMPLOYEE EMP                                                              ")
						.append("            ON( EMP.EMP_ID = FTESOLM1.EMP_ID )                                           ")
						.append("   WHERE  FTESOLM1.FIN_TRAN_SET_OFF_LEVEL_ID = FTESOLM.FIN_TRAN_SET_OFF_LEVEL_ID         ")
						.append("          AND FTESOLM1.STATUS_ID = :STATUS_ID)                      AS                   ")
						.append("                  PENDING_BY_LEVEL                                                       ")
						.append(" ,F.FLAT_NO AS FLAT_NO,FTE.SOURCE_OF_FUNDS                                               ")
						.append("  FROM   FLAT_BOOKING FB                                                                 ")
						.append("         INNER JOIN FLAT F                                                               ")
						.append("                 ON FB.FLAT_ID = F.FLAT_ID                                               ")
						.append("         INNER JOIN FLAT_COST FC                                                         ")
						.append("                 ON FB.FLAT_ID = FC.FLAT_ID                                              ")
						.append("                    AND FC.STATUS_ID = 6                                                 ")
						.append("         INNER JOIN FLAT_DETAILS FD                                                      ")
						.append("                 ON FD.FLAT_ID = FB.FLAT_ID                                              ")
						.append("                    AND FD.STATUS_ID = 6                                                 ")
						.append("         INNER JOIN FLATS_SALE_OWNERS FSO                                                ")
						.append("                 ON FSO.FLATS_SALE_OWNERS_ID = FD.FLATS_SALE_OWNERS_ID                   ")
						.append("         INNER JOIN FLOOR_DETAILS FD                                                     ")
						.append("                 ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID                                     ")
						.append("         INNER JOIN FLOOR FL                                                             ")
						.append("                 ON FL.FLOOR_ID = FD.FLOOR_ID                                            ")
						.append("         INNER JOIN BLOCK_DETAILS BD                                                     ")
						.append("                 ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID                                    ")
						.append("         INNER JOIN BLOCK BL                                                             ")
						.append("                 ON BL.BLOCK_ID = BD.BLOCK_ID                                            ")
						.append("         INNER JOIN SITE S                                                               ")
						.append("                 ON BD.SITE_ID = S.SITE_ID                                               ")
						.append("         INNER JOIN FIN_TRANSACTION_ENTRY FTE                                            ")
						.append("                 ON FB.FLAT_BOOK_ID = FTE.BOOKING_FORM_ID                                ")
						.append("         INNER JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSE                                   ")
						.append("                 ON FTE.FIN_TRANSACTION_ENTRY_ID = FTSE.FIN_TRANSACTION_ENTRY_ID         ")
						.append("         INNER JOIN FIN_TRANSACTION_SET_OFF FTSO                                         ")
						.append("                 ON FTSO.FIN_TRN_SET_OFF_ENT_ID = FTSE.FIN_TRN_SET_OFF_ENT_ID            ")
						.append("         INNER JOIN METADATA_TYPES MT                                                    ")
						.append("                 ON MT.METADATA_TYPES_ID = FTSO.SET_OFF_TYPE                             ")
						.append("         INNER JOIN FIN_TRANSACTION_TYPE FTP                                             ")
						.append("                 ON FTE.FIN_TRANSACTION_TYPE_ID = FTP.TRANSACTION_TYPE_ID                ")
						.append("         INNER JOIN FIN_TRANSACTION_MODE FTM                                             ")
						.append("                 ON FTE.FIN_TRANSACTION_MODE_ID = FTM.TRANSACTION_MODE_ID                ")
						.append("         INNER JOIN STATUS ST                                                            ")
						.append("                 ON FTE.TRANSACTION_STATUS_ID = ST.STATUS_ID                             ")
						.append("         INNER JOIN SITE SI                                                              ")
						.append("                 ON FTE.SITE_ID = SI.SITE_ID                                             ")
						.append("         LEFT OUTER JOIN FIN_BANK FB                                                     ")
						.append("                      ON FTE.FIN_BANK_ID = FB.FIN_BANK_ID                                ")
						.append("         LEFT JOIN FIN_TRANSACTION_ONLINE FTO                                            ")
						.append("                ON FTE.FIN_TRANSACTION_ENTRY_ID = FTO.FIN_TRANSACTION_ENTRY_ID           ")
						.append("         LEFT OUTER JOIN FIN_TRANSFER_MODE FTMM                                          ")
						.append("                      ON FTO.FIN_TRANSFER_MODE_ID = FTMM.TRANSFER_MODE_ID                ")
						.append("         LEFT JOIN FIN_TRANSACTION_CHEQUE FTC                                            ")
						.append("                ON FTE.FIN_TRANSACTION_ENTRY_ID = FTC.FIN_TRANSACTION_ENTRY_ID           ")
						.append("         LEFT JOIN FIN_SITE_PROJ_ACC_MAPPING FSPAM                                       ")
						.append("                ON FSPAM.FIN_SITE_PROJ_ACC_MAP_ID = FTE.FIN_SITE_PROJ_ACC_MAP_ID         ")
						.append("         LEFT JOIN FIN_PROJECT_ACCOUNTS FPA                                              ")
						.append("                ON FPA.FIN_PROJ_ACC_ID = FSPAM.FIN_PROJ_ACC_ID                           ")
						.append("         JOIN FIN_TRANSACTION_SET_OFF_APPROVAL FTSOA                                     ")
						.append("           ON ( FTSOA.FIN_TRN_SET_OFF_ENT_ID = FTSE. FIN_TRN_SET_OFF_ENT_ID )            ")
						.append("         JOIN FIN_TRANSACTION_SET_OFF_APPROVAL_LEVEL FTSOAL                              ")
						.append("           ON ( FTSOAL.FIN_TRN_SET_OFF_APPR_LVL_ID =                                     ")
						.append("                FTSOA.FIN_TRN_SET_OFF_APPR_LVL_ID )                                      ")
						.append("         JOIN FIN_TRANSACTION_SET_OFF_LEVEL FTSOL                                        ")
						.append("           ON ( FTSOL.FIN_TRAN_SET_OFF_LEVEL_ID = FTSOAL.FIN_TRAN_SET_OFF_LEVEL_ID       ")
						.append("              )                                                                          ")
						.append("         JOIN FIN_TRANSACTION_LEVEL FTL                                                  ")
						.append("           ON ( FTL.FIN_LEVEL_ID = FTSOL.FIN_LEVEL_ID )                                  ")
						.append("         JOIN FIN_TRN_EMP_SET_OFF_LEVEL_MAPPING FTESOLM                                  ")
						.append("           ON ( FTESOLM.FIN_TRAN_SET_OFF_LEVEL_ID =                                      ")
						.append("                FTSOL.FIN_TRAN_SET_OFF_LEVEL_ID )                                        ")
						.append("  WHERE  FTE.STATUS_ID = :STATUS_ID                                                      ")
						.append("         AND FB.STATUS_ID = :STATUS_ID                                                   ")
						//.append("         AND FTSO.SET_OFF_TYPE IN ( 29 )                                                 ")
						.append("         AND FTSO.STATUS_ID = :STATUS_ID                                                 ")
						.append("         AND FTE.TRANSACTION_STATUS_ID IN ( 23, 38, 20, 14,                              ")
						.append("                                            49, 37 )                                     ")
						.append("         AND FTE.FIN_TRANSACTION_TYPE_ID IN ( 1, 2 )                                     ")
						.append("         AND FTE.FIN_TRANSACTION_MODE_ID IN ( 1, 2 )                                     ")
						.append("     AND ((FTC.CLEARANCE_DATE IS NOT NULL OR FTO.CLEARANCE_DATE IS NOT NULL) OR ( FTE.FIN_TRANSACTION_TYPE_ID IN ( 1)  AND FTE.FIN_TRANSACTION_MODE_ID IN ( 2 ) AND (FTC.CLEARANCE_DATE IS  NULL OR FTO.CLEARANCE_DATE IS  NULL)  )) ")
						
						.toString();
				
				
				public static final String QRY_TO_GET_PENDING_TRANSACTIONS_REPORT = new StringBuilder("  ")
						.append("  SELECT DISTINCT FTE.FIN_TRANSACTION_ENTRY_ID,                                          ")
						.append("                  FTE.FIN_TRANSACTION_TYPE_ID,                                           ")
						.append("                  FTE.FIN_TRANSACTION_MODE_ID,                                           ")
						.append("                  FTE.SITE_ID,                                                           ")
						.append("                  FTE.BOOKING_FORM_ID,                                                   ")
						.append("                  FTE.TRANSACTION_STATUS_ID,FTSO.SET_OFF_TYPE,                                             ")
						.append("                  FTC.CLEARANCE_DATE                                                     ")
						.append("                  AS CHEQUE_CLEARANCE_DATE,                                              ")
						.append("                  FTE.RECEIVED_DATE,                                                     ")
						.append("                  FTE.PAYMENT_DATE,                                                      ")
						.append("                  FTE.FIN_SITE_PROJ_ACC_MAP_ID,                                          ")
						.append("        FPA.FIN_PROJ_ACC_ID,FPA.ACCOUNT_NO,   S.NAME AS SITE_NAME,                       ")
						.append("  NVL(FTC.CLEARANCE_DATE, NVL(FTE.RECEIVED_DATE, FTE.PAYMENT_DATE)) AS                   ")
						.append("  TX_CLEARANCE_DATE,                                                                     ")
						.append("  NVL(FTC.CHEQUE_NO, FTO.REFERENCE_NO)                              AS                   ")
						.append("                  CHEQUE_OR_REFERENCE_NO,                                                ")
						.append("  FTE.AMOUNT,                                                                            ")
						.append("  CASE                                                                                   ")
						.append("    WHEN FTE.FIN_TRANSACTION_TYPE_ID = 1 THEN 'Cr'                                       ")
						.append("    WHEN FTE.FIN_TRANSACTION_TYPE_ID = 2 THEN 'Dr'                                       ")
						.append("  END                                                               AS DR_CR,            ")
						.append("  CASE                                                                                   ")
						.append("    WHEN FTE.TRANSACTION_STATUS_ID = 37 THEN                                             ")
						.append("    'Transaction Cleared-Receipt Generated'                                            ")
						.append("    WHEN FTE.TRANSACTION_STATUS_ID IN ( 23, 20 ) THEN                                    ")
						.append("    'Pending Transactions For Approval'                                                  ")
						.append("    WHEN FTE.TRANSACTION_STATUS_ID = 38 THEN 'Modify Transaction'                        ")
						.append("    WHEN FTE.TRANSACTION_STATUS_ID = 49 THEN 'Uncleared Cheque'                          ")
						.append("  END                                                               AS                   ")
						.append("                  PENDING_MODULE_NAME,                                                   ")
						.append("  (SELECT LISTAGG(NVL(( EMP.FIRST_NAME                                                   ")
						.append("                        || ' '                                                           ")
						.append("                        || EMP.LAST_NAME ), 'N/A'), ',')                                 ")
						.append("            WITHIN GROUP (ORDER BY FTESOLM1.FIN_TRAN_SET_OFF_LEVEL_ID) AS EMP_NAME       ")
						.append("   FROM   FIN_TRN_EMP_SET_OFF_LEVEL_MAPPING FTESOLM1                                     ")
						.append("          JOIN EMPLOYEE EMP                                                              ")
						.append("            ON( EMP.EMP_ID = FTESOLM1.EMP_ID )                                           ")
						.append("   WHERE  FTESOLM1.FIN_TRAN_SET_OFF_LEVEL_ID = FTESOLM.FIN_TRAN_SET_OFF_LEVEL_ID         ")
						.append("          AND FTESOLM1.STATUS_ID = :STATUS_ID)                      AS                   ")
						.append("                  PENDING_BY_LEVEL                                                       ")
						.append(" ,F.FLAT_NO AS FLAT_NO,FTE.SOURCE_OF_FUNDS                                               ")
						.append("  FROM   FLAT_BOOKING FB                                                                 ")
						.append("         INNER JOIN FLAT F                                                               ")
						.append("                 ON FB.FLAT_ID = F.FLAT_ID                                               ")
						.append("         INNER JOIN FLAT_COST FC                                                         ")
						.append("                 ON FB.FLAT_ID = FC.FLAT_ID                                              ")
						.append("                    AND FC.STATUS_ID = 6                                                 ")
						.append("         INNER JOIN FLAT_DETAILS FD                                                      ")
						.append("                 ON FD.FLAT_ID = FB.FLAT_ID                                              ")
						.append("                    AND FD.STATUS_ID = 6                                                 ")
						.append("         INNER JOIN FLATS_SALE_OWNERS FSO                                                ")
						.append("                 ON FSO.FLATS_SALE_OWNERS_ID = FD.FLATS_SALE_OWNERS_ID                   ")
						.append("         INNER JOIN FLOOR_DETAILS FD                                                     ")
						.append("                 ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID                                     ")
						.append("         INNER JOIN FLOOR FL                                                             ")
						.append("                 ON FL.FLOOR_ID = FD.FLOOR_ID                                            ")
						.append("         INNER JOIN BLOCK_DETAILS BD                                                     ")
						.append("                 ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID                                    ")
						.append("         INNER JOIN BLOCK BL                                                             ")
						.append("                 ON BL.BLOCK_ID = BD.BLOCK_ID                                            ")
						.append("         INNER JOIN SITE S                                                               ")
						.append("                 ON BD.SITE_ID = S.SITE_ID                                               ")
						.append("         INNER JOIN FIN_TRANSACTION_ENTRY FTE                                            ")
						.append("                 ON FB.FLAT_BOOK_ID = FTE.BOOKING_FORM_ID                                ")
						.append("         INNER JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSE                                   ")
						.append("                 ON FTE.FIN_TRANSACTION_ENTRY_ID = FTSE.FIN_TRANSACTION_ENTRY_ID         ")
						.append("         INNER JOIN FIN_TRANSACTION_SET_OFF FTSO                                         ")
						.append("                 ON FTSO.FIN_TRN_SET_OFF_ENT_ID = FTSE.FIN_TRN_SET_OFF_ENT_ID            ")
						.append("         INNER JOIN METADATA_TYPES MT                                                    ")
						.append("                 ON MT.METADATA_TYPES_ID = FTSO.SET_OFF_TYPE                             ")
						.append("         INNER JOIN FIN_TRANSACTION_TYPE FTP                                             ")
						.append("                 ON FTE.FIN_TRANSACTION_TYPE_ID = FTP.TRANSACTION_TYPE_ID                ")
						.append("         INNER JOIN FIN_TRANSACTION_MODE FTM                                             ")
						.append("                 ON FTE.FIN_TRANSACTION_MODE_ID = FTM.TRANSACTION_MODE_ID                ")
						.append("         INNER JOIN STATUS ST                                                            ")
						.append("                 ON FTE.TRANSACTION_STATUS_ID = ST.STATUS_ID                             ")
						.append("         INNER JOIN SITE SI                                                              ")
						.append("                 ON FTE.SITE_ID = SI.SITE_ID                                             ")
						.append("         LEFT OUTER JOIN FIN_BANK FB                                                     ")
						.append("                      ON FTE.FIN_BANK_ID = FB.FIN_BANK_ID                                ")
						.append("         LEFT JOIN FIN_TRANSACTION_ONLINE FTO                                            ")
						.append("                ON FTE.FIN_TRANSACTION_ENTRY_ID = FTO.FIN_TRANSACTION_ENTRY_ID           ")
						.append("         LEFT OUTER JOIN FIN_TRANSFER_MODE FTMM                                          ")
						.append("                      ON FTO.FIN_TRANSFER_MODE_ID = FTMM.TRANSFER_MODE_ID                ")
						.append("         LEFT JOIN FIN_TRANSACTION_CHEQUE FTC                                            ")
						.append("                ON FTE.FIN_TRANSACTION_ENTRY_ID = FTC.FIN_TRANSACTION_ENTRY_ID           ")
						.append("         LEFT JOIN FIN_SITE_PROJ_ACC_MAPPING FSPAM                                       ")
						.append("                ON FSPAM.FIN_SITE_PROJ_ACC_MAP_ID = FTE.FIN_SITE_PROJ_ACC_MAP_ID         ")
						.append("         LEFT JOIN FIN_PROJECT_ACCOUNTS FPA                                              ")
						.append("                ON FPA.FIN_PROJ_ACC_ID = FSPAM.FIN_PROJ_ACC_ID                           ")
						.append("         JOIN FIN_TRANSACTION_SET_OFF_APPROVAL FTSOA                                     ")
						.append("           ON ( FTSOA.FIN_TRN_SET_OFF_ENT_ID = FTSE. FIN_TRN_SET_OFF_ENT_ID )            ")
						.append("         JOIN FIN_TRANSACTION_SET_OFF_APPROVAL_LEVEL FTSOAL                              ")
						.append("           ON ( FTSOAL.FIN_TRN_SET_OFF_APPR_LVL_ID =                                     ")
						.append("                FTSOA.FIN_TRN_SET_OFF_APPR_LVL_ID )                                      ")
						.append("         JOIN FIN_TRANSACTION_SET_OFF_LEVEL FTSOL                                        ")
						.append("           ON ( FTSOL.FIN_TRAN_SET_OFF_LEVEL_ID = FTSOAL.FIN_TRAN_SET_OFF_LEVEL_ID       ")
						.append("              )                                                                          ")
						.append("         JOIN FIN_TRANSACTION_LEVEL FTL                                                  ")
						.append("           ON ( FTL.FIN_LEVEL_ID = FTSOL.FIN_LEVEL_ID )                                  ")
						.append("         JOIN FIN_TRN_EMP_SET_OFF_LEVEL_MAPPING FTESOLM                                  ")
						.append("           ON ( FTESOLM.FIN_TRAN_SET_OFF_LEVEL_ID =                                      ")
						.append("                FTSOL.FIN_TRAN_SET_OFF_LEVEL_ID )                                        ")
						.append("  WHERE  FTE.STATUS_ID = :STATUS_ID                                                      ")
						.append("         AND FB.STATUS_ID = :STATUS_ID                                                   ")
						//.append("         AND FTSO.SET_OFF_TYPE IN ( 29 )                                                 ")
						.append("         AND FTSO.STATUS_ID = :STATUS_ID                                                 ")
						.append("         AND FTE.TRANSACTION_STATUS_ID IN ( 23, 38, 20, 14,                              ")
						.append("                                            49 )                                     ")
						.append("         AND FTE.FIN_TRANSACTION_TYPE_ID IN ( 1, 2 )                                     ")
						.append("         AND FTE.FIN_TRANSACTION_MODE_ID IN ( 1, 2 )                                     ")
						
						
						.toString();
				
				
				public static final String QRY_TO_GET_SUSPENSE_ENTRY_TRANSACTION_REPORT = new StringBuilder("  ")
						.append("  SELECT FAE.FIN_ANMS_ENTRY_ID,                                                            ")
						.append("         FAE.AMOUNT,                                                                       ")
						.append("         FAE.REFERENCE_NUMBER AS CHEQUE_OR_REFERENCE_NO,                                   ")
						.append("         FAE.RECEIVED_DATE TX_CLEARANCE_DATE ,                                             ")
						.append("         FAE.FIN_SITE_PROJ_ACC_MAP_ID,                                                     ")
						.append("         FAE.FIN_BANK_ID,FPA.ACCOUNT_NO, S.NAME AS SITE_NAME,                              ")
						.append("  (  CASE WHEN FAE.STATUS_ID = 6 THEN 'View Suspense Entries' WHEN FAE.STATUS_ID = 38 THEN 'Modify Suspense Entry'    ")
						.append("        WHEN FAE.STATUS_ID = 37 THEN 'Transaction Cleared' END)   AS PENDING_MODULE_NAME , ")
						.append("          (SELECT LISTAGG(NVL(( EMP.FIRST_NAME                                             ")
						.append("                                  || ' '                                                   ")
						.append("                                  || EMP.LAST_NAME ), 'N/A'), ',')                         ")
						.append("                      WITHIN GROUP (ORDER BY FTESOLM1.FIN_TRAN_SET_OFF_LEVEL_ID)           ")
						.append("                    AS                                                                     ")
						.append("                    EMP_NAME                                                               ")
						.append("             FROM   FIN_TRN_EMP_SET_OFF_LEVEL_MAPPING FTESOLM1                             ")
						.append("                    JOIN EMPLOYEE EMP                                                      ")
						.append("                      ON( EMP.EMP_ID = FTESOLM1.EMP_ID )                                   ")
						.append("                    JOIN FIN_TRANSACTION_SET_OFF_LEVEL FTSOL                               ")
						.append("                      ON (                                                                 ")
						.append("  FTSOL.FIN_TRAN_SET_OFF_LEVEL_ID = FTESOLM1.FIN_TRAN_SET_OFF_LEVEL_ID )                   ")
						.append("       JOIN FIN_TRN_SET_OFF_APPR_TYPE FTSOAT                                               ")
						.append("         ON                                                                                ")
						.append("            FTSOAT.FIN_TRAN_SET_OFF_LEVEL_ID = FTSOL.FIN_TRAN_SET_OFF_LEVEL_ID             ")
						.append("             WHERE  FTSOL.SITE_ID = FAE.SITE_ID                                            ")
						.append("                    AND FTSOL.STATUS_ID = :STATUS_ID                                       ")
						.append("                    AND FTSOL.FIN_LEVEL_ID = 1                                             ")
						.append("                    AND FTSOL.FIN_TRANSACTION_TYPE_ID IN ( 1 )                             ")
						.append("                    AND FTSOL.FIN_TRANSACTION_MODE_ID IN ( 2 )                             ")
						.append("                    AND FTSOAT.SET_OFF_TYPE = 29) AS PENDING_BY_LEVEL   ,                   ")
						.append("                    'Cr' AS DR_CR                                                        ")
						.append("  FROM   FIN_ANONYMOUS_ENTRY FAE                                                           ")
						.append("         INNER JOIN FIN_SITE_PROJ_ACC_MAPPING FSPAM                                        ")
						.append("                 ON FSPAM.FIN_SITE_PROJ_ACC_MAP_ID = FAE.FIN_SITE_PROJ_ACC_MAP_ID          ")
						.append("          LEFT JOIN FIN_PROJECT_ACCOUNTS FPA                                               ")
						.append("                    ON FPA.FIN_PROJ_ACC_ID = FSPAM.FIN_PROJ_ACC_ID                         ")
						.append("         INNER JOIN SITE S                                                                 ")
						.append("                 ON FAE.SITE_ID = S.SITE_ID                                                ")
						.append("  WHERE  FAE.STATUS_ID IN (:FIN_ANN_STATUS_ID)                                              ")
						.toString();


				public static final String QRY_TO_GET_ACCOUNT_NUMBERS = new StringBuilder("  ")
				.append("   SELECT DISTINCT   FPA.ACCOUNT_NO,FB.BANK_NAME,                                           ")
				.append("   FPA.FIN_BANK_ID                                                                          ")
				.append("   FROM FIN_SITE_PROJ_ACC_MAPPING FSAM                                                      ")
				.append("   JOIN FIN_PROJECT_ACCOUNTS FPA                                                            ")
				.append("   ON(FPA.FIN_PROJ_ACC_ID=FSAM.FIN_PROJ_ACC_ID)                                             ")
				.append("   JOIN FIN_BANK FB                                                                         ")
				.append("   ON(FB.FIN_BANK_ID=FPA.FIN_BANK_ID)                                                       ")
				.append("   FULL JOIN ADDRESS ADDR                                                                   ")
				.append("   ON (ADDR.ADDRESS_ID=FPA.ADDRESS_ID)                                                      ")
				.append("   INNER JOIN FLATS_SALE_OWNERS FSO ON FSO.FLATS_SALE_OWNERS_ID=FSAM.FLATS_SALE_OWNERS_ID   ")
				.append("   WHERE FSAM.STATUS_ID=:STATUS_ID                                                          ")
				.append("                                                                 ")
				.toString();
				
				

				public static final String QRY_TO_GET_BOOKING_STATUSES = new StringBuilder("  ")
				.append("  SELECT DISTINCT STATUS_ID,INITCAP(STATUS) AS STATUS,INITCAP(DESCRIPTION) AS DESCRIPTION FROM STATUS WHERE STATUS_ID IN (SELECT DISTINCT STATUS_ID FROM FLAT_BOOKING ) ")
				.append(" ")
				.toString();
				
				
				public static final String QRY_TO_GET_STATES = new StringBuilder("  ")
						.append(" SELECT DISTINCT ST.STATE_ID,STATE_NAME ")
						.append(" FROM SITE S ")
						.append(" INNER JOIN ADDRESS AD ON AD.ADDRESS_ID=S.ADDRESS_ID ")
						.append(" INNER JOIN STATE ST ON ST.STATE_ID=AD.STATE_ID ")
						.append(" WHERE AD.STATUS_ID=:STATUS_ID ")
						.toString();
				
			
				
				
				public static final String QRY_TO_UPDATE_FIN_TRNSACTION_ENTRY_BOOKING_ID = new StringBuilder("  ")
						.append(" UPDATE FIN_TRANSACTION_ENTRY SET BOOKING_FORM_ID=:NEW_BOOKING_FORM_ID WHERE BOOKING_FORM_ID=:OLD_BOOKING_ID AND FIN_TRANSACTION_ENTRY_ID=:FIN_TRANSACTION_ENTRY_ID AND SITE_ID=:SITE_ID ")
						.toString();
				
				 public static final String QRY_TO_LOAD_PENDING_OLD_BOOKING_TRANSACTIONS = new StringBuilder("")
						 .append(" SELECT 'TRANSACTION' AS TYPE,FTE.SITE_ID ,SI.NAME AS SITE_NAME ,FTE.FIN_TRANSACTION_ENTRY_ID,FTSE.FIN_TRN_SET_OFF_ENT_ID ,FTE.TRANSACTION_RECEIPT_NO ")
						 .append("  ,BL.NAME AS BLOCK_NAME,FB.FLAT_ID ,F .FLAT_NO ,FTE.BOOKING_FORM_ID AS FLAT_BOOK_ID ")
						 .append("	,FTP.NAME AS TRANSACTION_TYPE ,FTM.NAME AS TRANSACTION_MODE	,NVL(FTMM.NAME,'Cheque') AS ONLINE_TRANSFER_MODE ")
						 .append("  ,CASE WHEN FTE.FIN_TRANSACTION_TYPE_ID = 1 THEN   (CASE WHEN FTSO.SET_OFF_TYPE = 29 THEN 'Principal'   ")
						 .append(" WHEN  FTSO.SET_OFF_TYPE = 35 THEN 'Legal Charges' ")
						 .append(" WHEN FTSO.SET_OFF_TYPE = 27 THEN 'Interest' ")
						 .append(" WHEN FTSO.SET_OFF_TYPE = 102 THEN 'Khata Charges' ")
						 .append(" WHEN FTSO.SET_OFF_TYPE = 103 THEN 'Maintenance' ")
						 .append(" WHEN FTSO.SET_OFF_TYPE = 104 THEN 'Corpus Fund' ")
						 .append(" WHEN FTSO.SET_OFF_TYPE = 34 THEN 'Modification Charges' ")
						 .append(" WHEN FTSO.SET_OFF_TYPE = 62 THEN 'Refundable Advance'")
						 .append(" WHEN FTSO.SET_OFF_TYPE = 32 THEN 'TDS'")
						 .append(" END)")
						 .append(" ELSE 'Amount Refund' END")
						 .append("	 AS TRANSACTION_FOR")
						 .append(" ,FTSO.FIN_BOK_ACC_INVOICE_NO,FTSO.PAID_BY")
						 .append("	,CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.CHEQUE_NO ELSE  FTO.REFERENCE_NO END AS ONLINE_TR_REFERENCE_NO")
						 .append("	,CASE WHEN FTE.FIN_TRANSACTION_TYPE_ID = 1 THEN  FTE.RECEIVED_DATE  ELSE   FTE.PAYMENT_DATE END AS ONLINE_TR_RECEIVE_DATE")
						 .append("	, FTE.PAYMENT_DATE  AS CHEQUE_DATE")
						 .append("	,CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.CHEQUE_DEPOSITED_DATE ELSE FTE.RECEIVED_DATE END AS CHEQUE_DEPOSITED_DATE")
						 .append("	,CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.CLEARANCE_DATE ELSE FTE.RECEIVED_DATE  END AS CHEQUE_CLEARECENCE_DATE")
						 .append("	,CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.CHEQUE_NO ELSE  FTO.REFERENCE_NO END AS CHEQUE_NUMBER")
						 .append("	,CASE WHEN FTE.FIN_TRANSACTION_TYPE_ID = 1 THEN FTE.RECEIVED_DATE ELSE  FTE.PAYMENT_DATE END AS CHEQUE_RECEIVE_DATE")
						 .append("	,FTE.AMOUNT as TRANSACTION_AMOUNT")
						 .append("	,CASE WHEN FB.BANK_NAME ='N/A' THEN null ELSE FB.BANK_NAME END as BANK_NAME")
						 .append("	,FTE.FIN_SITE_PROJ_ACC_MAP_ID AS SITE_BANK_ACCOUNT_ID")
						 .append("	,(select ACCOUNT_NO from FIN_PROJECT_ACCOUNTS where FIN_PROJ_ACC_ID = (select FIN_PROJ_ACC_ID from FIN_SITE_PROJ_ACC_MAPPING where FIN_SITE_PROJ_ACC_MAP_ID = FTE.FIN_SITE_PROJ_ACC_MAP_ID)) AS SITE_BANK_ACCOUNT_NUMBER")
						 .append("        ,CASE WHEN FTSO.SET_OFF_TYPE = 29 THEN FTSO.SET_OFF_AMOUNT  ELSE NULL END AS PRINCIPAL_AMOUNT")
						 .append("	,CASE WHEN FTSO.SET_OFF_TYPE = 27 THEN FTSO.SET_OFF_AMOUNT  ELSE NULL END AS PENALTY_AMOUNT")
						 .append("	,CASE WHEN FTSO.SET_OFF_TYPE = 34 THEN FTSO.SET_OFF_AMOUNT  ELSE NULL END AS MODIFICATION_COST")
						 .append("	,CASE WHEN FTSO.SET_OFF_TYPE = 35 THEN FTSO.SET_OFF_AMOUNT ELSE NULL END AS LEGAL_COST")
						 .append("	,CASE WHEN FTSO.SET_OFF_TYPE = 62 THEN FTSO.SET_OFF_AMOUNT ELSE NULL END AS REFUNDABLE_ADVANCE")
						 .append("	,CASE WHEN FTSO.SET_OFF_TYPE = 32 THEN FTSO.SET_OFF_AMOUNT ELSE NULL END AS TDS_AMOUNT")
						 .append("   ,CASE WHEN FTSO.SET_OFF_TYPE = 102 THEN FTSO.SET_OFF_AMOUNT ELSE NULL END AS FLAT_KHATA_AMOUNT")
						 .append("   ,CASE WHEN FTSO.SET_OFF_TYPE = 103 THEN FTSO.SET_OFF_AMOUNT ELSE NULL END AS MAINTENANCE_AMOUNT")
						 .append("   ,CASE WHEN FTSO.SET_OFF_TYPE = 104 THEN FTSO.SET_OFF_AMOUNT ELSE NULL END AS CORPUS_AMOUNT")
						 .append("	,NULL AS COMMENTs")
						 .append("	,FTE.AMOUNT  AS TOTAL_AMOUNT")
						 .append("	,FTE.TRANSACTION_CLOSED_DATE AS TRANSACTION_CLOSED_DATE")
						 .append("	,CASE WHEN FTE.TRANSACTION_STATUS_ID = 37 THEN 'Cleared' when  FTE.TRANSACTION_STATUS_ID = 51  then 'Bounce'  ELSE  'Received' END AS RECEIPT_STAGE")
						 .append("	,'TRUE' AS SHOW_GST_IN_PDF")
						 .append("	  ,FTE.TRANSACTION_RECEIPT_NO AS EXCEL_RECORD_NO")
						 .append("	,FTE.SOURCE_OF_FUNDS")
						 .append("	,(select FS.NAME from FLAT_BOK_SCHM_MAPPING FBSM,FIN_SCHEME_TAX_MAPPING FSTM,FIN_SCHEME FS")
						 .append("	WHERE FBSM.FIN_SCHE_TAX_MAP_ID = FSTM.FIN_SCHE_TAX_MAP_ID")
						 .append("	AND FSTM.FIN_SCHEME_ID = FS.FIN_SCHEME_ID AND FS.STATUS_ID = 6 AND FBSM.STATUS_ID = 6")
						 .append("	AND FB.FLAT_BOOK_ID = FBSM.FLAT_BOOK_ID")
						 .append("	) as Scheme")
						 .append("	,(select PER.PERCENTAGE from FLAT_BOK_SCHM_MAPPING FBSM,FIN_SCHEME_TAX_MAPPING FSTM,PERCENTAGES PER")
						 .append("	 WHERE FBSM.FIN_SCHE_TAX_MAP_ID = FSTM.FIN_SCHE_TAX_MAP_ID")
						 .append("	AND FBSM.STATUS_ID = 6 AND PER.PERCENTAGE_ID = FSTM.PERCENTAGE_ID")
						 .append("  AND FB.FLAT_BOOK_ID = FBSM.FLAT_BOOK_ID")
						 .append("	) as GST,sysdate as data_export_time ")

						 .append("	 FROM   FLAT_BOOKING FB INNER JOIN FLAT F ")
						 .append("	 ON FB.FLAT_ID = F.FLAT_ID")
						 //.append("   --  inner join FLAT_COST fc ON FB.FLAT_ID = Fc.FLAT_ID  and fc.status_id = fb.status_id")
						 .append("  inner join FLAT_DETAILS fd on fd.FLAT_ID = Fb.FLAT_ID  and fd.status_id = 6")
						 .append("  INNER JOIN FLOOR_DETAILS FD 	  ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID ")
						 .append("  INNER JOIN FLOOR FL   ON FL.FLOOR_ID = FD.FLOOR_ID ")
						 .append("  INNER JOIN BLOCK_DETAILS BD   ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID ")
						 .append("	INNER JOIN BLOCK BL   ON BL.BLOCK_ID = BD.BLOCK_ID ")
						 .append("	INNER JOIN SITE S   ON BD.SITE_ID = S.SITE_ID")
						 .append("	INNER JOIN FIN_TRANSACTION_ENTRY FTE  ON FB.FLAT_BOOK_ID = FTE.BOOKING_FORM_ID")
						 .append("	INNER JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSE   ON FTE.FIN_TRANSACTION_ENTRY_ID = FTSE.FIN_TRANSACTION_ENTRY_ID ")
						 .append("	INNER JOIN FIN_TRANSACTION_SET_OFF FTSO   ON  FTSO.FIN_TRN_SET_OFF_ENT_ID = FTSE.FIN_TRN_SET_OFF_ENT_ID ")
						 .append("	INNER JOIN METADATA_TYPES MT  	  ON  MT.METADATA_TYPES_ID = FTSO.SET_OFF_TYPE  ")
						 .append("	INNER JOIN FIN_TRANSACTION_TYPE FTP	  ON FTE.FIN_TRANSACTION_TYPE_ID = FTP.TRANSACTION_TYPE_ID  ")
						 .append("	INNER JOIN FIN_TRANSACTION_MODE FTM   ON FTE.FIN_TRANSACTION_MODE_ID = FTM.TRANSACTION_MODE_ID ")
						 .append("	INNER JOIN STATUS ST ON FTE.TRANSACTION_STATUS_ID = ST.STATUS_ID ")
						 .append("	INNER JOIN SITE SI  ON FTE.SITE_ID = SI.SITE_ID ")
						 .append("	LEFT OUTER JOIN FIN_BANK FB  ON FTE.FIN_BANK_ID = FB.FIN_BANK_ID ")
						 .append("	LEFT JOIN FIN_TRANSACTION_ONLINE FTO  ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTO.FIN_TRANSACTION_ENTRY_ID ")
						 .append("	LEFT OUTER JOIN FIN_TRANSFER_MODE FTMM  ON FTO.FIN_TRANSFER_MODE_ID =  FTMM.TRANSFER_MODE_ID ")
						 .append("	LEFT JOIN FIN_TRANSACTION_CHEQUE FTC  ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTC.FIN_TRANSACTION_ENTRY_ID ")
						 .append("	WHERE FTE.STATUS_ID = :STATUS_ID AND FB.FLAT_BOOK_ID = :FLAT_BOOK_ID AND FB.STATUS_ID = :FB_STATUS_ID ")
						 .append("	AND FTSO.SET_OFF_TYPE in (29,27,35,34,102,103,104,62,32)  AND FTSO.STATUS_ID = :STATUS_ID ")
						 .append("  AND F.FLAT_NO = :FLAT_NO ")
						 //.append("	 --AND FTE.TRANSACTION_STATUS_ID  in (37,49,23,38,14,20) ")
						 .append(" AND FTE.TRANSACTION_STATUS_ID  in (23, 38, 20, 14, 49) ")
						 .append(" AND FTE.FIN_TRANSACTION_TYPE_ID IN(:FIN_TRANSACTION_TYPE_ID) ")
						 .append(" ORDER BY F.FLAT_NO,NVL(FTE.RECEIVED_DATE,FTE.PAYMENT_DATE),FTE.FIN_TRANSACTION_ENTRY_ID ")
			    		.toString();
					/* QRY_TO_GET_CUSTOMER_PROPERTY_DETAILS  FROM FLAT_BOOKING,FLAT,FLOOR,BLOCK,SITE  */
					public static final String QRY_TO_GET_APP_REGISTERED_CUSTOMER_PROPERTY_DETAILS = new StringBuilder(" SELECT distinct ")
							.append("(SELECT  CUST.CUST_ID  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS CUST_ID,")
							.append("(SELECT  CUST.NAME_PREFIX ||' '|| CUST.FIRST_NAME ||' '|| CUST.LAST_NAME  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS CUST_NAME,")
						//	.append("(SELECT  CUST.PANCARD  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS PANCARD, ")
							
							.append("(SELECT  DISTINCT  CASE WHEN COUNT(AR.CUST_ID)>0 THEN 'Registered' ELSE 'Not Registered' END AS APP_STATUS FROM CUSTOMER CUST INNER JOIN APP_REGISTRATION AR ON CUST.CUST_ID=AR.CUST_ID WHERE AR.STATUS_ID=:AR_STATUS_ID AND CUST.CUST_ID=FB.CUST_ID) AS APP_STATUS, ")
						//	.append("(SELECT MAX(LAST_LOGIN_TIME) FROM CUSTOMER CUST INNER JOIN APP_REGISTRATION AR ON CUST.CUST_ID=AR.CUST_ID WHERE AR.STATUS_ID=:AR_STATUS_ID AND CUST.CUST_ID=FB.CUST_ID) AS LAST_LOGIN_TIME, ")
							
							//.append("(SELECT  CBI.EMAIL FROM CUST_BOOK_INFO CBI WHERE CBI.FLAT_BOOK_ID = FB.FLAT_BOOK_ID AND CBI.CUST_ID = FB.CUST_ID ) AS CUST_EMAIL,")
							//.append("(SELECT  CI.CONTACT_NO FROM CONTACT_INFORMATION  CI WHERE  CI.FLATBOOKING_ID = FB.FLAT_BOOK_ID ) AS CONTACT_NO,")
							//.append("(SELECT  CI.ALTERNATIVE_CONTACT_NO FROM CONTACT_INFORMATION  CI WHERE  CI.FLATBOOKING_ID = FB.FLAT_BOOK_ID ) AS ALTERNATIVE_CONTACT_NO,")
							//.append("(SELECT  CI.EMAIL_ID FROM CONTACT_INFORMATION  CI WHERE  CI.FLATBOOKING_ID = FB.FLAT_BOOK_ID ) AS CUST_EMAIL,")
							//.append("(SELECT  CUST.PROFILE_PIC FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS CUST_PROFILE_PIC,")
							//.append("(SELECT  CBI.SALES_TEAM_LEAD_ID FROM CUST_BOOK_INFO CBI WHERE CBI.FLAT_BOOK_ID = FB.FLAT_BOOK_ID AND CBI.CUST_ID = FB.CUST_ID ) AS SALES_TEAM_LEAD_ID,")
							
						//	.append("(SELECT  FC.FLAT_COST FROM FLAT_COST FC WHERE FB.FLAT_BOOK_ID = FC.FLAT_BOOK_ID AND FC.STATUS_ID = 6 ORDER BY FC.CREATED_DATE  FETCH FIRST ROW ONLY ) AS TOTAL_COST_WITH_GST,")
							/* Malladi Changes */
						//	.append("(SELECT  FC.BASIC_FLAT_COST FROM FLAT_COST FC WHERE FB.FLAT_BOOK_ID = FC.FLAT_BOOK_ID AND FC.STATUS_ID = 6 ORDER BY FC.CREATED_DATE  FETCH FIRST ROW ONLY ) AS BASIC_FLAT_COST, ")
						//	.append("(SELECT  FC.AMENITIES_FLAT_COST FROM FLAT_COST FC WHERE FB.FLAT_BOOK_ID = FC.FLAT_BOOK_ID AND FC.STATUS_ID = 6 ORDER BY FC.CREATED_DATE  FETCH FIRST ROW ONLY ) AS AMENITIES_FLAT_COST, ")
							//.append("(SELECT  SUM(FC.BASIC_FLAT_COST+FC.AMENITIES_FLAT_COST) FROM FLAT_COST FC WHERE FB.FLAT_BOOK_ID = FC.FLAT_BOOK_ID AND FC.STATUS_ID = 6  ) AS TOTAL_FLAT_COST_EXCL_GST, ")
						//	.append(" FB.SALE_DEED_DATE, FB.HANDING_OVER_DATE, FB.REG_DATE, ")
							
						//	.append(" FSO.FLATS_SALE_OWNERS_ID as FLATS_SALE_OWNERS_ID,")
						//	.append(" NVL(FSO.FLAT_SALE_OWNER,' ') AS FLAT_SALE_OWNER,")
							.append("FB.FLAT_BOOK_ID AS FLAT_BOOK_ID,")
						//	.append("FB.SALESFORCE_BOOKING_ID AS SALESFORCE_BOOKING_ID,FB.SALESFORCE_TRANSACTION_ID AS SALESFORCE_TRANSACTION_ID,")
							.append("FB.BOOKING_DATE,")
							.append("FB.AGREEMENT_DATE,")
							.append("NVL(FB.MILESTONE_DAYS,0) AS MILESTONE_DAYS,")
							.append("F.FLAT_ID AS FLAT_ID,")
							.append("F.FLAT_NO AS FLAT_NO,")
							.append("FD.FLOOR_ID AS FLOOR_ID,")
							.append("FL.NAME AS FLOOR_NAME,")
							.append("BD.BLOCK_ID AS BLOCK_ID,")
							.append("BL.NAME AS BLOCK_NAME,")
							.append("S.SITE_ID AS SITE_ID,")
							.append("S.NAME AS SITE_NAME, ")
							.append("S.SALES_FORCE_SITE_NAME AS SALES_FORCE_SITE_NAME, ")
						//	.append(" FDT.SBUA, ")
						//	.append(" FDT.BHK, ")
							.append("S.SHORT_FORM AS SITE_SHORT_FORM ")
							.append(" FROM FLAT_BOOKING FB INNER JOIN FLAT F ")
							.append("ON FB.FLAT_ID = F.FLAT_ID ")
							.append("INNER JOIN FLOOR_DETAILS FD ")
							.append("ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID ")
							.append("INNER JOIN FLOOR FL ")
							.append("ON FL.FLOOR_ID = FD.FLOOR_ID ")
							.append("INNER JOIN BLOCK_DETAILS BD ")
							.append("ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID ")
							.append("INNER JOIN BLOCK BL ")
							.append("ON BL.BLOCK_ID = BD.BLOCK_ID ")
							.append("INNER JOIN SITE S ")
							.append("ON BD.SITE_ID = S.SITE_ID ")
							.append(" INNER JOIN FLAT_DETAILS FDT ")
							.append(" ON (FDT.FLAT_ID=F.FLAT_ID) ")
							.append(" FULL JOIN FLATS_SALE_OWNERS FSO ON FSO.FLATS_SALE_OWNERS_ID = FDT.FLATS_SALE_OWNERS_ID AND FSO.STATUS_ID = 6 ")
							.append(" INNER  JOIN app_registration AR ON fb.cust_id = AR.cust_id AND AR.status_id = :AR_STATUS_ID ")
							.toString();
					
					
	public static final String QRY_TO_INSERT_TRANSACTION_WAIVED_OFF = new StringBuilder("")
			.append("INSERT INTO FIN_TRANSACTION_WAIVED_OFF  (")
			.append("FIN_TRANSACTION_WAIVED_OFF_ID,")
			.append("FIN_TRANSACTION_ENTRY_ID,")
			.append("AMOUNT,")
			.append("CREATED_BY,")
			.append("STATUS_ID,")
			.append("WAIVED_OFF_DATE,")
			.append("CREATED_DATE ")
			.append(") VALUES (")
			.append("FIN_TRANSACTION_WAIVED_OFF_SEQ.NEXTVAL,")
		    .append(":transactionEntryId,")
			.append(":transactionAmount,")
			.append(":createdBy,")
			.append("6,")
			.append(":waivedOffDate,")
			.append("SYSDATE")
			.append(")")
			.toString();
	public static final String QRY_TO_UPDATE_TRANSACTION_WAIVED_OFF = new StringBuilder("")
			.append("UPDATE FIN_TRANSACTION_WAIVED_OFF SET ")
			.append("AMOUNT=:transactionAmount,")
			.append("MODIFIED_BY=:createdBy ,")
			.append("WAIVED_OFF_DATE=:waivedOffDate, ")
			.append("MODIFIED_DATE=SYSDATE ")
			.append(" WHERE FIN_TRANSACTION_ENTRY_ID=:transactionEntryId ")
			.toString();
	
	
	
	public static final String QRY_TO_CHECK_DUPLICATE_TRANSACTIONS = new StringBuilder("")
			.append(" SELECT COUNT(*) ")
			.append(" FROM FIN_TRANSACTION_ENTRY FE ")
			.append(" LEFT OUTER JOIN FIN_BANK FB ON FB.FIN_BANK_ID=FE.FIN_BANK_ID ")
			.append(" LEFT OUTER JOIN FIN_TRANSACTION_CHEQUE FTC ON FTC.FIN_TRANSACTION_ENTRY_ID=FE.FIN_TRANSACTION_ENTRY_ID ")
			.append(" LEFT OUTER JOIN FIN_TRANSACTION_ONLINE FTO ON FTO.FIN_TRANSACTION_ENTRY_ID=FE.FIN_TRANSACTION_ENTRY_ID ")
			.append("  ")
			.toString();
	
	public static final String QRY_TO_GET_LAST_TX_FIN_TX_SET_OFF_APP_LEVEL_ID = new StringBuilder("")
			.append(" SELECT FIN_TRN_SET_OFF_APPR_LVL_ID FROM FIN_TRANSACTION_SET_OFF_APPROVAL WHERE FIN_TRN_SET_OFF_ENT_ID=(SELECT FIN_TRN_SET_OFF_ENT_ID FROM FIN_TRANSACTION_SET_OFF_ENTRY WHERE FIN_TRANSACTION_ENTRY_ID=:FIN_TRANSACTION_ENTRY_ID) ")
			.append("  ")
			.toString();
}
