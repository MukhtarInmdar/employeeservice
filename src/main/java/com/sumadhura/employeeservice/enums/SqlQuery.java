package com.sumadhura.employeeservice.enums;

public enum SqlQuery {
	;

	
private static final String SELECT="SELECT ";
	 // QRY_TO_TEST_PASSWORD FROM APP_REGISTRATION /
	
private static final String SELECT1="SELECT ";
//private static final String FROM="FROM ";

@SuppressWarnings("unused")
private static final String JOIN="JOIN ";
	
	 // QRY_TO_TEST_PASSWORD FROM APP_REGISTRATION /
		public static final String QRY_TO_TEST_CITY_STATE = new StringBuilder("SELECT ")
				.append("count(*) AS COUNT ")
				.append("FROM ")
				.append("CITY C WHERE C.CITY_ID = :CITY_ID AND C.STATE_ID = :STATE_ID ")
			    .toString();
		
		
	
	
	/* QRY_TO_GET_EMPLOYEE_LOGIN_DETAILS FROM EMPLOYEE_LOGIN */
	public static final String QRY_TO_GET_EMPLOYEE_LOGIN_DETAILS = new StringBuilder(" SELECT ")
			.append(" EMP_LOG.ID AS ID,")
			.append(" EMP_LOG.EMPLOYEE_ID AS EMPLOYEE_ID,")
			.append(" EMP_LOG.STATUS AS STATUS,")
			.append(" EMP_LOG.CREATED_BY AS CREATED_BY,")
			.append(" EMP_LOG.MODIFIED_BY AS MODIFIED_BY,")
			.append(" EMP_LOG.USERNAME AS USERNAME,")
			.append(" EMP_LOG.PASSWORD AS PASSWORD,")
			.append(" EMP_LOG.LAST_LOGIN_TIME AS LAST_LOGIN_TIME,")
			.append(" EMP_LOG.CREATED_DATE AS CREATED_DATE,")
			.append(" EMP_LOG.MODIFIED_DATE AS MODIFIED_DATE ")
			.append(" FROM EMPLOYEE_LOGIN EMP_LOG ")
			.toString();
	
	/* QRY_TO_GET_EMPLOYEE_LOGIN_DETAILS FROM EMPLOYEE_LOGIN */
	public static final String QRY_TO_GET_EMPLOYEE_LOGIN_WTO_USERNAME_PASSWORD= new StringBuilder(" WHERE ")
			.append(" LOWER(EMP_LOG.USERNAME) = :USERNAME ")
			.append(" AND ")
			.append(" EMP_LOG.PASSWORD = :PASSWORD ")
			.append(" AND ")
			.append(" EMP_LOG.STATUS = :STATUS ")
			.toString();
	
	 /* QRY_TO_GET_EMPLOYEE_DEPARTMENT_MAPING_DETAILS FROM EMPLOYEE_DEPARTMENT_MAPING */
		public static final String QRY_TO_GET_EMPLOYEE_DEPARTMENT_MAPING_DETAILS = new StringBuilder(" SELECT ")
				.append(" EMP_DEPT_MAP.EMPLOYEE_DEPARTMENT_MAPING_ID AS EMPLOYEE_DEPARTMENT_MAPING_ID,")
				.append(" EMP_DEPT_MAP.EMPLOYEE_ID AS  EMPLOYEE_ID,")
				.append(" EMP_DEPT_MAP.DEPARTMENT_ROLE_MAPPING_ID AS DEPARTMENT_ROLE_MAPPING_ID,")
				.append(" EMP_DEPT_MAP.CREATED_DATE AS CREATED_DATE,")
				.append(" EMP_DEPT_MAP.MODIFIED_DATE AS MODIFIED_DATE,")
				.append(" EMP_DEPT_MAP.STATUS STATUS")
				.append(" FROM EMPLOYEE_DEPARTMENT_MAPING EMP_DEPT_MAP")
				.toString();
		
		/* QRY_TO_GET_EMPLOYEE_DEPARTMENT_MAPING_DETAILS FROM EMPLOYEE_DEPARTMENT_MAPING */
		public static final String QRY_TO_GET_EMPLOYEE_DEPARTMENT_MAPING_DETAILS_WTO_EMPLOYEE_ID= new StringBuilder(" WHERE ")
				.append(" EMP_DEPT_MAP.EMPLOYEE_ID = :EMPLOYEE_ID ")
				.append(" AND ")
				.append(" EMP_DEPT_MAP.STATUS = :STATUS ")
				.toString();
		
		/* QRY_TO_GET_DEPARTMENT_ROLE_MAPING_DETAILS FROM DEPARTMENT_ROLE_MAPING_DETAILS */
		public static final String QRY_TO_GET_DEPARTMENT_ROLE_MAPING_DETAILS = new StringBuilder(" SELECT ")
				.append(" DEPT_ROLE_MAP.DEPARTMENT_ROLE_MAPPING_ID AS DEPARTMENT_ROLE_MAPPING_ID,")
				.append(" DEPT_ROLE_MAP.DEPT_ID AS DEPT_ID,")
				.append(" DEPT_ROLE_MAP.ROLE_ID AS  ROLE_ID,")
				.append(" DEPT_ROLE_MAP.CREATED_DATE AS CREATED_DATE,")
				.append(" DEPT_ROLE_MAP.MODIFIED_DATE AS MODIFIED_DATE,")
				.append(" DEPT_ROLE_MAP.STATUS AS  STATUS")
				.append(" FROM DEPARTMENT_ROLE_MAPPING DEPT_ROLE_MAP ")
				.toString();
		
		/* QRY_TO_GET_DEPARTMENT_ROLE_MAPING_DETAILS FROM DEPARTMENT_ROLE_MAPING_DETAILS */
		public static final String QRY_TO_GET_DEPARTMENT_ROLE_MAPING_DETAILS_WTO_DEPARTMENT_ROLE_MAPPING_ID= new StringBuilder(" WHERE ")
				.append(" DEPT_ROLE_MAP.DEPARTMENT_ROLE_MAPPING_ID = :DEPARTMENT_ROLE_MAPPING_ID ")
				.append(" AND ")
				.append(" DEPT_ROLE_MAP.STATUS = :STATUS ")
				.toString();
		
		/* QRY_TO_GET_EMPLOYEE_ROLE_MENU_GROUPING FROM EMPLOYEE_ROLE_MENU_GROUPING */
		public static final String QRY_TO_GET_EMPLOYEE_ROLE_MENU_GROUPING = new StringBuilder(" SELECT")
				.append(" EMP_ROLE_MENU_GROUP.MENU_ROLE_GROUP_ID AS MENU_ROLE_GROUP_ID,")
			   // .append(" EMP_ROLE_MENU_GROUP.EMPLOYEE_DEPARTMENT_MAPING_ID AS EMPLOYEE_DEPARTMENT_MAPING_ID,")
			    .append(" EMP_ROLE_MENU_GROUP.DEPARTMENT_ROLE_MAPPING_ID AS DEPARTMENT_ROLE_MAPPING_ID,")
				.append(" EMP_ROLE_MENU_GROUP.MENU_MAPPING_ID AS MENU_MAPPING_ID,")
				.append(" EMP_ROLE_MENU_GROUP.CREATED_BY AS CREATED_BY,")
				.append(" EMP_ROLE_MENU_GROUP.MODIFIED_BY AS  MODIFIED_BY,")
				.append(" EMP_ROLE_MENU_GROUP.CREATED_DATE AS  CREATED_DATE,")
				.append(" EMP_ROLE_MENU_GROUP.MODIFIED_DATE AS MODIFIED_DATE,")
				.append(" EMP_ROLE_MENU_GROUP.STATUS_ID AS STATUS_ID ")
				.append(" ,EMM.PRIORITY ")
				.append(" FROM EMPLOYEE_ROLE_MENU_GROUPING  EMP_ROLE_MENU_GROUP ")
				.toString();
		
		public static final String QRY_TO_GET_EMP_ROLE_MENU_SUBMENU_MENU_MODULE_JOIN = new StringBuilder(" JOIN EMPLOYEE_MENU_SUBMENU_MAPPING EMP_MENU_SUB_MAP ")
				.append(" ON(EMP_MENU_SUB_MAP.MENU_SUB_MENU_MAPPING_ID=EMP_ROLE_MENU_GROUP.MENU_MAPPING_ID) ")
				.append(" JOIN EMPLOYEE_MENU_MODULE EMM ON(EMM.MODULE_ID=EMP_MENU_SUB_MAP.MODULE_ID) ")
				.toString();
		
		/* QRY_TO_GET_EMPLOYEE_ROLE_MENU_GROUPING FROM EMPLOYEE_ROLE_MENU_GROUPING  */
		public static final String QRY_TO_GET_EMPLOYEE_ROLE_MENU_GROUPING_WTO_DEPARTMENT_ROLE_MAPPING_ID= new StringBuilder(" WHERE ")
			  //  .append(" EMP_ROLE_MENU_GROUP.EMPLOYEE_DEPARTMENT_MAPING_ID = :EMPLOYEE_DEPARTMENT_MAPING_ID ")
			    .append(" EMP_ROLE_MENU_GROUP.DEPARTMENT_ROLE_MAPPING_ID = :DEPARTMENT_ROLE_MAPPING_ID ")
				.append(" AND ")
				.append(" EMP_ROLE_MENU_GROUP.STATUS_ID = :STATUS_ID order by EMM.PRIORITY,MENU_ROLE_GROUP_ID ASC ")
				.toString();
		
		 /* QRY_TO_GET_EMPLOYEE_MENU_SUBMENU_MAPPING_DETAILS FROM EMPLOYEE_MENU_SUBMENU_MAPPING */
		public static final String QRY_TO_GET_EMPLOYEE_MENU_SUBMENU_MAPPING_DETAILS = new StringBuilder(" SELECT")
				.append(" EMP_MENU_SUB_MAP.MENU_SUB_MENU_MAPPING_ID AS MENU_SUB_MENU_MAPPING_ID, ")
				.append(" EMP_MENU_SUB_MAP.MODULE_ID AS MODULE_ID,")
				.append(" EMP_MENU_SUB_MAP.SUBMODULE_ID AS SUBMODULE_ID,")
				.append(" EMP_MENU_SUB_MAP.CREATED_BY AS CREATED_BY,")
				.append(" EMP_MENU_SUB_MAP.MODIFIED_BY AS MODIFIED_BY,")
				.append(" EMP_MENU_SUB_MAP.CREATED_DATE AS CREATED_DATE,")
				.append(" EMP_MENU_SUB_MAP.MODIFIED_DATE AS MODIFIED_DATE,")
				.append(" EMP_MENU_SUB_MAP.STATUS_ID AS STATUS_ID")
				.append(" FROM EMPLOYEE_MENU_SUBMENU_MAPPING EMP_MENU_SUB_MAP")
				.toString();
		
		/* QRY_TO_GET_EMPLOYEE_ROLE_MENU_GROUPING FROM EMPLOYEE_ROLE_MENU_GROUPING  */
		public static final String QRY_TO_GET_EMPLOYEE_MENU_SUBMENU_MAPPING_DETAILS_WTO_MENU_SUB_MENU_MAPPING_ID = new StringBuilder(" WHERE ")
				.append(" EMP_MENU_SUB_MAP.MENU_SUB_MENU_MAPPING_ID IN (:MENU_SUB_MENU_MAPPING_ID) ")
				.append(" AND ")
				.append(" EMP_MENU_SUB_MAP.STATUS_ID = :STATUS_ID order by  MENU_SUB_MENU_MAPPING_ID ")
				.toString();
		
		/* QRY_TO_GET_EMPLOYEE_ROLE_MENU_GROUPING FROM EMPLOYEE_ROLE_MENU_GROUPING  */
		public static final String QRY_TO_GET_EMPLOYEE_MENU_SUBMENU_MAPPING_DETAILS_WTO_MODULE_ID_SUB_MODULE_ID = new StringBuilder(" WHERE ")
		        .append(" EMP_MENU_SUB_MAP.MENU_SUB_MENU_MAPPING_ID IN (:MENU_SUB_MENU_MAPPING_ID) ")
			    .append(" AND ")
				.append(" EMP_MENU_SUB_MAP.MODULE_ID IN (:MODULE_ID) ")
				.append(" AND ")
				.append(" EMP_MENU_SUB_MAP.SUBMODULE_ID IN (:SUBMODULE_ID) ")
				.append(" AND ")
				.append(" EMP_MENU_SUB_MAP.STATUS_ID = :STATUS_ID ")
				.toString();
		
		 /* QRY_TO_GET_EMPLOYEE_MENU_MODULE FROM EMPLOYEE_MENU_MODULE */
		public static final String QRY_TO_GET_EMPLOYEE_MENU_DETAILS = new StringBuilder(" SELECT ")
				.append(" EMP_MENU_MODULE.MODULE_ID AS MODULE_ID,")
				.append(" EMP_MENU_MODULE.MODULE_NAME AS MODULE_NAME,")
				.append(" EMP_MENU_MODULE.CREATED_BY AS CREATED_BY,")
				.append(" EMP_MENU_MODULE.CREATED_DATE AS CREATED_DATE,")
				.append(" EMP_MENU_MODULE.MODIFIED_BY AS MODIFIED_BY,")
				.append(" EMP_MENU_MODULE.MODIFIED_DATE AS MODIFIED_DATE,")
				.append(" EMP_MENU_MODULE.STATUS_ID AS STATUS_ID,")
				.append(" EMP_MENU_MODULE.MODULE_ICON AS MODULE_ICON")
				.append(" FROM EMPLOYEE_MENU_MODULE EMP_MENU_MODULE ")
				.toString();
		
		/* QRY_TO_GET_EMPLOYEE_ROLE_MENU_GROUPING FROM EMPLOYEE_ROLE_MENU_GROUPING  */
		public static final String QRY_TO_GET_EMPLOYEE_MENU_DETAILS_WTO_MENU_ID = new StringBuilder(" WHERE ")
				.append(" EMP_MENU_MODULE.MODULE_ID IN (:MODULE_ID) ")
				.append(" AND ")
				.append(" EMP_MENU_MODULE.STATUS_ID = :STATUS_ID ")
				.toString();
		
		 /* QRY_TO_GET_EMPLOYEE_SUBMENU_DETAILS FROM EMPLOYEE_SUB_MENU_MODULE */
		public static final String QRY_TO_GET_EMPLOYEE_SUBMENU_DETAILS = new StringBuilder(" SELECT")
				.append(" EMP_SUB_MENU_MODULE.SUB_MODULE_ID AS SUB_MODULE_ID,")
				.append(" EMP_SUB_MENU_MODULE.SUB_MODULE_NAME AS SUB_MODULE_NAME,")
				.append(" EMP_SUB_MENU_MODULE.CREATED_BY AS CREATED_BY,")
				.append(" EMP_SUB_MENU_MODULE.CREATED_DATE AS CREATED_DATE,")
				.append(" EMP_SUB_MENU_MODULE.MODIFIED_BY AS MODIFIED_BY,")
				.append(" EMP_SUB_MENU_MODULE.MODIFIED_DATE AS MODIFIED_DATE,")
				.append(" EMP_SUB_MENU_MODULE.STATUS_ID AS STATUS_ID,")
				.append(" EMP_SUB_MENU_MODULE.PAGE_LINK AS PAGE_LINK,")
				.append(" EMP_SUB_MENU_MODULE.DEMO_VEDIOS_LINK AS DEMO_VEDIOS_LINK")
				.append(" FROM EMPLOYEE_SUBMENU_MODULE EMP_SUB_MENU_MODULE")
			
				.toString();
		
		/* QRY_TO_GET_EMPLOYEE_SUBMENU_DETAILS FROM EMPLOYEE_SUB_MENU_MODULE  */
		public static final String QRY_TO_GET_EMPLOYEE_SUBMENU_DETAILS_WTO_SUB_MENU_ID = new StringBuilder(" WHERE ")
				.append(" EMP_SUB_MENU_MODULE.SUB_MODULE_ID IN (:SUB_MODULE_ID) ")
				.append(" AND ")
				.append(" EMP_SUB_MENU_MODULE.STATUS_ID = :STATUS_ID ")
				.toString();
		
		 /* QRY_TO_GET_EMPLOYEE_SUBMENU_SITE_MAPPING FROM EMPLOYEE_SUBMENU_SITE_MAPPING */
		public static final String QRY_TO_GET_EMPLOYEE_SUBMENU_SITE_MAPPING_DETAILS = new StringBuilder(" SELECT")
				.append("  EMP_SUB_MENU_SITE_MAP.SUBMENU_SITE_MAPPING_ID AS SUBMENU_SITE_MAPPING_ID,")
				.append("  EMP_SUB_MENU_SITE_MAP.MENU_SUB_MENU_MAPPING_ID AS MENU_SUB_MENU_MAPPING_ID,")
				.append("  EMP_SUB_MENU_SITE_MAP.SITE_ID AS SITE_ID,")
				.append("  EMP_SUB_MENU_SITE_MAP.CREATED_BY AS CREATED_BY,")
				.append("  EMP_SUB_MENU_SITE_MAP.MODIFIED_BY AS MODIFIED_BY,")
				.append("  EMP_SUB_MENU_SITE_MAP.CREATED_DATE AS CREATED_DATE,")
				.append("  EMP_SUB_MENU_SITE_MAP.MODIFIED_DATE AS MODIFIED_DATE,")
				.append("  EMP_SUB_MENU_SITE_MAP.STATUS_ID AS STATUS_ID")
				.append("  FROM EMPLOYEE_SUBMENU_SITE_MAPPING EMP_SUB_MENU_SITE_MAP")
				.toString();
		
		/* QRY_TO_GET_EMPLOYEE_SUBMENU_SITE_MAPPING FROM EMPLOYEE_SUBMENU_SITE_MAPPING  */
		public static final String QRY_TO_GET_EMPLOYEE_SUBMENU_SITE_MAPPING_DETAILS_WTO_MENU_SUB_MENU_MAPPING_ID = new StringBuilder(" WHERE ")
				.append(" EMP_SUB_MENU_SITE_MAP.MENU_SUB_MENU_MAPPING_ID IN (:MENU_SUB_MENU_MAPPING_ID) ")
				.append(" AND ")
				.append(" EMP_SUB_MENU_SITE_MAP.STATUS_ID = :STATUS_ID ")
				.toString();
		
		 /* QRY_TO_GET_SITE_DETAILS FROM SITE */
		public static final String QRY_TO_GET_SITE_DETAILS = new StringBuilder(" SELECT")
				.append("  SITE.SITE_ID AS SITE_ID, ")
				.append("  SITE.NAME AS NAME, ")
				.append("  SITE.STATUS_ID AS STATUS_ID, ")
				.append("  SITE.CREATED_DATE AS CREATED_DATE, ")
				.append("  SITE.IMAGE_LOCATION AS IMAGE_LOCATION, ")
				.append("  SITE.MODIFIED_DATE AS MODIFIED_DATE, ")
				.append("  SITE.REFERMESSAGE AS REFERMESSAGE, ")
				.append("  SITE.ADDRESS_ID AS ADDRESS_ID, ")
				.append("  SITE.LANDMARK_IMAGE AS LANDMARK_IMAGE, ")
				.append("  SITE.PROJECT_AREA AS PROJECT_AREA, ")
				.append("  SITE.NO_OF_UNITS AS NO_OF_UNITS, ")
				.append("  SITE.RERA AS RERA, ")
			  //.append("  SITE.DESCRIPTION AS DESCRIPTION, ")
				.append("  SITE.OVERVIEW_IMAGES AS OVERVIEW_IMAGES, ")
				.append("  SITE.MASTERPLAN_IMAGE AS MASTERPLAN_IMAGE, ")
				.append("  SITE.REFERER_DESCRIPTION AS REFERER_DESCRIPTION ")
				.append("  FROM SITE SITE ")
				.toString();
		
		 /* QRY_TO_GET_SITE_DETAILS FROM SITE */
		public static final String QRY_TO_GET_SITE_DETAILS_WTO_SITE_ID = new StringBuilder(" WHERE ")
				//.append(" SITE.SITE_ID = :SITE_ID ")
				//.append(" AND ")
				.append(" SITE.STATUS_ID IN (:STATUS_ID) ")
				.toString();
		
		 /* QRY_TO_GET_ALL_SITE_DETAILS FROM SITE */
		public static final String QRY_TO_GET_ALL_SITE_DETAILS = new StringBuilder(" SELECT ")
				.append(" S.SITE_ID AS SITE_ID, ")
				.append(" S.NAME AS NAME ")
				.append(" FROM SITE S ")
				.toString();
		
		 /* QRY_TO_GET_EMPLOYEE_ROLES FROM EMPLOYEE_ROLES */
		public static final String QRY_TO_GET_EMPLOYEE_ROLES = new StringBuilder(" SELECT")
				.append("  EMP_ROLE.ROLE_ID AS ROLE_ID,")
				.append("  EMP_ROLE.NAME AS NAME,")
				.append("  EMP_ROLE.DESCRIPTION AS DESCRIPTION,")
				.append("  EMP_ROLE.STATUS_ID AS STATUS_ID,")
				.append("  EMP_ROLE.CREATED_BY AS CREATED_BY,")
				.append("  EMP_ROLE.CREATED_DATE AS CREATED_DATE,")
				.append("  EMP_ROLE.MODIFIED_BY AS MODIFIED_BY,")
				.append("  EMP_ROLE.MODIFIED_DATE AS MODIFIED_DATE")
				.append("  FROM EMPLOYEE_ROLES EMP_ROLE ")
				.toString();
		
		/* QRY_TO_GET_EMPLOYEE_ROLES FROM EMPLOYEE_ROLES   */
		public static final String QRY_TO_GET_EMPLOYEE_ROLES_WTO_ROLE_ID = new StringBuilder(" WHERE ")
				.append(" EMP_ROLE.ROLE_ID = :ROLE_ID ")
				.append(" AND ")
				.append(" EMP_ROLE.STATUS_ID = :STATUS_ID ")
				.toString();
		
	/* QRY_TO_GET_TICKET_DETAILS FROM TICKET */
	public static final String QRY_TO_GET_TICKET_DETAILS = new StringBuilder(" SELECT ")
			    .append("T.TICKET_ID AS TICKET_ID,")
				.append("T.TITLE AS TITLE,")
				.append("T.CREATED_DATE AS CREATED_DATE,")
				.append("T.MODIFIED_DATE AS MODIFIED_DATE,")
				.append("T.STATUS AS STATUS,")
				.append("T.TICKET_TYPE_DETAILS_ID AS TICKET_TYPE_DETAILS_ID,")
				.append("T.DEPARTMENT_ID AS DEPARTMENT_ID,")
				.append("T.ASSIGNMENT_TO AS ASSIGNMENT_TO,")
				.append("T.ASSIGNED_BY AS ASSIGNED_BY,")
				.append("T.ASSIGNED_DATE  AS ASSIGNED_DATE,")
				.append("T.BOOKING_ID AS BOOKING_ID,")
				.append("T.ESTIMATED_RESOLVED_DATE AS ESTIMATED_RESOLVED_DATE,")
				.append("T.ESTIMATED_RESOLVED_DATE_STATUS AS ESTIMATED_RESOLVED_DATE_STATUS,")
				.append("T.EXT_ESTIMATED_RESOLVED_DATE  AS EXT_ESTIMATED_RESOLVED_DATE,")
				.append("T.RESOLVED_DATE AS RESOLVED_DATE,")
				.append("T.STATUS_UPDATED_BY AS STATUS_UPDATED_BY,")
				.append("T.STATUS_UPDATE_TYPE AS STATUS_UPDATE_TYPE,")
				.append("T.DOCUMENT_LOCATION AS DOCUMENT_LOCATION,")
				.append("T.TICKET_TYPE_ID AS TICKET_TYPE_ID,")
				.append("T.TICKET_STATUS AS TICKET_STATUS, ")
				.append("T.DESCRIPTION AS DESCRIPTION,")
				.append("T.INVIDUAL_TICKET_STATUS AS DEPARTMENT_TICKET_STATUS, ")
				.append("T.RATING AS RATING, ")
				.append("T.FEEDBACK_DESC AS FEEDBACK_DESC, ")
				.append("T.TICKET_TYPE_CHANGE_REQUEST AS TICKET_TYPE_CHANGE_REQUEST, ")
				.append(" NVL(T.COMPLAINT_STATUS,86) AS COMPLAINT_STATUS, ")
				.append(" T.COMPLAINT_CREATED_BY, ")
				.append(" T.COMPLAINT_CREATED_DATE, ")
				.append(" T.OLD_BOOKING_ID ")
				.append("FROM TICKET T ")
				.toString();
	
	/* QRY_TO_GET_TICKET_DETAILS COUNT FROM TICKET */
	public static final String QRY_TO_GET_TICKET_COUNT = new StringBuilder(" SELECT ")
		    .append("count(*) ")
			.append("FROM TICKET T ")
			.toString();
	
	/* QRY_TO_GET_TICKET_DETAILS FROM TICKET WTO SITE AND DEPT */
	public static final String QRY_TO_GET_TICKET_DETAILS_WTO_SITE = new StringBuilder(" INNER JOIN  ")
			.append("FLAT_BOOKING FB ")
			.append("ON T.BOOKING_ID = FB.FLAT_BOOK_ID ")
			.append("INNER JOIN FLAT F ")
			.append("ON FB.FLAT_ID = F.FLAT_ID ")
			.append("INNER JOIN FLOOR_DETAILS FD ")
			.append("ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID ")
			.append("INNER JOIN FLOOR FL ")
			.append("ON FL.FLOOR_ID = FD.FLOOR_ID ")
			.append("INNER JOIN BLOCK_DETAILS BD ")
			.append("ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID ")
			.append("INNER JOIN BLOCK BL ")
			.append("ON BL.BLOCK_ID = BD.BLOCK_ID ")
			.append("INNER JOIN SITE S ")
			.append("ON BD.SITE_ID = S.SITE_ID AND S.SITE_ID IN (:SITE_ID) ")
			.toString();
	
	/* QRY_TO_GET_TICKET_DETAILS_WTO_SITE_WITHOUT_SITE_ID */
	public static final String QRY_TO_GET_TICKET_DETAILS_WTO_SITE_WITHOUT_SITE_ID = new StringBuilder(" INNER JOIN  ")
			.append("FLAT_BOOKING FB ")
			.append("ON T.BOOKING_ID = FB.FLAT_BOOK_ID ")
			.append(" INNER JOIN ")
			.append(" CUSTOMER CUST ")
			.append(" ON CUST.CUST_ID=FB.CUST_ID ")
			.append("INNER JOIN FLAT F ")
			.append("ON FB.FLAT_ID = F.FLAT_ID ")
			.append("INNER JOIN FLOOR_DETAILS FD ")
			.append("ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID ")
			.append("INNER JOIN FLOOR FL ")
			.append("ON FL.FLOOR_ID = FD.FLOOR_ID ")
			.append("INNER JOIN BLOCK_DETAILS BD ")
			.append("ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID ")
			.append("INNER JOIN BLOCK BL ")
			.append("ON BL.BLOCK_ID = BD.BLOCK_ID ")
			.append("INNER JOIN SITE S ")
			.append("ON BD.SITE_ID = S.SITE_ID ")
			.toString();
	
	/* QRY_TO_GET_TICKET_DETAILS FROM TICKET WTO SITE AND DEPT */
	public static final String QRY_TO_GET_TICKET_DETAILS_WTO_CHANGE_TICKETTYPE_REQUEST = new StringBuilder(" INNER JOIN  ")
			.append(" CHANGE_TICKET_TYPE_REQUEST CTTR  ") 
			.append(" ON CTTR.TICKET_ID = T.TICKET_ID  ")
			.toString();
	
	/* QRY_TO_GET_TICKET_DETAILS_WTO_TICKET_TYPE_DETAILS FROM TICKET WTO TICKET_TYPE_DETAILS */
	public static final String QRY_TO_GET_TICKET_DETAILS_WTO_TICKET_TYPE_DETAILS = new StringBuilder(" INNER JOIN  ")
			.append("TICKET_TYPE_DETAILS TYD ")
			.append("ON T.TICKET_TYPE_DETAILS_ID = TYD.TICKET_TYPE_DETAILS_ID ")
			.toString();
	
	/* QRY_TO_GET_TICKET_TYPE_DETAILS_WTO_DEPARTMENT FROM  TICKET_TYPE_DETAILS */
	public static final String QRY_TO_GET_TICKET_TYPE_DETAILS_WTO_DEPARTMENT = new StringBuilder(" WHERE ")
			.append(" ((TYD.DEPARTMENT_ID = :DEPARTMENT_ID) OR (T.DEPARTMENT_ID = :DEPARTMENT_ID))  ")
			.append(" AND T.STATUS = :STATUS ")
			//.append(" AND (T.TICKET_STATUS <> 11 or T.INVIDUAL_TICKET_STATUS <> 11 ) ")
			.toString();
	
	
	/* QRY_TO_GET_TICKET_ESCALATION FROM TICKET_ESCALATION */
	public static final String QRY_TO_GET_TICKET_ESCALATION = new StringBuilder(" SELECT ")
		    .append("TE.TICKET_ESCALATION_ID AS  TICKET_ESCALATION_ID,")
			.append("TE.TICKET_ID AS  TICKET_ID,")
			.append("TE.ESCALATION_DATE AS  ESCALATION_DATE,")
			.append("TE.ESCALATION_BY_ID AS  ESCALATION_BY_ID,")
			.append("TE.ESCALATION_BY AS  ESCALATION_BY,")
			//.append("TE.ESCALATION_TO AS  ESCALATION_TO,")
			.append("TE.COMMENTS AS  COMMENTS,")
			.append("TE.STATUS AS STATUS,")
			.append("TE.MAIL_OTP_APPROVAL AS MAIL_OTP_APPROVAL, ")
			.append("TE.CREATED_DATE AS CREATED_DATE,")
			.append("TE.MODIFIED_DATE AS MODIFIED_DATE,")
			.append("TE.ACTION_EMP_ID AS ACTION_EMP_ID,")
			.append("TE.TICKET_ESC_LVL_MAP_ID AS TICKET_ESC_LVL_MAP_ID,")
			.append("TE.ASSIGNED_DATE AS ASSIGNED_DATE ")
			.append("FROM TICKET_ESCALATION TE ")
			.toString();
	
	/* QRY_TO_GET_TICKET_ESC_BY_EMPLOYEE_ID  */
	 public static final String QRY_TO_GET_TICKET_ESC_BY_EMPLOYEE_ID = new StringBuilder(" SELECT ")
					  .append(" DISTINCT   ")
					  .append(" TE.TICKET_ESCALATION_ID AS  TICKET_ESCALATION_ID,   ")
					  .append(" TE.TICKET_ID AS  TICKET_ID,   ")
					  .append(" TE.ESCALATION_DATE AS  ESCALATION_DATE,   ")
					  .append(" TE.ESCALATION_BY_ID AS  ESCALATION_BY_ID,   ")
					  .append(" TE.ESCALATION_BY AS  ESCALATION_BY,   ")
					 // .append(" TE.ESCALATION_TO AS  ESCALATION_TO,   ")
					  .append(" TE.COMMENTS AS  COMMENTS,   ")
					  .append(" TE.STATUS AS STATUS,   ")
					  .append(" TE.MAIL_OTP_APPROVAL AS MAIL_OTP_APPROVAL,    ")
					  .append(" TE.CREATED_DATE AS CREATED_DATE,   ")
					  .append(" TE.MODIFIED_DATE AS MODIFIED_DATE,   ")
					  .append(" TE.ACTION_EMP_ID AS ACTION_EMP_ID,   ")
					  .append(" TE.TICKET_ESC_LVL_MAP_ID AS TICKET_ESC_LVL_MAP_ID,   ")
					  .append(" TE.ASSIGNED_DATE AS ASSIGNED_DATE    ")
					  .append(" FROM TICKET_ESCALATION TE    ")
					  .append(" INNER JOIN TICKET_ESCA_LVL_MAP TELM   ")
					  .append(" ON TE.TICKET_ESC_LVL_MAP_ID = TELM.ID AND TELM.STATUS_ID = :STATUS_ID AND TE.STATUS = :STATUS_ID ")
					  .append(" INNER JOIN TICKET_ESC_LEVEL_EMP_MAP TELEM   ")
					  .append(" ON TELEM.TICKET_ESC_LVL_MAP_ID = TELM.ID   ")
					  .append(" INNER JOIN TICKET T    ")
					  .append(" ON T.TICKET_ID = TE.TICKET_ID AND T.STATUS = 6 AND T.TICKET_STATUS <> '11'   ")
					  .append(" WHERE TELEM.EMPLOYEE_ID = :EMPLOYEE_ID    ")
					  .append(" AND TELEM.STATUS_ID = :STATUS_ID   ")
					  .toString();
	
	
	/* QRY_TO_GET_TICKET_DETAILS COUNT FROM TICKET */
	public static final String QRY_TO_GET_TICKET_ESCALATION_COUNT = new StringBuilder(" SELECT ")
		      .append(" count(*) ")
			  .append(" FROM TICKET_ESCALATION TE ")
			  .append(" INNER JOIN TICKET_ESCA_LVL_MAP TELM   ")
			  .append(" ON TE.TICKET_ESC_LVL_MAP_ID = TELM.ID AND TELM.STATUS_ID = :STATUS_ID AND TE.STATUS = :STATUS_ID  ")
			  .append(" INNER JOIN TICKET_ESC_LEVEL_EMP_MAP TELEM   ")
			  .append(" ON TELEM.TICKET_ESC_LVL_MAP_ID = TELM.ID   ")
			  .append(" INNER JOIN TICKET T    ")
			  .append(" ON T.TICKET_ID = TE.TICKET_ID AND T.STATUS = 6 AND T.TICKET_STATUS <> '11'   ")
			  .append(" WHERE TELEM.EMPLOYEE_ID = :EMPLOYEE_ID    ")
			  .append(" AND TELEM.STATUS_ID = :STATUS_ID   ")
			  .toString();
	
	/* QRY_TO_INSER_TICKET_ESCALATION  FROM TICKET_ESCALATION  */
	public static final String QRY_TO_INSER_TICKET_ESCALATION = new StringBuilder(" INSERT ")
			.append(" INTO TICKET_ESCALATION ")
			.append("(")
			.append("TICKET_ESCALATION_ID,")
			.append("TICKET_ID ,")
			.append("ESCALATION_DATE ,")
			.append("ESCALATION_BY_ID,")
			.append("ESCALATION_BY,")
			//.append("ESCALATION_TO,")
			.append("COMMENTS,")
			.append("STATUS ,")
			.append("CREATED_DATE,")
			.append("MAIL_OTP_APPROVAL,")
			.append("MODIFIED_DATE,")
			.append("ACTION_EMP_ID, ")
			.append("TICKET_ESC_LVL_MAP_ID, ")
			.append("ASSIGNED_DATE ")
			.append(" )")
			.append("VALUES(")
	        .append("TICKET_ESCALATION_SEQ.NEXTVAL,")
	        .append(":ticketId,")
	        .append(":escalationDate,")
	       // .append("systimestamp + INTERVAL '1' day ,")
	        .append(":escalationById,")
	        .append(":escalationBy,")
	       // .append(":escalationTo,")
	        .append(":comments,")
	        .append(":status,")
	        .append(":createdDate,")
	        .append(":mailOtpApproval,")
	        .append(":modifiedDate,")
	        .append(":actionEmployeeId,")
	        .append(":ticketEscalationLevelMappingId,")
	        .append(":assignedDate ")
	        .append(")")
	        .toString(); 
	
	
	/* QRY_TO_GET_TICKET_TYPE_DETAILS FROM TICKET_TYPE_DETAILS */
	public static final String QRY_TO_GET_TICKET_TYPE_DETAILS = new StringBuilder(" SELECT ")
			.append("TD.TICKET_TYPE_DETAILS_ID AS TICKET_TYPE_DETAILS_ID,")
			.append("TD.SITE_ID AS SITE_ID,")
			.append("TD.TICKET_TYPE_ID AS TICKET_TYPE_ID,")
			.append("TD.DEPARTMENT_ID AS DEPARTMENT_ID,")
			.append("TD.EMPLOYEE_DETAILS_ID AS EMPLOYEE_DETAILS_ID,")
		//	.append("TD.TICKET_ESC_REC_EMP_DET_ID AS TICKET_ESC_REC_EMP_DET_ID,")    
		//	.append("TD.SYS_ESC_TICK_ASG_EMP_DET_ID AS SYS_ESC_TICK_ASG_EMP_DET_ID,") 
			.append("TD.STATUS AS STATUS,")
			.append("TD.UPDATED_DATE AS UPDATED_DATE,")
			.append("TD.CREATED_DATE  AS CREATED_DATE ")
			.append("FROM TICKET_TYPE_DETAILS TD ")
			.toString();

	/* QRY_TO_GET_TICKET_ESCA_EXT_APPROVAL_LEVAL FROM TICKET_ESCA_EXT_APPROVAL_LEVAL */
	public static final String QRY_TO_GET_TICKET_ESCA_EXT_APPROVAL_LEVAL = new StringBuilder(" SELECT ")
			.append("TEXTA.ID AS ID,")
			.append("TEXTA.TICKET_TYPE_ID AS TICKET_TYPE_ID,")
			//.append("TEXTA.APPROVER_ID AS APPROVER_ID,")
			//.append("TEXTA.NO_OF_DAYS AS NO_OF_DAYS,")
			.append("TEXTA.TYPE AS TYPE,")
			.append("TEXTA.STATUS AS STATUS,")
			.append("TEXTA.CREATED_DATE AS CREATED_DATE,")
			.append("TEXTA.MODIFIED_DATE AS MODIFIED_DATE ")
			.append("FROM TICKET_ESCA_EXT_APPROVAL_LEVAL  TEXTA ")
			.toString();
	
	
	/* QRY_TO_GET_TICKET_ESCA_EXT_APPROVAL_LEVAL FROM TICKET_ESCA_EXT_APPROVAL_LEVAL */
	public static final String QRY_TO_UPDATE_TICKET_ESCA_EXT_APPROVAL_STATUS = new StringBuilder(" UPDATE  TICKET_ESCA_EXT_APPROVAL ")
			.append("SET ")
			.append("STATUS = :A_STATUS, ")
			.append("MODIFIED_DATE = :MODIFIED_DATE ")
			.append("WHERE ")
			.append("TICKET_ID = :TICKET_ID ")
			.append("AND STATUS = :P_STATUS ")
			.toString();
	
	public static final String QRY_TO_GET_TICKET_ESCA_EXT_APPROVAL_LEVAL_WTO_TICKET_TYPE_ID_TYPE_NO_OF_DAYS_GREATER_THAN_2 = new StringBuilder(" WHERE ")
			.append("TEXTA.TICKET_TYPE_ID = :TICKET_TYPE_ID AND TEXTA.TYPE = :TYPE AND TEXTA.NO_OF_DAYS > :NO_OF_DAYS AND TEXTA.SITE_ID = :SITE_ID AND TEXTA.STATUS = :STATUS ")
			.toString();
	
	public static final String QRY_TO_GET_TICKET_ESCA_EXT_APPROVAL_LEVAL_WTO_TICKET_TYPE_ID_TYPE_NO_OF_DAYS_LESS_THAN_2 = new StringBuilder(" WHERE ")
			.append("TEXTA.TICKET_TYPE_ID = :TICKET_TYPE_ID AND TEXTA.TYPE = :TYPE AND TEXTA.NO_OF_DAYS <= :NO_OF_DAYS AND  TEXTA.SITE_ID = :SITE_ID AND TEXTA.STATUS = :STATUS ")
			.toString();
	
	 public static final String QRY_TO_GET_TICKET_ESCA_EXT_APPROVAL_LEVAL_WTO_APPROVER_ID = new StringBuilder(" WHERE ")
			 .append("TEXTA.APPROVER_ID = :APPROVER_ID AND  TEXTA.STATUS = :STATUS ")
			 .toString();
	
	/* QRY_TO_GET_EMPLOYEE_DETAILS FROM EMPLOYEE_DETAILS */
	public static final String QRY_TO_GET_EMPLOYEE_DETAILS = new StringBuilder(" SELECT ")
			.append("ED.EMP_DETAILS_ID AS  EMP_DETAILS_ID, ")
			//.append("ED.EMP_NAME AS EMP_NAME,")
			.append("ED.EMP_DESIGNATION AS EMP_DESIGNATION,")
			.append("ED.CREATED_BY  AS  CREATED_BY,")
			.append("ED.CREATED_DATE AS  CREATED_DATE,")
			.append("ED.MODIFIED_BY AS  MODIFIED_BY,")
			.append("ED.MODIFIED_DATE    AS  MODIFIED_DATE,")
			.append("ED.STATUS_ID  AS  STATUS_ID,")
			//.append("ED.EMAIL AS  EMAIL,")
			.append("ED.DEPT_ID AS  DEPT_ID,")
			//.append("ED.MOBILE_NO AS  MOBILE_NO,")
			//.append("ED.USER_PROFILE AS  USER_PROFILE,")
			.append("ED.SITE_ID  AS  SITE_ID,")
			.append("ED.EMPLOYEE_ID  AS  EMPLOYEE_ID ")
			.append("FROM EMPLOYEE_DETAILS  ED")
			.toString();
	
	/* QRY_TO_GET_EMPLOYEE_DETAILS FROM EMPLOYEE */
	public static final String QRY_TO_GET_EMPLOYEE  = new StringBuilder("SELECT ")
			.append("EMP .CS_EMP_ID AS CS_EMP_ID,")
			.append("EMP .EMP_ID AS  EMP_ID,")
			.append("EMP .FIRST_NAME AS FIRST_NAME,")
			.append("EMP .LAST_NAME AS LAST_NAME,")
			.append("CONCAT(CONCAT(EMP .FIRST_NAME,' '),EMP.LAST_NAME) AS EMP_NAME,")
			.append("EMP .EMAIL AS EMAIL,")
			.append("EMP .STATUS_ID AS STATUS_ID,")
			.append("EMP .CREATED_DATE AS CREATED_DATE,")
			.append("EMP .MODIFIED_DATE AS  MODIFIED_DATE,")
			.append("EMP .MOBILE_NO AS MOBILE_NO,")
			.append("EMP .USER_PROFILE AS USER_PROFILE ")
			.append(" ,EMP .SALESFORCE_EMP_NAME AS SALESFORCE_EMP_NAME ")
			.append("FROM EMPLOYEE EMP ")
            .toString();
	
	/* QRY_TO_GET_EMPLOYEE_DETAILS FROM EMPLOYEE */
	public static final String QRY_TO_GET_EMP_JOIN_EMP_DET  = new StringBuilder("SELECT ")
	.append("EMP.CS_EMP_ID AS CS_EMP_ID,")
	.append("EMP.EMP_ID AS  EMP_ID,")
	.append("EMP.FIRST_NAME AS FIRST_NAME,")
	.append("EMP.LAST_NAME AS LAST_NAME,")
	.append("CONCAT(CONCAT(EMP.FIRST_NAME,' '),EMP.LAST_NAME) AS EMP_NAME,")
	.append("EMP.EMAIL AS EMAIL,")
	.append("EMP.STATUS_ID AS STATUS_ID,")
	.append("EMP.CREATED_DATE AS CREATED_DATE,")
	.append("EMP.MODIFIED_DATE AS  MODIFIED_DATE,")
	.append("EMP.MOBILE_NO AS MOBILE_NO,")
	.append("EMP.USER_PROFILE AS USER_PROFILE,")
	.append("ED.DEPT_ID AS DEPT_ID,")
	.append("ED.EMP_DESIGNATION AS EMP_DESIGNATION,")
	.append("ED.SITE_ID AS SITE_ID")
	.append(" FROM EMPLOYEE EMP INNER JOIN EMPLOYEE_DETAILS ED ")
	.append(" ON ED.EMPLOYEE_ID=EMP.EMP_ID")
	.toString();
	
	public static final String QRY_TO_GET_CHANGE_TICKET_OWNER_DROPDOWN = new StringBuilder(" SELECT ")    
            .append(" DISTINCT")
            .append(" ED.EMP_DETAILS_ID AS EMP_DETAILS_ID,")
            .append(" ED.EMP_DESIGNATION AS EMP_DESIGNATION,")
            .append(" ED.CREATED_BY AS CREATED_BY ,")
            .append(" ED.CREATED_DATE AS CREATED_DATE ,")
            .append(" ED.MODIFIED_BY AS MODIFIED_BY,")
            .append(" ED.MODIFIED_DATE AS MODIFIED_DATE,")
            .append(" ED.STATUS_ID AS STATUS_ID,")
            .append(" ED.DEPT_ID AS DEPT_ID,") 
            .append(" ED.SITE_ID AS SITE_ID ,")
            .append(" ED.EMPLOYEE_ID AS EMPLOYEE_ID,")
            .append(" CONCAT(CONCAT(CONCAT(CONCAT(E.FIRST_NAME,''),E.LAST_NAME),'-' ), ED.EMP_DESIGNATION) AS EMP_NAME_DESG,")
            .append(" CONCAT(CONCAT(E.FIRST_NAME,' '),E.LAST_NAME) AS EMP_NAME")
            .append(" FROM EMPLOYEE_DETAILS ED ")
            .append(" INNER JOIN EMPLOYEE E")
            .append(" ON ED.EMPLOYEE_ID = E.EMP_ID AND E.STATUS_ID = :STATUS_ID")
            .append(" INNER JOIN TICKET_OWNERSHIP TKT_OWN")
            .append(" ON TKT_OWN.EMP_DET_ID = ED.EMP_DETAILS_ID AND TKT_OWN.STATUS_ID = :STATUS_ID AND ED.STATUS_ID = :STATUS_ID ")
            .append(" INNER JOIN TICKET_ESCA_EXT_APPROVAL_LEVAL TEEAL")
            .append(" ON TKT_OWN.TICKET_ESC_EXT_APR_LVL_ID = TEEAL.ID AND TEEAL.STATUS = :STATUS_ID")
            .append(" WHERE TEEAL.TICKET_TYPE_ID IN (SELECT TICKET_TYPE_ID FROM TICKET T WHERE T.TICKET_ID IN (:TICKET_IDS)) AND TEEAL.SITE_ID IN ((")
            .append(" SELECT ")
            .append(" S.SITE_ID AS SITE_ID")
            .append(" FROM  SITE S")
            .append(" JOIN BLOCK_DETAILS BD")
            .append(" ON(BD.SITE_ID = S.SITE_ID)")
            .append(" JOIN FLOOR_DETAILS FD")
            .append(" ON(BD.BLOCK_DET_ID=FD.BLOCK_DET_ID)")
            .append(" JOIN  FLAT F ")
            .append(" ON(F.FLOOR_DET_ID=FD.FLOOR_DET_ID)")
            .append(" JOIN ")
            .append(" FLAT_BOOKING FB")
            .append(" ON(F.FLAT_ID=FB.FLAT_ID)")
            .append(" INNER JOIN TICKET T")
            .append(" ON (T.BOOKING_ID = FB.FLAT_BOOK_ID)")
            .append(" WHERE T.TICKET_ID IN (:TICKET_IDS)")
            .append(" ))")
            .toString();

	
	/* QRY_TO_GET_TICKET_ESCALATION_WRT_TICKET_ID  */
	public static final String QRY_TO_GET_TICKET_ESCALATION_JOIN_TICKET_TICKET_ID = new StringBuilder(" SELECT ")
			.append("TE.TICKET_ESCALATION_ID AS TICKET_ESCALATION_ID ")
			.append("FROM TICKET T ")
			.append("INNER JOIN TICKET_ESCALATION TE ")
			.append("ON TE.TICKET_ID = T.TICKET_ID ")
			.append("WHERE TE.STATUS = :STATUS  AND T.STATUS = :STATUS AND (T.TICKET_STATUS <> '11' OR T.INVIDUAL_TICKET_STATUS <> '11')  ")
			.append("AND ((24 * ( to_date(to_char(SYSTIMESTAMP,'DD-MM-YY hh12:mi'), 'DD-MM-YY hh12:mi') -  to_date(to_char(T.ESTIMATED_RESOLVED_DATE,'DD-MM-YY hh12:mi'), 'DD-MM-YY hh12:mi'))) BETWEEN  :START AND :END) ")
			.append("ORDER BY TICKET_ESCALATION_ID  ")
			.toString();
	
	/* QRY_TO_GET_EMPLOYEE_JOIN_EMPLOYEE_DETAILS FROM EMPLOYEE and EMPLOYEE_DETAILS */
	public static final String QRY_TO_GET_EMPLOYEE_JOIN_EMPLOYEE_DETAILS  = new StringBuilder("SELECT ")
			.append(" EMP .CS_EMP_ID AS CS_EMP_ID,  ")                            
			.append(" EMP .EMP_ID AS  EMPLOYEE_ID,  ")                                    
			.append(" EMP .FIRST_NAME AS FIRST_NAME, ")                              
			.append(" EMP .LAST_NAME AS LAST_NAME, ")                                
			.append(" CONCAT(CONCAT(CONCAT(CONCAT(EMP .FIRST_NAME,''),EMP.LAST_NAME),'-'),ED.EMP_DESIGNATION) AS EMP_NAME,")
			.append(" EMP .EMAIL AS EMAIL,")                                      
			.append(" EMP .STATUS_ID AS STATUS_ID,")                                                    
			.append(" EMP .MOBILE_NO AS MOBILE_NO,")                              
			.append(" EMP .USER_PROFILE AS USER_PROFILE,")
			.append(" ED.EMP_DETAILS_ID AS EMP_DETAILS_ID,")
			.append(" ED.DEPT_ID AS DEPT_ID,")
			.append(" ED.EMP_DESIGNATION AS EMP_DESIGNATION,")
			.append(" ED.SITE_ID AS SITE_ID ")
			.append(" FROM EMPLOYEE EMP ")
			.append(" INNER JOIN EMPLOYEE_DETAILS ED ")
			.append(" ON EMP.EMP_ID = ED.EMPLOYEE_ID  ")
			.append(" WHERE EMP.STATUS_ID = :STATUS_ID AND  ED.STATUS_ID = :STATUS_ID ORDER BY EMP_ID ")
			.toString();
	
	/* QRY_TO_GET_TICKET_COMMENTS  FROM TICKET_COMMENTS  */
	public static final String QRY_TO_GET_TICKET_COMMENTS = new StringBuilder(" SELECT ")
			.append("TC.TICKET_COMMENTS_ID  AS TICKET_COMMENTS_ID,")
			.append("TC.TICKET_ID  AS TICKET_ID,")
			.append("TC.DEPARTMENT_ID  AS DEPARTMENT_ID,")
			.append("TC.FROM_ID  AS FROM_ID,")
			.append("TC.FROM_TYPE  AS FROM_TYPE,")
			.append("TC.TO_ID  AS TO_ID,")
			.append("TC.TO_TYPE  AS TO_TYPE,")
			.append("TC.MESSAGE  AS MESSAGE,")
			.append("TC.COMMENTS_DATE  AS COMMENTS_DATE,")
			.append("TC.VISIBLE_TYPE  AS VISIBLE_TYPE,")
			.append("TC.DOCUMENT_LOCATION  AS DOCUMENT_LOCATION,")
			.append("TC.TICKET_CONVERSATION_DOC_ID  AS TICKET_CONVERSATION_DOC_ID,")
			.append("TC.FROM_DEPT_ID  AS FROM_DEPT_ID,")
			.append("TC.TO_DEPT_ID  AS TO_DEPT_ID,")
			.append("TC.STATUS_ID  AS STATUS_ID, ")
			.append("CASE ")
			.append("WHEN TC.FROM_TYPE=8 THEN ")
			.append("(SELECT EMP.FIRST_NAME FROM EMPLOYEE EMP ")
			.append("WHERE EMP.STATUS_ID=:STATUS_ID AND EMP.EMP_ID=TC.FROM_ID) ")
			.append("WHEN TC.FROM_TYPE=7 THEN                   ")
			.append("(SELECT NAME_PREFIX ||' ' || FIRST_NAME FROM CUSTOMER WHERE CUST_ID=TC.FROM_ID)")
			.append("END AS NAME ")
			.append("FROM TICKET_CONVERSATION TC")
			.toString();
	
	/* QRY_TO_GET_CUSTOMER_PROPERTY_DETAILS  FROM FLAT_BOOKING,FLAT,FLOOR,BLOCK,SITE  */
	public static final String QRY_TO_GET_CUSTOMER_PROPERTY_DETAILS = new StringBuilder(" SELECT ")
			.append("(SELECT  CUST.CUST_ID  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS CUST_ID,")
			.append("(SELECT  CUST.NAME_PREFIX ||' '|| CUST.FIRST_NAME ||' '|| CUST.LAST_NAME  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS CUST_NAME,")
			.append("(SELECT  CUST.PANCARD  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS PANCARD, ")
			
			.append("(SELECT  DISTINCT  CASE WHEN COUNT(AR.CUST_ID)>0 THEN 'Registered' ELSE 'Not Registered' END AS APP_STATUS FROM CUSTOMER CUST INNER JOIN APP_REGISTRATION AR ON CUST.CUST_ID=AR.CUST_ID WHERE AR.STATUS_ID=:AR_STATUS_ID AND CUST.CUST_ID=FB.CUST_ID) AS APP_STATUS, ")
			.append("(SELECT MAX(LAST_LOGIN_TIME) FROM CUSTOMER CUST INNER JOIN APP_REGISTRATION AR ON CUST.CUST_ID=AR.CUST_ID WHERE AR.STATUS_ID=:AR_STATUS_ID AND CUST.CUST_ID=FB.CUST_ID) AS LAST_LOGIN_TIME, ")
			
			//.append("(SELECT  CBI.EMAIL FROM CUST_BOOK_INFO CBI WHERE CBI.FLAT_BOOK_ID = FB.FLAT_BOOK_ID AND CBI.CUST_ID = FB.CUST_ID ) AS CUST_EMAIL,")
			.append("(SELECT  CI.CONTACT_NO FROM CONTACT_INFORMATION  CI WHERE  CI.FLATBOOKING_ID = FB.FLAT_BOOK_ID ) AS CONTACT_NO,")
			.append("(SELECT  CI.ALTERNATIVE_CONTACT_NO FROM CONTACT_INFORMATION  CI WHERE  CI.FLATBOOKING_ID = FB.FLAT_BOOK_ID ) AS ALTERNATIVE_CONTACT_NO,")
			.append("(SELECT  CI.EMAIL_ID FROM CONTACT_INFORMATION  CI WHERE  CI.FLATBOOKING_ID = FB.FLAT_BOOK_ID ) AS CUST_EMAIL,")
			.append("(SELECT  CUST.PROFILE_PIC FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS CUST_PROFILE_PIC,")
			.append("(SELECT  CBI.SALES_TEAM_LEAD_ID FROM CUST_BOOK_INFO CBI WHERE CBI.FLAT_BOOK_ID = FB.FLAT_BOOK_ID AND CBI.CUST_ID = FB.CUST_ID ) AS SALES_TEAM_LEAD_ID,")
			
			.append("(SELECT  FC.FLAT_COST FROM FLAT_COST FC WHERE FB.FLAT_ID = FC.FLAT_ID AND FC.STATUS_ID = 6 ORDER BY FC.CREATED_DATE  FETCH FIRST ROW ONLY ) AS TOTAL_COST_WITH_GST,")
			/* Malladi Changes */
			.append("(SELECT  FC.BASIC_FLAT_COST FROM FLAT_COST FC WHERE FB.FLAT_ID = FC.FLAT_ID AND FC.STATUS_ID = 6 ORDER BY FC.CREATED_DATE  FETCH FIRST ROW ONLY ) AS BASIC_FLAT_COST, ")
			.append("(SELECT  FC.AMENITIES_FLAT_COST FROM FLAT_COST FC WHERE FB.FLAT_ID = FC.FLAT_ID AND FC.STATUS_ID = 6 ORDER BY FC.CREATED_DATE  FETCH FIRST ROW ONLY ) AS AMENITIES_FLAT_COST, ")
			.append("(SELECT  SUM(FC.BASIC_FLAT_COST+FC.AMENITIES_FLAT_COST) FROM FLAT_COST FC WHERE FB.FLAT_ID = FC.FLAT_ID AND FC.STATUS_ID = 6  ) AS TOTAL_FLAT_COST_EXCL_GST, ")
			.append(" FB.SALE_DEED_DATE, FB.HANDING_OVER_DATE, FB.REG_DATE, ")
			
			.append(" FSO.FLATS_SALE_OWNERS_ID as FLATS_SALE_OWNERS_ID,")
			.append(" NVL(FSO.FLAT_SALE_OWNER,' ') AS FLAT_SALE_OWNER,")
			.append("FB.FLAT_BOOK_ID AS FLAT_BOOK_ID,")
			.append("FB.SALESFORCE_BOOKING_ID AS SALESFORCE_BOOKING_ID,FB.SALESFORCE_TRANSACTION_ID AS SALESFORCE_TRANSACTION_ID,")
			.append("FB.BOOKING_DATE,")
			.append("FB.AGREEMENT_DATE,")
			.append("NVL(FB.MILESTONE_DAYS,0) AS MILESTONE_DAYS,")
			.append("F.FLAT_ID AS FLAT_ID,")
			.append("F.FLAT_NO AS FLAT_NO,")
			.append("FD.FLOOR_ID AS FLOOR_ID,")
			.append("FL.NAME AS FLOOR_NAME,")
			.append("BD.BLOCK_ID AS BLOCK_ID,")
			.append("BL.NAME AS BLOCK_NAME,")
			.append("S.SITE_ID AS SITE_ID,")
			.append("S.NAME AS SITE_NAME, ")
			.append("S.SALES_FORCE_SITE_NAME AS SALES_FORCE_SITE_NAME, ")
			.append(" FDT.SBUA, ")
			.append(" FDT.BHK, ")
			.append("S.SHORT_FORM AS SITE_SHORT_FORM ")
			.append(" FROM FLAT_BOOKING FB INNER JOIN FLAT F ")
			.append("ON FB.FLAT_ID = F.FLAT_ID ")
			.append("INNER JOIN FLOOR_DETAILS FD ")
			.append("ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID ")
			.append("INNER JOIN FLOOR FL ")
			.append("ON FL.FLOOR_ID = FD.FLOOR_ID ")
			.append("INNER JOIN BLOCK_DETAILS BD ")
			.append("ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID ")
			.append("INNER JOIN BLOCK BL ")
			.append("ON BL.BLOCK_ID = BD.BLOCK_ID ")
			.append("INNER JOIN SITE S ")
			.append("ON BD.SITE_ID = S.SITE_ID ")
			.append(" INNER JOIN FLAT_DETAILS FDT ")
			.append(" ON (FDT.FLAT_ID=F.FLAT_ID) ")
			.append(" FULL JOIN FLATS_SALE_OWNERS FSO ON FSO.FLATS_SALE_OWNERS_ID = FDT.FLATS_SALE_OWNERS_ID AND FSO.STATUS_ID = 6 ")
			.toString();
	
	public static final String QRY_TO_GET_CUSTOMER_CLOSING_BALANCE_DETAILS = new StringBuffer("")
			.append(" SELECT S.NAME AS SITE_NAME ,BL.NAME AS BLOCK_NAME ,F.FLAT_NO AS FLAT_NO  ,FB.FLAT_BOOK_ID,")
			.append(" (SELECT  CUST.CUST_ID  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID) AS CUST_ID,")
			.append(" (SELECT  CUST.NAME_PREFIX ||' '|| CUST.FIRST_NAME ||' '|| CUST.LAST_NAME  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS CUST_NAME,")
			.append(" (SELECT  CUST.PANCARD  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS PANCARD,")
			.append(" FB.BOOKING_DATE  AS BOOKING_DATE,")
			.append(" FB.AGREEMENT_DATE AS AGREEMENT_DATE,FB.FLAT_ID,S.SITE_ID,")
			.append(" FD.SBUA	,  FC.BASIC_FLAT_COST,")
			.append(" FC.AMENITIES_FLAT_COST,    FC.FLAT_COST AS TOTAL_COST,")
			.append(" (SELECT SUM(PAID_AMOUNT) FROM FIN_BOOKING_FORM_ACCOUNTS FBFA,FIN_BOOKING_FORM_MILESTONES FBFM")
			.append(" WHERE TYPE = 29  AND FBFA.TYPE_ID = FBFM.FIN_BOOKING_FORM_MILESTONES_ID ")
			.append(" AND FBFA.STATUS_ID = 6    AND FBFM.STATUS_ID = 6 AND FBFA.BOOKING_FORM_ID = FB.FLAT_BOOK_ID)  AS TOTAL_AMOUNT_PAID,    ")

			.append("( SELECT   SUM(B.BALANCE_AMOUNT) FROM FIN_BOOKING_FORM_EXCESS_AMOUNT B, FIN_BOOKING_FORM_RECEIPTS A ")
			.append("WHERE A.FIN_BOK_FRM_RCPT_ID = B.FIN_BOK_FRM_RCPT_ID AND A.BOOKING_FORM_ID = FB.FLAT_BOOK_ID AND A.STATUS_ID = 6 ")
			.append("AND TYPE = 29) AS EXCESS_AMOUNT,")
			
			/* Malladi Changes */
			.append(" FB.SALE_DEED_DATE, FB.HANDING_OVER_DATE, FB.REG_DATE, ")
			
			.append(" (SELECT SUM(PAY_AMOUNT) FROM FIN_BOOKING_FORM_ACCOUNTS FBFA,FIN_BOOKING_FORM_MILESTONES FBFM")
			.append(" WHERE TYPE = 29  AND FBFA.TYPE_ID = FBFM.FIN_BOOKING_FORM_MILESTONES_ID AND FBFM.MS_STATUS_ID = 6 ")
			.append(" AND FBFA.STATUS_ID = 6  AND FBFM.STATUS_ID = 6 AND FBFA.BOOKING_FORM_ID = FB.FLAT_BOOK_ID) - ")
			.append(" (SELECT SUM(PAID_AMOUNT) FROM FIN_BOOKING_FORM_ACCOUNTS FBFA,FIN_BOOKING_FORM_MILESTONES FBFM")
			.append(" WHERE TYPE = 29  AND FBFA.TYPE_ID = FBFM.FIN_BOOKING_FORM_MILESTONES_ID ")
			.append(" AND FBFA.STATUS_ID = 6    AND FBFM.STATUS_ID = 6 AND FBFA.BOOKING_FORM_ID = FB.FLAT_BOOK_ID) AS TOTAL_PENDING_AMOUNT_AS_PER_WORK_COMPLETION")
			.append(" FROM FLAT_BOOKING FB ")
			.append(" INNER JOIN FLAT F 		ON FB.FLAT_ID = F.FLAT_ID ")
			.append(" INNER JOIN FLAT_COST FC ON FB.FLAT_ID = FC.FLAT_ID AND FC.STATUS_ID = 6")
			.append(" INNER JOIN FLAT_DETAILS FD ON FD.FLAT_ID = FB.FLAT_ID AND FD.STATUS_ID = 6")
			.append(" INNER JOIN FLOOR_DETAILS FD ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID ")
			.append(" INNER JOIN FLOOR FL ON FL.FLOOR_ID = FD.FLOOR_ID ")
			.append(" INNER JOIN BLOCK_DETAILS BD ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID ")
			.append(" INNER JOIN BLOCK BL ON BL.BLOCK_ID = BD.BLOCK_ID ")
			.append(" INNER JOIN SITE S ON BD.SITE_ID = S.SITE_ID").toString();
			/*.append("   WHERE ")
			.append(" FB.STATUS_ID = 6")
			.append(" AND S.SITE_ID = 111")
			.append(" ORDER BY BD.BLOCK_ID,FL.FLOOR_ID ,FB.FLAT_ID")*/

	public static final String QRY_TO_GET_CUSTOMER_CLOSING_BALANCE_DETAILS_BY_MILESTONE = new StringBuffer("")
			.append(" SELECT S.NAME AS SITE_NAME ,BL.NAME AS BLOCK_NAME ,F.FLAT_NO AS FLAT_NO  ,FB.FLAT_BOOK_ID,")
			.append(" (SELECT  CUST.CUST_ID  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID) AS CUST_ID,")
			.append(" (SELECT  CUST.NAME_PREFIX ||' '|| CUST.FIRST_NAME ||' '|| CUST.LAST_NAME  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS CUST_NAME,")
			.append(" (SELECT  CUST.PANCARD  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS PANCARD,")
			.append(" FB.BOOKING_DATE  AS BOOKING_DATE,")
			.append(" FB.AGREEMENT_DATE AS AGREEMENT_DATE,FB.FLAT_ID,S.SITE_ID,")
			.append(" FD.SBUA	,  FC.BASIC_FLAT_COST,")
			.append(" FC.AMENITIES_FLAT_COST,    FC.FLAT_COST AS TOTAL_COST,")
			.append(" (SELECT SUM(PAID_AMOUNT) FROM FIN_BOOKING_FORM_ACCOUNTS FBFA,FIN_BOOKING_FORM_MILESTONES FBFM")
			.append(" WHERE TYPE = 29  AND FBFA.TYPE_ID = FBFM.FIN_BOOKING_FORM_MILESTONES_ID ")
			.append(" AND FBFA.STATUS_ID = 6 AND FBFM.PROJECT_MILESTONE_ID IN (:PROJECT_MILESTONE_IDs) AND FBFM.STATUS_ID = 6 AND FBFA.BOOKING_FORM_ID = FB.FLAT_BOOK_ID)  AS TOTAL_AMOUNT_PAID,    ")

			.append("( SELECT   SUM(B.BALANCE_AMOUNT) FROM FIN_BOOKING_FORM_EXCESS_AMOUNT B, FIN_BOOKING_FORM_RECEIPTS A ")
			.append("WHERE A.FIN_BOK_FRM_RCPT_ID = B.FIN_BOK_FRM_RCPT_ID AND A.BOOKING_FORM_ID = FB.FLAT_BOOK_ID AND A.STATUS_ID = 6 ")
			.append("AND TYPE = 29) AS EXCESS_AMOUNT,")
			
			.append(" (SELECT SUM(PAY_AMOUNT) FROM FIN_BOOKING_FORM_ACCOUNTS FBFA,FIN_BOOKING_FORM_MILESTONES FBFM")
			.append(" WHERE TYPE = 29  AND FBFA.TYPE_ID = FBFM.FIN_BOOKING_FORM_MILESTONES_ID AND FBFM.MS_STATUS_ID = 6 ")
			.append(" AND FBFA.STATUS_ID = 6  AND FBFM.PROJECT_MILESTONE_ID IN (:PROJECT_MILESTONE_IDs)  AND FBFM.STATUS_ID = 6 AND FBFA.BOOKING_FORM_ID = FB.FLAT_BOOK_ID) - ")
			.append(" (SELECT SUM(PAID_AMOUNT) FROM FIN_BOOKING_FORM_ACCOUNTS FBFA,FIN_BOOKING_FORM_MILESTONES FBFM")
			.append(" WHERE TYPE = 29  AND FBFA.TYPE_ID = FBFM.FIN_BOOKING_FORM_MILESTONES_ID ")
			.append(" AND FBFA.STATUS_ID = 6 AND FBFM.PROJECT_MILESTONE_ID IN (:PROJECT_MILESTONE_IDs) AND FBFM.STATUS_ID = 6 AND FBFA.BOOKING_FORM_ID = FB.FLAT_BOOK_ID) AS TOTAL_PENDING_AMOUNT_AS_PER_WORK_COMPLETION")
			.append(" FROM FLAT_BOOKING FB ")
			.append(" INNER JOIN FLAT F 		ON FB.FLAT_ID = F.FLAT_ID ")
			.append(" INNER JOIN FLAT_COST FC ON FB.FLAT_ID = FC.FLAT_ID AND FC.STATUS_ID = 6")
			.append(" INNER JOIN FLAT_DETAILS FD ON FD.FLAT_ID = FB.FLAT_ID AND FD.STATUS_ID = 6")
			.append(" INNER JOIN FLOOR_DETAILS FD ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID ")
			.append(" INNER JOIN FLOOR FL ON FL.FLOOR_ID = FD.FLOOR_ID ")
			.append(" INNER JOIN BLOCK_DETAILS BD ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID ")
			.append(" INNER JOIN BLOCK BL ON BL.BLOCK_ID = BD.BLOCK_ID ")
			.append(" INNER JOIN SITE S ON BD.SITE_ID = S.SITE_ID").toString();
			/*.append("   WHERE ")
			.append(" FB.STATUS_ID = 6")
			.append(" AND S.SITE_ID = 111")
			.append(" ORDER BY BD.BLOCK_ID,FL.FLOOR_ID ,FB.FLAT_ID")*/

	
	/* QRY_TO_GET_DEPARTMENT_DETAILS  FROM DEPARTMENT  */
	public static final String QRY_TO_GET_DEPARTMENT_DETAILS = new StringBuilder(" SELECT ")
			.append("DEPT.DEPT_ID AS DEPT_ID ,")
			.append("DEPT.NAME AS NAME,")
			.append("DEPT.DESCRIPTION AS DESCRIPTION,")
			.append("DEPT.DEPT_EMAIL AS DEPT_EMAIL,")
			.append("DEPT.STATUS_ID AS STATUS_ID ")
			.append("FROM DEPARTMENT DEPT ")
			.toString();
	
	/* QRY_TO_GET_FLAT_FLOOR_BLOCK_SITE_DETAILS  */
	public static final String QRY_TO_GET_FLAT_FLOOR_BLOCK_SITE_DETAILS = new StringBuilder("SELECT DISTINCT ")
			.append(" FD.FLAT_ID,FD.FLATS_SALE_OWNERS_ID,")
			.append(" F.FLAT_NO,")
			.append(" FLD.FLOOR_ID,")
			.append(" FL.NAME AS FLOOR_NAME,")
			.append(" BD.BLOCK_ID,")
			.append(" B.NAME AS BLOCK_NAME,")
			.append(" S.SITE_ID,")
			.append(" AD.STATE_ID AS STATE_ID,")
			.append(" S.NAME AS SITE_NAME FROM ")
			.append(" FLAT_DETAILS FD ")
			.append(" INNER JOIN FLAT F ")
			.append(" ON FD.FLAT_ID=F.FLAT_ID ")
			.append(" INNER JOIN FLOOR_DETAILS FLD ")
			.append(" ON FD.FLOOR_DET_ID=FLD.FLOOR_DET_ID ")
			.append(" INNER JOIN FLOOR FL ")
			.append(" ON FLD.FLOOR_ID=FL.FLOOR_ID ")
			.append(" INNER JOIN BLOCK_DETAILS BD ")
			.append(" ON FLD.BLOCK_DET_ID=BD.BLOCK_DET_ID ")
			.append(" INNER JOIN BLOCK B ")
			.append(" ON BD.BLOCK_ID=B.BLOCK_ID ")
			.append(" INNER JOIN SITE S ")
			.append(" ON BD.SITE_ID=S.SITE_ID ")
			.append(" INNER JOIN ADDRESS AD ")
			.append(" ON AD.ADDRESS_ID = S.ADDRESS_ID ")
			.toString ();
	
	/* QRY_TO_GET_TICKETTYPE_DETAILS  FROM TICKET_TYPE_DETAILS  
	public static final String QRY_TO_GET_TICKETTYPE_DETAILS = new StringBuilder(" SELECT ")
			.append("TT.TICKET_TYPE_ID AS TICKET_TYPE_ID,")
			.append("TT. NAME AS NAME,")
			.append("TT.DESCRIPTION AS DESCRIPTION,")
			.append("TT.RESOLUTION_DAY_TIME AS RESOLUTION_DAY_TIME,")
			.append("TT.STATUS_ID AS STATUS_ID,")
			.append("TT.CREATED_DATE AS CREATED_DATE,")
			.append("TT.MODIFIED_DATE AS MODIFIED_DATE ")
			.append("FROM TICKET_TYPE TT ")
			.toString(); */
	
	/* QRY_TO_GET_TICKETTYPE_DETAILS  FROM TICKET_TYPE_DETAILS  */
	public static final String QRY_TO_GET_TICKETTYPE_DETAILS = new StringBuilder(" SELECT ")
				.append(" TT.TICKET_TYPE_ID AS TICKET_TYPE_ID,")
				.append(" (TMT.NAME || '/' || TT. NAME ) AS NAME,")
				.append(" TT.DESCRIPTION AS DESCRIPTION,")
				.append(" TT.RESOLUTION_DAY_TIME AS RESOLUTION_DAY_TIME,")
				.append(" TT.STATUS_ID AS STATUS_ID,")
				.append(" TT.CREATED_DATE AS CREATED_DATE,")
				.append(" TT.MODIFIED_DATE AS MODIFIED_DATE,")
				.append(" TT.TICKET_MAIN_TYPE_ID AS TICKET_MAIN_TYPE_ID,")
				.append(" TMT.NAME AS TICKET_MAIN_TYPE ")
				.append(" FROM TICKET_TYPE TT ")
				.append(" INNER JOIN TICKET_MAIN_TYPE TMT")
				.append(" ON TT.TICKET_MAIN_TYPE_ID = TMT.ID ")
				//.append(" WHERE TMT.STATUS_ID = :STATUS_ID AND TT.STATUS_ID = :STATUS_ID")
	            .toString();
	
	/* QRY_TO_GET_STATUS_DETAILS  FROM STATUS  */
	public static final String QRY_TO_GET_STATUS_DETAILS = new StringBuilder(" SELECT ")
			.append("ST.STATUS_ID AS STATUS_ID,")
			.append("ST.STATUS AS STATUS,")
			.append("ST.DESCRIPTION AS DESCRIPTION,")
			.append("DEPT.STATUS_ID AS STATUS_ID ")
			.append("FROM STATUS ST ")
			.toString();
	
	
	/* QRY_TO_GET_INSERT_NOTIFICATION  FROM STATUS  */
	public static final String QRY_TO_GET_INSERT_NOTIFICATION = new StringBuilder("INSERT INTO NOTIFICATION(ID,MESSAGE,DESCRIPTION,RECEIVEDDATE,TYPE_OF,GENERIC_ID,IMAGELOCATION,EMP_ID,CREATED_DATE,STATUS_ID)")
			.append("VALUES(notification_seq.nextval,:MESSAGE,:DESCRIPTION,SYSTIMESTAMP,:TYPE_OF,:GENERIC_ID,:IMAGELOCATION,:EMP_ID,SYSTIMESTAMP,:STATUS_ID)")
			.toString();
	

	/* QRY_TO_GET_DEVICE_DETAILS FROM CONTACT_US */
	public static final String QRY_TO_GET_DEVICE_DETAILS_MOBILE_NO = new StringBuilder(" SELECT DISTINCT ")
			.append("DE.DEVICE_ID AS DEVICE_ID, ")              
			.append("DE.DEVICE_TOKEN AS DEVICE_TOKEN, ")        
			.append("DE.DEVICE_MODEL AS DEVICE_MODEL,")         
			.append("DE.APP_VERSION AS APP_VERSION, ")          
			.append("DE.OS_TYPE AS OS_TYPE, ")                  
			.append("DE.OS_VERSION AS OS_VERSION, " )          
			.append("DE.IMEI_NO AS IMEI_NO, ")                  
			.append("DE.DEVICE_STATUS AS DEVICE_STATUS, ")      
			.append("DE.USER_AGENT AS USER_AGENT, ")            
			.append("DE.USER_XID AS USER_XID, ")                
			.append("DE.UUID AS UUID, ")                       
			.append("DE.SERIAL_NO AS SERIAL_NO, ")              
			.append("DE.CREATED_DATE AS CREATED_DATE, ")        
			.append("DE.MODIFIED_DATE AS MODIFIED_DATE, ") 
			.append("DE.STATUS_ID AS STATUS_ID ")
			.append("FROM CONTACT_US CU ")
			.append("INNER JOIN NON_CUSTOMER NC ")
			.append("ON CU.NONCUST_ID = NC.ID ")
			.append("INNER JOIN DEVICE DE ")
			.append("ON NC.DEVICE_ID = DE.DEVICE_ID and DE.STATUS_ID = :STATUS_ID ")
			.toString();

	public static final String QRY_TO_GET_DEVICE_DETAILS=new StringBuilder("SELECT ")
			.append("DE.DEVICE_ID AS DEVICE_ID, ")              
			.append("DE.DEVICE_TOKEN AS DEVICE_TOKEN, ")        
			.append("DE.DEVICE_MODEL AS DEVICE_MODEL,")         
			.append("DE.APP_VERSION AS APP_VERSION, ")          
			.append("DE.OS_TYPE AS OS_TYPE, ")                  
			.append("DE.OS_VERSION AS OS_VERSION, " )          
			.append("DE.IMEI_NO AS IMEI_NO, ")                  
			.append("DE.DEVICE_STATUS AS DEVICE_STATUS, ")      
			.append("DE.USER_AGENT AS USER_AGENT, ")            
			.append("DE.USER_XID AS USER_XID, ")                
			.append("DE.UUID AS UUID, ")                       
			.append("DE.SERIAL_NO AS SERIAL_NO, ")              
			.append("DE.CREATED_DATE AS CREATED_DATE, ")        
			.append("DE.MODIFIED_DATE AS MODIFIED_DATE, ") 
			.append("DE.STATUS_ID AS STATUS_ID ")
			.append("FROM DEVICE DE" )   
			.toString();
	
	/* QRY_TO_GET_FLAT_DETAILS  FROM FLAT  */
	public static final String QRY_TO_GET_FLAT_DETAILS = new StringBuilder(" SELECT ")
			.append("F.FLAT_ID AS FLAT_ID,")
			.append("F.FLOOR_DET_ID AS FLOOR_DET_ID,")
			.append("F.FLAT_NO AS FLAT_NO,")
			.append("F.IMAGE_LOCATION AS IMAGE_LOCATION,")
			.append("F.STATUS_ID AS STATUS_ID,")
			.append("F.EXPECTED_HANDOVER_DATE AS EXPECTED_HANDOVER_DATE ")
			.append("FROM FLAT F ")
			.toString();
	
	/* QRY_TO_GET_CUSTOMER_DETAILS  FROM CUSTOMER */
	public static final String QRY_TO_GET_CUSTOMER_DETAILS_OLD = new StringBuilder(" SELECT ")
			.append("CUST.CUST_ID AS CUST_ID,")
			.append("CUST.NAME_PREFIX AS NAME_PREFIX,")
			.append("CUST.FIRST_NAME  AS FIRST_NAME,")
			.append("CUST.LAST_NAME AS LAST_NAME,")
			.append("CUST.GENDER AS GENDER,")
			.append("CUST.AGE AS AGE,")
			.append("CUST.DATE_OF_BIRTH AS DATE_OF_BIRTH,")
			.append("CUST.AADHAR_NUMBER AS AADHAR_NUMBER,")
			.append("CUST.CREATED_DATE AS CREATED_DATE,")
			.append("CUST.UPDATED_DATE AS UPDATED_DATE,")
			.append("CUST.PHONE_NO AS PHONE_NO,")
			.append("CUST.ALTERNATE_PHONE_NO AS ALTERNATE_PHONE_NO,")
			.append("CUST.TELE_PHONE AS TELE_PHONE,")
			.append("CUST.PANCARD AS PANCARD,")
			.append("CUST.VOTER_ID  AS VOTER_ID,")
			.append("CUST.EMAIL AS EMAIL,")
			.append("CUST.STATUS_ID  AS STATUS_ID,")
			.append("CUST.ADDRESS_ID AS ADDRESS_ID,")
			.append("CUST.RELATION_WITH AS RELATION_WITH,")
			.append("CUST.RELATION_NAME AS RELATION_NAME,")
			.append("CUST.NATIONALITY AS NATIONALITY,")
			.append("CUST.MARITAL_STATUS AS MARITAL_STATUS,")
			.append("CUST.DOCUMENTS_UPLOAD AS DOCUMENTS_UPLOAD,")
			.append("CUST.PROFILE_PIC  AS PROFILE_PIC,")
			.append("CUST.CUST_PROFILE_ID AS CUST_PROFILE_ID,")
			.append("CUST.CUST_APP_ID AS CUST_APP_ID,")
			.append("CUST.DATE_OF_ANNIVERSERY AS DATE_OF_ANNIVERSERY,")
			.append("CUST.SALES_TEAM_EMP_ID AS SALES_TEAM_EMP_ID,")
			.append("CUST.SALES_TEAM_LEAD_ID AS SALES_TEAM_LEAD_ID,")
			.append("CUST.WORK_EXPERIENCE AS WORK_EXPERIENCE,")
			.append("CUST.EDUCATIONAL_QUALIFICATION AS EDUCATIONAL_QUALIFICATION,")
			.append("CUST.ANNUAL_HOUSE_HOLD_INCOME AS ANNUAL_HOUSE_HOLD_INCOME,")
			.append("CUST.CUST_PROFFISIONAL_ID AS CUST_PROFFISIONAL_ID,")
			//.append("CUST.CUST_OTHERDTLS_ID AS CUST_OTHERDTLS_ID,")
			.append("CUST.COMMENTS AS COMMENTS,")
			.append("CUST.TDS_AUTHORIZATION_ID AS TDS_AUTHORIZATION_ID ")
			//.append("CUST.CHECKLIST_REGISTRATION_ID  AS CHECKLIST_REGISTRATION_ID,")
			//.append("CUST.CHECKLIST_LEGAL_OFFICIER_ID AS CHECKLIST_LEGAL_OFFICIER_ID,")
			//.append("CUST.CHECKLIST_CRM_ID AS CHECKLIST_CRM_ID ")
			.append("FROM CUSTOMER CUST ")
			.toString();
	
	/* QRY_TO_GET_CUSTOMER_DETAILS  FROM CUSTOMER */
	public static final String QRY_TO_GET_CUSTOMER_DETAILS = new StringBuilder(" SELECT ")
			.append("CUST.CUST_ID AS CUST_ID,")                          
			.append("CUST.NAME_PREFIX AS NAME_PREFIX,")
			.append("CUST.FIRST_NAME AS FIRST_NAME,")
			.append("CUST.LAST_NAME AS LAST_NAME,")
			.append("CUST.GENDER AS GENDER,")
			.append("CUST.AGE AS AGE,")
			.append("CUST.DATE_OF_BIRTH AS DATE_OF_BIRTH,")
			.append("CUST.AADHAR_NUMBER AS AADHAR_NUMBER,")
			.append("CUST.CREATED_DATE AS CREATED_DATE,")
			.append("CUST.UPDATED_DATE AS UPDATED_DATE,")
			.append("CUST.PANCARD AS PANCARD,")
			.append("CUST.VOTER_ID AS VOTER_ID,")
			.append("CUST.STATUS_ID AS STATUS_ID,")
			.append("CUST.RELATION_WITH AS RELATION_WITH,")
			.append("CUST.RELATION_NAME AS RELATION_NAME,")
			.append("CUST.RELATION_NAME_PREFIX AS RELATION_NAME_PREFIX,")
			.append("CUST.NATIONALITY AS NATIONALITY,")
			.append("CUST.PROFILE_PIC AS PROFILE_PIC,")
			.append("CUST.PASSPORT ")
			.append(" FROM CUSTOMER CUST ")
			.toString(); 
	
	/* QRY_TO_GET_CUSTOMER_DETAILS_BY_NAME  FROM CUSTOMER */
	public static final String QRY_TO_GET_CUSTOMER_DETAILS_BY_NAME = new StringBuilder("  ")
            .append(" SELECT ")
           // .append(" F.FLAT_ID,")
            .append(" CUST.CUST_ID ")
            .append(" FROM CUSTOMER CUST ")
            .append(" INNER JOIN FLAT_BOOKING FB ")
            .append(" ON FB.CUST_ID = CUST.CUST_ID AND FB.STATUS_ID IN (:STATUS_ID) ")
            .append(" INNER JOIN  FLAT F ")
            .append(" ON FB.FLAT_ID = F.FLAT_ID ")
            .append(" INNER JOIN FLOOR_DETAILS FD ")
            .append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID IN (:STATUS_ID) AND F.STATUS_ID IN (:STATUS_ID) ")
            .append(" INNER JOIN FLOOR FL ")
            .append(" ON FL.FLOOR_ID = FD.FLOOR_ID ")
            .append(" INNER JOIN BLOCK_DETAILS BD ")
            .append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID IN (:STATUS_ID) ")
            .append(" INNER JOIN BLOCK BL ")
            .append(" ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID IN (:STATUS_ID) ")
            .append(" INNER JOIN SITE S ON BD.SITE_ID = S.SITE_ID ")
            .append(" WHERE S.SALES_FORCE_SITE_NAME IN (:SALES_FORCE_SITE_NAME)  AND F.FLAT_NO IN (:FLAT_NO) AND CUST.FIRST_NAME IN (:FIRST_NAME) AND CUST.STATUS_ID IN (:STATUS_ID)")
			.toString();
	
   public static final String QRY_TO_GET_COAPPLICANT_DETAILS = new StringBuilder("SELECT ")
			.append("AP.APPLICANT_ID AS  APPLICANT_ID,")
			.append("AP.CUST_ID AS  CUST_ID,")
			.append("AP.ADDRESS_ID AS   ADDRESS_ID, ")
			.append("AP.APPLICATE_NUMBER AS    APPLICATE_NUMBER,")
			.append("AP.FIRST_NAME AS  FIRST_NAME,")
			.append("AP.LAST_NAME AS LAST_NAME ,")
			.append("AP.MIDDLE_NAME AS MIDDLE_NAME ,")
			.append("AP.GENDER AS GENDER,")
			.append("AP.AADHAR_ID AS AADHAR_ID ,")
			.append("AP.AGE AS AGE ,")
            .append("AP.VOTER_ID AS VOTER_ID ,")
			.append("AP.PANCARD AS PANCARD,")
			.append("AP.PHONE_NO AS PHONE_NO , ")
			.append("AP.ALTERNATE_PHONE_NO AS ALTERNATE_PHONE_NO,")
			.append("AP.EMAIL AS EMAIL,")
			.append("AP.CREATED_DATE AS CREATED_DATE,")
			.append("AP.UPDATED_DATE AS UPDATED_DATE,")
			.append("AP.DATE_OF_BIRTH AS DATE_OF_BIRTH,")
			.append("AP.RELATION_WITH_CUST AS RELATION_WITH_CUST,")
			.append("AP.NATIONALITY AS NATIONALITY,")
			.append("AP.RELATION_WITH AS RELATION_WITH, ")
			.append("AP.RALATION_NAME AS RALATION_NAME,")
			.append("AP.TELE_PHONE AS TELE_PHONE,")
			.append("AP.FLAT_BOOK_ID AS FLAT_BOOK_ID,")
			.append("AP.NAME_PREFIX AS NAME_PREFIX, ")
			.append("AP.MARITAL_STATUS AS MARITAL_STATUS, ")
            .append("AP.WORK_EXPERIENCE AS WORK_EXPERIENCE,")
			.append("AP.EDUCATIONAL_QUALIFICATION AS EDUCATIONAL_QUALIFICATION,")
			.append("AP.ANNUAL_HOUSE_HOLD_INCOME AS ANNUAL_HOUSE_HOLD_INCOME,")
			.append("AP.CUST_PROFFISIONAL_ID AS CUST_PROFFISIONAL_ID ,")
			.append("AP.STATUS_ID AS STATUS_ID ")
			.append(" FROM APPLICANT AP")
			.toString();
   
	/* QRY_TO_GET_FLAT_BOOKING_DETAILS  FROM FLAT_BOOKING  */
/*	public static final String QRY_TO_GET_FLAT_BOOKING_DETAILS = new StringBuilder(" SELECT ")
			.append("FB.FLAT_BOOK_ID AS FLAT_BOOK_ID,")
			.append("FB.CUST_ID AS CUST_ID,")
			.append("FB.FLAT_ID AS  FLAT_ID,")
			.append("FB.REG_DATE AS REG_DATE,")
			.append("FB.PAYMENT_ID AS PAYMENT_ID,")
			.append("FB.STATUS_ID   AS  STATUS_ID,")
			.append("FB.CREATED_DATE AS CREATED_DATE,")
			.append("FB.BOOKING_RECIEPT_FRONT AS BOOKING_RECIEPT_FRONT,")
			.append("FB.BOOKING_RECIEPT_BACK  AS   BOOKING_RECIEPT_BACK,")
			.append("FB.BOOKING_DATE  AS BOOKING_DATE ")
			.append(" FROM FLAT_BOOKING FB ")
			.toString();*/
   
   public static final String QRY_TO_GET_FLAT_BOOKING_DETAILS = new StringBuilder(" SELECT ")
			.append("FB.FLAT_BOOK_ID AS FLAT_BOOK_ID,")
			.append("FB.CUST_ID AS CUST_ID,")
			.append("FB.FLAT_ID AS  FLAT_ID,")
			.append("FB.REG_DATE AS REG_DATE,")
			.append("FB.PAYMENT_ID AS PAYMENT_ID,")
			.append("FB.STATUS_ID   AS  STATUS_ID,")
			.append("FB.CREATED_DATE AS CREATED_DATE,")
			.append("FB.BOOKING_RECIEPT_FRONT AS BOOKING_RECIEPT_FRONT,")
			.append("FB.BOOKING_RECIEPT_BACK  AS   BOOKING_RECIEPT_BACK,")
			.append("FB.BOOKING_DATE  AS BOOKING_DATE, ")
			.append("FLAT.FLAT_NO  AS FLAT_NO ")
			.append(",FB.AGREEMENT_DATE")
			.append(",NVL(FB.MILESTONE_DAYS,0) AS MILESTONE_DAYS")
			.append(",FB.SALE_DEED_NO")
			.append(",FB.SALE_DEED_DATE")
			.append(",FB.SALE_DEED_VALUE")
			.append(",FB.REGISTRATION_STATUS")
			.append(",FB.SALE_DEED_CD_NO ")
			.append(",NVL(FB.IS_WELCOME_MAIL_SEND,'0') as IS_WELCOME_MAIL_SEND  ")
			.append(",FB.APPLICATION_NUMBER AS APPLICATION_NUMBER ")
			.append(",FB.HANDING_OVER_DATE AS HANDING_OVER_DATE,FB.CAR_PARKING_SPACES AS CAR_PARKING_SPACES ")
			.append(",FB.PROPERTY_SL_NO AS PROPERTY_SL_NO,NEW_BOOKING_REASON ")
			.append(",FB.RR_NO AS RR_NO ").append(",FB.SALESFORCE_BOOKING_ID AS SALESFORCE_BOOKING_ID").append(",FB.SALESFORCE_OLD_BOOKING_ID AS SALESFORCE_OLD_BOOKING_ID,FB.SALESFORCE_TRANSACTION_ID AS SALESFORCE_TRANSACTION_ID ")	
			.append(",FB.CUST_LOAN_BANK  AS CUST_LOAN_BANK")
			.append(" FROM FLAT_BOOKING FB JOIN FLAT FLAT ON(FB.FLAT_ID=FLAT.FLAT_ID)")
			.toString();
	
	/* QRY_TO_GET_APP_REGISTRATION FROM APP_REGISTRATION */
	public static final String QRY_TO_GET_APP_REGISTRATION  = new StringBuilder("SELECT ")
			.append("APR.APP_REG_ID AS APP_REG_ID,")
			.append("APR.CUST_ID AS CUST_ID,")
			.append("APR.EMP_ID AS EMP_ID,")
			.append("APR.DEVICE_ID AS DEVICE_ID,")
			.append("APR.USER_NAME AS USER_NAME,")
			.append("APR.PASSWORD AS PASSWORD,")
			.append("APR.LAST_LOGIN_TIME AS LAST_LOGIN_TIME,")
			.append("APR.REGISTER_DATE AS REGISTER_DATE,")
			.append("APR.STATUS_ID AS STATUS_ID ")
			.append(" FROM APP_REGISTRATION APR ")
			.toString();
	
	/* QRY_TO_GET_FLAT_BOOKING_DETAILS  FROM FLAT_BOOKING  */
	public static final String QRY_TO_GET_ADDRESS_DETAILS = new StringBuilder(" SELECT ")
			.append("CUST_ADDR.CUST_ADD_ID AS CUST_ADD_ID,")
			.append("CUST_ADDR.HNO AS  HNO,")
			.append("CUST_ADDR.FLOORNO AS FLOORNO,")
			.append("CUST_ADDR.TOWER AS TOWER,")
			.append("CUST_ADDR.STREET AS STREET,")
			.append("CUST_ADDR.AREA AS AREA,")
			.append("CUST_ADDR.LANDMARK AS LANDMARK,")
			.append("CUST_ADDR.PINCODE AS PINCODE,")
			.append("CUST_ADDR.CITY_ID AS CITY_ID,")
			.append("CI.CITY_NAME AS CITY_NAME,")
			.append("CI.CITY_ICON AS CITY_ICON,")
			.append("CUST_ADDR.STATE_ID AS STATE_ID,")
			.append("ST.STATE_NAME AS STATE_NAME,")
			.append("CUST_ADDR.COUNTRY AS COUNTRY,")
			.append("CUST_ADDR.LANGITUDE AS  LANGITUDE,")
			.append("CUST_ADDR.LATITUDE AS LATITUDE,")
			.append("CUST_ADDR.CREATED_DATE AS CREATED_DATE,")
			.append("CUST_ADDR.UPDATED_DATE AS UPDATED_DATE,")
			.append("CUST_ADDR.ADDRESS_TYPE AS  ADDRESS_TYPE,")
			.append("CUST_ADDR.ADDRESS1 AS  ADDRESS1,")
			.append("CUST_ADDR.ADDRESS2 AS  ADDRESS2,")
			.append("CUST_ADDR.ADDRESS3 AS ADDRESS3, ")
			.append("CUST_ADDR.STATUS_ID AS STATUS_ID ")
			.append(" FROM CUST_ADDRESS  CUST_ADDR ")
			.append("INNER JOIN STATE ST ")
			.append("ON CUST_ADDR.STATE_ID = ST.STATE_ID ")
			.append("INNER JOIN CITY CI ")
			.append("ON CI.CITY_ID = CUST_ADDR.CITY_ID ")
			.toString();
	
	/* QRY_TO_INSERT_TICKET_CONVERSATION  FROM TICKET_CONVERSATION  */
	public static final String QRY_TO_INSERT_TICKET_CONVERSATION = new StringBuilder(" INSERT ")
			.append("INTO TICKET_CONVERSATION( ")
			.append("TICKET_COMMENTS_ID,")
			.append("TICKET_ID,")
			.append("DEPARTMENT_ID,")
			.append("FROM_ID,")
            .append("FROM_TYPE,")
            .append("FROM_DEPT_ID,")
            .append("TO_ID,")
            .append("TO_TYPE,")
            .append("TO_DEPT_ID,")
            .append("MESSAGE,")
            .append("COMMENTS_DATE,")
            .append("VISIBLE_TYPE,")
            .append("DOCUMENT_LOCATION,")
            .append("TICKET_CONVERSATION_DOC_ID,")
			.append("STATUS_ID )")
			.append(" VALUES( ")
			.append("TICKET_CONVERSATION_SEQ.nextval,")
			.append(":TICKET_ID,")
			.append(":DEPARTMENT_ID,")
			.append(":FROM_ID,")
			.append(":FROM_TYPE,")
			.append(":FROM_DEPT_ID,")
			.append(":TO_ID,")
			.append(":TO_TYPE,")
			.append(":TO_DEPT_ID,")
			.append(":MESSAGE,")
			.append(":COMMENTS_DATE,")
			.append(":VISIBLE_TYPE,")
			.append(":DOCUMENT_LOCATION,")
			.append(":TICKET_CONVERSATION_DOC_ID,")
			.append(":STATUS_ID ")
			.append(")")
            .toString();
	
	/* QRY_TO_INSERT_TICKET_CONVERSATION  FROM TICKET_CONVERSATION  */
	public static final String QRY_TO_INSERT_TICKET_CONVERSATION_POJO = new StringBuilder(" INSERT ")
			.append("INTO TICKET_CONVERSATION( ")
			.append("TICKET_COMMENTS_ID,")
			.append("TICKET_ID,")
			.append("DEPARTMENT_ID,")
			.append("FROM_ID,")
            .append("FROM_TYPE,")
            .append("FROM_DEPT_ID,")
            .append("TO_ID,")
            .append("TO_TYPE,")
            .append("TO_DEPT_ID,")
            .append("MESSAGE,")
            .append("COMMENTS_DATE,")
            .append("VISIBLE_TYPE,")
            .append("DOCUMENT_LOCATION,")
            .append("TICKET_CONVERSATION_DOC_ID,")
			.append("STATUS_ID )")
			.append(" VALUES( ")
			.append("TICKET_CONVERSATION_SEQ.nextval,")
			.append(":ticketId,")
			.append(":departmentId,")
			.append(":fromId,")
			.append(":fromType,")
			.append(":fromDeptId,")
			.append(":toId,")
			.append(":toType,")
			.append(":toDeptId,")
			.append(":message,")
			.append(":commentsDate,")
			.append(":visibleType,")
			.append(":documentLocation,")
			.append(":ticketConversationDocumentId,")
			.append(":statusId ")
			.append(")")
            .toString();
	
	/* QRY_TO_INSERT_TICKET_CONVERSATION  FROM TICKET_CONVERSATION  */
	public static final String QRY_TO_INSERT_TICKET_CONVERSATION1 = new StringBuilder(" INSERT ")
			.append("INTO TICKET_CONVERSATION")
			.append("(")
			.append(" TICKET_COMMENTS_ID,")
			.append(" TICKET_ID,")
			.append(" DEPARTMENT_ID,")
			.append(" FROM_ID,")
            .append(" FROM_TYPE,")
            .append(" TO_ID,")
            .append(" TO_TYPE,")
            .append(" MESSAGE,")
            .append(" COMMENTS_DATE,")
            .append(" VISIBLE_TYPE,")
            .append(" DOCUMENT_LOCATION,")
            .append(" STATUS_ID,")
            .append(" TICKET_CONVERSATION_DOC_ID,")
            .append(" FROM_DEPT_ID,")
			.append(" TO_DEPT_ID ")
			.append(")")
			.append(" VALUES( ")
			.append("TICKET_CONVERSATION_SEQ.nextval,")
			.append(":TICKET_ID,")
			.append(":DEPARTMENT_ID,")
			.append(":FROM_ID,")
			.append(":FROM_TYPE,")
			.append(":TO_ID,")
			.append(":TO_TYPE,")
			.append(":MESSAGE,")
			.append(":COMMENTS_DATE,")
			.append(":VISIBLE_TYPE,")
			.append(":DOCUMENT_LOCATION,")
			.append(":STATUS_ID,")
			.append(":TICKET_CONVERSATION_DOC_ID,")
			.append(":FROM_DEPT_ID,")
			.append(":TO_DEPT_ID")
			.append(")")
            .toString();
	
	/* QRY_TO_INSERT_TICKET_CONVERSATION_DOCUMENTS  FROM TICKET_CONVERSATION_DOCUMENTS  */
	public static final String QRY_TO_INSERT_TICKET_CONVERSATION_DOCUMENTS = new StringBuilder(" INSERT ")
			.append("INTO TICKET_CONVRSATION_DOCUMENTS( ")
			.append("TICKET_CONVERSATION_DOC_ID,")
			.append("DOCUMENTS_LOCATION,")
			.append("VISIBLE_TYPE,")
			.append("CREATED_DATE,")
            .append("STATUS_ID,")
            .append("EXTERNAL_DRIVE_FILE_LOCATION)")
			.append(" VALUES( ")
			//.append("TICKET_CONVRSATION_DOCUMENTS_SEQ.NEXTVAL,")
			.append(":TICKET_CONVERSATION_DOC_ID,")
			.append(":DOCUMENTS_LOCATION,")
			.append(":VISIBLE_TYPE,")
			.append("SYSTIMESTAMP,")
			.append(":STATUS_ID, ")
			.append(":EXTERNAL_DRIVE_FILE_LOCATION")
			.append(")")
            .toString();
	
	
	/* QRY_TO_GET_TICKET_CONVERSATION_DOCUMENT_DETAILS  FROM  TICKET_CONVERSATION_DOCUMENT_DETAILS*/
	public static final String QRY_TO_GET_TICKET_CONVERSATION_DOCUMENT_DETAILS = new StringBuilder(" SELECT ")
			.append("TCD.TICKET_CONVERSATION_DOC_ID AS TICKET_CONVERSATION_DOC_ID,")
			.append("TCD.DOCUMENTS_LOCATION AS   DOCUMENTS_LOCATION,")
			.append("TCD.VISIBLE_TYPE AS VISIBLE_TYPE,")
			.append("TCD.CREATED_DATE AS CREATED_DATE,")
			.append("TCD.MODIFIED_DATE AS  MODIFIED_DATE,")
			.append("TCD.PUBLIC_DOCUMENTS AS  PUBLIC_DOCUMENTS,")
			.append("TCD.STATUS_ID AS STATUS_ID,")
			.append("TCD.EXTERNAL_DRIVE_FILE_LOCATION AS EXTERNAL_DRIVE_FILE_LOCATION ")
			.append("FROM TICKET_CONVRSATION_DOCUMENTS  TCD ")
			.toString();
	
	/* QRY_TO_GET_TICKET_FORWARD_MENU_DETAILS  FROM  TICKET_FORWARD_MENU */
	public static final String QRY_TO_GET_TICKET_FORWARD_MENU_DETAILS = new StringBuilder(" SELECT ")
			.append("TFM.MENU_ID AS  MENU_ID,")
			.append("TFM.TYPE_OF AS  TYPE_OF,")
			.append("TFM.GENERIC_ID AS  GENERIC_ID,")
			.append("TFM.STATUS_ID AS STATUS_ID,")
			.append("TFM.CREATED_DATE AS CREATED_DATE,")
			.append("TFM.UPDATED_DATE  AS UPDATED_DATE, ")
			.append("TFM.DEPARTMENT_ID  AS DEPARTMENT_ID ")
			.append("FROM TICKET_FORWARD_MENU  TFM ")
			.toString();
	
	   /* QRY_TO_UPDATE_TICKET_DETAILS FROM TICKET  */
    public static final String QRY_TO_UPDATE_TICKET_DETAILS = new StringBuilder("UPDATE TICKET ")
            .append("SET ")
            .append("TICKET_STATUS = :TICKET_STATUS,")
            .append("ASSIGNMENT_TO = :ASSIGNMENT_TO,")
            .append("DEPARTMENT_ID = :DEPARTMENT_ID,")
            .append("ASSIGNED_BY = :ASSIGNED_BY,")
            .append("ASSIGNED_DATE = :ASSIGNED_DATE,")
            .append("STATUS_UPDATED_BY = :STATUS_UPDATED_BY,")
            .append("STATUS_UPDATE_TYPE = :STATUS_UPDATE_TYPE,")
            .append("MODIFIED_DATE = :MODIFIED_DATE,")
            .append("INVIDUAL_TICKET_STATUS = :INVIDUAL_TICKET_STATUS ")
            .append("WHERE ")
            .append("TICKET_ID = :TICKET_ID ")
            .append("AND STATUS = :STATUS ")
            .toString();
   
   /* QRY_TO_UPDATE_TICKET_STATUS FROM TICKET  */
   public static final String QRY_TO_UPDATE_TICKET_STATUS = new StringBuilder("UPDATE TICKET ")
		   .append("SET ")
		   .append("INVIDUAL_TICKET_STATUS  = :departmentTicketStatusId,")
		   .append("TICKET_STATUS = :ticketStatusId,")
		   .append("STATUS_UPDATED_BY = :statusUpdateBy,")
		   .append("STATUS_UPDATE_TYPE = :statusUpdateType,")
		   .append("RESOLVED_DATE = :resolvedDate,")
		   .append("STATUS = :statusId,")
		   .append("MODIFIED_DATE = :modifiedDate ")
		   .append("WHERE ")
		   .append("TICKET_ID = :ticketId")
		   .toString();
   
   /* QRY_TO_UPDATE_TICKET_CLOSE_STATUS FROM TICKET  */
   public static final String QRY_TO_UPDATE_TICKET_CLOSE_STATUS = new StringBuilder("UPDATE TICKET ")
		   .append("SET ")
		   .append("INVIDUAL_TICKET_STATUS  = :departmentTicketStatusId,")
		   .append("TICKET_STATUS = :ticketStatusId,")
		   .append("ESTIMATED_RESOLVED_DATE_STATUS = :estimatedResolvedDateStatus,")
		   .append("STATUS_UPDATED_BY = :statusUpdateBy,")
		   .append("STATUS_UPDATE_TYPE = :statusUpdateType,")
		   .append("RESOLVED_DATE = :resolvedDate,")
		   .append("STATUS = :statusId,")
		   .append("MODIFIED_DATE = :modifiedDate ")
		   .append("WHERE ")
		   .append("TICKET_ID = :ticketId")
		   .toString();
   
   
   /* QRY_TO_UPDATE_TICKET_STATUS FROM TICKET  */
   public static final String QRY_TO_UPDATE_TICKET_STATUS_INACTIVE = new StringBuilder("UPDATE TICKET TKT ")
		   .append("SET TKT.STATUS = :IN_STATUS, ")
		   .append("MODIFIED_DATE = :MODIFIED_DATE ")
		   .append("WHERE TKT.TICKET_ID IN ")
		   .append("(SELECT TICKET_ID FROM TICKET T WHERE T.BOOKING_ID = :BOOKING_ID AND T.STATUS = :STATUS )")
		   .toString();
   
   /* QRY_TO_UPDATE_TICKET_STATUS FROM TICKET  */
   public static final String QRY_TO_UPDATE_TICKET_REOPEN_STATUS = new StringBuilder("UPDATE TICKET ")
		   .append("SET ")
		   .append("INVIDUAL_TICKET_STATUS  = :departmentTicketStatusId,")
		   .append("TICKET_STATUS = :ticketStatusId,")
		   .append("STATUS_UPDATED_BY = :statusUpdateBy,")
		   .append("STATUS_UPDATE_TYPE = :statusUpdateType,")
		   .append("RESOLVED_DATE = :resolvedDate,")
		   .append("STATUS = :statusId,")
		   .append("RATING =  null,")
		   .append("DEPARTMENT_ID = null,")
		   .append("ASSIGNMENT_TO = null,")
		   .append("MODIFIED_DATE = :modifiedDate ")
		   .append("WHERE ")
		   .append("TICKET_ID = :ticketId")
		   .toString();
   
   /* QRY_TO_UPDATE_TICKET_ESCALATION_STATUS FROM TICKET_ESCCALATION  */
   public static final String QRY_TO_UPDATE_TICKET_ESCALATION_STATUS = new StringBuilder("UPDATE TICKET_ESCALATION ")
		   .append(" SET ")
		   .append(" MODIFIED_DATE  = SYSTIMESTAMP, ")
		   .append(" MAIL_OTP_APPROVAL  = null, ")
		   .append(" ACTION_EMP_ID  = :actionEmployeeId, ")
		   .append(" STATUS = 7 ")
		   .append(" WHERE ")
		   .append(" TICKET_ESCALATION_ID  = :ticketEscalationId")
		   .append(" AND TICKET_ID  = :ticketId")
		   .append(" AND STATUS  = :status ")
		   .toString();
   
   /* QRY_TO_UPDATE_TICKET_ESCALATION_STATUS FROM TICKET_ESCCALATION  */
   public static final String QRY_TO_UPDATE_TICKET_ESCALATION_STATUS_WTO_TICKET_ID = new StringBuilder("UPDATE TICKET_ESCALATION ")
		   .append(" SET ")
		   .append(" MODIFIED_DATE  = SYSTIMESTAMP, ")
		   .append(" MAIL_OTP_APPROVAL  = null, ")
		   .append(" STATUS = 7 ")
		   .append(" WHERE ")
		   .append("  TICKET_ID  = :ticketId")
		   .append(" AND STATUS  = :status ")
		   .toString();
   
   /* QRY_TO_UPDATE_TICKET_ESTIMATED_RESOLVED_DATE FROM TICKET  */
   public static final String QRY_TO_UPDATE_TICKET_ESTIMATED_RESOLVED_DATE = new StringBuilder("UPDATE TICKET ")
		   .append("SET ")
		   .append("ESTIMATED_RESOLVED_DATE = :estimatedResolvedDate, ")
		   .append("ESTIMATED_RESOLVED_DATE_STATUS = :estimatedResolvedDateStatus,")
		   .append("MODIFIED_DATE = :modifiedDate ")
		   .append("WHERE ")
		   .append("TICKET_ID = :ticketId ")
		   .append("AND STATUS = :statusId ")
		   .toString();
   
   /* QRY_TO_UPDATE_TICKET_ESTIMATED_RESOLVED_DATE_STATUS FROM TICKET  */
   public static final String QRY_TO_UPDATE_TICKET_ESTIMATED_RESOLVED_DATE_STATUS = new StringBuilder("UPDATE TICKET ")
		   .append("SET ")
		   .append("ESTIMATED_RESOLVED_DATE_STATUS = :estimatedResolvedDateStatus,")
		   .append("MODIFIED_DATE = :modifiedDate ")
		   .append("WHERE ")
		   .append("TICKET_ID = :ticketId ")
		   .append("AND STATUS = :statusId ")
		   .toString();
		
   /* QRY_TO_GET_TICKET_CONVERSATION_DOCUMENTS_STATUS  FROM TICKET_CONVRSATION_DOCUMENTS */
   public static final String TICKET_CONVRSATION_DOCUMENTS_SEQ_ID = "SELECT TICKET_CONVRSATION_DOCUMENTS_SEQ.NEXTVAL FROM DUAL";
   
   /* QRY_TO_UPDATE_TICKET_CONVERSATION_DOCUMENTS_STATUS FROM TICKET_CONVRSATION_DOCUMENTS  */
   public static final String QRY_TO_UPDATE_TICKET_CONVERSATION_DOCUMENTS_STATUS = new StringBuilder(" UPDATE ")
		   .append("TICKET_CONVRSATION_DOCUMENTS ")
		   .append("SET ")
		   .append("PUBLIC_DOCUMENTS = (SELECT PUBLIC_DOCUMENTS FROM TICKET_CONVRSATION_DOCUMENTS WHERE TICKET_CONVERSATION_DOC_ID = :ticketConversationDocumentId) || :publicDocuments,")
		   .append("MODIFIED_DATE = :modifiedDate ")
		   .append("WHERE ")
		   .append("TICKET_CONVERSATION_DOC_ID = :ticketConversationDocumentId ")
		   .append("AND STATUS_ID = :statusId ")
		   .toString();
   
	  /* QRY_TO_UPDATE_TICKET_DETAILS FROM TICKET  */
   public static final String QRY_TO_UPDATE_TICKET_DETAILS_WTO_DEPATMENT = new StringBuilder("UPDATE TICKET ")
		   .append("SET ")
		 //.append("ASSIGNMENT_TO = :ASSIGNMENT_TO,")
		   .append("ASSIGNED_BY = :ASSIGNED_BY,")
		   .append("DEPARTMENT_ID = :DEPARTMENT_ID, ")
		   .append("MODIFIED_DATE = SYSTIMESTAMP ")
		   .append("WHERE ")
		   .append("TICKET_ID = :TICKET_ID ")
		   .append("AND STATUS = :STATUS ")
		   .toString();
   
	  /* QRY_TO_UPDATE_TICKET_DETAILS FROM TICKET  */
    public static final String QRY_TO_UPDATE_TICKET_DETAILS_WTO_EMPLOYEE = new StringBuilder("UPDATE TICKET ")
		   .append("SET ")
		   .append("ASSIGNMENT_TO = :ASSIGNMENT_TO,")
		   .append("ASSIGNED_BY = :ASSIGNED_BY,")
		   .append("MODIFIED_DATE = SYSTIMESTAMP ")
		 //.append("DEPARTMENT_ID = :DEPARTMENT_ID ")
		   .append("WHERE ")
		   .append("TICKET_ID = :TICKET_ID ")
		   .append("AND STATUS = :STATUS ")
		   .toString();

    /* QRY_TO_INSERT_TICKET_SEEK_INFO_DETAILS FROM TICKET_SEEK_INFO  */
    public static final String  QRY_TO_INSERT_TICKET_SEEK_INFO_DETAILS = new StringBuilder(" INSERT ")
    		.append("INTO TICKET_SEEK_INFO")
    		.append("(")
    		.append("TICKET_SEEK_INFO_ID,")
    		.append("TICKET_ID,")
    		.append("FROM_DEPT_ID,")
    		.append("FROM_ID,")
    		.append("FROM_TYPE,")
    		.append("TO_ID,")
    		.append("TO_TYPE,")
    		.append("MESSAGE,")
    		.append("VISIBLE_TYPE,")
    		.append("DOCUMENT_LOCATION,")
    		.append("CHAT_DATE,")
    		.append("TO_DEPT_ID,")
    		.append("STATUS_ID,")
    		.append("TICKET_CONVERSATION_DOC_ID,")
    		.append("TICKET_SEEKINFO_REQUEST_ID,")
    		.append("CREATED_DATE ")
    		.append(")")
    		.append(" VALUES ")
    		.append("(")
    		.append("TICKET_SEEK_INFO_SEQ.NEXTVAL,")
    	    .append(":TICKET_ID,")
    		.append(":FROM_DEPT_ID,")
    		.append(":FROM_ID,")
    		.append(":FROM_TYPE,")
    		.append(":TO_ID,")
    		.append(":TO_TYPE,")
    		.append(":MESSAGE,")
    		.append(":VISIBLE_TYPE,")
    		.append(":DOCUMENT_LOCATION,")
    		.append(":CHAT_DATE,")
    		.append(":TO_DEPT_ID,")
    		.append(":STATUS_ID,")
    		.append(":TICKET_CONVERSATION_DOC_ID,")
    		.append(":TICKET_SEEKINFO_REQUEST_ID,")
    		.append(":CREATED_DATE")
            .append(")")
    		.toString();
    
    /* QRY_TO_SELECT_TICKET_SEEK_INFO_DETAILS FROM TICKET_SEEK_INFO  */
    public static final String  QRY_TO_SELECT_TICKET_SEEK_INFO_DETAILS = new StringBuilder(" SELECT ")
    		.append("TICKET_SEEK_INFO.TICKET_SEEK_INFO_ID AS TICKET_SEEK_INFO_ID,")
    		.append("TICKET_SEEK_INFO.TICKET_ID AS  TICKET_ID,")
    		.append("TICKET_SEEK_INFO.FROM_DEPT_ID AS FROM_DEPT_ID,")
    		.append("TICKET_SEEK_INFO.FROM_ID AS FROM_ID,")
    		.append("TICKET_SEEK_INFO.FROM_TYPE AS FROM_TYPE,")
    		.append("TICKET_SEEK_INFO.TO_ID AS TO_ID,")
    		.append("TICKET_SEEK_INFO.TO_TYPE AS  TO_TYPE,")
    		.append("TICKET_SEEK_INFO.VISIBLE_TYPE AS  VISIBLE_TYPE,")
    		.append("TICKET_SEEK_INFO.DOCUMENT_LOCATION AS DOCUMENT_LOCATION,")
    		.append("TICKET_SEEK_INFO.CHAT_DATE AS CHAT_DATE,")
    		.append("TICKET_SEEK_INFO.TO_DEPT_ID AS TO_DEPT_ID,")
    		.append("TICKET_SEEK_INFO.TICKET_CONVERSATION_DOC_ID AS TICKET_CONVERSATION_DOC_ID,")
    		.append("TICKET_SEEK_INFO.MESSAGE AS MESSAGE,")
    		.append("TICKET_SEEK_INFO.TICKET_SEEKINFO_REQUEST_ID AS TICKET_SEEKINFO_REQUEST_ID,")
    		.append("TICKET_SEEK_INFO.STATUS_ID AS STATUS_ID,")
    		.append("TICKET_SEEK_INFO.CREATED_DATE AS CREATED_DATE ")
    		.append("FROM TICKET_SEEK_INFO TICKET_SEEK_INFO ")
    		.append("INNER JOIN TICKET T ")
    		.append("ON T.TICKET_ID = TICKET_SEEK_INFO.TICKET_ID AND T.STATUS = 6 ")
    		.toString();
    
    /* QRY_TO_SELECT_TICKET_SEEK_INFO_DETAILS FROM TICKET_SEEK_INFO  */
    public static final String  QRY_TO_SELECT_DISTINCT_TICKET_SEEK_INFO_DETAILS = new StringBuilder(" SELECT ")
    		.append("distinct TICKET_SEEK_INFO.TICKET_ID AS  TICKET_ID ")
    		.append("FROM TICKET_SEEK_INFO TICKET_SEEK_INFO ")
    		.append("INNER JOIN TICKET T ")
    		.append("ON T.TICKET_ID = TICKET_SEEK_INFO.TICKET_ID AND T.STATUS = 6 ")
    		.toString();
    
    /* QRY_TO_GET_TICKET_DETAILS COUNT FROM TICKET */
	public static final String QRY_TO_SELECT_TICKET_SEEK_INFO_COUNT = new StringBuilder(" SELECT ")
		    .append("count(distinct TICKET_SEEK_INFO.TICKET_ID) ")
			.append("FROM TICKET_SEEK_INFO TICKET_SEEK_INFO ")
			.append("INNER JOIN TICKET T ")
    		.append("ON T.TICKET_ID = TICKET_SEEK_INFO.TICKET_ID AND T.STATUS = 6 ")
			.toString();
    
    /* QRY_TO_INSERT_TICKET_SEEKINFO_REQUEST  FROM TICKET_SEEKINFO_REQUEST  */
    public static final String  QRY_TO_INSERT_TICKET_SEEKINFO_REQUEST = new StringBuilder(" INSERT ")
    		.append("INTO TICKET_SEEKINFO_REQUEST")
    		.append("(")
    		.append("TICKET_SEEKINFO_REQUEST_ID,")
    		.append("TICKET_ID,")
    		.append("FROM_ID,")
    		.append("FROM_TYPE,")
    		.append("FROM_DEPT_ID,")
    		.append("TO_ID,")
    		.append("TO_TYPE,")
    		.append("TO_DEPT_ID,")
    		.append("STATUS_ID,")
    		.append("CREATED_DATE")
    		.append(" )")
    		.append("VALUES")
    		.append("(")
    		.append("TICKET_SEEKINFO_REQUEST_SEQ.NEXTVAL,")
    		.append(":TICKET_ID,")
    		.append(":FROM_ID,")
    		.append(":FROM_TYPE,")
    		.append(":FROM_DEPT_ID,")
    		.append(":TO_ID,")
    		.append(":TO_TYPE,")
    		.append(":TO_DEPT_ID,")
    		.append(":STATUS_ID,")
    		.append(":CREATED_DATE")
    		.append(")")
    		.toString();  
    
    /* QRY_TO_GET_TICKET_SEEKINFO_REQUEST_DETAILS FROM TICKET_SEEKINFO_REQUEST_DETAILS TABLE */
    public static final String QRY_TO_GET_TICKET_SEEKINFO_REQUEST_DETAILS=new StringBuilder("SELECT ")
    		.append("TSR.TICKET_SEEKINFO_REQUEST_ID AS TICKET_SEEKINFO_REQUEST_ID,")
    		.append("TSR.FROM_ID AS FROM_ID,")
    		.append("TSR.FROM_TYPE AS FROM_TYPE,")
    		.append("TSR.FROM_DEPT_ID AS FROM_DEPT_ID,")
    		.append("TSR.TO_DEPT_ID AS TO_DEPT_ID,")
    		.append("TSR.TICKET_ID AS TICKET_ID,")
    		.append("TSR.TO_ID AS TO_ID,")
    		.append("TSR.TO_TYPE AS TO_TYPE,")
    		.append("TSR.STATUS_ID AS STATUS_ID,")
    		.append("TSR.CREATED_DATE AS CREATED_DATE ")
    		.append("FROM TICKET_SEEKINFO_REQUEST TSR ")   
    		.toString();
    
    /* QRY_TO_INSERT_TICKET_STATISTICS_DETAILS FROM TICKET_STATISTICS TABLE */
   /* public static final String QRY_TO_INSERT_TICKET_STATISTICS_DETAILS =new StringBuilder(" INSERT ")
    		.append("INTO TICKET_STATISTICS")
    		.append("(")
    		.append("TICKET_STATISTICS_ID,")
    		.append("TICKET_ID,")
    		.append("FROM_ID,")
    		.append("FROM_TYPE,")
    		.append("FROM_DEPT_ID,")
    		.append("TO_ID,")
    		.append("TO_TYPE,")
    		.append("TO_DEPT_ID,")
    		.append("CREATED_DATE,")
    		.append("STATUS_ID")
    		.append(" )")
    		.append(" VALUES ")
    		.append("(")
    		.append(" TICKET_STATISTICS_SEQ.NEXTVAL,")
    		.append(":TICKET_ID,")
    		.append(":FROM_ID,")
    		.append(":FROM_TYPE,")
    		.append(":FROM_DEPT_ID,")
    		.append(":TO_ID,")
    		.append(":TO_TYPE,")
    		.append(":TO_DEPT_ID,")
    		.append(":CREATED_DATE,")
    		.append(":STATUS_ID")
    		.append(")")
    		.toString();*/

    /* QRY_TO_INSERT_TICKET_STATISTICS_DETAILS FROM TICKET_STATISTICS TABLE */
    public static final String QRY_TO_INSERT_TICKET_STATISTICS_DETAILS =new StringBuilder(" INSERT ")
    		.append(" INTO TICKET_STATISTICS ")
    		.append(" ( ")
    		.append(" TICKET_STATISTICS_ID,")
    		.append(" TICKET_ID,")
    		.append(" DEPARTMENT_ID,")
    		.append(" ASSIGNMENT_TO,")
    		.append(" ASSIGNED_BY,")
    		.append(" ASSIGNED_DATE,")
    		.append(" ESTIMATED_RESOLVED_DATE,")
    		.append(" ESTIMATED_RESOLVED_DATE_STATUS,")
    		.append(" RESOLVED_DATE,")
    		.append(" STATUS_UPDATED_BY,")
    		.append(" STATUS_UPDATED_TYPE,")
    		.append(" TICKET_STATUS,")
    		.append(" INVIDUAL_TICKET_STATUS,")
    		.append(" STATUS,")
    		.append(" CREATED_DATE, ")
    		.append(" TICKET_TYPE_ID,")
    		.append(" TICKET_TYPE_DETAILS_ID, ")
    		.append(" RATING, ")
    		.append(" FEEDBACK_DESC, ")
    		.append(" TICKET_TYPE_CHANGE_REQUEST, ")
    		.append(" MODIFIED_DATE, ")
    		.append(" COMPLAINT_STATUS, ")
    		.append(" COMPLAINT_CREATED_BY, ")
    		.append(" COMPLAINT_CREATED_DATE, ")
    		.append(" BOOKING_ID, ")
    		.append(" OLD_BOOKING_ID ")
    		.append(" ) ")
    		.append(" VALUES  ")
    		.append(" ( ")
    		.append(" TICKET_STATISTICS_SEQ.NEXTVAL, ")
    		.append(" :ticketId,")
    		.append(" :departmentId,")
    		.append(" :assignmentTo,")
    		.append(" :assignedBy,")
    		.append(" :assignedDate,")
    		.append(" :estimatedResolvedDate,")
    		.append(" :estimatedResolvedDateStatus,")
    		.append(" :resolvedDate,")
    		.append(" :statusUpdatedBy,")
    		.append(" :statusUpdatedType,")
    		.append(" :ticketStatus,")
    		.append(" :invidualTicketStatus,")
    		.append(" :status,")
    		.append(" :createdDate, ")
    		.append(" :ticketTypeId, ")
    		.append(" :ticketTypeDetailsId, ")
    		.append(" :rating, ")
    		.append(" :feedbackDesc, ")
    		.append(" :ticketTypeChangeRequest, ")
    		.append(" :modifiedDate, ")
    		.append(" :complaintStatus, ")
    		.append(" :complaintCreatedBy, ")
    		.append(" :complaintCreatedDate, ")
    		.append(" :flatBookingId, ")
    		.append(" :oldBookingId ")
    		.append(" )")
    		.toString();
    
    /* QRY_TO_GET_TICKET_STATISTICS_DETAILS FROM TICKET_STATISTICS TABLE */
    public static final String QRY_TO_GET_TICKET_STATISTICS_DETAILS =new StringBuilder(" SELECT ")
    		  .append(" TS.TICKET_STATISTICS_ID, ")
    		  .append(" TS.TICKET_ID,")
    		  .append(" TS.DEPARTMENT_ID,")
    		  .append(" TS.ASSIGNMENT_TO,")
    		  .append(" TS.ASSIGNED_BY,")
    		  .append(" TS.ASSIGNED_DATE,")
    		  .append(" TS.ESTIMATED_RESOLVED_DATE,")
    		  .append(" TS.ESTIMATED_RESOLVED_DATE_STATUS,")
    		  .append(" TS.RESOLVED_DATE,")
    		  .append(" TS.STATUS_UPDATED_BY,")
    		  .append(" TS.STATUS_UPDATED_TYPE,")
    		  .append(" TS.TICKET_STATUS,")
    		  .append(" TS.INVIDUAL_TICKET_STATUS,")
    		  .append(" TS.STATUS,")
    		  .append(" TS.CREATED_DATE,")
    		  .append(" TS.TICKET_TYPE_ID,")
    		  .append(" TS.TICKET_TYPE_DETAILS_ID,")
    		  .append(" TS.RATING,")
    		  .append(" TS.FEEDBACK_DESC,")
    		  .append(" TS.TICKET_TYPE_CHANGE_REQUEST,")
    		  .append(" TS.MODIFIED_DATE" )
    		  .append(" FROM TICKET_STATISTICS TS")
    		  .append(" WHERE TS.STATUS = :STATUS_ID ")
    		  .toString();
    
    /* QRY_TO_INSERT_TICKET_ESCA_EXT_APPROVAL  FROM TICKET_ESCA_EXT_APPROVAL  */
    public static final String  QRY_TO_INSERT_TICKET_ESCA_EXT_APPROVAL = new StringBuilder(" INSERT ")
    		.append("INTO TICKET_ESCA_EXT_APPROVAL")
    		.append("(")
    		.append("ID,")                               
    		.append("TICKET_ID,")
    		.append("CURRENT_ESCALATION_DATE,")
    		.append("EXTENDED_ESCALATION_DATE,")
    		.append("REQUESTED_BY,")
    		//.append("REQUESTED_TO,")
    		.append("APPROVED_STATUS,")
    		.append("COMMENTS,")
    		.append("CREATED_DATE,")
    		.append("MODIFIED_DATE,")
    		.append("TICKET_ESCA_EXT_APR_LVL_MAP_ID,")
    		.append("APPROVED_ESCALATION_DATE,")
    		.append("APPROVED_BY,")
    		.append("STATUS )")
    		.append("VALUES")
    		.append("(")
    		.append("TICKET_ESCA_EXT_APPROVAL_SEQ.NEXTVAL,")
    		.append(":ticketId,")
    		.append(":currentEscalationDateTimestamp,")
    		.append(":extendedEscalationDate,")
    		.append(":requestedBy,")
    		//.append(":requestedTo,")
    		.append(":approvedStatus,")
    		.append(":comments,")
    		.append(":createdDate,")
    		.append(":modifiedDate,")
    		.append(":ticketEscalationExtenstionApprovalLevelMappingId,")
    		.append(":approvedEscalationDate,")
    		.append(":approvedBy,")
    		.append(":status)")
    		.toString();  
    
    /* QRY_TO_GET_TICKET_ESCA_EXT_APPROVAL FROM TICKET_ESCA_EXT_APPROVAL */
	public static final String QRY_TO_GET_TICKET_ESCA_EXT_APPROVAL  = new StringBuilder("SELECT ")
			.append("TEEA.ID AS ID,")                                        
			.append("TEEA.TICKET_ID AS TICKET_ID,")                      
			.append("TEEA.CURRENT_ESCALATION_DATE AS CURRENT_ESCALATION_DATE,")
			.append("TEEA.EXTENDED_ESCALATION_DATE AS EXTENDED_ESCALATION_DATE,")
			.append("TEEA.REQUESTED_BY AS REQUESTED_BY,")
			//.append("TEEA.REQUESTED_TO AS REQUESTED_TO,")
			.append("TEEA.APPROVED_STATUS AS APPROVED_STATUS,")
			.append("TEEA.COMMENTS AS COMMENTS,")
			.append("TEEA.CREATED_DATE AS CREATED_DATE,")
			.append("TEEA.MODIFIED_DATE AS MODIFIED_DATE,")
			.append("TEEA.STATUS AS  STATUS, ")
			.append("TEEA.TICKET_ESCA_EXT_APR_LVL_MAP_ID AS TICKET_ESCA_EXT_APR_LVL_MAP_ID,")
			.append("TEEA.APPROVED_ESCALATION_DATE AS APPROVED_ESCALATION_DATE,")
			.append("TEEA.APPROVED_BY AS APPROVED_BY ")
            .append("FROM TICKET_ESCA_EXT_APPROVAL  TEEA ")
            .toString();
	
	
	/* QRY_TO_GET_TICKET_ESCA_EXT_APPROVAL_BY_EMPLOYEE_ID FROM TICKET_ESCA_EXT_APPROVAL  */
	public static final String QRY_TO_GET_TICKET_ESCA_EXT_APPROVAL_BY_EMPLOYEE_ID  = new StringBuilder(" SELECT ")
			.append(" TEEA.ID AS ID,")
			.append(" TEEA.TICKET_ID AS TICKET_ID,")
			.append(" TEEA. CURRENT_ESCALATION_DATE AS CURRENT_ESCALATION_DATE,")
			.append(" TEEA. EXTENDED_ESCALATION_DATE AS EXTENDED_ESCALATION_DATE,")
			.append(" TEEA. REQUESTED_BY AS REQUESTED_BY,")
			.append(" TEEA. APPROVED_STATUS AS APPROVED_STATUS,")
			.append(" TEEA. COMMENTS AS COMMENTS,")
			.append(" TEEA. CREATED_DATE AS CREATED_DATE,")
			.append(" TEEA. MODIFIED_DATE AS MODIFIED_DATE,")
			.append(" TEEA. STATUS AS STATUS,")
			.append(" TEEA. TICKET_ESCA_EXT_APR_LVL_MAP_ID AS TICKET_ESCA_EXT_APR_LVL_MAP_ID,")
			.append(" TEEA. APPROVED_ESCALATION_DATE AS APPROVED_ESCALATION_DATE,")
			.append(" TEEA. APPROVED_BY AS APPROVED_BY,")
			.append(" TEEALM.NO_OF_DAYS AS NO_OF_DAYS ")
			.append(" FROM TICKET_ESCA_EXT_APPROVAL  TEEA ")
			.append(" INNER JOIN TICKET_ESCA_EXT_APR_LVL_MAP TEEALM ")
			.append(" ON TEEA.TICKET_ESCA_EXT_APR_LVL_MAP_ID = TEEALM.ID AND TEEA.APPROVED_STATUS = :APPROVED_STATUS AND TEEA.STATUS = 6")
			.append(" INNER JOIN TICKET_ESC_EXT_APR_LVL_EMP_MAP TEEALEM ")
			.append(" ON TEEALEM.TICKET_ESCA_EXT_APR_LVL_MAP_ID = TEEALM.ID AND TEEALEM.STATUS_ID = :STATUS_ID ")
			.append(" INNER JOIN TICKET T ")
			.append(" ON T.TICKET_ID = TEEA.TICKET_ID AND (T.TICKET_STATUS <> '11' AND T.STATUS <> '7' AND (T.ESTIMATED_RESOLVED_DATE_STATUS IS  NULL OR T.ESTIMATED_RESOLVED_DATE_STATUS <> '17')) ")
		    .append(" WHERE TEEALEM.EMPLOYEE_ID = :EMPLOYEE_ID")
			.toString();
	
	   /* QRY_TO_GET_TICKET_ESC_LVL_EMP_MAP  */
	   public static final String QRY_TO_GET_TICKET_ESC_LVL_EMP_MAP = new StringBuilder("SELECT ")
					  .append(" TELEM.ID AS ID,")
					  .append(" TELEM.EMPLOYEE_ID AS EMPLOYEE_ID,")
					  .append(" TELEM.TICKET_ESC_LVL_MAP_ID AS TICKET_ESC_LVL_MAP_ID,")
					  .append(" TELEM.STATUS_ID AS STATUS_ID,")
					  .append(" TELEM.CREATED_DATE AS CREATED_DATE,")
					  .append(" TELEM.MODIFIED_DATE AS MODIFIED_DATE")
					  .append(" FROM TICKET_ESC_LEVEL_EMP_MAP TELEM ")
					  .append(" WHERE TELEM.TICKET_ESC_LVL_MAP_ID = :TICKET_ESC_LVL_MAP_ID AND TELEM.STATUS_ID = :STATUS_ID")
					   .toString();

	  /* QRY_TO_GET_TICKET_ESCA_EXT_APPROVAL_JOIN_TICKET_ESCA_EXT_APR_LVL_MAP FROM TICKET_ESCA_EXT_APPROVAL */
		public static final String QRY_TO_GET_TICKET_ESCA_EXT_APPROVAL_JOIN_TICKET_ESCA_EXT_APR_LVL_MAP  = new StringBuilder("SELECT ")
				.append(" TEEA.ID AS ID,")
				.append(" TEEA.TICKET_ID AS TICKET_ID,")
				.append(" TEEA. CURRENT_ESCALATION_DATE AS CURRENT_ESCALATION_DATE,")
				.append(" TEEA. EXTENDED_ESCALATION_DATE AS EXTENDED_ESCALATION_DATE,")
				.append(" TEEA. REQUESTED_BY AS REQUESTED_BY,")
				.append(" TEEA. APPROVED_STATUS AS APPROVED_STATUS,")
				.append(" TEEA. COMMENTS AS COMMENTS,")
				.append(" TEEA. CREATED_DATE AS CREATED_DATE,")
				.append(" TEEA. MODIFIED_DATE AS MODIFIED_DATE,")
				.append(" TEEA. STATUS AS STATUS,")
				.append(" TEEA. TICKET_ESCA_EXT_APR_LVL_MAP_ID AS TICKET_ESCA_EXT_APR_LVL_MAP_ID,")
				.append(" TEEA. APPROVED_ESCALATION_DATE AS APPROVED_ESCALATION_DATE,")
				.append(" TEEA. APPROVED_BY AS APPROVED_BY,")
				.append(" TEPLM.LEVEL_ID AS LEVEL_ID ")
				.append(" FROM TICKET_ESCA_EXT_APPROVAL TEEA")
				.append(" INNER JOIN TICKET_ESCA_EXT_APR_LVL_MAP TEPLM")
				.append(" ON TEPLM.ID = TEEA.TICKET_ESCA_EXT_APR_LVL_MAP_ID")
				.append(" INNER JOIN TICKET T")
				.append(" ON TEEA.TICKET_ID = T.TICKET_ID AND (T.TICKET_STATUS <> '11' AND T.STATUS <> '7' AND (T.ESTIMATED_RESOLVED_DATE_STATUS IS  NULL OR T.ESTIMATED_RESOLVED_DATE_STATUS <> '17'))")
				.append(" WHERE TEEA.TICKET_ID = :TICKET_ID AND TEEA.APPROVED_STATUS IN (:APPROVED_STATUS)  ORDER BY TEEA.ID ")
				.toString();
	
	/* QRY_TO_CHECK_TICKET_ESCA_EXT_APPROVAL_STATUS_15*/
	public static final String QRY_TO_CHECK_TICKET_ESCA_EXT_APPROVAL_STATUS  = new StringBuilder(" INNER JOIN TICKET T")
			  .append(" ON TEEA.TICKET_ID = T.TICKET_ID AND (T.TICKET_STATUS <> '11' AND T.STATUS <> '7' AND (T.ESTIMATED_RESOLVED_DATE_STATUS IS  NULL OR T.ESTIMATED_RESOLVED_DATE_STATUS <> '17'))")
			  .append(" WHERE TEEA.TICKET_ID = :TICKET_ID AND TEEA.APPROVED_STATUS IN (:APPROVED_STATUS) AND TEEA.STATUS = 6 ")
			  .toString();
	
	
	/* QRY_TO_GET_EMPLOYEE_LEAVE_DETAILS FROM EMPLOYEE_LEAVE_DETAILS */
    public static final String QRY_TO_GET_EMPLOYEE_LEAVE_DETAILS  = new StringBuilder("SELECT ")
		    .append("ELD.EMPLOYEE_LEAVE_DETAILS_ID AS EMPLOYEE_LEAVE_DETAILS_ID,")
		    .append("ELD.EMPLOYEE_ID   AS EMPLOYEE_ID,")
		    .append("ELD.START_DATE    AS START_DATE,")
		    .append("ELD.END_DATE      AS END_DATE,")
		    .append("ELD.REJOIN_DATE   AS REJOIN_DATE,")
		    .append("ELD.APPROVED_BY   AS APPROVED_BY,")
		    .append("ELD.COMMENTS      AS COMMENTS,")
		    .append("ELD.STATUS        AS STATUS,")
		    .append("ELD.CREATED_DATE  AS CREATED_DATE,")
		    .append("ELD.MODIFIED_DATE AS MODIFIED_DATE ")
		    .append("FROM EMPLOYEE_LEAVE_DETAILS ELD ")
            .toString();
	
	/* QRY_TO_UPDATE_TICKET_ESCA_EXT_APPROVAL FROM TICKET_ESCA_EXT_APPROVAL */
	public static final String QRY_TO_UPDATE_TICKET_ESCA_EXT_APPROVAL  = new StringBuilder(" UPDATE ")
			.append(" TICKET_ESCA_EXT_APPROVAL ")
			.append(" SET ")
			.append(" APPROVED_STATUS = :approvedStatus,")
			.append(" MODIFIED_DATE = :modifiedDate, ")
			.append(" APPROVED_ESCALATION_DATE  = :approvedEscalationDate, ")
			.append(" APPROVED_BY = :approvedBy, ")
			.append(" STATUS = 7 ")
			.append(" WHERE ")
			.append(" ID = :id  ")
			.append(" AND TICKET_ID = :ticketId ")
			.append(" AND STATUS = :status ")
			.toString();
	
	/* QRY_TO_INSERT_EMPLOYEE_LEAVE_DETAILS FROM EMPLOYEE_LEAVE_DETAILS */
	public static final String QRY_TO_INSERT_EMPLOYEE_LEAVE_DETAILS = new StringBuilder(" INSERT ")
			.append(" INTO EMPLOYEE_LEAVE_DETAILS ")
			.append(" ( ")
			.append(" EMPLOYEE_LEAVE_DETAILS_ID,")
			.append(" EMPLOYEE_ID,")
			.append(" START_DATE,")
			.append(" END_DATE,")
			.append(" REJOIN_DATE,")
			.append(" APPROVED_BY,")
			.append(" COMMENTS,")
			.append(" STATUS,")
			.append(" CREATED_DATE,")
			.append(" MODIFIED_DATE ")
			.append(" ) ")
			.append(" VALUES ")
	        .append("(")
	        .append(" EMPLOYEE_LEAVE_DETAILS_SEQ.NEXTVAL,")
	        .append(":employeeId,")
	        .append(":startDate,")
	        .append(":endDate,")
	        .append(":rejoinDate,")
	        .append(":approvedBy,")
	        .append(":comments,")
	        .append(":status,")
	        .append(":createdDate,")
	        .append(":modifiedDate")
	        .append(" ) ")
	        .toString();
	
	/* QRY_TO_GET_CUSTOMER_INVIDUAL_TICKET_INFO FROM SERVICE_TICKET_INFO TABLE */
	public static final String QRY_TO_GET_INVIDUAL_TICKET_DETAILS  = new StringBuilder(" SELECT ")
           .append("SR.SER_REQ_ID AS TICKETID,")
	       .append("SR.DESCRIPTION AS TICKET_DESCRIPTION,") 
	       .append("S.STATUS AS TICKET_STATUS,")
	       .append("SR.TITLE AS TICKET_TITLE,")
           .append("SR.CREATED_BY AS ACTUAL_CUSTNO,")
	       .append("concat(concat(EMP.FIRST_NAME,' '),EMP.LAST_NAME) AS ASSIGNED_EMPLOYEE,")
	       .append("SR.CREATED_DATE AS TICKET_CREATED_DATE,") 
	       .append("DEPT.DEPT_ID AS DEPT_ID,") 
	       .append("DEPT.NAME AS DEPT_NAME,") 
	       .append("DEPT.DESCRIPTION AS DEPT_DESC,")
	       .append("STI.COMMENTS AS COMMENTS,") 
	       .append("STI.CUST_NO AS CUSTOMER_NO,")
	       .append("STI.EMP_ID AS EMPLOYEE_ID,")
	       .append("(SELECT concat(concat(EMP.FIRST_NAME,' '),EMP.LAST_NAME) FROM EMPLOYEE EMP WHERE EMP.EMP_ID=STI.EMP_ID) AS EMP_NAME,")
	       .append("(SELECT concat(concat(CUST.FIRST_NAME,' '), CUST.LAST_NAME) FROM CUSTOMER CUST WHERE CUST.CUST_ID = STI.CUST_NO) AS CUST_NAME,")
	       .append("STI.CREATED_DATE AS COMMENT_TIMESTAMP ")
	       .append(" FROM STATUS S,DEPARTMENT DEPT ,EMPLOYEE EMP,SERVICE_REQUEST SR left outer join SERVICE_TICKET_INFO  STI ")
	       .append(" on  SR.SER_REQ_ID  = STI.SER_REQ_ID ")
	       .append(" where  SR.STATUS_ID = S.STATUS_ID and SR.ASSIGMENT_TO = EMP.EMP_ID and DEPT.DEPT_ID = SR.DEPT_ID  and SR.SER_REQ_ID =  :SER_REQ_ID ")
	       .toString();
	
	/* QRY_TO_GET_TICKET_OWNER_EMPLOYEE_DETAILS */
	public static final String QRY_TO_GET_TICKET_OWNER_EMPLOYEE_DETAILS  = new StringBuilder(" SELECT ")
	           .append("CONCAT(CONCAT(E.FIRST_NAME,' '),E.LAST_NAME) AS EMP_NAME FROM ")
		       .append("TICKET T JOIN TICKET_TYPE_DETAILS TTD ") 
		       .append("ON(TTD.TICKET_TYPE_DETAILS_ID=T.TICKET_TYPE_DETAILS_ID) ")
		       .append("JOIN EMPLOYEE_DETAILS ED ON(ED.EMP_DETAILS_ID=TTD.EMPLOYEE_DETAILS_ID) ")
	           .append("JOIN EMPLOYEE E ON(E.CS_EMP_ID=ED.EMPLOYEE_ID) ")
		       .append("WHERE T.TICKET_ID=:TICKET_ID AND T.STATUS=:STATUS_ID ")
		       .toString();
	
	/* QRY_TO_GET_CHANGE_TICKET_OWNER_DROP_DOWN */
	public static final String QRY_TO_GET_CHANGE_TICKET_OWNER_DROP_DOWN  = new StringBuilder(" SELECT ")
	           .append("CONCAT(CONCAT(CONCAT(CONCAT(E.FIRST_NAME,' '),E.LAST_NAME),'- '),D.NAME) ")
		       .append("AS EMP_NAME, D.DEPT_ID AS DEPT_ID , ED.EMPLOYEE_ID AS EMP_ID, ") 
		       .append("ED.EMP_DETAILS_ID AS EMP_DET_ID ")
		       .append("FROM EMPLOYEE_MENU_SUBMENU_MAPPING EMSM ")
	           .append("JOIN EMPLOYEE_SUBMENU_SITE_MAPPING ESSM ")
		       .append("ON(ESSM.MENU_SUB_MENU_MAPPING_ID=EMSM.MENU_SUB_MENU_MAPPING_ID) ")
		       .append("JOIN EMPLOYEE_ROLE_MENU_GROUPING ERMG ")
	           .append("ON(ESSM.MENU_SUB_MENU_MAPPING_ID=ERMG.MENU_MAPPING_ID) ")
		       .append("JOIN DEPARTMENT_ROLE_MAPPING DRM ")
		       .append("ON(DRM.DEPARTMENT_ROLE_MAPPING_ID=ERMG.DEPARTMENT_ROLE_MAPPING_ID) ")
		       .append("JOIN EMPLOYEE_DEPARTMENT_MAPING EDM  ")
	           .append("ON(EDM.DEPARTMENT_ROLE_MAPPING_ID=ERMG.DEPARTMENT_ROLE_MAPPING_ID) ")
		       .append("JOIN DEPARTMENT D ON(D.DEPT_ID=DRM.DEPT_ID) ")
		       .append("JOIN EMPLOYEE E ON(E.CS_EMP_ID=EDM.EMPLOYEE_ID) ")
		       .append("JOIN EMPLOYEE_DETAILS ED ON (ED.EMPLOYEE_ID=E.CS_EMP_ID)  ")
	           .append("WHERE EMSM.MODULE_ID=:MODULE_ID AND EMSM.SUBMODULE_ID=:SUB_MODULE_ID ")
		       .append("AND ESSM.SITE_ID IN(:SITE_IDS) AND D.DEPT_ID=:DEPT_ID AND ESSM.STATUS_ID=:STATUS_ID ")
		       .append("ORDER BY EMP_NAME ")
		       .toString();
	
	/* QRY_TO_GET_CHANGE_TICKET_OWNER_DROP_DOWN */
	public static final String QRY_TO_CHANGE_TICKET_OWNER  = new StringBuilder(" UPDATE TICKET T  ")
	           .append("SET T.TICKET_TYPE_DETAILS_ID=:TICKET_TYPE_DETAILS_ID, ")
	           .append(" T.MODIFIED_DATE= SYSTIMESTAMP ")
	           
		       /*.append("(SELECT TTD.TICKET_TYPE_DETAILS_ID ") 
		       .append("FROM TICKET_TYPE_DETAILS TTD WHERE ")
		       //Uncondition the SITE_ID  
		       .append("TTD.SITE_ID= ")
	           .append("(SELECT BD.SITE_ID FROM FLAT_BOOKING FB ")
		       .append("JOIN FLAT_DETAILS FD ON(FD.FLAT_ID=FB.FLAT_ID) ")
	           .append("JOIN FLOOR_DETAILS FLD ON(FLD.FLOOR_DET_ID=FD.FLOOR_DET_ID) ")
		       .append("JOIN BLOCK_DETAILS BD ON(BD.BLOCK_DET_ID=FLD.BLOCK_DET_ID) ")
		       .append("WHERE FB.FLAT_BOOK_ID=:FLAT_BOOK_ID) AND ")  
		      
		       /* Uncondition the TICKET_TYPE_ID */
		       /*.append("TTD.TICKET_TYPE_ID= ")
		       .append("(SELECT T.TICKET_TYPE_ID FROM TICKET T WHERE T.TICKET_ID=:TICKET_ID) AND ") 
	           .append("TTD.DEPARTMENT_ID=:DEPARTMENT_ID ")
		       .append("AND TTD.EMPLOYEE_DETAILS_ID=:EMPLOYEE_DETAILS_ID) ") */
		      // .append("WHERE T.TICKET_ID=:TICKET_ID AND T.STATUS=:STATUS")
		       .toString(); 
	
	/* QRY_TO_GET_FEEDBACKLIST FROM FEEDBACK & CUSTOMER */
	public static final String QRY_TO_GET_FEEDBACKLIST = new StringBuilder("SELECT ")
			.append(" F.ID AS ID,")
			.append(" concat(concat(CUST.FIRST_NAME,' '),CUST.LAST_NAME) AS CUSTOMER,")
			.append(" F.FEEDBACK AS FEEDBACK, ")
			.append(" F.POSTEDDATE AS POSTEDDATE,")
			.append(" F.CUST_ID AS CUST_ID,")
			.append(" F.STATUS_ID AS STATUS_ID ")
			.append(" FROM FEEDBACK F INNER JOIN CUSTOMER CUST ")
			.append(" ON F.CUST_ID = CUST.CUST_ID ")
			.append(" WHERE F.STATUS_ID = 6 ")
			.toString();

	/* QRY_TO_POST_FEEDBACK FROM FEEDBACK */
	public static final String QRY_TO_POST_FEEDBACK = new StringBuilder("INSERT INTO FEEDBACK ")
			.append(" (ID,FEEDBACK,POSTEDDATE,CUST_ID,STATUS_ID) ")
			.append(" values(FEEDBACK_ID_SEQ.nextval,:FEEDBACK,SYSTIMESTAMP,:CUST_ID,6) ")
			.toString();
	
	/* QRY_TO_INSERT_DUMMY FROM FAQ_QA */
	public static final String QRY_TO_INSERT_DUMMY = new StringBuilder(" INSERT INTO FAQ_QA( ID, QUESTION, ANSWER, PROCESS_ID) VALUES (:id,:question,:answer,:processId) ")
			.toString();
	
	public static final String QRY_TO_GET_FLAT_DET = new StringBuilder(" SELECT ")
			.append("FLAT_DET_ID AS FLAT_DET_ID,")
			.append("FLAT_ID AS FLAT_ID,")
			.append("STATUS_ID AS STATUS_ID,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("IMAGE_LOCATION AS IMAGE_LOCATION,")
			.append("FLOOR_DET_ID AS FLOOR_DET_ID,")
			.append("BHK_ID AS BHK_ID,")
			.append("UPDATED_DATE AS UPDATED_DATE,")
			.append("PROPERTY_UPDATES_CAROUSEL AS PROPERTY_UPDATES_CAROUSEL,")
			.append("UPLOADED_DOCS AS UPLOADED_DOCS,")
			.append("FACING AS FACING,")
			.append("SBUA AS SBUA,")
			.append("CARPET_AREA AS CARPET_AREA,")
			.append("UDS AS UDS,")
			.append("EOI_APPLICABLE AS EOI_APPLICABLE,")
			.append("EOI_SEQUENCE_NUMBER AS EOI_SEQUENCE_NUMBER ")
			.append(",BALCONY_AREA AS BALCONY_AREA ")
			.append(",BHK AS BHK ")
			.append(",ADDITIONAL_TERUS_AREA AS ADDITIONAL_TERUS_AREA,PROPORTIONATE_COMMON_AREA as PROPORTIONATE_COMMON_AREA ")
			.append(",(SELECT BHK FROM SITE_BHK SB WHERE SB.ID = BHK_ID) AS NUMBER_OF_BEDS")
			.append(",(SELECT NVL(DESCRIPTION,' ') FROM METADATA_TYPES  MT WHERE MT.METADATA_TYPES_ID = NORTH_SIDE_ID) AS NORTH_SIDE_NAME")
			.append(",(SELECT NVL(DESCRIPTION,' ') FROM METADATA_TYPES  MT WHERE MT.METADATA_TYPES_ID = SOUTH_SIDE_ID) AS SOUTH_SIDE_NAME")
			.append(",(SELECT NVL(DESCRIPTION,' ') FROM METADATA_TYPES  MT WHERE MT.METADATA_TYPES_ID = EAST_SIDE_ID) AS EAST_SIDE_NAME")
			.append(",(SELECT NVL(DESCRIPTION,' ') FROM METADATA_TYPES  MT WHERE MT.METADATA_TYPES_ID = WEST_SIDE_ID) AS WEST_SIDE_NAME")
			.append(",CAR_PARKING_ALLOT_NO ")
			.append(",FLOOR_PLAN_LOCATION ")
			/* Malladi Change */
			//.append(",CAR_PARKING_SPACES ")				
            .append(" FROM FLAT_DETAILS ")
			.toString();
	
	public static final String QRY_TO_GET_FLAT_COST = new StringBuilder("SELECT ")
			.append("FLAT_COST_ID AS FLAT_COST_ID,")
			.append("FLAT_ID AS FLAT_ID,")
			.append("BASIC_FLAT_COST AS BASIC_FLAT_COST,")
			.append("AMENITIES_FLAT_COST AS AMENITIES_FLAT_COST,")
			.append("MODIFICATION_COST AS MODIFICATION_COST,")
			.append("FLAT_COST AS FLAT_COST,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("UPDATED_DATE AS UPDATED_DATE,")
			.append("STATUS_ID AS STATUS_ID,")
			.append("CREATED_BY AS CREATED_BY,")
			.append("UPDATED_BY AS UPDATED_BY, ")
			.append("PER_SQFT_COST AS PER_SQFT_COST ")
			.append(",TOTAL_GST_AMOUNT")
			.append(",TOTAL_COST_EXCL_GST")
			.append(",TAXES_PER_SFT")
			.append(",SOLD_BASE_PRICE")
			.append(",ACTUAL_PRICE_PER_SFT")
			.append(",OVERALL_PRICE_PER_SFT")
			.append(",QUOTED_BASE_PRICE as QUOTED_BASE_PRICE ")
			.append(",UNIT_GROUP")
			.append(" FROM FLAT_COST ")
			.toString();

	public static final String QRY_TO_GET_FLOOR = new StringBuilder("SELECT ")
			.append("FLOOR_ID AS FLOOR_ID,")
			.append("NAME AS NAME,")
			.append("CREATED_DATE AS CREATED_DATE ")
			.append(" FROM FLOOR ")
			.toString();
	
	public static final String QRY_TO_GET_BLOCK = new StringBuilder("SELECT ")
			.append("BLOCK_ID AS BLOCK_ID,")
			.append("NAME AS NAME,")
			.append("CREATED_DATE AS CREATED_DATE ")
			.append(" FROM BLOCK ")
			.toString();
	
	public static final String QRY_TO_GET_SITE = new StringBuilder("SELECT ")
			.append("SITE_ID AS SITE_ID,")
			.append("SALES_FORCE_SITE_NAME AS NAME,")
			.append("CITY_ID AS CITY_ID,")
			.append("STATUS_ID AS STATUS_ID,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("IMAGE_LOCATION AS IMAGE_LOCATION,")
			.append("MODIFIED_DATE AS MODIFIED_DATE,")
			.append("REFERMESSAGE AS REFERMESSAGE,")
			.append("STATE_ID AS STATE_ID,")
			.append("ADDRESS_ID AS ADDRESS_ID,")
			.append("LANDMARK_IMAGE AS LANDMARK_IMAGE,")
			.append("PROJECT_AREA AS PROJECT_AREA,")
			.append("NO_OF_UNITS AS NO_OF_UNITS,")
			.append("RERA AS RERA,")
			.append("DESCRIPTION AS DESCRIPTION,")
			.append("OVERVIEW_IMAGES AS OVERVIEW_IMAGES,")
			.append("MASTERPLAN_IMAGE AS MASTERPLAN_IMAGE,")
			.append("REFERER_DESCRIPTION AS REFERER_DESCRIPTION, ")
			.append("SHORT_FORM AS SHORT_FORM, ")
			.append("SALES_FORCE_SITE_NAME AS SALES_FORCE_SITE_NAME, ")
			.append("OFFICE_DTLS_ID AS OFFICE_DTLS_ID ")
			.append(" FROM SITE ")
			.toString();

	public static final String QRY_TO_GET_PROFESSIONAL_DET = new StringBuilder("SELECT ")
			.append("CUST_PROFFISIONAL_ID AS CUST_PROFFISIONAL_ID,")
			.append("DESIGNATION AS DESIGNATION,")
			.append("ADDRESS_OF_ORGANIZATION AS ADDRESS_OF_ORGANIZATION,")
			.append("OFFICE_NUMBER AS OFFICE_NUMBER,")
			.append("OFFICE_EMAIL_ID AS OFFICE_EMAIL_ID,")
			.append("ORGANIZATION_ID AS ORGANIZATION_ID,")
			.append("ORGANIZATION_TYPE_OTHERS AS ORGANIZATION_TYPE_OTHERS,")
			.append("SECTOR_ID AS SECTOR_ID,")
			.append("SECTOR_OTHERS AS SECTOR_OTHERS,")
			.append("WORKFUNCTION_ID AS WORKFUNCTION_ID,")
			.append("WORKFUNCTION_OTHERS AS WORKFUNCTION_OTHERS,")
			.append("STATUS_ID AS STATUS_ID,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("MODIFIED_DATE AS MODIFIED_DATE,")
			.append("YRS_OF_EXP AS YRS_OF_EXP, ")
			.append("NAME_OF_ORGANIZATION AS NAME_OF_ORGANIZATION ")
			.append(" FROM PROFESSIONAL_DETAILS ")
			.toString();

	public static final String QRY_TO_GET_CUSTOMER_OTHER_DETAILS = new StringBuilder("SELECT ")
			.append("ID AS ID,")
			.append("ID,")
			.append("PURPOUSE_OF_PURCHASE,")
			.append("CURRENT_RESIDENTIAL_STATUS,")
			.append("STATUS_ID,")
			.append("CREATED_DATE,")
			.append("MODIFIED_DATE,")
			.append("FLAT_BOOK_ID,")
			.append("EXISTED_FLAT_BOOK_ID")
			.append(" FROM CUSTOMER_OTHER_DETAILS ")
			.toString();

	public static final String QRY_TO_GET_CHECKLIST_REGISTRATION = new StringBuilder("SELECT ")
			.append("CHECKLIST_REGISTRATION_ID AS CHECKLIST_REGISTRATION_ID,")
			.append("AG_VALUE AS AG_VALUE,")
			.append("SD_VALUE AS SD_VALUE,")
			.append("SD_NUMBER AS SD_NUMBER,")
			.append("COMMENTS_LEGAL AS COMMENTS_LEGAL,")
			.append("COMMENTS_ACCOUNTS AS COMMENTS_ACCOUNTS,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("LEGAL_OFFICIER_EMPLOYEE_ID AS LEGAL_OFFICIER_EMPLOYEE_ID,")
			.append("LEGAL_OFFICIER_APROVED_DATE AS LEGAL_OFFICIER_APROVED_DATE,")
			.append("ACCOUNTS_EMPLOYEEID AS ACCOUNTS_EMPLOYEEID,")
			.append("ACCOUNT_APROVED_DATE AS ACCOUNT_APROVED_DATE,")
			.append("APROVER_EMPLOYEE_ID AS APROVER_EMPLOYEE_ID,")
			.append("APROVER_APROVED_DATE AS APROVER_APROVED_DATE,")
			.append("CUSTOMER_ID AS CUSTOMER_ID,")
			.append("STATUS_ID AS STATUS_ID,")
			.append("FLAT_BOOK_ID AS FLAT_BOOK_ID ")
			.append(" FROM CHECKLIST_REGISTRATION")
			.toString();

	public static final String QRY_TO_GET_CHECKLIST_LEGAL_OFFICIER = new StringBuilder("SELECT ")
			.append("CHECKLIST_LEGAL_OFFICIER_ID AS CHECKLIST_LEGAL_OFFICIER_ID,")
			.append("BANKER_NAME AS BANKER_NAME,")
			.append("BANK_NAME AS BANK_NAME,")
			.append("BANKER_MOBILE_NO AS BANKER_MOBILE_NO,")
			.append("BANKER_EMAIL AS BANKER_EMAIL,")
			.append("OFFERS_DETAILS AS OFFERS_DETAILS,")
			.append("COMMENTS AS COMMENTS,")
			.append("LEGAL_OFFICIER_EMPLOYEE_ID AS LEGAL_OFFICIER_EMPLOYEE_ID,")
			.append("LEGAL_OFFICIER_APROVED_DATE AS LEGAL_OFFICIER_APROVED_DATE,")
			.append("APROVER_EMPLOYEE_ID AS APROVER_EMPLOYEE_ID,")
			.append("APROVERA_APROVED_DATE AS APROVERA_APROVED_DATE,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("STATUS_ID AS STATUS_ID,")
			.append("CUSTOMER_ID AS CUSTOMER_ID,")
			.append("FLAT_BOOK_ID AS FLAT_BOOK_ID ")
			.append(" FROM CHECKLIST_LEGAL_OFFICIER")
			.toString();

	public static final String QRY_TO_GET_CHECKLIST_SALESHEAD = new StringBuilder("SELECT ")
			.append("CHECKLIST_SALESHEAD_ID AS CHECKLIST_SALESHEAD_ID,")
			.append("CUSTOMER_ID AS CUSTOMER_ID,")
			.append("SOURCE_OF_BOOKING AS SOURCE_OF_BOOKING,")
			.append("REFERAL_BONUS AS REFERAL_BONUS,")
			.append("OFFER_DETAILS AS OFFER_DETAILS,")
			.append("ERP_DETAILS AS ERP_DETAILS,")
			.append("SALES_TEAM_COMMITMENTS AS SALES_TEAM_COMMITMENTS,")
			.append("REMARKS AS REMARKS,")
			.append("SALES_HEAD_APPROVED_DATE AS SALES_HEAD_APPROVED_DATE,")
			.append("APPROVER_EMPLOYEE_ID AS APPROVER_EMPLOYEE_ID,")
			.append("APROVER_APROVED_DATE AS APROVER_APROVED_DATE,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("STATUS_ID AS STATUS_ID,")
			.append("FLAT_BOOK_ID AS FLAT_BOOK_ID,")
			.append("AVAILABILITY,")
			.append("AVAILABILITY_OTHER, ")
			.append("PROJECT_SALES_HEAD_ID ")
			.append(" FROM CHECKLIST_SALESHEAD")
			.toString();

	public static final String QRY_TO_GET_CHECKLIST_CRM = new StringBuilder("SELECT ")
			.append("CHECKLIST_CRM_ID AS CHECKLIST_CRM_ID,")
			.append("SALES_TEAM_COMMITMENTS AS SALES_TEAM_COMMITMENTS,")
			.append("REMARKS AS REMARKS,")
			.append("PREFER_BANK_NAME AS PREFER_BANK_NAME,")
			.append("AGREEMENT_COMMENTS AS AGREEMENT_COMMENTS,")
			.append("CRM_EMPLOYEE_ID AS CRM_EMPLOYEE_ID,")
			.append("CRM_APPROVED_DATE AS CRM_APPROVED_DATE,")
			.append("APROVER_EMPLOYEE_ID AS APROVER_EMPLOYEE_ID,")
			.append("APROVER_APROVED_DATE AS APROVER_APROVED_DATE,")
			.append("EXPECTED_AGREMENT_DATE AS EXPECTED_AGREMENT_DATE,")
			.append("CUSTOMER_ID AS CUSTOMER_ID,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("STATUS_ID AS STATUS_ID,")
			.append("FLAT_BOOK_ID AS FLAT_BOOK_ID ")
			.append(" FROM CHECKLIST_CRM")
			.toString();

	public static final String QRY_TO_GET_CUST_CHECKLIST_VERIFICATION = new StringBuilder("SELECT ")
			.append("CCV.CUST_CHECK_VERI_ID AS CUST_CHECK_VERI_ID,")
			.append("CCV.CUST_ID AS CUST_ID,")
			.append("CCV.STATUS_ID AS STATUS_ID,")
			.append("CCV.CHECKLIST_DEPT_MAP_ID AS CHECKLIST_DEPT_MAP_ID,")
			.append("CCV.CREATED_DATE AS CREATED_DATE,")
			.append("CCV.MODIFIED_DATE AS MODIFIED_DATE ")
			.append(" FROM CUST_CHECKLIST_VERIFICATION CCV ")
			.toString();
	
	public static final String QRY_TO_GET_APPLICANT_CK_LIST_VERIFICATION = new StringBuilder("SELECT ")
			.append("ACLV.APPLICANTCHECKLISTVERFIID AS APPLICANTCHECKLISTVERFIID,")
			.append("ACLV.APPLICANT_ID AS APPLICANT_ID,")
			.append("ACLV.CHECK_LIST_DEPT_MAPPING_ID AS CHECK_LIST_DEPT_MAPPING_ID,")
			.append("ACLV.STATUS_ID AS STATUS_ID,")
			.append("ACLV.CREATED_DATE AS CREATED_DATE,")
			.append("ACLV.MODIFIED_DATE AS MODIFIED_DATE,")
			.append("ACLV.FLAT_BOOK_ID AS FLAT_BOOK_ID ")
			.append("FROM APPLICANT_CK_LIST_VERIFICATION ACLV ")
			.toString();

	public static final String QRY_TO_GET_CHECKLIST = new StringBuilder("SELECT ")
			.append("CHECKLIST_ID AS CHECKLIST_ID,")
			.append("NAME AS NAME,")
			.append("DESCRIPTION AS DESCRIPTION,")
			.append("STATUS_ID AS STATUS_ID,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("MODIFIED_DATE AS MODIFIED_DATE ")
			.append(" FROM CHECKLIST")
			.toString();

	public static final String QRY_TO_GET_CHECKLIST_DEPARTMENT_MAPPING = new StringBuilder("SELECT ")
			.append("CHECKLIST_DEPT_MAP_ID AS CHECKLIST_DEPT_MAP_ID,")
			.append("CHECKLIST_ID AS CHECKLIST_ID,")
			.append("DEPT_ID AS DEPT_ID,")
			.append("STATUS_ID AS STATUS_ID,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("MODIFIED_DATE AS MODIFIED_DATE,")
			.append("CK_META_TYPE AS CK_META_TYPE ")
			.append(" FROM CHECKLIST_DEPARTMENT_MAPPING")
			.toString();
		
	/* QRY_TO_INSERT_customer */
	public static final String  QRY_TO_INSERT_customer = new StringBuilder("INSERT ")
			.append("INTO CUSTOMER")
			.append("(")
			.append("CUST_ID,")
			.append("NAME_PREFIX,")
			.append("FIRST_NAME,")
			.append("LAST_NAME,")
			.append("GENDER,")
			.append("AGE,")
			.append("DATE_OF_BIRTH,")
			.append("AADHAR_NUMBER,")
			.append("CREATED_DATE,")
			.append("UPDATED_DATE,")
			.append("PANCARD,")
			.append("VOTER_ID,")
			.append("STATUS_ID,")
			.append("RELATION_WITH,")
			.append("RELATION_NAME,")
			.append("RELATION_NAME_PREFIX,")
			.append("NATIONALITY,")
			.append("PROFILE_PIC,")
			.append("PASSPORT")
			.append(" )")
			.append(" VALUES( ")
			.append("CUSTOMER_SEQ.NEXTVAL,")
			.append(":namePrefix,")
			.append(":firstName,")
			.append(":lastName,")
			.append(":gender,")
			.append(":age,")
			.append(":dob,")
			.append(":adharNumber,")
			.append(":createdDate,")
			.append(":updatedDate,")
			.append(":pancard,")
			.append(":voterId,")
			.append(":statusId,")
			.append(":relationWith,")
			.append(":relationName,")
			.append(":relationNamePrefix,")
			.append(":nationality,")
			.append(":profilePic,")
			.append(":passport")
			.append(")")
			.toString();  


	/* QRY_TO_INSERT_ADDRESS */
	public static final String  QRY_TO_INSERT_ADDRESS = new StringBuilder("INSERT ")
			.append("INTO ADDRESS")
			.append("(")
			.append("ADDRESS_ID,")
			.append("STREET,")
			.append("LATITUDE,")
			.append("LONGITUDE,")
			.append("SURVEY_NO,")
			.append("DISTRICT,")
			.append("AREA,")
			.append("PINCODE,")
			.append("CONTACT_NO,")
			.append("EMAIL,")
			.append("WEBSITE,")
			.append("CITY_ID,")
			.append("STATE_ID,")
			.append("NEARBY,")
			.append("CREATED_DATE,")
			.append("UPDATED_DATE,")
			.append("ADDRESS1,")
			.append("ADDRESS2,")
			.append("ADDRESS3,")
			.append("STATUS_ID,")
			.append("CITY, ")
			.append("COUNTRY_ID ")
			.append(" )")
			.append(" VALUES( ")
			.append("ADDRESS_SEQ.NEXTVAL,")
			.append(":street,")
			.append(":latitude,")
			.append(":Longitude,")
			.append(":surveyNo,")
			.append(":district,")
			.append(":area,")
			.append(":pincode,")
			.append(":contactNo,")
			.append(":email,")
			.append(":website,")
			.append(":cityId,")
			.append(":stateId,")
			.append(":nearBy,")
			.append(":createdDate,")
			.append(":updatedDate,")
			.append(":address1,")
			.append(":address2,")
			.append(":address3,")
			.append(":statusId,")
			.append(":city,")
			.append(":countryId")
			.append(")")
			.toString();  
	
	/* QRY_TO_INSERT_ADDRESS_MAPPING */
	public static final String  QRY_TO_INSERT_ADDRESS_MAPPING= new StringBuilder("INSERT ")
			.append("INTO ADDRESS_MAPPING")
			.append("(")
			.append("ADDRESS_MAPPING_ID,")
			.append("TYPE_ID,")
			.append("TYPE,")
			.append("ADDRESS_TYPE,")
			.append("ADDRESS_ID,")
			.append("STATUS_ID,")
			.append("CREATED_DATE,")
			.append("MODIFIED_DATE")
			.append(" )")
			.append(" VALUES( ")
			.append(" ADDRESS_MAPPING_SEQ.NEXTVAL,")
			.append(":typeId,")
			.append(":type,")
			.append(":addressType,")
			.append(":addressId,")
			.append(":statusId,")
			.append(":createdDate,")
			.append(":modifiedDate")
			.append(")")
			.toString();
	
	/* QRY_TO_INSERT_CONTACT_INFORMATION */
	public static final String  QRY_TO_INSERT_CONTACT_INFORMATION= new StringBuilder("INSERT ")
			.append("INTO CONTACT_INFORMATION")
			.append("(")
			.append("CONT_INFO_ID,")
			.append("EMAIL_ID,")
			.append("CONTACT_NO,")
			.append("ALTERNATIVE_CONTACT_NO,")
			.append("CRETAED_DATE,")
			.append("UPDATED_DATE,")
			.append("FLATBOOKING_ID")
			.append(")")
			.append("VALUES (")
			.append("CONTACT_INFORMATION_SEQ.NEXTVAL,")
			.append(":email,")
			.append(":phoneNo,")
			.append(":alternatePhoneNo,")
			.append(":createdDate,")
			.append(":updatedDate,")
			.append(":flatBookId")
			.append(")")
			.toString();
	
	/* QRY_TO_INSERT_CUSTOMER_PROFESSIONAL_DETAILS */
	public static final String  QRY_TO_INSERT_CUSTOMER_PROFESSIONAL_DETAILS= new StringBuilder("INSERT ")
			.append("INTO PROFESSIONAL_DETAILS")
			.append("(")
			.append("CUST_PROFFISIONAL_ID,")
			.append("DESIGNATION,")
			.append("ADDRESS_OF_ORGANIZATION,")
			.append("OFFICE_NUMBER,")
			.append("OFFICE_EMAIL_ID,")
			.append("ORGANIZATION_ID,")
			.append("ORGANIZATION_TYPE_OTHERS,")
			.append("SECTOR_ID,")
			.append("SECTOR_OTHERS,")
			.append("WORKFUNCTION_ID,")
			.append("WORKFUNCTION_OTHERS,")
			.append("STATUS_ID,")
			.append("CREATED_DATE,")
			.append("MODIFIED_DATE,")
			.append("YRS_OF_EXP,")
			.append("NAME_OF_ORGANIZATION")
			.append(" )")
			.append(" VALUES( ")
			.append("CUSTOMER_PROFESSIONAL_DETAILS_SEQ.NEXTVAL,")
			.append(":designation,")
			.append(":addressOfOrganization,")
			.append(":officeNumber,")
			.append(":officeEmailId,")
			.append(":organizationTypeId,")
			.append(":ifOtherOrgTypeName,")
			.append(":workSectorId,")
			.append(":ifOtherWorkSectorName,")
			.append(":workFunctionId,")
			.append(":ifOtherworkFunctionName,")
			.append(":statusId,")
			.append(":createdDate,")
			.append(":modifiedDate,")
			.append(":yearsOfExperience,")
			.append(":nameOfOrganization")
			.append(")")
			.toString();
	
	/* QRY_TO_INSERT_REFERENCES_CUSTOMER */
	public static final String  QRY_TO_INSERT_REFERENCES_CUSTOMER= new StringBuilder("INSERT ")
			.append("INTO REFERENCES_CUSTOMER")
			.append("(")
			.append("REFERENCES_CUSTOMER_ID,")
			.append("CUSTOMER_ID")
			.append(" )")
			.append("VALUES( ")
			.append("REFERENCES_CUSTOMER_SEQ.NEXTVAL,")
			.append(":customerId")
			.append(")")
			.toString(); 
	
	/* QRY_TO_INSERT_REFERENCES_FRIEND */
	public static final String  QRY_TO_INSERT_REFERENCES_FRIEND= new StringBuilder("INSERT ")
			.append("INTO REFERENCES_FRIEND")
			.append("(")
			.append("REFERENCES_FRIEND_ID,")
			.append("FRIEND_NAME")
			.append(")")
			.append(" VALUES( ")
			.append("REFERENCES_FRIEND_SEQ.NEXTVAL,")
			.append(":referenceFreindsorFamilyName")
			.append(")")
			.toString(); 
	
	
	/* QRY_TO_INSERT_REFERENCES_MAPPING */
	
	public static final String  QRY_TO_INSERT_REFERENCES_MAPPING= new StringBuilder("INSERT ")
			.append("INTO REFERENCES_MAPPING")
			.append("(")
			.append("REFERENCES_MAPPING_ID,")
			.append("TYPE_ID,")
			.append("TYPE,")
			.append("CUST_OTHER_ID")
			.append(" )")
			.append("VALUES(")
			.append("REFERENCES_MAPPING_SEQ.NEXTVAL,")
			.append(":typeId,")
			.append(":type,")
			.append(":custOtherId")
			.append(")")
			.toString(); 
	
	
	/* QRY_TO_INSERT_CHANNEL_PARTNER_MASTER */
	public static final String  QRY_TO_INSERT_CHANNEL_PARTNER_MASTER= new StringBuilder("INSERT ")
			.append("INTO CHANNEL_PARTNER_MASTER")
			.append("(")
			.append("CHANNEL_PARTNER_MASTER_ID,")
			.append("CP_ID,")
			.append("CP_COMPANY,")
			.append("CP_NAME,")
			.append("CP_RERA_NO,")
			.append("STATUS_ID,")
			.append("CREATED_DATE,")
			.append("MODIFIED_DATE")
			.append(" )")
			.append("VALUES( ")
			.append("CHANNEL_PARTNER_MASTER_SEQ.NEXTVAL,")
			.append(":cpId,")
			.append(":cpCompany,")
			.append(":cpName,")
			.append(":cpReraNo,")
			.append(":statusId,")
			.append(":createdDate,")
			.append(":modifiedDate")
			.append(")")
			.toString(); 
	/* QRY_TO_INSERT_CUSTOMER_OTHER_DETAILS */
	public static final String  QRY_TO_INSERT_CUSTOMER_OTHER_DETAILS= new StringBuilder("INSERT ")
			.append("INTO CUSTOMER_OTHER_DETAILS")
			.append("(")
			.append("ID,")
			.append("PURPOUSE_OF_PURCHASE,")
			.append("CURRENT_RESIDENTIAL_STATUS,")
			.append("STATUS_ID,")
			.append("CREATED_DATE,")
			.append("MODIFIED_DATE,")
			.append("FLAT_BOOK_ID,")
			.append("EXISTED_FLAT_BOOK_ID")
			.append(" )")
			.append("VALUES( ")
			.append("CUSTOMER_OTHER_DETAILS_SEQ.NEXTVAL,")
			.append(":purposeofPurchase,")
			.append(":currentResidentialStatus,")
			.append(":statusId,")
			.append(":createdDate,")
			.append(":modifiedDate,")
			.append(":flatBookId,")
			.append(":existedFlatBookId")
			.append(")")
			.toString(); 
	/* QRY_TO_INSERT_POA_HOLDER */
	public static final String  QRY_TO_INSERT_POA_HOLDER= new StringBuilder("INSERT ")
			.append("INTO POA_HOLDER")
			.append("(")
			.append("POA_HOLDER_ID,")
			.append("MOBILENO,")
			.append("TELEPHONE,")
			.append("ADDRESS1,")
			.append("ADDRESS2,")
			.append("ADDRESS3,")
			.append("PINCODE,")
			.append("STATE_ID,")
			.append("CITY_ID,")
			.append("CITY,")
			.append("STATUS_ID,")
			.append("CREATED_DATE,")
			.append("MODIFIED_DATE,")
			.append("EMAIL,")
			.append("CUSTOMER_OTHER_DETAILS_ID,")
			.append("POA_HOLDER_NAME,COUNTRY_ID,COUNTRY ")
			.append(" )")
			.append("VALUES( ")        
			.append("POA_HOLDER_SEQ.NEXTVAL,")
			.append(":mobileNumOfPOA,")
			.append(":telOfPOA,")
			.append(":addressOfPOA,")
			.append(":address2,")
			.append(":address3,")
			.append(":pincodeOfPOA,")
			.append(":stateId,")
			.append(":cityId,")
			.append(":city,")
			.append(":statusId,")
			.append(":createdDate,")
			.append(":modifiedDate,")
			.append(":emailOfPOA,")        
			.append(":custOtherDetailsId,")
			.append(":nameOfPOA,:countryId,:country) ")
			.toString();         
	/* QRY_TO_INSERT_CUSTOMER_APPLICATION */
	public static final String  QRY_TO_INSERT_CUSTOMER_APPLICATION= new StringBuilder("INSERT ")
			.append("INTO CUSTOMER_APPLICATION")
			.append("(")
			.append("CUST_APP_ID,")
			.append("SITE_ID,")
			.append("UNIT,")
			.append("LEAD_ID,")
			.append("STM_ID,")
			.append("ACK_ID,")
			.append("APP_NO,")
			.append("BLOCK_ID,")
			.append("STATUS_ID,")
			.append("CREATED_DATE,")
			.append("MODIFIED_DATE,")
			.append("FLAT_BOOK_ID,")
			.append("REASON_FOR_NOKYC")
			.append(" )")
			.append("VALUES( ") 
			.append("CUSTOMER_APPLICATION_SEQ.NEXTVAL,")
			.append(":siteId,")
			.append(":unit,")
			.append(":leadId,")
			.append(":stmId,")
			.append(":ackId,")
			.append(":appNo,")
			.append(":blockId,")
			.append(":statusId,")
			.append(":createdDate,")
			.append(":modifiedDate,")
			.append(":flatBookId,")
			.append(":reasonForNoKYC")
			.append(")")
			.toString();  
	
	/* QRY_TO_INSERT_CUSTOMER_KYC_SUBMITTED_DOC */
	public static final String  QRY_TO_INSERT_CUSTOMER_KYC_SUBMITTED_DOC= new StringBuilder("INSERT ")
			.append("INTO CUSTOMER_KYC_SUBMITTED_DOC")
			.append("(")
			.append("SUBMITTED_DOC_ID,")
			.append("CUST_BOOK_INFO_ID,")
			.append("EMP_ID,")
			.append("DOCUMENT_ID,")
			.append("STATUS_ID,")
			.append("CREATED_DATE,")
			.append("MODIFIED_DATE,")
			.append("FLAT_BOOK_ID")
			.append(" )")
			.append("VALUES( ") 
			.append("CUSTOMER_KYC_SUBMITTED_DOC_SEQ.NEXTVAL,")
			.append(":custBookInfoId,")
			.append(":empId,")
			.append(":documentId,")
			.append(":statusId,")
			.append(":createdDate,")
			.append(":modifiedDate,")
			.append(":flatBookId")
			.append(")")
			.toString();  
	
	/* QRY_TO_INSERT_APPLICANT */
	public static final String  QRY_TO_INSERT_APPLICANT= new StringBuilder("INSERT ")
			.append("INTO APPLICANT")
			.append("(")
			.append("APPLICANT_ID,")
			.append("CUST_ID,")
			.append("ADDRESS_ID,")
			.append("APPLICATE_NUMBER,")
			.append("FIRST_NAME,")
			.append("LAST_NAME,")
			.append("MIDDLE_NAME,")
			.append("GENDER,")
			.append("AGE,")
			.append("AADHAR_ID,")
			.append("VOTER_ID,")
			.append("PANCARD,")
			.append("PHONE_NO,")
			.append("ALTERNATE_PHONE_NO,")
			.append("EMAIL,")
			.append("CREATED_DATE,")
			.append("UPDATED_DATE,")
			.append("DATE_OF_BIRTH,")
			.append("RELATION_WITH_CUST,")
			.append("NATIONALITY,")
			.append("RELATION_WITH,")
			.append("RALATION_NAME,")
			.append("TELE_PHONE,")
			.append("FLAT_BOOK_ID,")
			.append("NAME_PREFIX,")
			.append("MARITAL_STATUS,")
			.append("WORK_EXPERIENCE,")
			.append("EDUCATIONAL_QUALIFICATION,")
			.append("ANNUAL_HOUSE_HOLD_INCOME,")
			.append("CUST_PROFFISIONAL_ID,")
			.append("STATUS_ID")
			.append(" )")
			.append("VALUES( ") 
			.append("APPLICANT_SEQ.NEXTVAL,")
			.append(":custId,")
			.append(":addressId,")
			.append(":applicationNumber,")
			.append(":firstName,")
			.append(":lastName,")
			.append(":middleName,")
			.append(":gender,")
			.append(":age,")
			.append(":aadharId,")
			.append(":voterId,")
			.append(":pancard,")
			.append(":phonNo,")
			.append(":alternatePhoneNO,")
			.append(":email,")
			.append(":createdDate,")
			.append(":updatedDate,")
			.append(":dateOfBirth,")
			.append(":relationWithCust,")
			.append(":nationality,")
			.append(":relationWith,")
			.append(":relationName,")
			.append(":telephone,")
			.append(":flatBookingId,")
			.append(":namePrefix,")
			.append(":maritalStatus,")
			.append(":workExperience,")
			.append(":educationalQualification,")
			.append(":annualHouseHoldIncome,")
			.append(":custProffisionalId,")
			.append(":statusId")
			.append(")")
			.toString();  
	

	/* QRY_TO_INSERT_FLAT_DETAILS */
	public static final String  QRY_TO_INSERT_FLAT_DETAILS= new StringBuilder("INSERT ")
			.append("INTO FLAT_DETAILS")
			.append("(")
			.append("FLAT_DET_ID,")
			.append("FLAT_ID,")
			.append("STATUS_ID,")
			.append("CREATED_DATE,")
			.append("IMAGE_LOCATION,")
			.append("FLOOR_DET_ID,")
			.append("BHK_ID,")
			.append("UPDATED_DATE,")
			.append("PROPERTY_UPDATES_CAROUSEL,")
			.append("UPLOADED_DOCS,")
			.append("FACING,")
			.append("SBUA,")
			.append("CARPET_AREA,")
			.append("UDS,")
			.append("EOI_APPLICABLE,")
			.append("EOI_SEQUENCE_NUMBER")
			.append(" )")
			.append("VALUES( ") 
			.append(" FLAT_DETAILS_SEQ.NEXTVAL,")
			.append(":flatId,")
			.append(":statusId,")
			.append(":createdDate,")
			.append(":imageLocation,")
			.append(":floorDetId,")
			.append(":bhkId,")
			.append(":updatedDate,")
			.append(":propertyUpdatedCarousel,")
			.append(":uploadedDos,")
			.append(":facing,")
			.append(":sbua,")
			.append(":carpetArea,")
			.append(":uds,")
			.append(":eoiApplicable,")
			.append(":eoiSequenceNumber")
			.append(")")
			.toString();  
	
	/* QRY_TO_INSERT_FLAT_COST */
	
	public static final String  QRY_TO_INSERT_FLAT_COST= new StringBuilder("INSERT ")
			.append("INTO FLAT_COST")
			.append("(")
			.append("FLAT_COST_ID,")
			.append("FLAT_ID,")
			.append("BASIC_FLAT_COST,")
			.append("AMENITIES_FLAT_COST,")
			.append("MODIFICATION_COST,")
			.append("FLAT_COST,")
			.append("CREATED_DATE,")
			.append("UPDATED_DATE,")
			.append("STATUS_ID,")
			.append("CREATED_BY,")
			.append("UPDATED_BY,")
			.append("PER_SQFT_COST")
			.append(",TOTAL_GST_AMOUNT")
			.append(",TOTAL_COST_EXCL_GST")
			.append(",TAXES_PER_SFT")
			.append(",SOLD_BASE_PRICE")
			.append(",ACTUAL_PRICE_PER_SFT")
			.append(",OVERALL_PRICE_PER_SFT")
			.append(",UNIT_GROUP")
			.append(",QUOTED_BASE_PRICE")
			/* Malladi Changes */
			.append(",FLAT_BOOK_ID")
			.append(" )")
			.append("VALUES( ")
			.append("FLAT_COST_SEQ.NEXTVAL,")
			.append(":flatId,")
			.append(":basicFlatCost,")
			.append(":amenitiesFlatCost,")
			.append(":modificationCost,")
			.append(":totalCost,")
			.append(":createdDate,")
			.append(":updatedDate,")
			.append(":statusId,")
			.append(":createdBy,")
			.append(":updatedBy,")
			.append(":perSqftCost")
			.append(",:gstCost")
			.append(",:totalCostExcludeGst")
			.append(",:taxesPerSft")
			.append(",:soldBasePrice")
			.append(",:actualPricePerSft")
			.append(",:overallPricePerSft")
			.append(",:unitGroup")
			.append(",:quotedBasePrice")
			/* Malladi Changes */
			.append(",:flatBookingId")
			.append(")")
			.toString();  
	
	/* QRY_TO_INSERT_FLAT_BOOKING */
	public static final String  QRY_TO_INSERT_FLAT_BOOKING= new StringBuilder("INSERT ")
			.append("INTO FLAT_BOOKING")
			.append("(")
			.append("FLAT_BOOK_ID,")
			.append("CUST_ID,")
			.append("FLAT_ID,")
			.append("REG_DATE,")
			.append("PAYMENT_ID,")
			.append("STATUS_ID,")
			.append("CREATED_DATE,")
			.append("BOOKING_RECIEPT_FRONT,")
			.append("BOOKING_RECIEPT_BACK,")
			.append("BOOKING_DATE,")
			.append("MILESTONE_DAYS,")
			.append("UPLOADED_EMP_LEVEL_MAP_ID,")
			.append("UPLOADED_EMP_ID, ")
			.append("APPLICATION_NUMBER, ")
			.append("AGREEMENT_DATE, ")
			.append("SALESFORCE_BOOKING_ID, ")
			.append("SALESFORCE_OLD_BOOKING_ID, ")
			.append("SALESFORCE_TRANSACTION_ID, ")
			.append(" CUST_LOAN_BANK, ")
			.append("NEW_BOOKING_REASON ")
			.append(" )")
			.append("VALUES( ")
			.append("FLAT_BOOKING_SEQ.NEXTVAL,")
			.append(":customerId,")
			.append(":flatId,")
			.append(":registrationDate,")
			.append(":paymentId,")
			.append(":statusId,")
			.append(":createdDate,")
			.append(":bookingRecieptFront,")
			.append(":bookingRecieptBack,")
			.append(":bookingDate,")
			.append(":milestoneDueDays,")
			.append(":uploadedEmpLevelMapId,")
			.append(":uploadedEmpId, ")
			.append(":applicationNumber, ")
			.append(":agreementDate, ")
			.append(":salesforceBookingId,")
			.append(":salesforceOldBookingId, ")
			.append(":salesforceTransactionId, ")
			.append(":customerLoanBank, ")
			.append(":newBookingReason ")
			.append(")")
			.toString();  

	/* QRY_TO_GET_MENU_LEVEL_MAP_ID_FROM_EMPLOYEE_LEVEL_MAPPING_MENU_LEVEL_MAPPING */
	public  static final String QRT_TO_GET_MENU_LEVEL_MAPPING_ID = new StringBuilder(" SELECT ")
			.append("MLM.MENU_LEVEL_MAP_ID AS MENU_LEVEL_MAP_ID ")
			.append("FROM ")
			.append("MENU_LEVEL_MAPPING MLM ")
			.append("INNER JOIN ")
			.append("EMPLOYEE_LEVEL_MAPPING ELM ")
			.append("ON ELM.MENU_LEVEL_MAP_ID = MLM.MENU_LEVEL_MAP_ID ")
			.append("WHERE ELM.EMP_ID = :EMP_ID AND MLM.MENU_ID = :MENU_ID")
			.toString();
	
	/* QRY_TO_GET_MENU_LEVEL_MAP_ID_FROM_EMPLOYEE_LEVEL_MAPPING_MENU_LEVEL_MAPPING */
	public  static final String QRT_TO_GET_MENU_LEVEL_MAPPING_ID_APPROVAL = new StringBuilder(" SELECT ")
			.append("ML.MENU_LEVEL_MAP_ID AS MENU_LEVEL_MAP_ID ")
			.append("FROM ")
			.append("MENU_LEVEL_MAPPING  ML WHERE ML.APPROVE_TO IN ( ")
			.append("SELECT ")
			.append("MLM.LEVEL_ID AS LEVEL_ID ")
			.append("FROM MENU_LEVEL_MAPPING MLM ")
			.append("INNER JOIN EMPLOYEE_LEVEL_MAPPING ELM ")
			.append("ON ELM.MENU_LEVEL_MAP_ID = MLM.MENU_LEVEL_MAP_ID ")
			.append("WHERE  ELM.EMP_ID = :EMP_ID AND MLM.MENU_ID = :MENU_ID)")
			.toString();
	
	/* QRY_TO_INSERT_FLAT_DTLS_AMENITS_FLAT_MAPPING */
	public static final String QRY_TO_INSERT_FLAT_DTLS_AMENITS_FLAT_MAPPING= new StringBuilder("INSERT ")
			.append("INTO  FLAT_DTLS_AMENITS_FLAT_MAPPING")
			.append("(")
			.append("FLAT_DTLS_AMENITS_FLAT_MAPP_ID,")
			.append("FLAT_DETAILS_ID,")
			.append("AMENITIES_FLAT_ID,")
			.append("STATUS_ID,")
			.append("CREATED_DATE,")
			.append("UPDATED_DATE")
			.append(")")
			.append("VALUES( ")
			.append("FLAT_MAPPING_SEQ.NEXTVAL,")
			.append(":flatDetailsId,")
			.append(":amenitiesFlatId,")
			.append(":statusID,")
			.append(":createdDate,")	
			.append(":updatedDate")
			.append(")")
			.toString();  	
	
	/* QRY_TO_INSERT_APPLICANT_CK_LIST_VERIFICATION */
	public static final String QRY_TO_INSERT_APPLICANT_CK_LIST_VERIFICATION= new StringBuilder(" INSERT ")
			.append("INTO APPLICANT_CK_LIST_VERIFICATION")
			.append("(")
			.append("APPLICANTCHECKLISTVERFIID,")
			.append("APPLICANT_ID,")
			.append("CHECK_LIST_DEPT_MAPPING_ID,")
			.append("STATUS_ID,")
			.append("CREATED_DATE,")
			.append("MODIFIED_DATE,")
			.append("FLAT_BOOK_ID")
			.append(" )")
			.append("VALUES( ")
			.append("APPLICANT_CK_LIST_VERIFICATION_SEQ.NEXTVAL,")
			.append(":coApplicantId,")
			.append(":checkListDeptMappingId,")
			.append(":is_verified,")
			.append(":createdDate,")
			.append(":modifiedDate,")
			.append(":flatBookId")
			.append(")")
			.toString();  
	
	/* QRY_TO_INSERT_CHECKLIST_SALESHEAD */
	public static final String  QRY_TO_INSERT_CHECKLIST_SALESHEAD= new StringBuilder("INSERT ")
			.append("INTO CHECKLIST_SALESHEAD")
			.append("(")
			.append("CHECKLIST_SALESHEAD_ID,")
			.append("CUSTOMER_ID,")
			.append("SOURCE_OF_BOOKING,")
			.append("REFERAL_BONUS,")
			.append("OFFER_DETAILS,")
			.append("ERP_DETAILS,")
			.append("SALES_TEAM_COMMITMENTS,")
			.append("REMARKS,")
			.append("SALES_HEAD_APPROVED_DATE,")
			.append("APPROVER_EMPLOYEE_ID,")
			.append("APROVER_APROVED_DATE,")
			.append("CREATED_DATE,")
			.append("STATUS_ID,")
			.append("FLAT_BOOK_ID,")
			.append("AVAILABILITY,")
			.append("AVAILABILITY_OTHER,")
			.append("PROJECT_SALES_HEAD_ID ")
			.append(" )")
			.append("VALUES( ")
			.append("CHECKLIST_SALESHEAD_SEQ.NEXTVAL,")
			.append(":customerId,")
			.append(":sourceofBooking,")
			.append(":referralBonusStatus,")
			.append(":offersAny,")
			.append(":erpDetails,")
			.append(":salesTeamCommitments,")
			.append(":remarks,")
			.append(":projectSalesHeadDate,")
			.append(":authorizedSignatoryId,")
			.append(":authorizedSignatoryDate,")
			.append(":createdDate,")
			.append(":statusId,")
			.append(":flatBookingId,")
			.append(":availability,")
			.append(":availabilityIfOther,")
			.append(":projectSalesheadId ")
			.append(")")
			.toString();
	
	/* QRY_TO_INSERT_CHECKLIST_CRM */
	public static final String  QRY_TO_INSERT_CHECKLIST_CRM= new StringBuilder("INSERT ")
			.append("INTO CHECKLIST_CRM")
			.append("(")
			.append("CHECKLIST_CRM_ID,")
			.append("SALES_TEAM_COMMITMENTS,")
			.append("REMARKS,")
			.append("PREFER_BANK_NAME,")
			.append("AGREEMENT_COMMENTS,")
			.append("CRM_EMPLOYEE_ID,")
			.append("CRM_APPROVED_DATE,")
			.append("APROVER_EMPLOYEE_ID,")
			.append("APROVER_APROVED_DATE,")
			.append("EXPECTED_AGREMENT_DATE,")
			.append("CUSTOMER_ID,")
			.append("CREATED_DATE,")
			.append("STATUS_ID,")
			.append("FLAT_BOOK_ID,")
			.append("WELCOME_CALL_RECORD")
			.append(" )")
			.append("VALUES( ")
			.append(" CHECKLIST_SALESHEAD_SEQ.NEXTVAL,")
			.append(":commitmentsFromSTM,")
			.append(":crmRemarks,")
			.append(":crmPreferenceBankLoan,")
			.append(":expectedAgreeDateComment,")
			.append(":crmEmpID,")
			.append(":crmSignedDate,")
			.append(":authorizedSignatoryeId,")
			.append(":authorizedSignatoryDate,")
			.append(":expectedAgreeDate,")
			.append(":customerId,")
			.append(":createdDate,")
			.append(":statusId,")
			.append(":flatBookingId,")
			.append(":welcomeCallRecord")
			.append(")")
			.toString();  

	
	/* QRY_TO_INSERT_CHECKLIST_LEGAL_OFFICIER */	          
	public static final String  QRY_TO_INSERT_CHECKLIST_LEGAL_OFFICIER= new StringBuilder("INSERT ")
			.append("INTO  CHECKLIST_LEGAL_OFFICIER")
			.append("(")
			.append("CHECKLIST_LEGAL_OFFICIER_ID,")
			.append("BANKER_NAME,")
			.append("BANK_NAME,")
			.append("BANKER_MOBILE_NO,")
			.append("BANKER_EMAIL,")
			.append("OFFERS_DETAILS,")
			.append("COMMENTS,")
			.append("LEGAL_OFFICIER_EMPLOYEE_ID,")
			.append("LEGAL_OFFICIER_APROVED_DATE,")
			.append("APROVER_EMPLOYEE_ID,")
			.append("APROVERA_APROVED_DATE,")
			.append("CREATED_DATE,")
			.append("STATUS_ID,")
			.append("CUSTOMER_ID,")
			.append("FLAT_BOOK_ID")
			.append(" )")
			.append("VALUES( ")
			.append("CHECKLIST_LEGAL_OFFICIER_SEQ.NEXTVAL,")
			.append(":bankerName,")
			.append(":bank,")
			.append(":contact,")
			.append(":bankerEmailAddress,")
			.append(":offersIfAny,")
			.append(":legelOfficerComments,")
			.append(":empId,")
			.append(":legalOfficeSignedate,")
			.append(":authorizedSignatoryId,")
			.append(":authorizedSignatoryDate,")
			.append(":createdDate,")
			.append(":statusId,")
			.append(":customerId,")
			.append(":flatBookingId")
			.append(")")
			.toString();   

	
	/* QRY_TO_INSERT_CHECKLIST_REGISTRATION */	
	public static final String  QRY_TO_INSERT_CHECKLIST_REGISTRATION= new StringBuilder("INSERT ")
			.append("INTO CHECKLIST_REGISTRATION")
			.append("(")
			.append("CHECKLIST_REGISTRATION_ID,")
			.append("AG_VALUE,")
			.append("SD_VALUE,")
			.append("SD_NUMBER,")
			.append("COMMENTS_LEGAL,")
			.append("COMMENTS_ACCOUNTS,")
			.append("CREATED_DATE,")
			.append("LEGAL_OFFICIER_EMPLOYEE_ID,")
			.append("LEGAL_OFFICIER_APROVED_DATE,")
			.append("ACCOUNTS_EMPLOYEEID,")
			.append("ACCOUNT_APROVED_DATE,")
			.append("APROVER_EMPLOYEE_ID,")
			.append("APROVER_APROVED_DATE,")
			.append("CUSTOMER_ID,")
			.append("STATUS_ID,")
			.append("FLAT_BOOK_ID")
			.append(" )")
			.append("VALUES( ")
			.append("CHECKLIST_REGISTRATION_SEQ.NEXTVAL,")
			.append(":agValue,")
			.append(":sdValue,")
			.append(":SdNumber,")
			.append(":legalComments,")
			.append(":accountsComments,")
			.append(":createdDate,")
			.append(":legalOfficerEmpId,")
			.append(":legalOfficerDate,")
			.append(":accountsExecutiveEmpid,")
			.append(":accountsExecutiveDate,")
			.append(":authorizedSignatureId,")
			.append(":authorizedDate,")
			.append(":customerId,")
			.append(":statusId,") 
			.append(":flatBookingId")
			.append(")")
			.toString();

	
	/* QRY_TO_INSERT_APPLICANT_CK_LIST_VERIFICATION */
	public static final String QRY_TO_INSERT_CUST_CHECKLIST_VERIFICATION= new StringBuilder("INSERT ")
			.append("INTO CUST_CHECKLIST_VERIFICATION")
			.append("(")
			.append("CUST_CHECK_VERI_ID,")
			.append("CUST_ID,")
			.append("STATUS_ID,")
			.append("CHECKLIST_DEPT_MAP_ID,")
			.append("CREATED_DATE,")
			.append("MODIFIED_DATE,")
			.append("FLAT_BOOK_ID )")
			.append(" VALUES(")
			.append("CUST_CHECKLIST_VERIFICATION_SEQ.NEXTVAL,")
			.append(":custId,")
			.append(":is_verified,")
			.append(":checklistDeptMapId,")
			.append(":createdDate,")
			.append(":modifiedDate,")
			.append(":flatBookId")
			.append(")")
			.toString();
	
/* QRY_TO_UPDATE_APPLICANT_CK_LIST_VERIFICATION */
	public static final String QRY_TO_UPDATE_APPLICANT_CK_LIST_VERIFICATION= new StringBuilder("UPDATE ")
			.append("APPLICANT_CK_LIST_VERIFICATION ")
			.append("SET ")
			.append("STATUS_ID  = :STATUS_ID, ")
			.append("MODIFIED_DATE = :MODIFIED_DATE ")
			.append("WHERE ")
			.append("APPLICANTCHECKLISTVERFIID  = :APPLICANTCHECKLISTVERFIID ")
			.toString();
	
	/* QRY_TO_UPDATE_FLAT_DETAILS */
	public static final String QRY_TO_UPDATE_FLAT_DETAILS_WRT_FLAT_ID = new StringBuilder("UPDATE")
			.append(" FLAT_DETAILS ")
			.append(" SET ")
			.append(" EOI_APPLICABLE  = :EOI_APPLICABLE, ")
			.append(" EOI_SEQUENCE_NUMBER = :EOI_SEQUENCE_NUMBER ")
			.append(" ,FACING = :FACING ")
			.append(" WHERE ")
			.append(" FLAT_ID  = :FLAT_ID ")
			.append(" AND ")
			.append(" STATUS_ID  = :STATUS_ID ")
			.toString();
	
	public static final String QRY_TO_UPDATE_FLAT_DETAILS_WRT_FLAT_BOOK_ID = new StringBuilder("UPDATE")
			.append(" FLAT_DETAILS ")
			.append(" SET ")
			.append(" EOI_APPLICABLE  = :EOI_APPLICABLE, ")
			.append(" EOI_SEQUENCE_NUMBER = :EOI_SEQUENCE_NUMBER ")
			.append(" WHERE ")
			.append(" FLAT_ID  IN (SELECT FLAT_ID FROM FLAT_BOOKING WHERE FLAT_BOOK_ID =  :FLAT_BOOK_ID) ")
			.append(" AND ")
			.append(" STATUS_ID  = :STATUS_ID ")
			.toString();

	
	
	/* QRY_TO_UPDATE_CUST_CHECKLIST_VERIFICATION */
	public static final String QRY_TO_UPDATE_CUST_CHECKLIST_VERIFICATION= new StringBuilder("UPDATE ")
			.append("CUST_CHECKLIST_VERIFICATION ")
			.append("SET ")
			.append("STATUS_ID  = :STATUS_ID, ")
			.append("MODIFIED_DATE = :MODIFIED_DATE ")
			.append("WHERE ")
			.append("CUST_CHECK_VERI_ID  = :CUST_CHECK_VERI_ID ")
			.toString();
	public static final String QRY_TO_GET_TDS_AUTHORIZATION_MASTER = new StringBuilder("SELECT ")
			.append("TDS_AUTHORIZATION_ID AS TDS_AUTHORIZATION_ID,")
			.append("NAME AS NAME,")
			.append("STATUS_ID AS STATUS_ID,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("MODIFIED_DATE AS MODIFIED_DATE,")
			.append("OPTION_TYPE AS OPTION_TYPE ")
			.append(" FROM TDS_AUTHORIZATION_MASTER ")
			.toString();

	public static final String QRY_TO_GET_AMINITITES_INFRA_MASTER = new StringBuilder("SELECT ")
			.append("AMINITITES_INFRA_ID AS AMINITITES_INFRA_ID,")
			.append("AMINITITES_INFRA_NAME AS AMINITITES_INFRA_NAME,")
			.append("DESCRIPTION AS DESCRIPTION,")
			.append("CREATION_DATE AS CREATION_DATE,")
			.append("STATUS AS STATUS, ")
			.append("MODIFY_DATE AS MODIFY_DATE ")
			.append(" FROM AMINITITES_INFRA_MASTER")
			.toString();

	public static final String QRY_TO_GET_AMINITITES_INFRA_SITE_WISE = new StringBuilder("SELECT ")
			.append("AMINITITES_INFRA_SITE_WISE_ID AS AMINITITES_INFRA_SITE_WISE_ID,")
			.append("AMINITITES_INFRA_ID AS AMINITITES_INFRA_ID,")
			.append("CREATION_DATE AS CREATION_DATE,")
			.append("SITE_ID AS SITE_ID,")
			.append("STATUS AS STATUS, ")
			.append("MODIFY_DATE AS MODIFY_DATE ")
			.append(" FROM AMINITITES_INFRA_SITE_WISE")
			.toString();
	
	public static final String QRY_TO_GET_AMINITITES_INFRA_COST = new StringBuilder("SELECT ")
			.append("AMINITITES_INFRA_COST_ID AS AMINITITES_INFRA_COST_ID,")
			.append("AMINITITES_INFRA_FLAT_WISE_ID AS AMINITITES_INFRA_FLAT_WISE_ID,")
			.append("CREATION_DATE AS CREATION_DATE,")
			.append("FLAT_COST_ID AS FLAT_COST_ID,")
			.append("PER_SQFT_COST AS PER_SQFT_COST,")
			.append("AMINITITES_INFRA_COST AS AMINITITES_INFRA_COST,")
			.append("TOTAL_COST AS TOTAL_COST,")
			.append("CREATED_BY AS CREATED_BY,")
			.append("MODIFY_DATE AS MODIFY_DATE,")
			.append("MODIFY_BY AS MODIFY_BY,")
			.append("STATUS_ID AS STATUS_ID ")
			.append(" FROM AMINITITES_INFRA_COST")
			.toString();
			
	public static final String QRY_TO_GET_AMINITITES_INFRA_FLAT_WISE = new StringBuilder("SELECT ")
			.append("AMINITITES_INFRA_FLAT_WISE_ID AS AMINITITES_INFRA_FLAT_WISE_ID,")
			.append("AMINITITES_INFRA_SITE_WISE_ID AS AMINITITES_INFRA_SITE_WISE_ID,")
			.append("CREATION_DATE AS CREATION_DATE,")
			.append("FLAT_ID AS FLAT_ID,")
			.append("PER_SQFT_COST AS PER_SQFT_COST,")
			.append("AMINITITES_INFRA_COST AS AMINITITES_INFRA_COST,")
			.append("TOTAL_COST AS TOTAL_COST,")
			.append("MODIFY_DATE AS MODIFY_DATE,")
			.append("STATUS AS STATUS ")
			.append(" FROM AMINITITES_INFRA_FLAT_WISE")
			.toString();
			
	
	
	/* QRY_TO_GET_CHANNEL_PARTNER_MASTER */
	public static final String  QRY_TO_GET_CHANNEL_PARTNER_MASTER= new StringBuilder("SELECT ")
			.append("CHANNEL_PARTNER_MASTER_ID AS CHANNEL_PARTNER_MASTER_ID,")
			.append("CP_ID AS CP_ID,")
			.append("CP_COMPANY AS CP_COMPANY,")
			.append("CP_NAME AS CP_NAME,")
			.append("CP_RERA_NO AS CP_RERA_NO,")
			.append("STATUS_ID AS STATUS_ID,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("MODIFIED_DATE AS MODIFIED_DATE")
			.append(" FROM CHANNEL_PARTNER_MASTER ")
			.toString();
	
	/* QRY_TO_GET_POA_HOLDER */
	public static final String  QRY_TO_GET_POA_HOLDER= new StringBuilder("SELECT ")
			.append("POA_HOLDER_ID,")
			.append("MOBILENO,")
			.append("TELEPHONE,")
			.append("ADDRESS1,")
			.append("ADDRESS2,")
			.append("ADDRESS3,")
			//.append("CONCAT(CONCAT(CONCAT(CONCAT(ADDRESS1,' '),ADDRESS2),' '),ADDRESS3) AS ADDRESS_OF_POA")
			.append("PINCODE,")
			.append("STATE_ID,")
			.append("CITY_ID,")
			.append("CITY,")
			.append("STATUS_ID,")
			.append("CREATED_DATE,")
			.append("MODIFIED_DATE,")
			.append("EMAIL,")
			.append("CUSTOMER_OTHER_DETAILS_ID,")
			.append("POA_HOLDER_NAME,COUNTRY_ID,COUNTRY ")
			.append(" FROM POA_HOLDER ")
			.toString();
	
	/* QRY_TO_GET_REFERENCES_MAPPING */
	public static final String  QRY_TO_GET_REFERENCES_MAPPING= new StringBuilder("SELECT ")
			.append("REFERENCES_MAPPING_ID AS REFERENCES_MAPPING_ID,")
			.append("TYPE_ID AS TYPE_ID,")
			.append("TYPE AS TYPE,")
			.append("CUST_OTHER_ID AS CUST_OTHER_ID ")
			.append(" FROM REFERENCES_MAPPING ")
			.toString(); 
	
	/* QRY_TO_GET_REFERENCES_CUSTOMER 
	public static final String  QRY_TO_GET_REFERENCES_CUSTOMER= new StringBuilder("SELECT ")
			.append("REFERENCES_CUSTOMER_ID AS REFERENCES_CUSTOMER_ID,")
			.append("CUSTOMER_ID AS CUSTOMER_ID ")
			.append(" FROM REFERENCES_CUSTOMER")
			.toString(); */
	
	
	/* QRY_TO_GET_REFERENCES_CUSTOMER */
	public static final String  QRY_TO_GET_REFERENCES_CUSTOMER= new StringBuilder("SELECT ")
			.append("   RC.REFERENCES_CUSTOMER_ID AS REFERENCES_CUSTOMER_ID,  ")
			.append("   RC.CUSTOMER_ID AS CUSTOMER_ID,  ")
			.append("   RC.ID AS ID,  ")
			.append("   CUST.CUST_ID AS CUST_ID,  ")
			.append("   CUST.FIRST_NAME AS CUST_NAME,  ")
			.append("   S.NAME AS SITE_NAME,  ")
			.append("   F.FLAT_NO AS FLAT_NO  ")
			.append("   FROM REFERENCES_CUSTOMER RC  ")
			.append("   INNER JOIN CUSTOMER CUST  ")
			.append("   ON RC.CUSTOMER_ID = CUST.CUST_ID  ")
			.append("   INNER JOIN FLAT_BOOKING FB  ")
			.append("   ON FB.CUST_ID = CUST.CUST_ID AND FB.STATUS_ID IN (:STATUS_ID)  ")
			.append("   INNER JOIN FLAT F   ")
			.append("   ON FB.FLAT_ID = F.FLAT_ID   ")
			.append("   INNER JOIN FLOOR_DETAILS FD   ")
			.append("   ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  ")
			.append("   INNER JOIN FLOOR FL   ")
			.append("   ON FL.FLOOR_ID = FD.FLOOR_ID   ")
			.append("   INNER JOIN BLOCK_DETAILS BD   ")
			.append("   ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID    ")
			.append("   INNER JOIN BLOCK BL   ")
			.append("   ON BL.BLOCK_ID = BD.BLOCK_ID   ")
			.append("   INNER JOIN SITE S  ")
			.append("   ON BD.SITE_ID = S.SITE_ID   ")
			.toString(); 
	
	/* QRY_TO_GET_REFERENCES_FRIEND */
	public static final String  QRY_TO_GET_REFERENCES_FRIEND= new StringBuilder("SELECT ")
			.append("REFERENCES_FRIEND_ID AS REFERENCES_FRIEND_ID,")
			.append("FRIEND_NAME AS FRIEND_NAME ")
			.append(" FROM REFERENCES_FRIEND")
			.toString(); 
	
	/* QRY_TO_GET_REFERENCE_MASTER */
	public static final String QRY_TO_GET_REFERENCE_MASTER = new StringBuilder("SELECT ")
			.append("REFERENCE_ID AS REFERENCE_ID,")
			.append("REFERENCE_TYPE AS REFERENCE_TYPE,")
			.append("STATUS_ID AS STATUS_ID,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("MODIFIED_DATE AS MODIFIED_DATE ")
			.append(" FROM REFERENCE_MASTER")
			.toString();
	
	/* QRY_TO_GET_CUSTOMER_APPLICATION */
	public static final String  QRY_TO_GET_CUSTOMER_APPLICATION= new StringBuilder("SELECT ")
			.append("CUST_APP_ID AS CUST_APP_ID,")
			.append("SITE_ID AS SITE_ID,")
			.append("UNIT AS UNIT,")
			.append("LEAD_ID AS LEAD_ID,")
			.append("ACK_ID AS ACK_ID,")
			.append("APP_NO AS APP_NO,")
			.append("BLOCK_ID AS BLOCK_ID,")
			.append("STATUS_ID AS STATUS_ID,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("MODIFIED_DATE AS MODIFIED_DATE,")
			.append("STM_ID AS STM_ID,")
			.append("FLAT_BOOK_ID AS FLAT_BOOK_ID ")
			.append(" FROM CUSTOMER_APPLICATION")
			.toString();
	
	/* QRY_TO_GET_CUSTOMER_KYC_SUBMITTED_DOC */
	public static final String  QRY_TO_GET_CUSTOMER_KYC_SUBMITTED_DOC= new StringBuilder("SELECT ")
			.append("SUBMITTED_DOC_ID AS SUBMITTED_DOC_ID,")
			.append("CUST_BOOK_INFO_ID AS CUST_BOOK_INFO_ID,")
			.append("EMP_ID AS EMP_ID,")
			.append("DOCUMENT_ID AS DOCUMENT_ID,")
			.append("STATUS_ID AS STATUS_ID,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("MODIFIED_DATE AS MODIFIED_DATE,")
			.append("FLAT_BOOK_ID AS FLAT_BOOK_ID ")
			.append(" FROM CUSTOMER_KYC_SUBMITTED_DOC")
			.toString();  
	
	/* QRY_TO_GET_ADDRESS_MAPPING */
	public static final String  QRY_TO_GET_ADDRESS_MAPPING= new StringBuilder("SELECT ")
			.append("ADDRESS_MAPPING_ID AS ADDRESS_MAPPING_ID,")
			.append("TYPE_ID AS TYPE_ID,")
			.append("TYPE AS TYPE,")
			.append("ADDRESS_TYPE AS ADDRESS_TYPE,")
			.append("ADDRESS_ID AS ADDRESS_ID ")
			.append(" FROM ADDRESS_MAPPING")
			.toString();  
	
	/* QRY_TO_GET_ CAR ALLOTMENT */
	public static final String  QRY_TO_GET_CAR_PARKING_ALLOTED_NUMBER= new StringBuilder("SELECT ")
			.append(" COUNT(*) FROM CARPARKING_ALLOTMENT CA, FLAT_BOOKING FB WHERE CA.FLAT_BOOK_ID = :FLAT_BOOK_ID ")
			.append(" AND FB.FLAT_BOOK_ID = CA.FLAT_BOOK_ID AND FB.STATUS_ID = :FLAT_BOOKING_STATUS_ID")
			.append(" AND CA.STATUS_ID = :CARPARKING_ALLOTMENT_STATUS_ID")
			.toString();  

	public static final String  QRY_TO_GET_AGREEMENT_DRAFT_TYPES = new StringBuilder(" ")
			.append(" SELECT ADM.AGGR_DRF_MAS_ID,  ADM.AGGREMENT_DRAFT_NAME,  ADSW.AGGR_DRF_SITE_WISE_ID,")
			.append(" ADSW.SITE_ID,  ADSW.STATUS_ID,  ADSW.AGGR_DRF_MAS_ID")
			.append(" FROM AGGREMENT_DRAFT_SITE_WISE ADSW, ")
			.append(" AGGREMENT_DRAFT_MASTER ADM ")
			.append(" WHERE ADM.AGGR_DRF_MAS_ID = ADSW.AGGR_DRF_MAS_ID")
			.append(" AND ADSW.SITE_ID = :SITE_ID AND ADSW.STATUS_ID = :STATUS_ID ORDER BY ADSW.AGGR_DRF_MAS_ID ")
			.toString();
	
	public static final String  QRY_TO_UPDATED_FLAT_BOOKING_WELCOME_MAIL_GENERATED_LOG = new StringBuilder(" ")
			.append("UPDATE FLAT_BOOKING SET IS_WELCOME_MAIL_SEND = :IS_WELCOME_MAIL_SEND ")
			.append(" WHERE FLAT_BOOK_ID = :FLAT_BOOK_ID AND STATUS_ID =:STATUS_ID ")
			.toString();
	
	public static final String  QRY_TO_GET_TERMS_AND_CONDITIONS = new StringBuilder("SELECT ")
			.append(" SBTC.SR_NO AS KEY ,SBTC.DESCRIPTION AS VALUE FROM SITE_BOOKING_TERMS_CONDITIONS SBTC WHERE SBTC.SITE_ID = :SITE_ID AND SBTC.STATUS_ID = :STATUS_ID ")
			.append(" AND SBTC.FLATS_SALE_OWNERS_ID = :FLATS_SALE_OWNERS_ID ")
			.append(" ORDER BY SBTC.SR_NO ")
			.toString();
	
	public static final String  QRY_TO_GET_SITE_RELATED_DATA = new StringBuilder("")
			.append(" SELECT SOC.SITE_OTHER_CHARGES_ID,SOC.METE_DATA_TYPE_ID,SOC.AMOUNT,   SOC.SITE_ID,")
			.append("SOC.STATUS_ID,   SOC.CREATED_BY,   SOC.CREATED_DATE,SOC.SR_NO ")
			.append(",SOC.AMT_FOR_YEARS as AMT_FOR_YEARS ")
			.append(" FROM SITE_OTHER_CHARGES SOC  WHERE  SOC.SITE_ID  = :SITE_ID AND  SOC.STATUS_ID = :STATUS_ID ")
			.append(" ORDER BY SOC.SR_NO ")
			.toString();
	
	/* QRY_TO_GET_ADDRESS  FROM ADDRESS  */
	public static final String QRY_TO_GET_ADDRESS = new StringBuilder("SELECT ")
			.append("ADDR.ADDRESS_ID AS ADDRESS_ID,")
			.append("ADDR.STREET AS STREET,")
			.append("ADDR.LATITUDE AS LATITUDE,")
			.append("ADDR.LONGITUDE AS LONGITUDE,")
			.append("ADDR.SURVEY_NO AS SURVEY_NO,")
			.append("ADDR.DISTRICT AS DISTRICT,")
			.append("ADDR.AREA AS AREA,")
			.append("ADDR.PINCODE AS PINCODE,")
			.append("ADDR.CONTACT_NO AS CONTACT_NO,")
			.append("ADDR.EMAIL AS EMAIL,")
			.append("ADDR.WEBSITE AS WEBSITE,")
			.append("ADDR.CITY_ID AS CITY_ID,")
			.append("ADDR.CITY AS CITY,")
			.append("ADDR.STATE_ID AS STATE_ID,")
			.append("ADDR.NEARBY AS NEARBY,")
			.append("ADDR.CREATED_DATE AS CREATED_DATE,")
			.append("ADDR.UPDATED_DATE AS UPDATED_DATE,")
			.append("ADDR.ADDRESS1 AS ADDRESS1,")
			.append("ADDR.ADDRESS2 AS ADDRESS2,")
			.append("ADDR.ADDRESS3 AS ADDRESS3, ")
			.append("C.COUNTRY_ID AS COUNTRY_ID, ")
			.append("C.COUNTRY_NAME AS COUNTRY_NAME ")
			.append(" FROM ADDRESS ADDR ")
			.append(" LEFT OUTER JOIN COUNTRY C ON C.COUNTRY_ID=ADDR.COUNTRY_ID ")
			.toString();
	
	//QUERY_TO_GET_CUST_BOOK_INFO
	public static final String QUERY_TO_GET_CUST_BOOK_INFO = new StringBuilder(" SELECT ")
			.append(" CUST_BOOK_INFO_ID AS CUST_BOOK_INFO_ID, ")
			.append(" PHONE_NO AS PHONE_NO, ")
			.append(" ALTERNATE_PHONE_NO AS ALTERNATE_PHONE_NO, ")
			.append(" TELE_PHONE AS TELE_PHONE, ")
			.append(" EMAIL AS EMAIL, ")
			.append(" MARITAL_STATUS AS MARITAL_STATUS, ")
			.append(" DOCUMENTS_UPLOAD AS DOCUMENTS_UPLOAD, ")
			.append(" CUST_APP_ID AS CUST_APP_ID, ")
			.append(" DATE_OF_ANNIVERSERY AS DATE_OF_ANNIVERSERY, ")
			.append(" SALES_TEAM_EMP_ID AS SALES_TEAM_EMP_ID, ")
			.append(" SALES_TEAM_LEAD_ID AS SALES_TEAM_LEAD_ID, ")
			.append(" WORK_EXPERIENCE AS WORK_EXPERIENCE, ")
			.append(" EDUCATIONAL_QUALIFICATION AS EDUCATIONAL_QUALIFICATION, ")
			.append(" ANNUAL_HOUSE_HOLD_INCOME AS ANNUAL_HOUSE_HOLD_INCOME, ")
			.append(" CUST_PROFFISIONAL_ID AS CUST_PROFFISIONAL_ID, ")
			.append(" COMMENTS AS COMMENTS, ")
			.append(" TDS_AUTHORIZATION_ID AS TDS_AUTHORIZATION_ID, ")
			.append(" TERMS_CONDITION_FILE_NAME AS TERMS_CONDITION_FILE_NAME, ")
			.append(" STATUS_ID AS STATUS_ID, ")
			.append(" CREATED_DATE AS CREATED_DATE, ")
			.append(" UPDATED_DATE AS UPDATED_DATE, ")
			.append(" FLAT_BOOK_ID AS FLAT_BOOK_ID, ")
			.append(" CUST_ID AS CUST_ID ")
			.append(" FROM CUST_BOOK_INFO ")
			.toString();

	//QUERY_TO_GET_CO_APP_BOOK_INFO
	public static final String QUERY_TO_GET_CO_APP_BOOK_INFO = new StringBuilder(" SELECT ")
			.append(" CO_APP_BOOK_INFO_ID AS CO_APP_BOOK_INFO_ID , ")
			.append(" PHONE_NO AS PHONE_NO , ")
			.append(" ALTERNATE_PHONE_NO AS ALTERNATE_PHONE_NO , ")
			.append(" EMAIL AS EMAIL , ")
			.append(" TELE_PHONE AS TELE_PHONE , ")
			.append(" MARITAL_STATUS AS MARITAL_STATUS , ")
			.append(" WORK_EXPERIENCE AS WORK_EXPERIENCE , ")
			.append(" EDUCATIONAL_QUALIFICATION AS EDUCATIONAL_QUALIFICATION , ")
			.append(" ANNUAL_HOUSE_HOLD_INCOME AS ANNUAL_HOUSE_HOLD_INCOME , ")
			.append(" CUST_PROFFISIONAL_ID AS CUST_PROFFISIONAL_ID , ")
			.append(" STATUS_ID AS STATUS_ID , ")
			.append(" CREATED_DATE AS CREATED_DATE , ")
			.append(" UPDATED_DATE AS UPDATED_DATE , ")
			.append(" CO_APPLICANT_ID AS CO_APPLICANT_ID , ")
			.append(" CUST_BOOK_INFO_ID AS CUST_BOOK_INFO_ID, ")
			.append(" DATE_OF_ANNIVERSERY AS DATE_OF_ANNIVERSERY, TYPE ")
			.append(" FROM CO_APP_BOOK_INFO ")
			.toString();
	
	//QRY_TO_INSERT_AMINITITES_INFRA_COST
	public static final String QRY_TO_INSERT_AMINITITES_INFRA_COST = new StringBuilder("INSERT ")
			.append("INTO AMINITITES_INFRA_COST")
			.append("(")
			.append("AMINITITES_INFRA_COST_ID,")
			.append("AMINITITES_INFRA_FLAT_WISE_ID,")
			.append("CREATION_DATE,")
			.append("FLAT_COST_ID,")
			.append("PER_SQFT_COST,")
			.append("AMINITITES_INFRA_COST,")
			.append("TOTAL_COST,")
			.append("CREATED_BY,")
			.append("MODIFY_DATE,")
			.append("MODIFY_BY,")
			.append("STATUS_ID")
			.append(" )")
			.append("VALUES( ") 
			.append("AMINITITES_INFRA_COST_SEQ.NEXTVAL,")
			.append(":aminititesInfraFlatWiseId,")
			.append(":creationDate,")
			.append(":flatCostId,")
			.append(":perSqftCost,")
			.append(":aminititesInfraCost,")
			.append(":totalCost,")
			.append(":createdBy,")
			.append(":modifyDate,")
			.append(":modifyBy,")
			.append(":statusId")
			.append(")")
			.toString();
	
	//QUERY_TO_GET_CO_APPLICANT
	public static final String QUERY_TO_GET_CO_APPLICANT = new StringBuilder(" SELECT ")
			.append(" CO_APPLICANT_ID AS CO_APPLICANT_ID , ")
			.append(" CO_APPLICANT_NUMBER AS CO_APPLICANT_NUMBER , ")
			.append(" NAME_PREFIX AS NAME_PREFIX , ")
			.append(" FIRST_NAME AS FIRST_NAME , ")
			.append(" LAST_NAME AS LAST_NAME , ")
			.append(" MIDDLE_NAME AS MIDDLE_NAME , ")
			.append(" GENDER AS GENDER , ")
			.append(" DATE_OF_BIRTH AS DATE_OF_BIRTH , ")
			.append(" AGE AS AGE , ")
			.append(" AADHAR_ID AS AADHAR_ID , ")
			.append(" VOTER_ID AS VOTER_ID , ")
			.append(" PANCARD AS PANCARD , ")
			.append(" PASSPORT AS PASSPORT, ")
			.append(" NATIONALITY AS NATIONALITY , ")
			.append(" RELATION_WITH AS RELATION_WITH , ")
			.append(" RELATION_WITH_CUST AS RELATION_WITH_CUST , ")
			.append(" RELATION_NAME AS RELATION_NAME , ")
			.append(" RELATION_NAME_PREFIX AS RELATION_NAME_PREFIX , ")
			.append(" STATUS_ID AS STATUS_ID , ")
			.append(" CREATED_DATE AS CREATED_DATE , ")
			.append(" UPDATED_DATE AS UPDATED_DATE  ")
			.append(" FROM CO_APPLICANT ")
			.toString();
	
	/* QRY_TO_INSERT_CO_APPLICANT */
	public static final String QRY_TO_INSERT_CO_APPLICANT= new StringBuilder("INSERT ")
			.append("INTO CO_APPLICANT")
			.append("(")
			.append("CO_APPLICANT_ID, ")
			.append("CO_APPLICANT_NUMBER, ")
			.append("NAME_PREFIX, ")
			.append("FIRST_NAME, ")
			.append("LAST_NAME, ")
			.append("MIDDLE_NAME, ")
			.append("GENDER, ")
			.append("DATE_OF_BIRTH, ")
			.append("AGE, ")
			.append("AADHAR_ID, ")
			.append("VOTER_ID, ")
			.append("PANCARD, ")
			.append("PASSPORT, ")
			.append("NATIONALITY, ")
			.append("RELATION_WITH, ")
			.append("RELATION_WITH_CUST, ")
			.append("RELATION_NAME, ")
			.append("RELATION_NAME_PREFIX, ")
			.append("STATUS_ID, ")
			.append("CREATED_DATE, ")
			.append("UPDATED_DATE ")
			.append(" )")
			.append("VALUES( ") 
			.append("CO_APPLICANT_SEQ.NEXTVAL,")
			.append(":coApplicantNumber, ")
			.append(":namePrefix, ")
			.append(":firstName, ")
			.append(":lastName, ")
			.append(":middleName, ")
			.append(":gender, ")
			.append(":dateOfBirth, ")
			.append(":age, ")
			.append(":aadharId, ")
			.append(":voterId, ")
			.append(":pancard, ")
			.append(":passport, ")
			.append(":nationality, ")
			.append(":relationWith, ")
			.append(":relationWithCust, ")
			.append(":relationName, ")
			.append(":relationNamePrefix, ")
			.append(":statusId, ")
			.append(":createdDate, ")
			.append(":updatedDate ")
			.append(")")
			.toString();  
	
	/* QRY_TO_INSERT_CO_APP_BOOK_INFO */
	public static final String QRY_TO_INSERT_CO_APP_BOOK_INFO= new StringBuilder("INSERT ")
			.append("INTO CO_APP_BOOK_INFO")
			.append("(")
			.append("CO_APP_BOOK_INFO_ID, ")
			.append("PHONE_NO, ")
			.append("ALTERNATE_PHONE_NO, ")
			.append("EMAIL, ")
			.append("TELE_PHONE, ")
			.append("MARITAL_STATUS, ")
			.append("WORK_EXPERIENCE, ")
			.append("EDUCATIONAL_QUALIFICATION, ")
			.append("ANNUAL_HOUSE_HOLD_INCOME, ")
			.append("CUST_PROFFISIONAL_ID, ")
			.append("STATUS_ID, ")
			.append("CREATED_DATE, ")
			.append("UPDATED_DATE, ")
			.append("CO_APPLICANT_ID, ")
			.append("CUST_BOOK_INFO_ID, ")
			.append("DATE_OF_ANNIVERSERY, ")
			.append("TYPE ")
			.append(" )")
			.append("VALUES( ") 
			.append("CO_APP_BOOK_INFO_SEQ.NEXTVAL,")
			.append(":phoneNo, ")
			.append(":alternatePhoneNo, ")
			.append(":email, ")
			.append(":telePhone, ")
			.append(":maritalStatus, ")
			.append(":workExperience, ")
			.append(":educationalQualification, ")
			.append(":annualHouseHoldIncome, ")
			.append(":custProffisionalId, ")
			.append(":statusId, ")
			.append(":createdDate, ")
			.append(":updatedDate, ")
			.append(":coApplicantId, ")
			.append(":custBookInfoId, ")
			.append(":dateOfAnniversery, ")
			.append(":type ")
			.append(")")
			.toString();  
	
	public static final String QRY_TO_INSERT_BOOKING_STATUS_CHANGED_DTLS= new StringBuilder("")
			.append("INSERT INTO BOOKING_STATUS_CHANGED_DTLS")
			.append("(")
			.append("BOOKING_CHANGED_DTLS_ID")
			.append(",FLAT_BOOK_ID")
			.append(",ACTUAL_STATUS")
			.append(",CHANGED_STATUS")
			.append(",CREATED_DATE")
			.append(",EMP_ID")
			.append(",REMARKS")
			.append(")  VALUES  (")
			.append(" BOOKING_STATUS_CHANGED_DTLS_SEQ.NEXTVAL")
			.append(",:flatBookingId")
			.append(",:actualStatusId")
			.append(",:changedStatusId")
			.append(",SYSDATE")
			.append(",:empId")
			.append(",:remarks")
			.append(")")
			.toString();
			
	
	/* QRY_TO_INSERT_CUST_BOOK_INFO */
	public static final String QRY_TO_INSERT_CUST_BOOK_INFO= new StringBuilder("INSERT ")
			.append("INTO CUST_BOOK_INFO")
			.append("(")
			.append("CUST_BOOK_INFO_ID, ")
			.append("PHONE_NO, ")
			.append("ALTERNATE_PHONE_NO, ")
			.append("TELE_PHONE, ")
			.append("EMAIL, ")
			.append("MARITAL_STATUS, ")
			.append("DOCUMENTS_UPLOAD, ")
			.append("CUST_APP_ID, ")
			.append("DATE_OF_ANNIVERSERY, ")
			.append("SALES_TEAM_EMP_ID, ")
			.append("SALES_TEAM_LEAD_ID, ")
			.append("WORK_EXPERIENCE, ")
			.append("EDUCATIONAL_QUALIFICATION, ")
			.append("ANNUAL_HOUSE_HOLD_INCOME, ")
			.append("CUST_PROFFISIONAL_ID, ")
			.append("COMMENTS, ")
			.append("TDS_AUTHORIZATION_ID, ")
			.append("TERMS_CONDITION_FILE_NAME, ")
			.append("STATUS_ID, ")
			.append("CREATED_DATE, ")
			.append("UPDATED_DATE, ")
			.append("FLAT_BOOK_ID, ")
			.append("CUST_ID ")
			.append(" )")
			.append("VALUES( ") 
			.append("CUST_BOOK_INFO_SEQ.NEXTVAL,")
			.append(":phoneNo, ")
			.append(":alternatePhoneNo, ")
			.append(":telePhone, ")
			.append(":email, ")
			.append(":maritalStatus, ")
			.append(":documentsUpload, ")
			.append(":custAppId, ")
			.append(":dateOfAnniversery, ")
			.append(":salesTeamEmpId, ")
			.append(":salesTeamLeadId, ")
			.append(":workExperience, ")
			.append(":educationalQualification, ")
			.append(":annualHouseHoldIncome, ")
			.append(":custProffisionalId, ")
			.append(":overallExperienceWithSumadhura, ")
			.append(":tdsAuthorizationId, ")
			.append(":termsConditionFileName, ")
			.append(":statusId, ")
			.append(":createdDate, ")
			.append(":updatedDate, ")
			.append(":flatBookId, ")
			.append(":custId ")
			.append(")")
			.toString();
	
	   /* QRY_TO_UPDATE_CUSTOMER  */
	   public static final String QRY_TO_UPDATE_CUSTOMER = new StringBuilder("UPDATE CUSTOMER ")
			   .append("SET ")
			   .append("STATUS_ID = :STATUS_ID,")
			   .append("UPDATED_DATE = :MODIFIED_DATE")
			   .append(" WHERE ")
			   .append("CUST_ID = :CUST_ID")
			   .append(" AND STATUS_ID IN (:PAST_STATUS_ID) ")
			   .toString();
	   
	   /* QRY_TO_UPDATE_FLAT_BOOKING  */
	   public static final String QRY_TO_UPDATE_FLAT_BOOKING = new StringBuilder("UPDATE FLAT_BOOKING ")
			   .append("SET ")
			   .append("STATUS_ID = :STATUS_ID")
			   .append(" WHERE FLAT_BOOK_ID = :FLAT_BOOK_ID")
			   .append(" AND CUST_ID = :CUST_ID")
			   .append(" AND STATUS_ID = :PAST_STATUS_ID")
			   .toString();
	   
	   /* QRY_TO_UPDATE_FLAT_BOOKING_WTO_CANCEL */
	   public static final String QRY_TO_UPDATE_FLAT_BOOKING_WTO_CANCEL = new StringBuilder("UPDATE FLAT_BOOKING ")
			   .append("SET ")
			   .append("CANCELED_EMP_ID = :CANCELED_EMP_ID, ")
			   .append("CANCELED_DATE = :CANCELED_DATE, ")
			   .append("COMMENTS = :COMMENTS ")
			   .append("WHERE ")
			   .append("FLAT_BOOK_ID = :FLAT_BOOK_ID ")
			   .toString();
	   
	   /* QRY_TO_UPDATE_FLAT_COST  */
	   public static final String QRY_TO_UPDATE_FLAT_COST = new StringBuilder("UPDATE FLAT_COST ")
			   .append("SET ")
			   .append("STATUS_ID = :STATUS_ID, ")
			   .append("UPDATED_DATE = :MODIFIED_DATE ")
			   .append("WHERE FLAT_ID  IN (SELECT FLAT_ID FROM FLAT_BOOKING WHERE FLAT_BOOK_ID =  :FLAT_BOOK_ID) ")
			   .append("AND STATUS_ID = :PAST_STATUS_ID")
			   .toString();
	   
	   /* QRY_TO_UPDATE_CUST_BOOK_INFO  */
	   public static final String QRY_TO_UPDATE_CUST_BOOK_INFO = new StringBuilder("UPDATE CUST_BOOK_INFO ")
			   .append("SET ")
			   .append("STATUS_ID = :STATUS_ID,")
			   .append("UPDATED_DATE = :MODIFIED_DATE")
			   .append(" WHERE FLAT_BOOK_ID = :FLAT_BOOK_ID")
			   .append(" AND CUST_ID = :CUST_ID")
			   .append(" AND STATUS_ID = :PAST_STATUS_ID")
			   .toString();
	   
	   /* QRY_TO_UPDATE_CO_APP_BOOK_INFO  */
	   public static final String QRY_TO_UPDATE_CO_APP_BOOK_INFO = new StringBuilder("UPDATE CO_APP_BOOK_INFO ")
			   .append("SET ")
			   .append("STATUS_ID = :STATUS_ID,")
			   .append("UPDATED_DATE = :MODIFIED_DATE")
			   .append(" WHERE CUST_BOOK_INFO_ID = :CUST_BOOK_INFO_ID")
			   .append(" AND STATUS_ID = :PAST_STATUS_ID")
			   .toString();
	   
	   /* QRY_TO_UPDATE_CO_APP_BOOK_INFO  */
	   public static final String QRY_TO_UPDATE_CO_APPLICANT = new StringBuilder("UPDATE CO_APPLICANT ")
			   .append("SET ")
			   .append("STATUS_ID = :STATUS_ID,")
			   .append("UPDATED_DATE = :UPDATED_DATE")
			   .append(" WHERE CO_APPLICANT_ID = :CO_APPLICANT_ID")
			   .append(" AND STATUS_ID = :PAST_STATUS_ID")
			   .toString();
	   

	   /* QRY_TO_UPDATE_EMPLOYEE_LOGIN FROM EMPLOYEE_LOGIN  */
	     public static final String QRY_TO_UPDATE_EMPLOYEE_LOGIN = new StringBuilder("UPDATE EMPLOYEE_LOGIN ")
	             .append("SET ")
	             .append("LAST_LOGIN_TIME = :lastLogInTime,")
	             .append("MODIFIED_DATE = :modifiedDate ")
	             .append("WHERE ")
	             .append("EMPLOYEE_ID = :employeeId ")
	             .append("AND STATUS  = :statusId ")
	             .append("AND  ID  = :id")
	             .toString();
	 			
	     public static final String META_DATA_TYPES=new StringBuilder("SELECT METADATA_TYPES_ID,NAME FROM METADATA_TYPES ")
		 	.toString();	
	   
	     public static final String QRY_TO_GET_REFERRED_CUSTOMERS=new StringBuffer("SELECT DISTINCT ")
	    		    .append(" REFERFND.ID,REFERFND.CREATED_DATE,REFERFND.NAME,REFERFND.EMAIL,REFERFND.MOBILE,REFERFND.CITY,REFERFND.STATE,")
	    		    .append("REFERFND.PINCODE,REFERFND.SITE_ID,CUST.CUST_ID,REFERFND.PAN_NUMBER,REFERFND.PHOTO,REFERFND.INTEREST_FLAT,")
	    		    .append("REFERFND.COMMENTS,FLATB.STATUS_ID ,CUST.FIRST_NAME,CUST.LAST_NAME,CUST.PROFILE_PIC, FLAT.FLAT_NO, ")
	    		    
	    		    .append(" REFERFND.REFERENCE_ID, REFERFND.FLAT_BOOK_ID,SITE.NAME AS SITE_NAME,REFERFND.REFERRAL_STATUS AS REFERRAL_STATUS,E.EMP_ID,E.FIRST_NAME ||' '||E.LAST_NAME AS EMP_NAME,E.EMAIL AS EMP_EMAIL FROM ")
	    		    .append("REFER_FRIEND REFERFND JOIN FLAT_BOOKING FLATB ON(FLATB.FLAT_BOOK_ID=REFERFND.FLAT_BOOK_ID) ")
	    		    .append(" JOIN CUSTOMER CUST ON(CUST.CUST_ID=FLATB.CUST_ID) ")
	    		    .append("JOIN FLAT FLAT ON(FLATB.FLAT_ID=FLAT.FLAT_ID) FULL JOIN SITE SITE ON(SITE.SITE_ID=REFERFND.SITE_ID) ")
	    		    .append(" FULL JOIN REFER_FRIEND_SITES RFS ON(RFS.REFER_FRIEND_ID=REFERFND.ID) ")
	    		    .append(" LEFT OUTER JOIN EMPLOYEE E ON (E.EMP_ID=REFERFND.EMP_ID) ")
	    		    .toString();
	     
	     public static final String QRY_TO_GET_REFERRED_CUSTOMERS_COMMENTS=new StringBuffer("SELECT DISTINCT ")
	    		    .append(" REFERFND.ID,REFERFND.CREATED_DATE,REFERFND.NAME,REFERFND.EMAIL,REFERFND.MOBILE,REFERFND.CITY,REFERFND.STATE,")
	    		    .append("REFERFND.PINCODE,REFERFND.SITE_ID,CUST.CUST_ID,REFERFND.PAN_NUMBER,REFERFND.PHOTO,REFERFND.INTEREST_FLAT,")
	    		    .append("REFERFND.COMMENTS,FLATB.STATUS_ID ,CUST.FIRST_NAME,CUST.LAST_NAME,CUST.PROFILE_PIC, FLAT.FLAT_NO, ")
	    		    
	    		    .append("(SELECT DISTINCT S.SHORT_FORM  ")
	    		    .append(" FROM FLAT_BOOKING FB INNER JOIN FLAT F ON FB.FLAT_ID = F.FLAT_ID ")
	    		    .append("INNER JOIN FLOOR_DETAILS FD ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID ")
	    		    .append("INNER JOIN BLOCK_DETAILS BD 	ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID ")
	    		    .append("  INNER JOIN SITE S ON BD.SITE_ID = S.SITE_ID WHERE FB.CUST_ID=CUST.CUST_ID AND FB.FLAT_ID=FLAT.FLAT_ID) AS SITE_SHORT_NAME ,")
	    		    
	    		    .append(" REFERFND.REFERENCE_ID, REFERFND.FLAT_BOOK_ID,SITE.NAME AS SITE_NAME,REFERFND.REFERRAL_STATUS AS REFERRAL_STATUS,E.EMP_ID,E.FIRST_NAME ||' '||E.LAST_NAME AS EMP_NAME,E.EMAIL AS EMP_EMAIL FROM ")
	    		    .append("REFER_FRIEND REFERFND JOIN FLAT_BOOKING FLATB ON(FLATB.FLAT_BOOK_ID=REFERFND.FLAT_BOOK_ID) ")
	    		    .append(" JOIN CUSTOMER CUST ON(CUST.CUST_ID=FLATB.CUST_ID) ")
	    		    .append("JOIN FLAT FLAT ON(FLATB.FLAT_ID=FLAT.FLAT_ID) FULL JOIN SITE SITE ON(SITE.SITE_ID=REFERFND.SITE_ID) ")
	    		    .append(" FULL JOIN REFER_FRIEND_SITES RFS ON(RFS.REFER_FRIEND_ID=REFERFND.ID) ")
	    		    .append(" LEFT OUTER JOIN EMPLOYEE E ON (E.EMP_ID=REFERFND.EMP_ID) ")
	    		    .toString();
	     
	     public static final String QRY_TO_GET_REFERRED_CUSTOMERS_ROW_COUNT=new StringBuffer(SELECT)
	    		   .append(" COUNT(DISTINCT REFERFND.ID) FROM ")
	    		   .append("REFER_FRIEND REFERFND JOIN FLAT_BOOKING FLATB ON(FLATB.FLAT_BOOK_ID=REFERFND.FLAT_BOOK_ID) ")
	    		   .append(" JOIN CUSTOMER CUST ON(CUST.CUST_ID=FLATB.CUST_ID) ")
	    		   .append("JOIN FLAT FLAT ON(FLATB.FLAT_ID=FLAT.FLAT_ID) JOIN SITE SITE ON(SITE.SITE_ID=REFERFND.SITE_ID) ")
	    		   .append(" FULL JOIN REFER_FRIEND_SITES RFS ON(RFS.REFER_FRIEND_ID=REFERFND.ID) ")
	    		   .toString();
	     
	   public static final String UPDATE_REFERFRND_COMMENTS=new StringBuilder("UPDATE REFER_FRIEND ")
	   		.append(" SET COMMENTS=:COMMENTS ")
	   		//.append(" , REFER_STATUS=:REFER_STATUS ") 
			//.append(" WHERE STATUS_ID=:STATUS_ID AND REFERENCE_ID=:REFERENCE_ID ")
	   		.toString();

	   
	   /* QRY_TO_GET_REFERENCE_DETAILS FROM REFER_FRIEND */
		public static final String QRY_TO_SEARCH_REFERENCE_DETAILS = new StringBuilder(" SELECT DISTINCT ")
				.append(" REF.REFERENCE_ID, REF.NAME FROM REFER_FRIEND REF WHERE REF.STATUS_ID=:STATUS_ID AND ")
				.toString();
		
		/* QRY_TO_SEARCH_ALL_REFERED_CUSTOMERS_FOR_REFERENCE_DETAILS */
		public static final String QRY_TO_SEARCH_ALL_REFERED_CUSTOMERS_FOR_REFERENCE_DETAILS = new StringBuilder(" SELECT DISTINCT ")
				.append(" CUST.CUST_ID AS CUST_ID, (CUST.FIRST_NAME || ' ' || CUST.LAST_NAME) AS CUSTOMER_NAME, ")
				.append(" FLATB.FLAT_BOOK_ID AS FLAT_BOOK_ID ")
				.append(" FROM CUSTOMER CUST JOIN FLAT_BOOKING FLATB ON(FLATB.CUST_ID=CUST.CUST_ID) ")
				.append(" JOIN REFER_FRIEND RF ON (RF.FLAT_BOOK_ID=FLATB.FLAT_BOOK_ID) ")
				.append(" WHERE RF.STATUS_ID=:STATUS_ID AND (UPPER(CUST.FIRST_NAME) like :NAME OR ")
				.append(" UPPER(CUST.LAST_NAME) like :NAME ) ORDER BY CUSTOMER_NAME")
				.toString();
		
	  /* QRY_TO_SEARCH_ALL_REFERED_CUSTOMER_FLATS_REFERENCE_DETAILS */
		public static final String QRY_TO_SEARCH_ALL_REFERED_CUSTOMER_FLATS_REFERENCE_DETAILS = new StringBuilder(" SELECT DISTINCT ")
				.append(" FLAT.FLAT_NO AS FLAT_NO, (SITE.NAME ||'-' || FLAT.FLAT_NO) AS SITE_FLAT_NO  ")
				.append(" FROM FLAT FLAT JOIN FLAT_BOOKING FLATB ON(FLATB.FLAT_ID=FLAT.FLAT_ID) ")
				.append(" JOIN REFER_FRIEND RF ON (RF.FLAT_BOOK_ID=FLATB.FLAT_BOOK_ID) ")
				.append(" JOIN FLOOR_DETAILS FLRD ON(FLAT.FLOOR_DET_ID=FLRD.FLOOR_DET_ID) ")
				.append(" JOIN BLOCK_DETAILS BLCKDT ON(BLCKDT.BLOCK_DET_ID=FLRD.BLOCK_DET_ID) ")
				.append(" JOIN SITE ON(BLCKDT.SITE_ID=SITE.SITE_ID) WHERE RF.STATUS_ID=:STATUS_ID ")
				.append(" AND UPPER(FLAT.FLAT_NO) LIKE :FLAT_NO ORDER BY SITE_FLAT_NO")
				.toString();
		
		/* QRY_TO_GET_STATE_LIST to get State List */
		public static final String QRY_TO_GET_STATE_LIST = new StringBuilder(" SELECT DISTINCT ")
				.append(" ST.STATE_ID, ST.STATE_NAME FROM STATE ST ")
				.toString();
		
		/* SITE_BHK */
		/* QRY_TO_GET_FLAT_PREFERENCES_FOR_REFERENCES */
		public static final String QRY_TO_GET_FLAT_PREFERENCES= new StringBuilder(" SELECT               ")
				.append(" SB.BHK, SP.SBUA_SQFT,                                                          ")
				.append(" CASE                                                                           ")
				.append(" WHEN ISNUMERIC(SB.BHK)=1 THEN                                                  ")
				.append(" (SB.BHK || 'BHK-' || SP.SBUA_SQFT)                                             ")
				.append(" ELSE (SB.BHK || '-' || SP.SBUA_SQFT)                                           ")
				.append(" END AS BHK_SBUA                                                                ")
				.append(" FROM FLAT_PREFERENCES FP JOIN SITE_PROPERTY SP ON(SP.SNO=FP.SITE_PROPERTY_ID)  ")
				.append(" JOIN SITE_BHK_MAPPING SBM ON(SBM.ID=SP.SITE_BHK_MAPPING_ID)                    ")
				.append(" JOIN SITE_BHK SB ON(SB.ID=SBM.BHK_ID) WHERE FP.REFERENCES_ID=:REFERENCES_ID    ")
				.append(" AND FP.STATUS_ID=:STATUS_ID ORDER BY SB.BHK, SP.SBUA_SQFT                      ")
				.toString();
		
		/* QRY_TO_GET_INTERESTED_SITE_NAMES */
		public static final String QRY_TO_GET_INTERESTED_SITE_NAMES= new StringBuilder(" SELECT ")
				.append(" S.NAME AS SITE_NAME FROM REFER_FRIEND_SITES RFS JOIN SITE S ON(S.SITE_ID=RFS.SITE_ID) ")
				.append(" WHERE RFS.REFER_FRIEND_ID=:REFERENCES_ID AND RFS.STATUS_ID=:STATUS_ID ORDER BY S.NAME ")
				.toString();
		
		/* QRY_TO_GET_REFERRAL_STATUS_MENU_MODULE_SUBMENU_MODULE */
		public static final String QRY_TO_GET_REFERRAL_STATUS_MENU_MODULE_SUBMENU_MODULE= new StringBuilder(" SELECT ")
				.append(" MSMS.MENU_MODULE_SUBMENU_MODULE_STATUS_ID, ")
				.append(" MSMS.EMP_MENU_MODULE_ID, MSMS.EMP_SUBMENU_MODULE_ID, ")
				.append(" MSMS.STATUS_NAME, MSMS.STATUS_ID ")
				.append(" FROM MENU_MODULE_SUBMENU_MODULE_STATUS MSMS ")
				.append(" WHERE MSMS.STATUS_ID=:STATUS_ID AND ")
				.append(" MSMS.EMP_MENU_MODULE_ID=:EMP_MENU_MODULE_ID AND ")
				.append(" MSMS.EMP_SUBMENU_MODULE_ID=:EMP_SUBMENU_MODULE_ID ")
				.append(" ORDER BY STATUS_NAME")
				.toString();
		
		/* QRY_TO_GET_DEVICE_DETAILS_BY_FLAT_BOOK_ID */
		public static final String QRY_TO_GET_DEVICE_DETAILS_BY_FLAT_BOOK_ID = new StringBuilder(" SELECT DISTINCT ")
				.append(" DE.DEVICE_TOKEN AS DEVICE_TOKEN,DE.DEVICE_MODEL AS DEVICE_MODEL, ")
				.append(" DE.DEVICE_ID AS DEVICE_ID,DE.APP_VERSION AS APP_VERSION, ")
				.append(" DE.OS_TYPE AS OS_TYPE,DE.OS_VERSION AS OS_VERSION, ")
				.append(" DE.IMEI_NO AS IMEI_NO,DE.DEVICE_STATUS AS DEVICE_STATUS, ")
				.append(" DE.USER_AGENT AS USER_AGENT,DE.USER_XID AS USER_XID, ")
				.append(" DE.UUID AS UUID,DE.SERIAL_NO AS SERIAL_NO, ")
				.append(" DE.CREATED_DATE AS CREATED_DATE,DE.MODIFIED_DATE AS MODIFIED_DATE, ")
				.append(" DE.STATUS_ID AS STATUS_ID FROM DEVICE DE ")
				.append(" JOIN APP_REGISTRATION APP ON (APP.DEVICE_ID=DE.DEVICE_ID ")
				.append(" AND APP.STATUS_ID=:STATUS_ID) ")
				.append(" JOIN FLAT_BOOKING FB ON (FB.CUST_ID=APP.CUST_ID) ")
				.append(" WHERE FB.FLAT_BOOK_ID=:FLAT_BOOK_ID ")
				.toString();
		
		/* QRY_TO_GET_DEVICE_DETAILS_BY_SITE_ID_FOR_MPR getting device details based on Site Id for mpr */
		public static final String QRY_TO_GET_DEVICE_DETAILS_BY_SITE_ID_FOR_MPR = new StringBuilder(" SELECT DISTINCT ")
				.append(" DE.DEVICE_TOKEN AS DEVICE_TOKEN,DE.DEVICE_MODEL AS DEVICE_MODEL, ")
				.append(" DE.DEVICE_ID AS DEVICE_ID,DE.APP_VERSION AS APP_VERSION, ")
				.append(" DE.OS_TYPE AS OS_TYPE,DE.OS_VERSION AS OS_VERSION, ")
				.append(" DE.IMEI_NO AS IMEI_NO,DE.DEVICE_STATUS AS DEVICE_STATUS, ")
				.append(" DE.USER_AGENT AS USER_AGENT,DE.USER_XID AS USER_XID, ")
				.append(" DE.UUID AS UUID,DE.SERIAL_NO AS SERIAL_NO, ")
				.append(" DE.CREATED_DATE AS CREATED_DATE,DE.MODIFIED_DATE AS MODIFIED_DATE, ")
				.append(" FT.FLAT_ID,FB.FLAT_BOOK_ID, ")
				.append(" DE.STATUS_ID AS STATUS_ID FROM DEVICE DE ")
				.append(" JOIN APP_REGISTRATION APP ON (APP.DEVICE_ID=DE.DEVICE_ID ")
				.append(" AND APP.STATUS_ID=:STATUS_ID) ")
				.append(" JOIN FLAT_BOOKING FB ON (FB.CUST_ID=APP.CUST_ID) ")
				.append(" JOIN FLAT FT ON(FT.FLAT_ID=FB.FLAT_ID) ")
				.append(" JOIN FLOOR_DETAILS FLD ON(FLD.FLOOR_DET_ID=FT.FLOOR_DET_ID) ")
				.append(" JOIN BLOCK_DETAILS BD ON(BD.BLOCK_DET_ID=FLD.BLOCK_DET_ID) ")
				.append(" JOIN SITE ST ON(ST.SITE_ID=BD.SITE_ID) ")
				.append(" WHERE FB.STATUS_ID=:STATUS_ID AND FT.STATUS_ID=:STATUS_ID ")
				.append(" AND ST.SITE_ID IN (:TYPE_ID) ")
				.append(" AND TRUNC(CASE ")
				.append(" WHEN FB.AGREEMENT_DATE IS NOT NULL THEN FB.AGREEMENT_DATE ")
				.append(" WHEN FB.BOOKING_DATE IS NOT NULL THEN FB.BOOKING_DATE ")
				.append(" ELSE FB.CREATED_DATE ")
				.append(" END)<=SYSDATE ")
				.toString();
		
		/* QRT_TO_GET_BOOKING_FLAT_DATA_FOR_UPDATE_BOOKING_FORM_DATA 
		public static final String QRT_TO_GET_BOOKING_FLAT_DATA = new StringBuilder(" SELECT ")
				.append(" FB.CUST_ID AS CUST_ID, FB.FLAT_ID, ")
				.append(" CBI.CUST_BOOK_INFO_ID AS CUST_BOOK_INFO_ID,")
				.append(" CBI.CUST_PROFFISIONAL_ID AS CUST_PROFFISIONAL_ID, ")
				.append(" FB.FLAT_BOOK_ID AS FLAT_BOOK_ID ")
				.append(" FROM FLAT_BOOKING FB INNER JOIN FLAT_DETAILS FD ON(FB.FLAT_ID=FD.FLAT_ID)")
				.append(" INNER JOIN CUST_BOOK_INFO CBI ON(CBI.CUST_ID=FB.CUST_ID) ") 
				.append(" WHERE FD.FLAT_ID=:FLAT_ID")
				.toString(); */
		 
		 /* QRT_TO_GET_BOOKING_FLAT_DATA_FOR_UPDATE_BOOKING_FORM_DATA */
				public static final String QRT_TO_GET_BOOKING_FLAT_DATA = new StringBuilder(" SELECT ")
						.append(" FB.CUST_ID AS CUST_ID, FB.FLAT_ID, ")
						.append(" FB.STATUS_ID AS BOOKING_STATUS,")
						.append(" CBI.CUST_BOOK_INFO_ID AS CUST_BOOK_INFO_ID,")
						.append(" CBI.CUST_PROFFISIONAL_ID AS CUST_PROFFISIONAL_ID, ")
						.append(" FB.FLAT_BOOK_ID AS FLAT_BOOK_ID,FB.BOOKING_DATE ")
						.append(" FROM FLAT_BOOKING FB INNER JOIN FLAT FD ON(FB.FLAT_ID=FD.FLAT_ID)")
						.append(" INNER JOIN CUST_BOOK_INFO CBI ON(CBI.FLAT_BOOK_ID=FB.FLAT_BOOK_ID)  ") 
						.append(" WHERE FD.FLAT_ID=:FLAT_ID AND (FB.STATUS_ID = 6 or FB.STATUS_ID = 20 ) ")
						.toString();
		
		/* QRT_TO_DELETE_CO_APP_BOOKINFO_DATA */
		public static final String QRT_TO_DELETE_CO_APP_BOOKINFO_DATA = new StringBuilder(" DELETE FROM CO_APP_BOOK_INFO WHERE CO_APP_BOOK_INFO_ID =:CO_APP_BOOK_INFO_ID ")
				.toString();
		
		/* QRT_TO_DELETE_CO_APP_PROFFESIONAL_DATA */
		public static final String QRT_TO_DELETE_CO_APP_PROFFESIONAL_DATA = new StringBuilder(" DELETE FROM PROFESSIONAL_DETAILS WHERE CUST_PROFFISIONAL_ID =:CUST_PROFFISIONAL_ID ")
				.toString();
		
		/* QRT_TO_DELETE_CO_APP_INFO_DATA */
		public static final String QRT_TO_DELETE_CO_APP_INFO_DATA = new StringBuilder(" DELETE FROM CO_APPLICANT WHERE CO_APPLICANT_ID =:CO_APPLICANT_ID ")
				.toString();

		public static final String QRT_TO_DELETE_ADDRESS_MAPPING = new StringBuilder(" DELETE FROM ADDRESS_MAPPING WHERE TYPE_ID =:CUST_BOOK_INFO_ID AND TYPE=:TYPE")
				.toString();
		
		public static final String QRT_TO_DELETE_ADDRESS = new StringBuilder(" DELETE FROM ADDRESS WHERE ADDRESS_ID=:ADDRESS_ID ")
				.toString();
		
		public static final String QRT_TO_DELETE_POAHOLDER_DETAILS = new StringBuilder(" DELETE FROM POA_HOLDER WHERE CUSTOMER_OTHER_DETAILS_ID =:CUSTOMER_OTHER_DETAILS_ID ")
				.toString();
		
		public static final String QRT_TO_DELETE_CUSTOMER_OTHER_DETAILS = new StringBuilder(" DELETE FROM CUSTOMER_OTHER_DETAILS WHERE FLAT_BOOK_ID =:FLAT_BOOK_ID ")
				.toString();
		
		public static final String QRT_TO_DELETE_KYC_DETAILS = new StringBuilder(" DELETE FROM CUSTOMER_KYC_SUBMITTED_DOC WHERE CUST_BOOK_INFO_ID =:CUST_BOOK_INFO_ID ")
				.toString();
		public static final String  QRY_TO_UPDATE_CUSTOMER_PROFESSIONAL_DETAILS= new StringBuilder("UPDATE ")
				.append(" PROFESSIONAL_DETAILS")
				.append(" SET ")
				.append("DESIGNATION=:designation,")
				.append("ADDRESS_OF_ORGANIZATION=:addressOfOrganization,")
				.append("OFFICE_NUMBER=:officeNumber,")
				.append("OFFICE_EMAIL_ID=:officeEmailId,")
				.append("ORGANIZATION_ID=:organizationTypeId,")
				.append("ORGANIZATION_TYPE_OTHERS=:ifOtherOrgTypeName,")
				.append("SECTOR_ID=:workSectorId,")
				.append("SECTOR_OTHERS=:ifOtherWorkSectorName,")
				.append("WORKFUNCTION_ID=:workFunctionId,")
				.append("WORKFUNCTION_OTHERS=:ifOtherworkFunctionName,")
				.append("MODIFIED_DATE=SYSTIMESTAMP,")
				.append("YRS_OF_EXP=:yearsOfExperience, ")
				.append("NAME_OF_ORGANIZATION=:nameOfOrganization ")      
				.append(" WHERE CUST_PROFFISIONAL_ID=:custProffisionalId")
				//.append(")")
				.toString();
		
		 public static final String QRY_TO_UPDATE_CUSTOMER_BASIC_INFO = new StringBuilder("UPDATE CUSTOMER ")
				   .append("SET ")
				   .append("NAME_PREFIX=:namePrefix,FIRST_NAME=:firstName,LAST_NAME=:lastName,GENDER=:gender,AGE=:age,DATE_OF_BIRTH=:dob,AADHAR_NUMBER=:adharNumber, ")
				   .append("UPDATED_DATE=:updatedDate,PANCARD=:pancard,VOTER_ID=:voterId,RELATION_WITH=:relationWith,RELATION_NAME=:relationName,NATIONALITY=:nationality, ")
				   .append("PROFILE_PIC=:profilePic,RELATION_NAME_PREFIX=:relationNamePrefix,PASSPORT=:passport ")
				   .append(" WHERE ")
				   .append("CUST_ID = :customerId")
				   .toString();
		 
		 /* QRY_TO_UPDATE_FLAT_BOOKING_INFO */
		 public static final String QRY_TO_UPDATE_FLAT_BOOKING_INFO = new StringBuilder("UPDATE FLAT_BOOKING ")
				   .append("SET ")
				   .append("CUST_ID = :customerId, ")
				   .append("AGREEMENT_DATE = :agreementDate,")
				   .append("REG_DATE = :registrationDate, ")
				   .append("HANDING_OVER_DATE = :handingOverDate ")
				   .append("WHERE ")
				   .append("FLAT_BOOK_ID = :flatBookingId ")
				   /*
				   .append("AND ")
				   .append("STATUS_ID  = :statusId ")
				   */
				   .toString();
		 
		 /* QRY_TO_UPDATE_FLAT_BOOKING_INFO */
		 public static final String QRY_TO_UPDATE_FLAT_BOOKING_MS_INFO = new StringBuilder("UPDATE FLAT_BOOKING ")
				   .append("SET ")
				   .append("MILESTONE_DAYS = :milestoneDueDays")
				   .append(",SALE_DEED_NO = :saleDeedNo")
				   .append(",SALE_DEED_DATE = :saleDeedDate")
				   .append(",SALE_DEED_VALUE = :saleDeedValue")
				   .append(",REGISTRATION_STATUS = :registrationStatus")
				   .append(",SALE_DEED_CD_NO = :saleDeedCDno")
				   .append(",PROPERTY_SL_NO = :propertySlNo")
				   .append(",CAR_PARKING_SPACES = :carParkingSpaces")
				   .append(",CUST_LOAN_BANK = :customerLoanBank")
				   .append(",RR_NO = :rrNo")
				   .append(" WHERE ")
				   .append("FLAT_BOOK_ID = :flatBookingId ")
				   .toString();
		 
		 
		 /* QRY_TO_UPDATE_CUSTOMER_BOOKING_INFO */
		 public static final String QRY_TO_UPDATE_CUSTOMER_BOOKING_INFO = new StringBuilder("UPDATE CUST_BOOK_INFO SET ")
				   .append("PHONE_NO=:phoneNo,ALTERNATE_PHONE_NO=:alternatePhoneNo,TELE_PHONE=:telePhone,EMAIL=:email,MARITAL_STATUS=:maritalStatus,DOCUMENTS_UPLOAD=:documentsUpload, ")
				   .append("DATE_OF_ANNIVERSERY=:dateOfAnniversery,SALES_TEAM_EMP_ID=:salesTeamEmpId,SALES_TEAM_LEAD_ID=:salesTeamLeadId,WORK_EXPERIENCE=:workExperience,")
				   .append("EDUCATIONAL_QUALIFICATION=:educationalQualification,ANNUAL_HOUSE_HOLD_INCOME=:annualHouseHoldIncome,COMMENTS=:overallExperienceWithSumadhura,TDS_AUTHORIZATION_ID=:tdsAuthorizationId,")
				   .append("TERMS_CONDITION_FILE_NAME=:termsConditionFileName,CUST_ID = :custId,UPDATED_DATE=SYSTIMESTAMP WHERE ")
				   //.append("CUST_ID = :custId ")
				   .append("FLAT_BOOK_ID=:flatBookId ")
				   .toString();
		 
		 /* QRY_TO_DELETE_CONTACT_INFORMATION */
		 public static final String QRY_TO_DELETE_CONTACT_INFORMATION = new StringBuilder("DELETE ")
				   .append("CONTACT_INFORMATION ")
				   .append(" WHERE ")
				   .append("FLATBOOKING_ID = :FLATBOOKING_ID")
				   .toString();
		 
		/* QRY_TO_UPDATE_CUSTOMER_OTHER_DETAILS_INFO */
		 public static final String QRY_TO_UPDATE_CUSTOMER_OTHER_DETAILS_INFO = new StringBuilder("UPDATE CUSTOMER_OTHER_DETAILS SET ")
				   .append("PURPOUSE_OF_PURCHASE=:purposeofPurchase,CURRENT_RESIDENTIAL_STATUS=:currentResidentialStatus,STATUS_ID=:statusId, ")
				   .append("MODIFIED_DATE=SYSTIMESTAMP,EXISTED_FLAT_BOOK_ID=:existedFlatBookId ")
				   .append("WHERE FLAT_BOOK_ID=:flatBookId ")
				   .toString();
		 
		 /* QRY_TO_UPDATE_CUSTOMER_POA_HOLDER_INFO */
		 public static final String QRY_TO_UPDATE_CUSTOMER_POA_HOLDER_INFO = new StringBuilder("UPDATE POA_HOLDER SET ")
				   .append("MOBILENO=:mobileNumOfPOA,TELEPHONE=:telOfPOA,ADDRESS1=:addressOfPOA, ")
				   .append("MODIFIED_DATE=SYSTIMESTAMP,ADDRESS2=:address2, ADDRESS3=:address3 , PINCODE=:pincodeOfPOA,  ")
				   .append("STATE_ID=:stateId , CITY_ID=:cityId, CITY = :city, STATUS_ID=:statusId, EMAIL=:emailOfPOA , POA_HOLDER_NAME=:nameOfPOA,COUNTRY_ID=:countryId,COUNTRY=:country ")
				   .append("WHERE CUSTOMER_OTHER_DETAILS_ID=:custOtherDetailsId ")
				   .toString();
		 
		 /* QRY_TO_UPDATE_REFERENCES_MAPPING */
	    public static final String QRY_TO_UPDATE_REFERENCES_MAPPING = new StringBuilder("UPDATE REFERENCES_MAPPING SET ")
				 .append("TYPE_ID  = :typeId, ")
				 .append("TYPE     = :type ")
				 .append("WHERE ")
				 .append("CUST_OTHER_ID  = :custOtherId ")
				 .toString();
	    
	    
		 
		 /* QRY_TO_COUNT_CO_APPLICANT_FOR_MUL_CUSTOMERS */
		 public static final String QRY_TO_COUNT_CO_APPLICANT_FOR_MUL_CUSTOMERS = new StringBuilder("SELECT CAB.CO_APP_BOOK_INFO_ID AS CO_APP_BOOK_INFO_ID, ")
				   .append(" CAB.CO_APPLICANT_ID AS CO_APPLICANT_ID, CAB.CUST_BOOK_INFO_ID AS CUST_BOOK_INFO_ID ")
				   .append(" FROM  CO_APPLICANT CA JOIN CO_APP_BOOK_INFO CAB ON(CAB.CO_APPLICANT_ID=CA.CO_APPLICANT_ID) ")
				   .append(" WHERE (CA.PANCARD=:PANCARD OR CA.PASSPORT=:PASSPORT) ")
				   .toString();
		 
		 /* QRY_TO_UPDATE_CO_APPLICANT_INFO */
		 public static final String QRY_TO_UPDATE_CO_APPLICANT_INFO = new StringBuilder("UPDATE ")
				   .append("CO_APPLICANT SET CO_APPLICANT_NUMBER=:coApplicantNumber, ")
				   .append("NAME_PREFIX=:namePrefix, FIRST_NAME=:firstName, ")
				   .append("LAST_NAME=:lastName, MIDDLE_NAME=:middleName, ")
				   .append("GENDER=:gender, DATE_OF_BIRTH=:dateOfBirth, ")
				   .append("AGE=:age, AADHAR_ID=:aadharId,VOTER_ID=:voterId, ")
				   .append("PANCARD=:pancard,NATIONALITY=:nationality,  ")
				   .append("RELATION_WITH=:relationWith, RELATION_WITH_CUST=:relationWithCust, ")
				   .append("RELATION_NAME=:relationName, RELATION_NAME_PREFIX=:relationNamePrefix, ")
				   .append("UPDATED_DATE=SYSTIMESTAMP, PASSPORT=:passport, ")
				   .append("STATUS_ID=:statusId ")
				   .append("WHERE CO_APPLICANT_ID=:coApplicantId ")
				   .toString();
		 
		 /* QRY_TO_UPDATE_CO_APPLICANT_BOOK_INFO */
		 public static final String QRY_TO_UPDATE_CO_APPLICANT_BOOK_INFO = new StringBuilder("UPDATE ")
				   .append("CO_APP_BOOK_INFO SET PHONE_NO=:phoneNo, ")
				   .append("ALTERNATE_PHONE_NO=:alternatePhoneNo, EMAIL=:email,")
				   .append("TELE_PHONE=:telePhone, MARITAL_STATUS=:maritalStatus, ")
				   .append("WORK_EXPERIENCE=:workExperience, ")
				   .append("EDUCATIONAL_QUALIFICATION=:educationalQualification, ")
				   .append("ANNUAL_HOUSE_HOLD_INCOME=:annualHouseHoldIncome, ")
				   .append("UPDATED_DATE=SYSTIMESTAMP, DATE_OF_ANNIVERSERY=:dateOfAnniversery, ")
				   .append("TYPE=:type, CUST_BOOK_INFO_ID=:custBookInfoId, ")
				   .append("CO_APPLICANT_ID=:coApplicantId ")
				   .append("WHERE CO_APP_BOOK_INFO_ID=:coAppBookInfoId ")
				   .toString();
		 
		 /* QRY_TO_UPDATE_CO_APPLICANT_ADDRESS */
		 public static final String QRY_TO_UPDATE_CO_APPLICANT_ADDRESS = new StringBuilder("UPDATE ")
				   .append("ADDRESS SET STREET=:street, ")
				   .append("LATITUDE=:latitude, LONGITUDE=:Longitude,")
				   .append("SURVEY_NO=:surveyNo, DISTRICT=:district, ")
				   .append("AREA=:area, PINCODE=:pincode, ")
				   .append("CONTACT_NO=:contactNo, EMAIL=:email, ")
				   .append("WEBSITE=:website, ")
				   .append("CITY_ID=:cityId, STATE_ID=:stateId,")
				   .append("NEARBY=:nearBy, ")
				   .append("UPDATED_DATE=SYSTIMESTAMP, ADDRESS1=:address1, ")
				   .append("ADDRESS2=:address2, ")
				   .append("ADDRESS3=:address3, CITY=:city ")
				   .append("WHERE ADDRESS_ID=:addressId ")
				   .toString();
		 
		  /* QRY_TO_GET_MAIL_DTLS FROM MAIL_CFG_DTLS */
		  public static final String QRY_TO_GET_MAIL_DTLS = new StringBuilder("SELECT ")
					.append("MCD.ID AS ID,")
					.append("MCD.MODULE AS MODULE,")
					.append("MCD.USERNAME AS USERNAME,")
					.append("MCD.PASSWORD AS PASSWORD,")
					.append("MCD.KEY AS KEY,")
					.append("MCD.SITE_ID AS SITE_ID,")
					.append("MCD.CREATED_DATE AS CREATED_DATE ")
					.append("FROM MAIL_CFG_DTLS MCD ")
					.append("WHERE MCD.MODULE = :MODULE AND MCD.SITE_ID = :SITE_ID")
				    .toString();
		 
		  /* QRY_TO_GET_TICKET_ESC_EXT_APR_LVL BY TICKET_ID  */
		   public static final String QRY_TO_GET_TICKET_ESC_EXT_APR_LVL = new StringBuilder("SELECT ")
						  .append(" TEEALMT.ID AS ID,")
						  .append(" TEEALMT.LEVEL_ID AS LEVEL_ID,")
						  .append(" TEEALMT.TICKET_ESC_EXT_REQ_NXT_LVL_ID AS TICKET_ESC_EXT_REQ_NXT_LVL_ID,")
						  .append(" TEEALMT.TICKET_ESC_EXT_APR_LVL_ID AS TICKET_ESC_EXT_APR_LVL_ID,")
						  .append(" TEEALMT.STATUS_ID AS STATUS_ID,")
						  .append(" TEEALMT.CREATED_DATE AS CREATED_DATE ,")
						  .append(" TEEALMT.MODIFIED_DATE AS MODIFIED_DATE ")
						  .append(" FROM TICKET_ESCA_EXT_APR_LVL_MAP TEEALMT ")
						  .append(" INNER JOIN TICKET_ESCA_EXT_APPROVAL_LEVAL TEEAL ")
						  .append(" ON TEEALMT.TICKET_ESC_EXT_APR_LVL_ID = TEEAL.ID ")
						  .append(" WHERE TEEALMT.STATUS_ID = :STATUS AND TEEAL.TICKET_TYPE_ID IN (SELECT T.TICKET_TYPE_ID FROM  TICKET T WHERE T.TICKET_ID = :TICKET_ID)")
						  .append(" AND TEEAL.SITE_ID IN ")
						  .append(" (")
						  .append(" SELECT ")
						  .append(" S.SITE_ID AS SITE_ID")
						  .append(" FROM  SITE S")
						  .append(" JOIN BLOCK_DETAILS BD")
						  .append(" ON(BD.SITE_ID = S.SITE_ID)")
						  .append(" JOIN FLOOR_DETAILS FD")
						  .append(" ON(BD.BLOCK_DET_ID=FD.BLOCK_DET_ID)")
						  .append(" JOIN  FLAT F ")
						  .append(" ON(F.FLOOR_DET_ID=FD.FLOOR_DET_ID)")
						  .append(" JOIN")
						  .append(" FLAT_BOOKING FB ")
						  .append(" ON(F.FLAT_ID=FB.FLAT_ID) ")
						  .append(" INNER JOIN TICKET T")
						  .append(" ON (T.BOOKING_ID = FB.FLAT_BOOK_ID)")
						  .append(" WHERE T.TICKET_ID= :TICKET_ID")
						  .append(" )")
						  .append(" ORDER BY TEEALMT.ID ")
						  .toString();
		   
		   
		   /* QRY_TO_GET_TICKET_ESC_EXT_APR_LVL BY TICKET_ID  */
		   public static final String QRY_TO_GET_TICKET_ESC_APR_LVL = new StringBuilder("SELECT ")
						  .append(" TELM.ID AS ID,")
						  .append(" TELM.LEVEL_ID AS LEVEL_ID,")
						  .append(" TELM.TICKET_ESCA_NXT_LVL_MAP_ID AS TICKET_ESCA_NXT_LVL_MAP_ID ,")
						  .append(" TELM.TICKET_ESC_APR_LVL_ID AS TICKET_ESC_APR_LVL_ID,")
						  .append(" TELM.TICKET_HOLD_TIME AS TICKET_HOLD_TIME ,")
						  .append(" TELM.TICKET_EXTENDED_TIME AS TICKET_EXTENDED_DAYS,")
						  .append(" TELM.STATUS_ID AS STATUS_ID ,")
						  .append(" TELM.CREATED_DATE AS CREATED_DATE,")
						  .append(" TELM.MODIFIED_DATE AS MODIFIED_DATE ")
						  .append(" FROM TICKET_ESCA_LVL_MAP TELM ")
						  .append(" INNER JOIN TICKET_ESCA_EXT_APPROVAL_LEVAL TEEAL ")
						  .append(" ON TELM.TICKET_ESC_APR_LVL_ID = TEEAL.ID AND TELM.STATUS_ID = :STATUS_ID ")
						  .append(" WHERE TEEAL.STATUS = :STATUS_ID AND TEEAL.TICKET_TYPE_ID IN (SELECT T.TICKET_TYPE_ID FROM  TICKET T WHERE T.TICKET_ID = :TICKET_ID)")
						  .append(" AND TEEAL.SITE_ID IN ")
						  .append(" (")
						  .append(" SELECT ")
						  .append(" S.SITE_ID AS SITE_ID")
						  .append(" FROM  SITE S")
						  .append(" JOIN BLOCK_DETAILS BD")
						  .append(" ON(BD.SITE_ID = S.SITE_ID)")
						  .append(" JOIN FLOOR_DETAILS FD")
						  .append(" ON(BD.BLOCK_DET_ID=FD.BLOCK_DET_ID)")
						  .append(" JOIN  FLAT F ")
						  .append(" ON(F.FLOOR_DET_ID=FD.FLOOR_DET_ID)")
						  .append(" JOIN")
						  .append(" FLAT_BOOKING FB ")
						  .append(" ON(F.FLAT_ID=FB.FLAT_ID) ")
						  .append(" INNER JOIN TICKET T")
						  .append(" ON (T.BOOKING_ID = FB.FLAT_BOOK_ID)")
						  .append(" WHERE T.TICKET_ID= :TICKET_ID")
						  .append(" )")
						  .append(" ORDER BY TELM.ID ")
						  .toString();
		  
		   /* QRY_TO_GET_TICKET_ESC_EXT_APR_LVL BY TICKET_ID  */
		   public static final String QRY_TO_GET_TICKET_ESC_APR_LVL_BY_ID = new StringBuilder("SELECT ")
						  .append(" TELM.ID AS ID,")
						  .append(" TELM.LEVEL_ID AS LEVEL_ID,")
						  .append(" TELM.TICKET_ESCA_NXT_LVL_MAP_ID AS TICKET_ESCA_NXT_LVL_MAP_ID ,")
						  .append(" TELM.TICKET_ESC_APR_LVL_ID AS TICKET_ESC_APR_LVL_ID,")
						  .append(" TELM.TICKET_HOLD_TIME AS TICKET_HOLD_TIME ,")
						  .append(" TELM.TICKET_EXTENDED_TIME AS TICKET_EXTENDED_DAYS,")
						  .append(" TELM.STATUS_ID AS STATUS_ID ,")
						  .append(" TELM.CREATED_DATE AS CREATED_DATE,")
						  .append(" TELM.MODIFIED_DATE AS MODIFIED_DATE ")
						  .append(" FROM TICKET_ESCA_LVL_MAP TELM ")
						  .append(" WHERE TELM.ID = :ID AND TELM.STATUS_ID = :STATUS_ID ")
						  .toString();
		   
		   /* QRY_TO_GET_TICKET_ESC_EXT_APR_LVL BY TICKET_ID  */
		   public static final String QRY_TO_GET_TICKET_ESC_APR_LVL_BY_TICKET_ESCALATION_ID = new StringBuilder("SELECT ")
						  .append(" TELM.ID AS ID,")
						  .append(" TELM.LEVEL_ID AS LEVEL_ID,")
						  .append(" TELM.TICKET_ESCA_NXT_LVL_MAP_ID AS TICKET_ESCA_NXT_LVL_MAP_ID ,")
						  .append(" TELM.TICKET_ESC_APR_LVL_ID AS TICKET_ESC_APR_LVL_ID,")
						  .append(" TELM.TICKET_HOLD_TIME AS TICKET_HOLD_TIME ,")
						  .append(" TELM.TICKET_EXTENDED_TIME AS TICKET_EXTENDED_DAYS,")
						  .append(" TELM.STATUS_ID AS STATUS_ID ,")
						  .append(" TELM.CREATED_DATE AS CREATED_DATE,")
						  .append(" TELM.MODIFIED_DATE AS MODIFIED_DATE ")
						  .append(" FROM TICKET_ESCA_LVL_MAP TELM ")
						  .append(" INNER JOIN TICKET_ESCALATION TE ")
						  .append(" ON TE.TICKET_ESC_LVL_MAP_ID =  TELM.ID AND TELM.STATUS_ID = :STATUS_ID ")
						  .append(" WHERE TE.TICKET_ESCALATION_ID = :TICKET_ESCALATION_ID AND TE.STATUS = :STATUS_ID")
						  .toString();
		   
		   
		   /* QRY_TO_GET_TICKET_ESC_LVL_EXTEND_TIME */
		   public static final String QRY_TO_GET_TICKET_ESC_LVL_EXTEND_TIME = new StringBuilder("SELECT ")
						  .append(" TELM.ID AS ID, ")                                                             
						  .append(" TELM.LEVEL_ID AS LEVEL_ID, ")                                                  
						  .append(" TELM.TICKET_ESCA_NXT_LVL_MAP_ID AS TICKET_ESCA_NXT_LVL_MAP_ID ,")              
						  .append(" TELM.TICKET_ESC_APR_LVL_ID AS TICKET_ESC_APR_LVL_ID,")                         
						  .append(" TELM.TICKET_HOLD_TIME AS TICKET_HOLD_TIME ,")                                  
						  .append(" TELM.TICKET_EXTENDED_TIME AS TICKET_EXTENDED_DAYS, ")                          
						  .append(" TELM.STATUS_ID AS STATUS_ID , ")                                               
						  .append(" TELM.CREATED_DATE AS CREATED_DATE, ")                                          
						  .append(" TELM.MODIFIED_DATE AS MODIFIED_DATE ")                                         
			              .append(" FROM TICKET_ESCA_LVL_MAP TELM ") 
			              .append(" INNER JOIN TICKET_ESCALATION TE ") 
			              .append(" ON TELM.ID = TE.TICKET_ESC_LVL_MAP_ID ") 
			              .append(" INNER JOIN TICKET T ") 
			              .append(" ON T.TICKET_ID = TE.TICKET_ID AND T.STATUS = '6' AND T.TICKET_STATUS <> '11' ") 
			              .append(" WHERE TE.TICKET_ID = :TICKET_ID AND TE.STATUS = :STATUS_ID ") 
						  .toString();
		   
		   /* QRY_TO_GET_TICKET_ESC_EXT_APR_LVL BY QRY_TO_GET_TICKET_ESC_EXT_APR_LVL_ID  */ 
		  public static final String QRY_TO_GET_TICKET_ESC_EXT_APR_LVL_BY_ID = new StringBuilder("SELECT ")
		 					  .append(" TEEALMT.ID AS ID, ")
		 					  .append(" TEEALMT.LEVEL_ID AS LEVEL_ID, ")
		 					  .append(" TEEALMT.TICKET_ESC_EXT_REQ_NXT_LVL_ID AS TICKET_ESC_EXT_REQ_NXT_LVL_ID, ")
		 					  .append(" TEEALMT.TICKET_ESC_EXT_APR_LVL_ID AS TICKET_ESC_EXT_APR_LVL_ID, ")
		 					  .append(" TEEALMT.STATUS_ID AS STATUS_ID, ")
		 					  .append(" TEEALMT.CREATED_DATE AS CREATED_DATE , ")
		 					  .append(" TEEALMT.MODIFIED_DATE AS MODIFIED_DATE  ")
		 					  .append(" FROM TICKET_ESCA_EXT_APR_LVL_MAP TEEALMT ")
		 					  .append(" WHERE TEEALMT.ID = :ID AND TEEALMT.STATUS_ID = :STATUS_ID ")
		 					  .toString();
		  

			
	   /* QRY_TO_GET_TICKET_ESC_LVL_MAP_FOR_ESCALATION  */
	   public static final String QRY_TO_GET_TICKET_ESC_LVL_MAP_FOR_ESCALATION = new StringBuilder("SELECT ")
					  .append(" DISTINCT ")
					  .append(" TE.TICKET_ESCALATION_ID AS  TICKET_ESCALATION_ID,")
					  .append(" TE.TICKET_ID AS  TICKET_ID,")
					  .append(" TE.ESCALATION_DATE AS  ESCALATION_DATE,")
					  .append(" TE.ESCALATION_BY_ID AS  ESCALATION_BY_ID,")
					  .append(" TE.ESCALATION_BY AS  ESCALATION_BY,")
					//  .append(" TE.ESCALATION_TO AS  ESCALATION_TO,")
					  .append(" TE.COMMENTS AS  COMMENTS,")
					  .append(" TE.STATUS AS STATUS,")
		              .append(" TE.MAIL_OTP_APPROVAL AS MAIL_OTP_APPROVAL,")
		              .append(" TE.CREATED_DATE AS CREATED_DATE,")
		              .append(" TE.MODIFIED_DATE AS MODIFIED_DATE,")
		              .append(" TE.ACTION_EMP_ID AS ACTION_EMP_ID,")
		              .append(" TE.TICKET_ESC_LVL_MAP_ID AS TICKET_ESC_LVL_MAP_ID,")
		              .append(" TE.ASSIGNED_DATE AS ASSIGNED_DATE,")
		              .append(" TELM.TICKET_HOLD_TIME AS TICKET_HOLD_TIME ")
		              .append(" FROM TICKET_ESCALATION TE ")
		              .append(" INNER JOIN TICKET_ESCA_LVL_MAP TELM ")
		              .append(" ON TE.TICKET_ESC_LVL_MAP_ID = TELM.ID AND TELM.STATUS_ID = :STATUS_ID AND TE.STATUS = :STATUS_ID ")
					  .append(" INNER JOIN TICKET T ")
					  .append(" ON T.TICKET_ID = TE.TICKET_ID AND  T.STATUS = '6' AND T.TICKET_STATUS <> '11' ")
		              .toString();
	   
		  public static final String QRY_TO_GET_MILESTONE_ALIAS_NAMES = new StringBuilder("SELECT VAL1 AS PROJECT_MILESTONE_ID,VAL2 AS MILE_STONE_ALIAS_NAME,VAL3 AS SITE_ID  FROM " ) 
			  		.append("(" ) 
			  		.append(" SELECT FPM.PROJECT_MILESTONE_ID ," ) 
			  		.append(" FPM.FIN_MILESTONE_CLASSIFIDES_ID VAL1," ) 
			  		.append(" FMC.SITE_ID AS VAL3," )
			  		.append(" FMC.MILESTONE_ALIAS_NAME AS VAL2," ) 
			  		.append(" BLOCK.NAME AS BLOCK_NAME,COUNT(*)" ) 
					.append(" FROM FIN_PROJECT_MILESTONES FPM," ) 
					.append(" FIN_MILESTONE_CLASSIFIDES FMC," ) 
					.append(" FIN_MIL_CLS_MAPPING_BLOCKS FMCMB," ) 
					.append(" BLOCK block" ) 
					.append(" WHERE FMC.FIN_MILESTONE_CLASSIFIDES_ID = FPM.FIN_MILESTONE_CLASSIFIDES_ID" ) 
					.append(" AND BLOCK.BLOCK_ID=FMCMB.BLOCK_ID" ) 
					.append(" AND FMC.FIN_MILESTONE_CLASSIFIDES_ID   = FMCMB.FIN_MILESTONE_CLASSIFIDES_ID" ) 
					.append(" AND FMC.STATUS_ID=6 AND FMC.SITE_ID= :SITE_ID  GROUP BY FPM.PROJECT_MILESTONE_ID, FPM.FIN_MILESTONE_CLASSIFIDES_ID, FMC.SITE_ID, FMC.NAME, BLOCK.NAME" ) 
					.append(" )" ) 
					.append(" GROUP BY VAL1,VAL2,VAL3 ").toString();
			  
			  public static final String QRY_TO_GET_MILESTONE_ALIAS_NAMES1 = new StringBuilder("SELECT FMC.FIN_MILESTONE_CLASSIFIDES_ID ,FMC.SITE_ID,SI.NAME AS SITE_NAME,FMC.MILESTONE_ALIAS_NAME ,FMC.DESCRIPTION ,FMC.STATUS_ID")
			  		.append(",FMC.CREATED_BY ,FMC.CREATED_DATE ,FMC.MODIFIED_BY ,FMC.MODIFIED_DATE " ) 
			  		.append(" FROM FIN_MILESTONE_CLASSIFIDES FMC,SITE SI WHERE SI.SITE_ID=FMC.SITE_ID AND FMC.STATUS_ID = :STATUS_ID AND FMC.SITE_ID = :SITE_ID")
			  		.toString();
			  
			  public static final String QRY_TO_GET_MILESTONE_DETAILS = new StringBuilder(" FPM.PROJECT_MILESTONE_ID,FPM.MILESTONE_NAME,FPM.FIN_MILESTONE_CLASSIFIDES_ID,FPM.PERCENTAGE_ID,PERCENT.PERCENTAGE as MILE_STONE_PERCENTAGE,")
			  		.append(" FPM.CREATED_BY,FPM.CREATED_DATE,FPM.PROJECT_MS_STATUS_ID,FPM.MILESTONE_DATE,FPM.MILE_STONE_NO ")
			  		.append(" ,MASTER_DMD_DUE_DATE,MASTER_DMD_NOTE_DATE ")
			  		.toString();

			  public static final String QRY_TO_GET_MILESTONE_DETAILS_BLOCK_DTLS = new StringBuilder("SELECT FMCMB.PRO_MIL_CLS_MAPPING_BLOCKS_ID,FMCMB.BLOCK_ID,BLOK.NAME AS BLOCK_NAME,FMCMB.FIN_MILESTONE_CLASSIFIDES_ID,FMCMB.CREATED_BY,FMCMB.CREATED_DATE," ) 
			  		.append(" FMCMB.MODIFIED_BY,FMCMB.MODIFIED_DATE FROM FIN_MIL_CLS_MAPPING_BLOCKS FMCMB, BLOCK BLOK" ) 
			  		.append(" WHERE FMCMB.FIN_MILESTONE_CLASSIFIDES_ID = :FIN_MILESTONE_CLASSIFIDES_ID ") 
				  	.toString();
			  
		 	  public static final String QRY_TO_INSERT_FIN_PROJECT_DEMAND_NOTE = new StringBuilder("INSERT INTO FIN_PROJECT_DEMAND_NOTE")
			  		.append("(FIN_PRO_DEM_NOTE_ID,DUE_DATE,STATUS_ID,CREATED_BY,CREATED_DATE)")
			  		.append(" VALUES ")
			  		.append( "(FIN_PROJECT_DEMAND_NOTE_SEQ.NEXTVAL,:mileStoneDueDate,:statusId,:createdBy,SYSDATE)").toString();
	 
			  public static final String QRY_TO_INSERT_FIN_MIL_DEM_NOTE_MAPPING = new StringBuilder("INSERT INTO FIN_MIL_DEM_NOTE_MAPPING ")
					.append( "(FIN_MIL_DEM_DRF_MAP_ID,PROJECT_MILESTONE_ID,FIN_PRO_DEM_NOTE_ID,CREATED_BY,CREATED_DATE ) ")
					.append( "VALUES ")
				    .append("(FIN_MIL_DEM_NOTE_MAPPING_SEQ.NEXTVAL,:projectMilestoneId,:finProjectDemandNoteId,:createdBy,SYSDATE)").toString();
		 
			  public static final String QRY_TO_INSERT_FIN_PROJ_DEM_NOTE_STATISTICS=new StringBuilder().append("INSERT INTO FIN_PROJ_DEM_NOTE_STATISTICS" )
			  		.append(" (FIN_PROJ_DEM_DRAF_STAT_ID,FIN_PRO_DEM_NOTE_ID,TYPE_ID,TYPE,CREATED_BY,CREATED_DATE)" )
			  		.append(" VALUES ")
			  		.append("(FIN_PROJ_DEM_NOTE_STATISTICS_SEQ.NEXTVAL,:finProjectDemandNoteId,:typeId,:type,:createdBy,SYSDATE)").toString();
			  
			  public static final String QRY_TO_INSERT_FIN_BOOKING_FORM_DEMAND_NOTE=new StringBuilder("")
					  .append("INSERT INTO FIN_BOOKING_FORM_DEMAND_NOTE(")
					  .append(" FIN_BOK_FOM_DMD_NOTE_ID,")
					  .append("BOOKING_FORM_ID,TAX_AMOUNT,")
					  .append("BASIC_AMOUNT,TOTAL_AMOUNT,")
					  .append("DEMAND_NOTE_NO,")
					  .append("DEMAND_NOTE_DATE,")
					  .append("TYPE_OF_INTEREST,STATUS_ID,")
					  .append("DEMAND_NOTE_STATUS_ID,")
					  .append("DEMAND_NOTE_FORMAT,")
					  .append("CREATED_BY,")
					  .append("CREATED_DATE")
					  .append(")VALUES(")
					  //.append("FIN_BOOKING_FORM_DEMAND_NOTE_SEQ.NEXTVAL,")
					  .append(":finBookingFormDemandNoteId,")
					  .append(":bookingFormId,")
					  .append(":mileStoneTaxAmount,")
					  .append(":mileStoneBasicAmount,")
					  .append(":mileStoneTotalAmount,")
					  //.append("CONCAT('DN',''||LPAD(FIN_BOOKING_FORM_DEMAND_NOTE_SEQ.CURRVAL, 3, '0')),")
					  .append(":demandNoteNo,")
					  .append(":demandNoteDate,")
					  .append(":interestSelectionType,:statusId,")
					  .append(":demandNoteStatusId,")
					  .append(":demandNoteFormat,")
					  .append(":createdBy,")
					  .append(" SYSDATE")
					  .append(")")
					  .toString();
			  
			  public static final String QRY_TO_INSERT_FIN_BOOKING_FORM_DEMAND_NOTE_DOC=new StringBuilder("")
					  .append("INSERT INTO FIN_BOOKING_FORM_DEMAND_NOTE_DOC  (")
					  .append("FIN_BOK_FRM_DMD_NTE_DOC_ID,")
					  .append("FIN_BOK_FOM_DMD_NOTE_ID,")
					  .append("LOCATION, DOC_NAME,")
					  .append("CREATED_BY, CREATED_DATE,DOC_PATH")
					  .append(") VALUES (")
					  .append("FIN_BOOKING_FORM_DEMAND_NOTE_DOC_SEQ.NEXTVAL,")
					  .append(":finBookingFormDemandNoteId,")
					  .append(":documentLocation, :documentName,")
					  .append(":createdBy,SYSDATE,:filePath)")
					  .toString();
			  
			  public static final String QRY_TO_COUNT_FIN_BOOKING_FORM_DEMAND_NOTE_DOC=new StringBuilder("")
					  .append("SELECT COUNT(*) FROM FIN_BOOKING_FORM_DEMAND_NOTE_DOC FBFDNC, ")
					  .append("FIN_BOOKING_FORM_DEMAND_NOTE FBFDN ")
					  .append("WHERE FBFDN.FIN_BOK_FOM_DMD_NOTE_ID = FBFDNC.FIN_BOK_FOM_DMD_NOTE_ID ")
					  .append("AND FBFDN.FIN_BOK_FOM_DMD_NOTE_ID = :FIN_BOK_FOM_DMD_NOTE_ID ")
					  .append("AND FBFDN.STATUS_ID = :STATUS_ID ").toString();

			  public static final String QRY_TO_LOAD_FIN_BOOKING_FORM_DEMAND_NOTE_DOC=new StringBuilder("SELECT")
					  .append(" FBFDND.FIN_BOK_FRM_DMD_NTE_DOC_ID,")
					  .append(" FBFDND.FIN_BOK_FOM_DMD_NOTE_ID,")
					  .append(" FBFDND.LOCATION, FBFDND.DOC_NAME,")
					  .append(" FBFDND.CREATED_BY, FBFDND.CREATED_DATE")
					  .append(" FROM FIN_BOOKING_FORM_DEMAND_NOTE_DOC FBFDND ")
					  .append(" WHERE FIN_BOK_FOM_DMD_NOTE_ID = :FIN_BOK_FOM_DMD_NOTE_ID")
					  .toString();
			  
			  public static final String QRY_TO_GET_PK_FIN_BOOKING_FORM_DEMAND_NOTE=new StringBuilder("")
					  .append("SELECT FIN_BOOKING_FORM_DEMAND_NOTE_SEQ.NEXTVAL FROM DUAL")
					  .toString();
			  
			  public static final String QRY_TO_GET_IN_BOOKING_FORM_DEMAND_NOTE=new StringBuilder("")
					  .append("SELECT COUNT(*)+1 FROM FIN_BOOKING_FORM_DEMAND_NOTE WHERE BOOKING_FORM_ID = :BOOKING_FORM_ID AND STATUS_ID = :STATUS_ID ")
					  .append(" AND DEMAND_NOTE_STATUS_ID = :DEMAND_NOTE_STATUS_ID ")
					  .toString();
			  
			  public static final String QRY_TO_UPDATE_FIN_BOOKING_FORM_DEMAND_NOTE=new StringBuilder()
					.append(" UPDATE FIN_BOOKING_FORM_DEMAND_NOTE SET BASIC_AMOUNT = NVL(BASIC_AMOUNT,0)+:mileStoneBasicAmount, ")
					.append(" TOTAL_AMOUNT= NVL(TOTAL_AMOUNT,0)+:mileStoneTotalAmount, ")
					.append(" TAX_AMOUNT = NVL(TAX_AMOUNT,0)+:mileStoneTaxAmount, ")
					.append(" DEMAND_NOTE_DATE = :demandNoteDate ")
					.append(" ,DEMAND_NOTE_FORMAT = :demandNoteFormat ")
					.append(" WHERE FIN_BOK_FOM_DMD_NOTE_ID = :finBookingFormDemandNoteId ")
					.toString();
			  
			  public static final String QRY_TO_UPDATE_FIN_BOOKING_FORM_DEMAND_NOTE_FOR_INTEREST_LETTER = new StringBuilder()
					.append(" UPDATE FIN_BOOKING_FORM_DEMAND_NOTE SET INTEREST_AMOUNT = :interestAmount,")
					.append("DEMAND_NOTE_TYPE = :demandNoteType")
					.append(" WHERE FIN_BOK_FOM_DMD_NOTE_ID = :finBookingFormDemandNoteId ")
					.toString();
			  
			  public static final String QRY_TO_UPDATE_FIN_BOOKING_FORM_DEMAND_NOTE_INTEREST=new StringBuilder()
					.append(" UPDATE FIN_BOOKING_FORM_DEMAND_NOTE SET ")
					.append(" TYPE_OF_INTEREST = :interestSelectionType ")
					.append(" WHERE FIN_BOK_FOM_DMD_NOTE_ID = :finBookingFormDemandNoteId ")
					.append(" AND STATUS_ID = :statusId ")
					.toString();
			  
			  public static final String QRY_TO_UPDATE_FIN_PROJECT_MILESTONES=new StringBuilder()
					  .append("UPDATE FIN_PROJECT_MILESTONES")
					  .append(" SET PROJECT_MS_STATUS_ID  = :PROJECT_MS_STATUS_ID,")
					  .append(" MILESTONE_DATE = :MILESTONE_DATE,")
					  .append(" MASTER_DMD_NOTE_DATE = :MASTER_DMD_NOTE_DATE,")
					  .append(" MASTER_DMD_DUE_DATE = :MASTER_DMD_DUE_DATE,")
					  .append(" MODIFIED_BY = :MODIFIED_BY,")
					  .append(" MODIFIED_DATE = SYSDATE")
					  .append(" WHERE PROJECT_MILESTONE_ID = :PROJECT_MILESTONE_ID")
					  .append(" AND STATUS_ID  = :STATUS_ID")
					  .toString();
			  
			  public static final String QRY_TO_UPDATE_FIN_BOOKING_FORM_ACCOUNTS=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS")
					  .append(" SET IS_INTEREST_APPLICABLE = :IS_INTEREST_APPLICABLE")
					  .append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :FIN_BOOKING_FORM_ACCOUNTS_ID ")
					  .append(" AND TYPE = :TYPE AND TYPE_ID = :TYPE_ID")
					  .append(" AND STATUS_ID = :STATUS_ID")
					  .toString();
			  
			  
			  /*--first need to export the data while data is active
			  --data to be ready to upload
			  --then execute the delete query's and upload the data
*/
			  
/*	
 
 SELECT 
			  'MS' as Type ,S.NAME AS SITE_NAME  ,null as DEMAND_NOTE_NO
			 , BL.NAME AS BLOCK_NAME	  ,F .FLAT_NO
      ,null AS flat_book_id
        --,to_char(FPM.MASTER_DMD_NOTE_DATE,'dd-MM-yyyy') as DEMAND_NOTE_DATE
        --,to_char(fb.booking_date,'dd-MM-yyyy') as booking_date
        ,CASE WHEN trunc(FPM.MASTER_DMD_NOTE_DATE) > trunc(FB.BOOKING_DATE) 
        THEN  to_char(FPM.MASTER_DMD_NOTE_DATE,'dd-MM-yyyy') ELSE  to_char(FB.BOOKING_DATE,'dd-MM-yyyy') END 
        AS DEMAND_NOTE_DATE
        ,'With Out Interest' as IS_INTEREST_OR_WITH_OUT_INTEREST
        ,FPM.PROJECT_MILESTONE_ID as PROJECT_MILESTONE_ID
        ,FPM.MILE_STONE_NO as MILESTONE_NO
        ,FPM.MILESTONE_NAME as MILESTONE_NAME
        ,perr.percentage as MILSSTONE_PERCENTAGE
        
        ,CASE WHEN trunc(FPM.MASTER_DMD_NOTE_DATE) > trunc(FB.BOOKING_DATE) 
        THEN  to_char(FPM.MASTER_DMD_NOTE_DATE,'dd-MM-yyyy') ELSE  to_char(FB.BOOKING_DATE,'dd-MM-yyyy') END 
        AS DEMAND_NOTE_DATE
        
         ,CASE WHEN trunc(FPM.MASTER_DMD_NOTE_DATE) > trunc(FB.BOOKING_DATE) 
        THEN  to_char(FPM.MASTER_DMD_DUE_DATE,'dd-MM-yyyy') ELSE  to_char(FB.BOOKING_DATE+30,'dd-MM-yyyy') END 
        AS DUE_DATE
        
        --,to_char(FPM.MASTER_DMD_DUE_DATE,'dd-MM-yyyy') as DUE_DATE
,'0' as TOTAL_FLAT_AMOUNT_INCLUDE_GST	
,'0' as AMOUNT_RECEIVED_INCLUDE_GST	
,'0' as DUE_AMOUNT_EXCLUDING_GST	
,'0' as CGST	
,'0' as SGST	
,'0' as TOTAL_DUE_AMOUNT	
,'false' as SHOW_GST_IN_PDF
,'ALL_MS_1' as EXCEL_RECORD_NO
			    ,(select FS.NAME from FLAT_BOK_SCHM_MAPPING FBSM,FIN_SCHEME_TAX_MAPPING FSTM,FIN_SCHEME FS
			    WHERE FBSM.FIN_SCHE_TAX_MAP_ID = FSTM.FIN_SCHE_TAX_MAP_ID
			    AND FSTM.FIN_SCHEME_ID = FS.FIN_SCHEME_ID AND FS.STATUS_ID = 6 AND FBSM.STATUS_ID = 6
			    AND FB.FLAT_BOOK_ID = FBSM.FLAT_BOOK_ID
			    ) as Scheme
			   -- ,NULL AS GST
			    ,(select PER.PERCENTAGE from FLAT_BOK_SCHM_MAPPING FBSM,FIN_SCHEME_TAX_MAPPING FSTM,PERCENTAGES PER
			    WHERE FBSM.FIN_SCHE_TAX_MAP_ID = FSTM.FIN_SCHE_TAX_MAP_ID
			    AND FBSM.STATUS_ID = 6 AND PER.PERCENTAGE_ID = FSTM.PERCENTAGE_ID
			    AND FB.FLAT_BOOK_ID = FBSM.FLAT_BOOK_ID
			    ) as GST

			  FROM 
			  FLAT_BOOKING FB INNER JOIN FLAT F 
			  ON FB.FLAT_ID = F.FLAT_ID 
			  inner join FLAT_COST fc ON FB.FLAT_ID = Fc.FLAT_ID  and fc.status_id = 6
			  inner join FLAT_DETAILS fd on fd.FLAT_ID = Fb.FLAT_ID  and fd.status_id = 6
			  INNER JOIN FLOOR_DETAILS FD 
			  ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID 
			  INNER JOIN FLOOR FL 
			  ON FL.FLOOR_ID = FD.FLOOR_ID 
			  INNER JOIN BLOCK_DETAILS BD 
			  ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID 
			  INNER JOIN BLOCK BL 
			  ON BL.BLOCK_ID = BD.BLOCK_ID 
			  INNER JOIN SITE S 
			  ON BD.SITE_ID = S.SITE_ID
  inner join FIN_MIL_CLS_MAPPING_BLOCKS FMCB on BD.BLOCK_ID  =  FMCB.BLOCK_ID
  inner join FIN_MILESTONE_CLASSIFIDES FMC on  FMC.FIN_MILESTONE_CLASSIFIDES_ID = FMCB.FIN_MILESTONE_CLASSIFIDES_ID
  inner join FIN_PROJECT_MILESTONES FPM on FMC.FIN_MILESTONE_CLASSIFIDES_ID   = FPM.FIN_MILESTONE_CLASSIFIDES_ID and FPM.status_id = 6
INNER JOIN PERCENTAGES PERR ON  FPM.PERCENTAGE_ID = PERR.PERCENTAGE_ID
			  WHERE FB.STATUS_ID = 6
        and s.site_id = 107
        and FMC.site_id = 107
        and FPM.status_id = 6
        and FPM.PROJECT_MS_STATUS_ID = 53
        and FPM.PROJECT_MILESTONE_ID in (select max(f1.PROJECT_MILESTONE_ID) from FIN_PROJECT_MILESTONES f1
        where f1.FIN_MILESTONE_CLASSIFIDES_ID   = FPM.FIN_MILESTONE_CLASSIFIDES_ID and f1.status_id = 6 
        and f1.PROJECT_MS_STATUS_ID = 53  
        )
        and trunc(fb.booking_date)  > to_date('01-08-2020','dd-MM-yyyy')
        AND F.FLAT_NO not  IN ('NA-0001A','HO-0001A','EG-0001A','SU-0001A','AR-0001A')
  		  and BL.NAME = 'Wing A'
			  order by BD.BLOCK_ID,f.flat_no;

			  */
			  
			  

			  
			  public static final String QRY_TO_UPDATE_FIN_BOOKING_FORM_ACCOUNTS_PAID_AMT=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS")
					  .append(" SET PAID_AMOUNT = NVL(PAID_AMOUNT,0) + :paidAmount")
					  .append(" ,BALANCE_AMOUNT = NVL(BALANCE_AMOUNT,0) - :balanceAmount ")
					  .append(", INTEREST_WAIVER_AMT = NVL(INTEREST_WAIVER_AMT,0) + :interestWaiverAdjAmount")
					  .append(", PAID_DATE = :paidDate")
					  .append(",PAYMENT_STATUS = :paymentStatus")
					  .append(",MODIFIED_DATE=SYSDATE")
					  .append(",MODIFIED_BY=:createdBy")
					  .append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :finBookingFormAccountsId ") 
					  .toString();
			  
			  public static final String QRY_TO_UPDATE_FIN_BOOKING_FORM_ACCOUNTS_PAID_AMT1=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS")
					  .append(" SET PAID_AMOUNT = NVL(PAID_AMOUNT,0) - :paidAmount")
					  .append(" ,BALANCE_AMOUNT = :balanceAmount ")
					  .append(", PAID_DATE = :paidDate")
					  .append(",PAYMENT_STATUS = :paymentStatus")
					  .append(",MODIFIED_DATE=SYSDATE")
					  .append(",MODIFIED_BY=:createdBy")
					  .append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :finBookingFormAccountsId ") 
					  .toString();
			  
			  public static final String QRY_TO_UPDATE_FIN_BOOKING_FORM_ACCOUNTS_PAID_TAX_AMT=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS")
					  .append(" SET PAID_TAX_AMOUNT = NVL(PAID_TAX_AMOUNT,0) + :paidTaxAmount")
					  .append(",MODIFIED_DATE = SYSDATE")
					  .append(",MODIFIED_BY=:createdBy")
					  .append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :finBookingFormAccountsId ")
					  //.append(" AND STATUS_ID = :statusId")
					  .toString();
			  
			  public static final String QRY_TO_REVERT_FIN_BOOKING_FORM_ACCOUNTS_PAID_TAX_AMT=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS")
					  .append(" SET PAID_TAX_AMOUNT = NVL(PAID_TAX_AMOUNT,0) - :paidTaxAmount")
					  .append(",MODIFIED_DATE = SYSDATE")
					  .append(",MODIFIED_BY=:createdBy")
					  .append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :finBookingFormAccountsId ")
					  //.append(" AND STATUS_ID = :statusId")
					  .toString();
			  
			  public static final String QRY_TO_UPDATE_FIN_BOOKING_FORM_ACCOUNTS_PAID_DATE = new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS ")
					  .append("SET PAID_DATE = :paidDate ")
					  //.append(",STATUS_ID = :statusId ")
					  .append(",MODIFIED_DATE = SYSDATE ")
					  .append(",MODIFIED_BY = :modifiedBy ")
					  .append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :finBookingFormAccountsId ") 
					  .append(" AND STATUS_ID = :statusId ")
					  .toString();

			  public static final String QRY_TO_UPDATE_FIN_BOOKING_FORM_ACCOUNTS_INTEREST_DETAILS = new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS ")
					  .append("SET IS_INTEREST_CALC_COMPLETED = :isInterestCalcCompleted ")
					  //.append(",IS_INTEREST_APPLICABLE = :isInterestApplicable ")
					  .append(",MODIFIED_DATE = SYSDATE ")
					  .append(",MODIFIED_BY = :modifiedBy ")
					  .append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :finBookingFormAccountsId ") 
					  .append(" AND STATUS_ID = :statusId ")
					  .toString();

			  public static final String QRY_TO_UPDATE_FIN_BOOKING_FORM_ACCOUNTS_STATUS_OF_PENALTY_RECORD = new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS ")
					  .append("SET MODIFIED_DATE = SYSDATE ")
					  .append(",PAY_AMOUNT = 0")
					  .append(",TAX_AMOUNT = 0 ")
					  .append(",PRINCIPAL_AMOUNT = 0 ")
					  .append(",BALANCE_AMOUNT = 0 ")
					  //not updating PAID amount, as again calculation will happend so Only that time Pay AMount will update
					  //.append(",STATUS_ID = :STATUS_ID ")
					  .append(",MODIFIED_BY = :MODIFIED_BY ")
					  .append(" WHERE TYPE = :TYPE ")
					  .append(" AND TYPE_ID = :TYPE_ID ")
					  .append(" AND STATUS_ID = :ACTIVE_STATUS_ID ")
					  .toString();
			  
			  public static final String QRY_TO_UPDATE_FIN_PENALTY_STATUS = new StringBuilder("") 
					  .append("UPDATE FIN_PENALTY SET STATUS_ID = :STATUS_ID,MODIFIED_DATE = SYSDATE ")
					  .append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :FIN_BOOKING_FORM_ACCOUNTS_ID ")
					  .append(" AND  STATUS_ID = :ACTIVE_STATUS_ID ")
					  .toString();

			  public static final String QRY_TO_COPY_FIN_TRANSACTION_APPR_STAT_RECORDS=new StringBuilder("")
					  .append("INSERT INTO FIN_TRANSACTION_APPR_STAT ")
					  .append("(FIN_TRN_APPR_STAT_ID ,FIN_TRN_SET_OFF_ENT_ID ,")
					  .append("ACTION_TYPE ,EMP_ID ,")
					  .append("COMMENTS ,CREATED_DATE) ")
					  .append("SELECT ")
					  .append("FIN_TRANSACTION_APPR_REJECT_STAT_SEQ.NEXTVAL, :FIN_TRN_SET_OFF_ENT_ID ,")
					  .append("ACTION_TYPE , EMP_ID ,")
					  .append("COMMENTS , CREATED_DATE ")
					  .append("FROM FIN_TRANSACTION_APPR_STAT ")
					  .append(" WHERE FIN_TRN_APPR_STAT_ID = :FIN_TRN_APPR_STAT_ID ").toString();
			  
			  /*AND FIN_TRN_SET_OFF_ENT_ID = (SELECT FIN_TRN_SET_OFF_ENT_ID ")
					  .append("FROM FIN_TRANSACTION_ENTRY FTE,FIN_TRANSACTION_SET_OFF_ENTRY FTSOE ")
					  .append("WHERE FTE.FIN_TRANSACTION_ENTRY_ID = FTSOE.FIN_TRANSACTION_ENTRY_ID ")
					  .append("AND FTE.FIN_TRANSACTION_ENTRY_ID = :PREV_FIN_TRANSACTION_ENTRY_ID AND FTE.STATUS_ID = :STATUS_ID)*/

			  public static final String QRY_TO_COPY_FIN_TRANSACTION_CHANGED_DTLS_RECORDS=new StringBuilder("")
					  .append("INSERT INTO FIN_TRANSACTION_CHANGED_DTLS  (")
					  .append("FIN_TRN_CHANGED_DTLS_ID")
					  .append(",FIN_TRN_APPR_STAT_ID")
					  .append(",ACTUAL_VALUE ,CHANGED_VALUE")
					  .append(",EMP_ID ,REMARKS")
					  .append(",CREATED_DATE,COLUMN_ID")
					  .append(",ACTION_TYPE)")
					  .append(" SELECT ")
					  .append(" FIN_TRANSACTION_CHANGED_DTLS_SEQ.NEXTVAL")
					  .append(",:NEW_FIN_TRN_APPR_STAT_ID ")
					  .append(",ACTUAL_VALUE ,CHANGED_VALUE")
					  .append(",EMP_ID ,REMARKS")
					  .append(",CREATED_DATE  ,COLUMN_ID")
					  .append(",ACTION_TYPE ")
					  .append(" FROM FIN_TRANSACTION_CHANGED_DTLS ")
					  .append(" WHERE FIN_TRN_APPR_STAT_ID = :PREV_FIN_TRN_APPR_STAT_ID ").toString();
			  
			  public static final String QRY_TO_COPY_FIN_TRANSACTION_SET_OFF_APPROVAL_RECORDS=new StringBuilder("")  
					  .append("INSERT INTO FIN_TRANSACTION_SET_OFF_APPROVAL(")
					  .append("FIN_TRN_SET_OFF_APPR_ID,")
					  .append("FIN_TRN_SET_OFF_APPR_LVL_ID,")
					  .append("FIN_TRN_SET_OFF_ENT_ID,")
					  .append("CREATED_BY,")
					  .append("CREATED_DATE,")
					  .append("MODIFIED_BY,")
					  .append("MODIFIED_DATE)")
					  .append(" SELECT FIN_TRANSACTION_SET_OFF_APPROVAL_SEQ.NEXTVAL,")
					  .append("FIN_TRN_SET_OFF_APPR_LVL_ID,")
					  .append(":NEW_FIN_TRN_SET_OFF_ENT_ID,")
					  .append("CREATED_BY,")
					  .append("CREATED_DATE,")
					  .append("MODIFIED_BY,")
					  .append("MODIFIED_DATE FROM FIN_TRANSACTION_SET_OFF_APPROVAL ")
					  .append(" WHERE FIN_TRN_SET_OFF_ENT_ID = :PREV_FIN_TRN_SET_OFF_ENT_ID").toString();

			  public static final String QRY_TO_REVERT_FIN_BOOKING_FORM_ACCOUNTS_PAID_AMT=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS")
					  .append(" SET PAID_AMOUNT = NVL(PAID_AMOUNT,0) - :paidAmount")
					  .append(" ,BALANCE_AMOUNT = NVL(BALANCE_AMOUNT,0) + :paidAmount ")
					  .append(", PAID_DATE = :paidDate")
					  .append(", STATUS_ID = :statusId")
					  .append(",PAYMENT_STATUS = :paymentStatus")
					  .append(",MODIFIED_DATE=SYSDATE")
					  .append(",MODIFIED_BY=:createdBy")
					  .append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :finBookingFormAccountsId ") 
					  .append(" AND STATUS_ID = :activeStatusId")
					  .toString();
			  
			  public static final String QRY_TO_REVERT_FIN_BOOKING_FORM_ACCOUNTS_PAID_AMT_OF_PAYMENT=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS ")
					  .append(" SET PAID_AMOUNT = NVL(PAID_AMOUNT,0) + :paidAmount ")
					  .append(",BALANCE_AMOUNT = NVL(BALANCE_AMOUNT,0) - :paidAmount ")
					  .append(",REFUND_AMOUNT = NVL(REFUND_AMOUNT,0) - :paidAmount ")
					  .append(",MODIFIED_DATE = SYSDATE")
					  .append(",MODIFIED_BY = :modifiedBy ")
					  .append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :finBookingFormAccountsId ") 
					  .append("AND STATUS_ID = :statusId")
					  .toString();
			  
			  public static final String QRY_TO_REVERT_FIN_BOOKING_FORM_ACCOUNTS_STATEMENT_PAID_AMT_OF_PAYMENT=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS_STATEMENT ")
					  .append(" SET PAID_AMOUNT = NVL(PAID_AMOUNT,0) + :statementRefundAmount ")
					  .append(",STATEMENT_REFUND_AMOUNT = NVL(STATEMENT_REFUND_AMOUNT,0) - :statementRefundAmount ")
					  .append(",MODIFIED_BY = :modifiedBy ")
					  .append(",MODIFIED_DATE = SYSDATE ")
					  .append(" WHERE FIN_BOK_FRM_ACC_SMT_ID = :finBookingFormAccountsStatementId ")
					  .append(" AND STATUS_ID = :statusId")
					  .toString();
			  
			  public static final String QRY_TO_REVERT_FIN_BOOKING_FORM_EXCESS_AMT_OF_PAYMENT=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_EXCESS_AMOUNT ")
					  .append("SET USED_AMOUNT = NVL(USED_AMOUNT,0) - :usedAmount")
					  .append(",BALANCE_AMOUNT = NVL(BALANCE_AMOUNT,0) + :usedAmount ")
					  .append(",MODIFIED_DATE=SYSDATE")
					  .append(",MODIFIED_BY=:createdBy")
					  .append(" WHERE FIN_BOK_FRM_EXS_AMT_ID = :finBookingFormExcessAmountId ")
					  .toString();

			  public static final String QRY_TO_REVERT_FIN_BOOKING_FORM_ACCOUNTS_SUMMARY=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNT_SUMMARY ")
					  .append("SET PAID_AMOUNT = NVL(PAID_AMOUNT,0) - :paidAmount ")
					  .append(",BALANCE_AMOUNT = NVL(BALANCE_AMOUNT,0) + :paidAmount ")
					  .append(",MODIFIED_DATE=SYSDATE ")
					  .append(",MODIFIED_BY=:createdBy ")
					  .append("WHERE BOOKING_FORM_ID = :bookingFormId ")
					  .append("AND TYPE = :type ")
					  .append("AND STATUS_ID = :statusId ")
					  .toString();
			  
			  public static final StringBuilder QRY_TO_UPDATE_FIN_BOOKING_FORM_RECEIPTS_STATUS=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_RECEIPTS SET STATUS_ID = :STATUS_ID,MODIFIED_DATE = SYSDATE ")
					  .append(" WHERE ")
					  .append("FIN_TRN_SET_OFF_ENT_ID = :FIN_TRN_SET_OFF_ENT_ID ")
					  .append(" AND STATUS_ID = :ACTIVE_STATUS_ID AND BOOKING_FORM_ID = :BOOKING_FORM_ID ");
			  
			  public static final StringBuilder QRY_TO_UPDATE_FIN_BOOKING_FORM_ACCOUNT_PAYMENT_STATUS=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNT_PAYMENT SET STATUS_ID = :STATUS_ID,MODIFIED_DATE = SYSDATE ")
					  .append(" WHERE ")
					  .append("FIN_TRN_SET_OFF_ENT_ID = :FIN_TRN_SET_OFF_ENT_ID ")
					  .append("AND STATUS_ID = :ACTIVE_STATUS_ID ");
			  
			  public static final StringBuilder QRY_TO_UPDATE_FIN_BOOKING_FORM_ACCOUNTS_STATEMENT = new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS_STATEMENT SET STATUS_ID = :STATUS_ID,MODIFIED_DATE = SYSDATE ")
					  .append(" WHERE ")
					  .append(" STATUS_ID = :ACTIVE_STATUS_ID") 
					  .append(" AND FIN_BOK_FRM_RCPT_ID = ")
					  .append(" (SELECT FIN_BOK_FRM_RCPT_ID FROM FIN_BOOKING_FORM_RECEIPTS ")
					  .append(" WHERE  FIN_TRN_SET_OFF_ENT_ID = :FIN_TRN_SET_OFF_ENT_ID AND STATUS_ID = :ACTIVE_STATUS_ID)");
			  
			  public static final StringBuilder QRY_TO_UPDATE_FIN_BOOKING_FORM_ACCOUNTS_ACCOUNTS_DATA = new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS_STATEMENT SET FIN_BOOKING_FORM_ACCOUNTS_ID = :CURR_FIN_BOOKING_FORM_ACCOUNTS_ID ")
					  .append(" WHERE ")
					  .append(" FIN_BOOKING_FORM_ACCOUNTS_ID = :PREV_FIN_BOOKING_FORM_ACCOUNTS_ID");
			  
			  public static final StringBuilder QRY_TO_GET_FIN_BOOKING_FORM_ACCOUNTS_PAY_PAID_DATA = new StringBuilder("")
					  .append("SELECT NVL( (FBFA.PAY_AMOUNT),0) AS PAY_AMOUNT, NVL( (FBFA.PAID_AMOUNT),0) AS PAID_AMOUNT")
					  .append(",NVL( (FBFA.BALANCE_AMOUNT),0) AS BALANCE_AMOUNT")
					  .append(",NVL(FBFA.INTEREST_WAIVER_AMT,0) AS INTEREST_WAIVER_AMT")
					  .append(",NVL( (FBFA.REFUND_AMOUNT),0) AS REFUND_AMOUNT,FBFM.MS_STATUS_ID  ")
					  .append(",FBFA.TYPE,FBFA.TYPE_ID,FBFA.BOOKING_FORM_ID ")
					  .append(" FROM FIN_BOOKING_FORM_ACCOUNTS FBFA ,FIN_BOOKING_FORM_MILESTONES FBFM  ")
					  .append(" WHERE FBFA.BOOKING_FORM_ID = :BOOKING_FORM_ID AND FBFA.TYPE IN (:TYPEs) AND FBFA.STATUS_ID = :STATUS_ID ")
					  .append(" AND FBFM.FIN_BOOKING_FORM_MILESTONES_ID = FBFA.TYPE_ID ")
					  //.append(" AND FBFM.MS_STATUS_ID = :STATUS_ID ")
					  ;

			  public static final StringBuilder QRY_TO_GET_SUM_BOOKING_FORM_ACCOUNTS_PAID = new StringBuilder("")
					  .append(" SELECT  SUM(NVL(FBFA.PAY_AMOUNT,0)) AS PAY_AMOUNT ")
					  .append(",SUM(NVL(FBFA.PAID_AMOUNT,0)) AS PAID_AMOUNT ")
					  .append(",SUM(NVL(FBFA.BALANCE_AMOUNT,0)) AS BALANCE_AMOUNT ")
					  .append(",SUM(NVL(FBFA.INTEREST_WAIVER_AMT,0)) AS INTEREST_WAIVER_AMT ")
					  .append(",SUM(NVL(FBFA.REFUND_AMOUNT,0)) AS REFUND_AMOUNT ")
					  .append(",FBFA.TYPE,(SELECT MT.NAME FROM METADATA_TYPES MT WHERE FBFA.TYPE = MT.METADATA_TYPES_ID ) AS METADATA_NAME ")
					 .append(" FROM FIN_BOOKING_FORM_ACCOUNTS FBFA ")
					 .append(" WHERE FBFA.BOOKING_FORM_ID = :BOOKING_FORM_ID AND FBFA.TYPE IN (:TYPEs) AND FBFA.STATUS_ID = :STATUS_ID ")
					 .append(" GROUP BY FBFA.TYPE  ")
					 ;
			  
			  public static final StringBuilder QRY_TO_GET_BLOCK_COMPLETION_PERCENTAGE_DATA = new StringBuilder("")
					  .append("SELECT SUM(PERCENT.PERCENTAGE) ")
					  .append(" FROM  FIN_PROJECT_MILESTONES FPM,")
					  .append("PERCENTAGES PERCENT,FIN_MILESTONE_CLASSIFIDES FMC")
					  .append(" WHERE FPM.PROJECT_MILESTONE_ID IN (SELECT FBFM.PROJECT_MILESTONE_ID FROM FIN_BOOKING_FORM_MILESTONES FBFM WHERE FBFM.BOOKING_FORM_ID = :BOOKING_FORM_ID AND FBFM.STATUS_ID = :STATUS_ID) ")
					  .append("AND PERCENT.PERCENTAGE_ID = FPM.PERCENTAGE_ID ")
					  .append("AND FMC.FIN_MILESTONE_CLASSIFIDES_ID = FPM.FIN_MILESTONE_CLASSIFIDES_ID ")
					  .append("AND FPM.PROJECT_MS_STATUS_ID = :PROJECT_MS_STATUS_ID ")
					  .append("AND FPM.STATUS_ID = :STATUS_ID AND FMC.STATUS_ID = :STATUS_ID ");

			  public static final StringBuilder QRY_TO_GET_BLOCK_COMPLETION_PERCENTAGE_DATA_BY_SITE = new StringBuilder("")
					  .append("SELECT SUM(PERCENT.PERCENTAGE) ")
					  .append(" FROM  FIN_PROJECT_MILESTONES FPM,")
					  .append("PERCENTAGES PERCENT,FIN_MILESTONE_CLASSIFIDES FMC")
					  .append(" WHERE PERCENT.PERCENTAGE_ID = FPM.PERCENTAGE_ID ")
					  .append("AND FMC.FIN_MILESTONE_CLASSIFIDES_ID = FPM.FIN_MILESTONE_CLASSIFIDES_ID ")
					  .append("AND FPM.PROJECT_MS_STATUS_ID = :PROJECT_MS_STATUS_ID AND FMC.SITE_ID = :SITE_ID ")
					  .append("AND FPM.STATUS_ID = :STATUS_ID AND FMC.STATUS_ID = :STATUS_ID ");


			  public static final String QRY_TO_DESCREASE_BOOKING_FORM_ACCOUNTS_PAID_AMT=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS ")
					  .append(" SET PAID_AMOUNT = NVL(PAID_AMOUNT,0) - :paidAmount ")
					  .append(",BALANCE_AMOUNT = NVL(BALANCE_AMOUNT,0) + :paidAmount ")
					  .append(",REFUND_AMOUNT = NVL(REFUND_AMOUNT,0) + :paidAmount ")
					  .append(",PAYMENT_STATUS = :paymentStatus ")
					  .append(",MODIFIED_BY = :modifiedBy ")
					  .append(",MODIFIED_DATE = SYSDATE ")
					  .append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :finBookingFormAccountsId ") 
					  .toString();

			  
			  public static final String QRY_TO_DESCREASE_BOOKING_FORM_ACCOUNTS_STATEMENT_PAID_AMT=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS_STATEMENT ")
					  .append(" SET PAID_AMOUNT = NVL(PAID_AMOUNT,0) - :statementRefundAmount ")
					  .append(",STATEMENT_REFUND_AMOUNT = NVL(STATEMENT_REFUND_AMOUNT,0) + :statementRefundAmount ")
					  .append(",MODIFIED_BY = :modifiedBy ")
					  .append(",MODIFIED_DATE = SYSDATE ")
					  .append(" WHERE FIN_BOK_FRM_ACC_SMT_ID = :finBookingFormAccountsStatementId ")
					  .append(" AND STATUS_ID = :statusId")
					  .toString();
			  
			  public static final String QRY_TO_DESCREASE_BOOKING_FORM_ACCOUNTS_STATEMENT_PAID_AMT1=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS_STATEMENT ")
					  .append(" SET PAID_AMOUNT = NVL(PAID_AMOUNT,0) - :statementRefundAmount ")
					  //.append(",STATEMENT_REFUND_AMOUNT = NVL(STATEMENT_REFUND_AMOUNT,0) + :statementRefundAmount ")
					  .append(",ACTUAL_PAID_AMOUNT = NVL(ACTUAL_PAID_AMOUNT,0) - :statementRefundAmount ")
					  .append(",MODIFIED_BY = :modifiedBy ")
					  .append(",MODIFIED_DATE = SYSDATE ")
					  .append(" WHERE FIN_BOK_FRM_ACC_SMT_ID = :finBookingFormAccountsStatementId ")
					  .append(" AND STATUS_ID = :statusId")
					  .toString();
			  
			  public static final String QRY_TO_UPDATE_FIN_BOOKING_FORM_ACCOUNTS_PENALTY_RECORD1=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS")
					 // .append(" SET IS_INTEREST_APPLICABLE = :IS_INTEREST_APPLICABLE")
					  .append(" SET PAY_AMOUNT = NVL(PAY_AMOUNT,0) + :PAY_AMOUNT ")
					  .append(",TAX_AMOUNT = NVL(TAX_AMOUNT,0) + :TAX_AMOUNT ")
					  .append(",PRINCIPAL_AMOUNT = NVL(PRINCIPAL_AMOUNT,0) + :PRINCIPAL_AMOUNT ")
					  .append(",BALANCE_AMOUNT = NVL(BALANCE_AMOUNT,0) + :BALANCE_AMOUNT ")
					  .append(",MODIFIED_DATE = SYSDATE ")
					  .append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :FIN_BOOKING_FORM_ACCOUNTS_ID ")
					  .append(" AND TYPE = :TYPE ")
					  .append(" AND TYPE_ID = :TYPE_ID ")
					  .append(" AND STATUS_ID = :STATUS_ID")
					  .toString();
			  
			  public static final String QRY_TO_UPDATE_FIN_BOOKING_FORM_ACCOUNTS_PENALTY_RECORD=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS")
					 // .append(" SET")
					  .append(" SET PAY_AMOUNT = NVL(PAY_AMOUNT,0) + :payAmount ")
					  .append(",TAX_AMOUNT = NVL(TAX_AMOUNT,0) + :taxAmount ")
					  .append(",PRINCIPAL_AMOUNT = NVL(PRINCIPAL_AMOUNT,0) + :principalAmount ")
					  .append(",BALANCE_AMOUNT = NVL(BALANCE_AMOUNT,0) + :balanceAmount ")
					  .append(",MODIFIED_DATE = SYSDATE ")
					  .append(",PAYMENT_STATUS = :paymentStatus ")
					  .append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :finBookingFormAccountsId ")
					  .append(" AND TYPE = :type ")
					  .append(" AND TYPE_ID = :typeId ")
					  .append(" AND STATUS_ID = :statusId")
					  .toString();
			  
			  public static final String QRY_TO_UPDATE_FIN_BOOKING_FORM_ACCOUNTS_PENALTY_TYPE_ID=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS")
					 // .append(" SET")
					  .append(" SET MODIFIED_DATE = SYSDATE")
					  .append(",TAX_AMOUNT = 0 ")
					  .append(",PRINCIPAL_AMOUNT = 0 ")
					  .append(",BALANCE_AMOUNT = 0 ")
					  .append(",TYPE_ID = :finPenaltyId")
					  .append(",MODIFIED_BY = :modifiedBy ")
					  .append(",PAY_AMOUNT = 0 ")
					  .append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :finBookingFormAccountsId ")
					  .append(" AND TYPE = :type ")
					 // .append(" AND TYPE_ID = :typeId ")
					  .append(" AND STATUS_ID = :statusId")
					  .toString();
			  
			  public static final String QRY_TO_UPDATE_FIN_BOOKING_FORM_ACCOUNTS_PENALTY_TYPE_ID1=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS")
					  .append(" SET MODIFIED_DATE = SYSDATE")
					  .append(",TYPE_ID = :finPenaltyId")
					  .append(",MODIFIED_BY = :modifiedBy ")
					  .append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :finBookingFormAccountsId ")
					  .append(" AND TYPE = :type ")
					  .append(" AND STATUS_ID = :statusId")
					  .toString();
			  
			  public static final String QRY_TO_INSERT_FIN_BOOKING_FORM_MILESTONES=new StringBuilder()
					  .append(" INSERT INTO FIN_BOOKING_FORM_MILESTONES (" )
				  		.append(" FIN_BOOKING_FORM_MILESTONES_ID,") 
				  		.append(" BOOKING_FORM_ID,") 
				  		.append(" PROJECT_MILESTONE_ID,") 
				  		.append(" FIN_BOK_FOM_DMD_NOTE_ID,") 
				  		.append(" TAX_AMOUNT,")
				  		.append(" BASIC_AMOUNT,")
				  		.append(" TOTAL_AMOUNT,")
				  		.append(" MS_STATUS_ID,")
				  		.append(" MS_DMD_NOTE_DATE,")
				  		.append(" CREATED_BY,") 
				  		.append(" CREATED_DATE,")
				  		.append(" STATUS_ID")
				  		.append(" )VALUES(" ) 
				  		.append(" FIN_BOOKING_FORM_MILESTONES_SEQ.NEXTVAL,") 
				  		.append(" :bookingFormId,") 
				  		.append(" :projectMilestoneId,") 
				  		.append(" :finBookingFormDemandNoteId,") 
				  		.append(":mileStoneTaxAmount,")
						.append(":mileStoneBasicAmount,")
						.append(":mileStoneTotalAmount,")
						.append(":msStatusId,")
						.append(":demandNoteDate,")
				  		.append(":createdBy,") 
				  		.append("SYSDATE,:statusId")  
				  		.append(")").toString();

			  public static final String QRY_TO_UPDATE_FIN_BOOKING_FORM_MILESTONES=new StringBuilder()
					  .append(" UPDATE FIN_BOOKING_FORM_MILESTONES ")
					  .append(" SET ")
					  .append(" BOOKING_FORM_ID=:bookingFormId,")
					  .append("PROJECT_MILESTONE_ID = :projectMilestoneId, ")
					  .append("FIN_BOK_FOM_DMD_NOTE_ID = :finBookingFormDemandNoteId, ")
					  .append("TAX_AMOUNT = :mileStoneTaxAmount,")
					  .append("BASIC_AMOUNT = :mileStoneBasicAmount,")
					  .append("TOTAL_AMOUNT = :mileStoneTotalAmount,")
					  .append("MS_STATUS_ID =:msStatusId,")
					  .append("MS_DMD_NOTE_DATE = :demandNoteDate,")
					  .append("CREATED_BY = :createdBy, ")
					  .append("CREATED_DATE = SYSDATE,")
					  .append("STATUS_ID = :statusId ")
					  .append(" WHERE FIN_BOOKING_FORM_MILESTONES_ID = :finBookingFormMilestonesId")
					  .append(" AND STATUS_ID = :statusId ")
					  .append(" AND BOOKING_FORM_ID = :bookingFormId")
					  .toString();
			  
			  public static final String QRY_TO_EDIT_FIN_BOOKING_FORM_MILESTONES=new StringBuilder()
					  .append(" UPDATE FIN_BOOKING_FORM_MILESTONES ")
					  .append(" SET ")
					  .append(" MS_DMD_NOTE_DATE = :demandNoteDate,")
					  .append("MODIFIED_BY = :modifiedBy, ")
					  .append("MODIFIED_DATE = SYSDATE ")
					  .append(" WHERE FIN_BOOKING_FORM_MILESTONES_ID = :finBookingFormMilestonesId")
					  .append(" AND STATUS_ID = :statusId ")
					  .append(" AND BOOKING_FORM_ID = :bookingFormId")
					  .toString();
			  
			  public static final String QRY_TO_INSERT_FIN_BOOKING_FORM_MILESTONE_TAX = new StringBuilder("")
					  .append("INSERT INTO FIN_BOOKING_FORM_MILESTONE_TAX(")
					    .append("FIN_BOK_FRM_MST_TAX_ID,")
					    .append("FIN_BOOKING_FORM_MILESTONES_ID,")
					    .append("TAX_AMOUNT,")
					    .append("CREATED_BY,")
					    .append("CREATED_DATE") 
					  .append(")VALUES(")
					    .append("FIN_BOOKING_FORM_MILESTONE_TAX_SEQ.NEXTVAL,")
					    .append(":finBookingFormMilestonesId,")
					    .append(":mileStoneTaxAmount,")
					    .append(":createdBy,")
					    .append("SYSDATE")
					  .append(")")
					  .toString();
			  
			  	 
	/*
	 * public static final String QRY_TO_INSERT_FIN_BOK_FRM_MST_SCH_TAX_MAP= new
	 * StringBuilder("").append("INSERT INTO FIN_BOK_FRM_MST_SCH_TAX_MAP(")
	 * .append("FIN_BOK_FRM_MST_SCH_TAX_MAP_ID,")
	 * .append("FIN_BOK_FOM_DMD_NOTE_ID,") .append("FIN_SCHE_TAX_MAP_ID,")
	 * .append("CREATED_BY,") .append("CREATED_DATE ") .append(") VALUES (")
	 * .append("FIN_BOK_FRM_MST_SCH_TAX_MAP_SEQ.NEXTVAL,")
	 * .append(":FIN_BOK_FOM_DMD_NOTE_ID,") .append(":FIN_SCHE_TAX_MAP_ID,")
	 * .append(":CREATED_BY,") .append(" SYSDATE") .append(")").toString();
	 */
		  public static final String QRY_TO_GET_SCHEME_TAX_MAPPING_ID=new StringBuilder("")	.append(" FSTM.FIN_SCHE_TAX_MAP_ID,")
					.append("FSTM.FIN_TAX_ID,")
					.append("FSTM.PERCENTAGE_ID,").append("PERCENTAGE.PERCENTAGE AS PERCENTAGE_VALUE,")
					.append("FSTM.SCHEME_TYPE,")
					.append("FSTM.START_DATE,").append("FSTM.END_DATE,").append("FSTM.STATUS_ID,").append("FS.FIN_SCHEME_ID,")
					.append("FS.NAME AS FIN_SCHEME_NAME,").append("FS.DESCRIPTION AS FIN_SCHEME_DESCRIPTION,")
					.append("FS.STATUS_ID,").append("FT.NAME FIN_SCHEME_TAX_NAME,")
					.append("FT.ALIAS_NAME AS TAX_TYPE_ID,")
					.append(" (SELECT NAME FROM METADATA_TYPES WHERE METADATA_TYPES_ID = FT.ALIAS_NAME) AS TAX_TYPE,")
					.append("FT.DESCRIPTION AS FIN_SCHEME_TAX_DESCRIPTION,")
					.append("FBCM.FLAT_BOOK_ID,").append("FB.CUST_ID,").append("FB.FLAT_ID")
				
					.toString();
			  
			  public static final String QRY_TO_GET_BOOKING_FORM_ACCOUNT_SUMMARY=new StringBuilder("")
					  .append("SELECT FBFAS.FIN_BOK_FRM_ACC_SMRY_ID")
					  .append(",FBFAS.BOOKING_FORM_ID")
					  .append(",NVL(FBFAS.PAYABLE_AMOUNT,0) as PAYABLE_AMOUNT")
					  .append(",NVL(FBFAS.PAID_AMOUNT,0) as PAID_AMOUNT")
					  .append(",NVL(FBFAS.BALANCE_AMOUNT,0) as BALANCE_AMOUNT")
					  .append(",FBFAS.TYPE")
					  .append(" FROM FIN_BOOKING_FORM_ACCOUNT_SUMMARY FBFAS")
					  .append(" WHERE FBFAS.BOOKING_FORM_ID = :BOOKING_FORM_ID")
					  .append(" AND FBFAS.TYPE = :TYPE")
					  .append(" AND FBFAS.STATUS_ID = :STATUS_ID")
					  .toString();
			  
			  public static final String QRY_TO_UPDATE_BOOKING_FORM_ACCOUNT_SUMMARY=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNT_SUMMARY  ")
					  .append(" SET PAYABLE_AMOUNT = NVL(PAYABLE_AMOUNT,0)+ :payableAmount ")
					  //.append(",PAID_AMOUNT = :PAID_AMOUNT")
					  .append(",BALANCE_AMOUNT = NVL(BALANCE_AMOUNT,0) + :balanceAmount")
					  .append(",MODIFIED_BY = :modifiedBy")
					  .append(",MODIFIED_DATE = SYSDATE")
					  .toString();
			  
			  public static final String QRY_TO_UPDATE_BOOKING_FORM_ACCOUNT_SUMMARY_PAYABLE_AMT=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNT_SUMMARY  ")
					  .append(" SET PAYABLE_AMOUNT = :payableAmount ")
					  //.append(",BALANCE_AMOUNT = NVL(BALANCE_AMOUNT,0) + :balanceAmount")
					  .append(",MODIFIED_BY = :modifiedBy")
					  .append(",MODIFIED_DATE = SYSDATE")
					  .toString();
			  
			  public static final String QRY_TO_UPDATE_BOOKING_FORM_ACCOUNT_SUMMARY_REFUND=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNT_SUMMARY  ")
					  .append(" SET REFUND_AMOUNT = NVL(REFUND_AMOUNT,0) + :refundAmount ")
					  .append(",PAID_AMOUNT = NVL(PAID_AMOUNT,0) - :refundAmount")
					  //.append(",BALANCE_AMOUNT = NVL(BALANCE_AMOUNT,0) + :refundAmount")
					  .append(",MODIFIED_BY = :modifiedBy")
					  .append(",MODIFIED_DATE = SYSDATE")
 					  .toString();
			  
			  public static final String QRY_TO_UPDATE_BOOKING_FORM_ACCOUNT_SUMMARY_PAYABLE_AMOUNT=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNT_SUMMARY  ")
					  .append(" SET PAYABLE_AMOUNT = :payableAmount")
					  .append(",BALANCE_AMOUNT =  :payableAmount - NVL(PAID_AMOUNT,0)")
					  .append(",GST_AMOUNT =  :flatGstAmount")
					  .append(",MODIFIED_BY = :modifiedBy")
					  .append(",MODIFIED_DATE = SYSDATE")
 					  .append(" WHERE BOOKING_FORM_ID = :bookingFormId ")
					  .append(" AND TYPE = :type ")
					  .append(" AND STATUS_ID = :statusId ")
					  .toString();
			  
			  public static final String QRY_TO_UPDATE_PAID_AMT_BOOKING_FORM_ACCOUNT_SUMMARY=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNT_SUMMARY  ")
					  .append(" SET PAID_AMOUNT = NVL(PAID_AMOUNT,0) + :paidAmount")
					  .append(",BALANCE_AMOUNT = NVL(BALANCE_AMOUNT,0) - :paidAmount")
					  .append(",MODIFIED_BY = :modifiedBy")
					  .append(",MODIFIED_DATE = SYSDATE")
 					  .append(" WHERE BOOKING_FORM_ID = :bookingFormId")
					  .append(" AND TYPE = :type")
					  .toString();
			  
			  //USED QUERY IN MULTIPLE PLACES 
			  public static final String QRY_TO_INSERT_BOOKING_FORM_ACCOUNT_SUMMARY=new StringBuilder("")
				  .append("INSERT INTO FIN_BOOKING_FORM_ACCOUNT_SUMMARY  (")
				  .append(" FIN_BOK_FRM_ACC_SMRY_ID ,BOOKING_FORM_ID")
				  .append(",PAYABLE_AMOUNT , PAID_AMOUNT")
				  .append(",BALANCE_AMOUNT , TYPE,GST_AMOUNT")
				  .append(",CREATED_BY , CREATED_DATE")
				  .append(",STATUS_ID")
				  .append(") VALUES (")
				  .append("FIN_BOOKING_FORM_ACCOUNT_SUMMARY_SEQ.NEXTVAL, :bookingFormId")
				  .append(",:payableAmount, :paidAmount")
				  .append(",:balanceAmount , :type ,:flatGstAmount")
				  .append(",:createdBy ,SYSDATE")
				  .append(",:statusId")
				  .append(")").toString();
			  
			  
			  public static final String QRY_TO_INSERT_FIN_BOK_FRM_MST_SCH_TAX_MAP_DATA = new StringBuilder(" INSERT INTO FIN_BOK_FRM_MST_SCH_TAX_MAP ")
					  .append(" (FIN_BOK_FRM_MST_SCH_TAX_MAP_ID,FIN_BOK_FRM_MST_TAX_ID,FIN_SCHE_TAX_MAP_ID,CREATED_BY,CREATED_DATE")
					  .append( ",AMOUNT")
					  .append( ",FLT_BOK_SCHM_MAP_ID")
					  .append( ") VALUES ")
					  .append(" (FIN_BOK_FRM_MST_SCH_TAX_MAP_SEQ.NEXTVAL,:finBookingFormMileStoneTaxId,:finScheTaxMapId,:createdBy,SYSDATE")
					  .append(",:basicAmount")
					  .append(",:fltBookingSchemeMappingId")
					  .append( ") ")
					  .toString();
			  
			  public static final String QRY_TO_INSERT_FIN_BOOKING_FORM_ACCOUNTS_DATA = new StringBuilder(" INSERT INTO ")
					  .append(" FIN_BOOKING_FORM_ACCOUNTS ")
					  .append(" (FIN_BOOKING_FORM_ACCOUNTS_ID,FIN_BOK_ACC_INVOICE_NO, ")
					  .append(" TYPE_ID,TYPE,PAY_AMOUNT, ")
					  .append(" PAID_AMOUNT,TAX_AMOUNT, ")
					  .append(" DUE_DATE,IS_RECORD_UPLOADED,")
					  .append(" PAID_DATE, STATUS_ID, BOOKING_FORM_ID,CREATED_BY,CREATED_DATE,PAYMENT_STATUS,PRINCIPAL_AMOUNT,BALANCE_AMOUNT)  ")
					  .append(" VALUES")
					  .append(" (:finBookingFormAccountsId,:finBokAccInvoiceNo, ")
					  .append(" :typeId,:type,:payAmount,:paidAmount,:taxAmount,")
					  .append(" :mileStoneDueDate,:isRecordUploaded, ")
					  .append(" :paidDate, :statusId, :bookingFormId,:createdBy,SYSDATE,:paymentStatus,:principalAmount,:balanceAmount)")
					  .toString();
			  
			  public static final String QRY_TO_UPDATE_FIN_BOOKING_FORM_ACCOUNTS_DATA = new StringBuilder(" ")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS ")
					  .append(" SET PAY_AMOUNT = :payAmount,")
					  .append("TAX_AMOUNT = :taxAmount,")
					  .append("DUE_DATE = :mileStoneDueDate, ")
					  .append("PRINCIPAL_AMOUNT = :principalAmount,")
					  .append("STATUS_ID = :statusId,")
					  .append("BOOKING_FORM_ID = :bookingFormId,")
					  .append("CREATED_BY = :createdBy,")
					  .append("IS_INTEREST_APPLICABLE = :isInterestApplicable,")
					  .append("MODIFIED_BY = :createdBy,")
					  .append("MODIFIED_DATE = SYSDATE")
					  .append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :finBookingFormAccountsId ")
					  .append(" AND STATUS_ID = :statusId")
					  .append(" AND BOOKING_FORM_ID = :bookingFormId")
					  .append(" AND TYPE = :type")//MOVE AFTER TESTING to live
					  .toString();
			  
			  
			  public static final String QRY_TO_EDIT_FIN_BOOKING_FORM_ACCOUNTS_DATA = new StringBuilder(" ")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS ")
					  .append(" SET ")
					  .append(" DUE_DATE = :mileStoneDueDate,")
					  .append(" IS_INTEREST_CALC_COMPLETED = :isInterestCalcCompleted,")
					  .append(" MODIFIED_BY = :modifiedBy,")
					  .append(" MODIFIED_DATE = SYSDATE")
					  .append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :finBookingFormAccountsId ")
					  .append(" AND STATUS_ID = :statusId")
					  .append(" AND BOOKING_FORM_ID = :bookingFormId")
					  .append(" AND TYPE = :type")
					  .toString();
			  
			  public static final String QRY_TO_INSERT_FIN_BOOKING_FORM_TDS_DETAILS = new StringBuilder("")
					    .append("INSERT INTO FIN_BOOKING_FORM_TDS_DETAILS(")
					    .append(" FIN_BOK_FRM_TDS_DTLS_ID,")
					    .append("FIN_BOOKING_FORM_ACCOUNTS_ID,")
					    .append("SUBMITED_BY,")
					    .append("STATUS_ID,")
					    .append("TDS_STATUS_ID,")
					    .append("CREATED_BY,")
					    .append("CREATED_DATE")
					    .append(") VALUES (")
					    .append("FIN_BOOKING_FORM_TDS_DETAILS_SEQ.NEXTVAL,")
					    .append(":finBookingFormAccountsId,")
					    .append(":submitedBy,")
					    .append(":statusId,")
					    .append(":tdsStatusId,")
					    .append(":createdBy,")
					    .append("SYSDATE")
					    .append(")")
					    .toString();
			  
			  public static final String QRY_TO_GET_FIN_BOOKING_FORM_TDS_DETAILS = new StringBuilder(" ")
					  .append("SELECT FBFTD.FIN_BOK_FRM_TDS_DTLS_ID,")
					  .append(" FBFTD.FIN_BOOKING_FORM_ACCOUNTS_ID,")
					  .append(" FBFTD.SUBMITED_BY AS SUBMITED_BY,")
					  .append(" INITCAP(MT.NAME) AS SUBMITED_BY_NAME,")
					  //.append(" FBFTD.STATUS_ID,")
					  .append(" FBFTD.TDS_STATUS_ID,")
					  //.append(" (SELECT ST.STATUS FROM STATUS ST WHERE ST.STATUS_ID = FBFTD.STATUS_ID) AS STATUS_NAME,")
					  .append(" INITCAP((SELECT ST.STATUS FROM STATUS ST WHERE ST.STATUS_ID = FBFTD.TDS_STATUS_ID)) AS TDS_STATUS_NAME,")
					  .append(" FBFTD.CREATED_DATE,")
					  .append(" FBFTD.CREATED_BY,")
					  .append(" FBFTD.MODIFIED_BY,")
					  .append(" FBFTD.MODIFIED_DATE")
					  .append(" FROM FIN_BOOKING_FORM_TDS_DETAILS FBFTD LEFT OUTER JOIN METADATA_TYPES MT ON MT.METADATA_TYPES_ID= FBFTD.SUBMITED_BY")
					  .append(" WHERE FBFTD.FIN_BOOKING_FORM_ACCOUNTS_ID = :FIN_BOOKING_FORM_ACCOUNTS_ID")
					  .append(" AND FBFTD.STATUS_ID IN (:STATUS_ID) ")
					  .toString();

			  public static final String  QRY_TO_UPDATE_BOOKING_FORM_TDS_DETAILS = new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_TDS_DETAILS")
					  .append(" SET SUBMITED_BY   = :submitedBy")
					  .append(" ,MODIFIED_BY = :modifiedBy")
					  .append(" ,TDS_STATUS_ID = :tdsStatusId")
					  .append(" ,MODIFIED_DATE = SYSDATE")
					  .append(" WHERE FIN_BOK_FRM_TDS_DTLS_ID = :finBookingFormTdsDtlsId ")
					  .toString();
			  
			  public static final String QRY_TO_INSERT_FIN_BOOKING_FORM_RECEIPTS_DETAILS = new StringBuilder("")
					  .append("INSERT INTO FIN_BOOKING_FORM_RECEIPTS (")
					    .append("FIN_BOK_FRM_RCPT_ID,")
					    .append("PAID_AMOUNT,")
					    .append("CREATED_BY,")
					    .append("CREATED_DATE,")
					    .append("BOOKING_FORM_ID")
					    .append(",FIN_TRN_SET_OFF_ENT_ID")
					    .append(",PAID_DATE")
					    .append(",STATUS_ID ")
					.append(") VALUES (")
					    .append("FIN_BOOKING_FORM_RECEIPTS_SEQ.NEXTVAL,")
					    .append(":paidAmount,")
					    .append(":createdBy,")
					    .append("SYSDATE,")
					    .append(":bookingFormId")
					    .append(",:transactionSetOffEntryId")
					    .append(",:paidDate")
					    .append(",:statusId ")
					 .append(")")
					  .toString();					  
			  
			  public static final String QRY_TO_GET_FIN_BOOKING_FORM_RECEIPTS_ENTRY_COUNT = new StringBuilder()
					  .append("SELECT COUNT(*) FROM FIN_BOOKING_FORM_RECEIPTS  FBFR ,")
					  .append(" FIN_TRANSACTION_SET_OFF_ENTRY FTSOE,")
					  .append(" FIN_TRANSACTION_ENTRY FTR")
					  .append(" WHERE FTSOE.FIN_TRN_SET_OFF_ENT_ID = FBFR.FIN_TRN_SET_OFF_ENT_ID")
					  .append(" AND FTR.FIN_TRANSACTION_ENTRY_ID = FTSOE.FIN_TRANSACTION_ENTRY_ID")
					  .append(" and  FBFR.FIN_TRN_SET_OFF_ENT_ID = :FIN_TRN_SET_OFF_ENT_ID ")
					  .append(" AND FBFR.BOOKING_FORM_ID = :BOOKING_FORM_ID AND FBFR.STATUS_ID = :STATUS_ID")
					  .toString();
			  
			  public static final String QRY_TO_GET_FIN_BOOKING_FORM_PAYMENT_ENTRY_COUNT = new StringBuilder()
					  .append(" SELECT COUNT(*) FROM FIN_BOOKING_FORM_ACCOUNT_PAYMENT FBFAP,")
					  .append(" FIN_TRANSACTION_SET_OFF_ENTRY FTSOE,")
					  .append(" FIN_TRANSACTION_ENTRY FTR")
					  .append(" WHERE FTSOE.FIN_TRN_SET_OFF_ENT_ID = FBFAP.FIN_TRN_SET_OFF_ENT_ID")
					  .append(" AND FTR.FIN_TRANSACTION_ENTRY_ID = FTSOE.FIN_TRANSACTION_ENTRY_ID")
					  .append(" AND FBFAP.FIN_TRN_SET_OFF_ENT_ID = :FIN_TRN_SET_OFF_ENT_ID")
					  .append(" AND FTR.BOOKING_FORM_ID = :BOOKING_FORM_ID")
					  .append(" AND FBFAP.STATUS_ID = :STATUS_ID  AND FTR.STATUS_ID = :STATUS_ID")
					  .toString();
			  
			  public static final String QRY_TO_GET_FIN_BOOKING_FORM_RECEIPTS = new StringBuilder()
					  .append(" FBFR.FIN_BOK_FRM_RCPT_ID,NVL(FBFR.PAID_AMOUNT,0) AS PAID_AMOUNT,FBFR.PAID_DATE,")
					  .append(" FBFR.BOOKING_FORM_ID,FBFR.FIN_TRN_SET_OFF_ENT_ID ")
					  .toString();
			  
			  public static final String QRY_TO_GET_FIN_BOOKING_FORM_EXCESS_AMOUNT = new StringBuilder()
					  .append(" FBFEA.FIN_BOK_FRM_EXS_AMT_ID,")
					  .append(" FBFEA.TYPE,")
					  .append(" FBFEA.FIN_BOK_FRM_RCPT_ID,NVL(FBFEA.EXCESS_AMOUNT,0) AS EXCESS_AMOUNT,")
					  .append(" NVL(FBFEA.USED_AMOUNT,0) AS USED_AMOUNT,NVL(FBFEA.BALANCE_AMOUNT,0) AS BALANCE_AMOUNT,FBFEA.FIN_BOK_ACC_INVOICE_NO ")
					  .toString();
			  
			  public static final String QRY_TO_GET_FIN_BOOKING_FORM_EXCESS_AMOUNT_USAGE= new StringBuilder()
					  .append(" FBFEAU.FIN_BOK_FRM_EXS_AMT_USG_ID,")
					  .append("FBFEAU.FIN_BOK_FRM_EXS_AMT_ID,")
					  .append("NVL(FBFEAU.EXCESS_AMOUNT,0) AS EXCESS_AMOUNT,")
					  .append("FBFEAU.CONVERT_TYPE,")
					  .append("NVL(FBFEAU.CONVERTED_AMOUNT,0) AS CONVERTED_AMOUNT,")
					  .append("NVL(FBFEAU.BALANCE_AMOUNT,0) AS BALANCE_AMOUNT, ")
					  .append("NVL((SELECT SUM(CONVERTED_AMOUNT) FROM  FIN_BOOKING_FORM_EXCESS_AMOUNT_USAGE WHERE FBFEAU.FIN_BOK_FRM_EXS_AMT_ID =  FIN_BOK_FRM_EXS_AMT_ID GROUP BY FIN_BOK_FRM_EXS_AMT_ID ),0) AS TOTAL_USAGE_AMOUNT ")
					  .toString();
			  
				public static final String QRY_TO_GET_FIN_BOOKING_FORM_ACCOUNTS_STATEMENT_DETAILS=new StringBuilder("")
						.append(" FBFAS.FIN_BOK_FRM_ACC_SMT_ID,")
						.append(" FBFAS.FIN_BOOKING_FORM_ACCOUNTS_ID,")
						.append(" FBFAS.FIN_BOK_FRM_RCPT_ID,")
						.append(" NVL(FBFAS.PAID_AMOUNT,0) AS PAID_AMOUNT,")
						.append(" NVL(FBFAS.ACTUAL_PAID_AMOUNT,0) AS ACTUAL_PAID_AMOUNT,")
						.append(" NVL(FBFAS.STATEMENT_REFUND_AMOUNT,0) AS STATEMENT_REFUND_AMOUNT,")
						.append(" NVL(FBFAS.PAID_AMOUNT,0) AS STATEMENT_PAID_AMOUNT,")
						.append(" FBFAS.PAID_DATE ")
						.toString();
			  
			  public static final String QRY_TO_GET_BOOKING_FORM_EXCESS_AMOUNT_DETAILS = new StringBuilder("SELECT ")
					  .append(QRY_TO_GET_FIN_BOOKING_FORM_RECEIPTS).append(",")
					  .append(QRY_TO_GET_FIN_BOOKING_FORM_EXCESS_AMOUNT) .append(",")
					  .append(QRY_TO_GET_FIN_BOOKING_FORM_ACCOUNTS_STATEMENT_DETAILS)
					  .append(" FROM FIN_BOOKING_FORM_EXCESS_AMOUNT FBFEA,FIN_BOOKING_FORM_RECEIPTS FBFR")
					  .append(" LEFT OUTER JOIN FIN_BOOKING_FORM_ACCOUNTS_STATEMENT FBFAS ON FBFAS.FIN_BOK_FRM_RCPT_ID = FBFR.FIN_BOK_FRM_RCPT_ID ")
					  .append(" WHERE FBFR.FIN_BOK_FRM_RCPT_ID = FBFEA.FIN_BOK_FRM_RCPT_ID")
					  //.append(" AND FBFEA.BALANCE_AMOUNT !=0 ")
					  .toString();
			  
			  public static final String QRY_TO_GET_BOOKING_FORM_STATEMENT_AND_RECEIPT_DATA = new StringBuilder("SELECT ")
					  .append(QRY_TO_GET_FIN_BOOKING_FORM_RECEIPTS).append(",")
					  .append(QRY_TO_GET_FIN_BOOKING_FORM_ACCOUNTS_STATEMENT_DETAILS)
					  .append(" FROM FIN_BOOKING_FORM_RECEIPTS FBFR")
					  .append(" JOIN FIN_BOOKING_FORM_ACCOUNTS_STATEMENT FBFAS ON FBFAS.FIN_BOK_FRM_RCPT_ID = FBFR.FIN_BOK_FRM_RCPT_ID ")
					  .append(" WHERE FBFR.FIN_BOK_FRM_RCPT_ID = FBFAS.FIN_BOK_FRM_RCPT_ID")
					  .toString();
			  
			  public static final String QRY_TO_GET_BOOKING_FORM_EXCESS_AMOUNT_DETAILS_BY_ID = new StringBuilder("SELECT ")
					  .append(QRY_TO_GET_FIN_BOOKING_FORM_EXCESS_AMOUNT).append(",")
					  .append(QRY_TO_GET_FIN_BOOKING_FORM_RECEIPTS)
					  .append(" FROM FIN_BOOKING_FORM_EXCESS_AMOUNT FBFEA,FIN_BOOKING_FORM_RECEIPTS FBFR")
					  .append(" WHERE FBFR.FIN_BOK_FRM_RCPT_ID = FBFEA.FIN_BOK_FRM_RCPT_ID")
					  .toString();
			  
			  public static final String QRY_TO_GET_BOOKING_FORM_EXCESS_AMOUNT_USAGE_BY_ID = new StringBuilder("SELECT ")
					  .append(QRY_TO_GET_FIN_BOOKING_FORM_EXCESS_AMOUNT).append(",")
					  .append(QRY_TO_GET_FIN_BOOKING_FORM_EXCESS_AMOUNT_USAGE).append(",")
					  .append(QRY_TO_GET_FIN_BOOKING_FORM_RECEIPTS)
					  .append(" FROM FIN_BOOKING_FORM_EXCESS_AMOUNT FBFEA,FIN_BOOKING_FORM_RECEIPTS FBFR")
					  .append(" FIN_BOOKING_FORM_EXCESS_AMOUNT_USAGE FBFEAU")
					  .append(" WHERE FBFR.FIN_BOK_FRM_RCPT_ID = FBFEA.FIN_BOK_FRM_RCPT_ID")
					  .append(" AND FBFEA.FIN_BOK_FRM_EXS_AMT_ID = FBFEAU.FIN_BOK_FRM_EXS_AMT_ID ")
					  .toString();
			  
			  public static final String QRY_TO_INSERT_BOOKING_FORM_EXCESS_AMOUNT_DETAILS = new StringBuilder("")
					  .append("INSERT INTO FIN_BOOKING_FORM_EXCESS_AMOUNT (")
					  .append("FIN_BOK_FRM_EXS_AMT_ID")
					  .append(",FIN_BOK_FRM_RCPT_ID")
					  .append(",EXCESS_AMOUNT,USED_AMOUNT")
					  .append(",BALANCE_AMOUNT,CREATED_BY")
					  .append(",CREATED_DATE,TYPE,FIN_BOK_ACC_INVOICE_NO")
					  .append(") VALUES (")
					  .append("FIN_BOOKING_FORM_EXCESS_AMOUNT_SEQ.NEXTVAL")
					  .append(",:finBookingFormReceiptsId")
					  .append(",:excessAmount,:usedAmount")
					  .append(",:balanceAmount,:createdBy")
					  .append(",SYSDATE,:type,:finBokAccInvoiceNo")
					  .append(")")
					  .toString();
			  
			  public static final String QRY_TO_DECREASE_BOOKING_FORM_EXCESS_AMOUNT_DETAILS = new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_EXCESS_AMOUNT")
					  .append(" SET USED_AMOUNT= NVL(USED_AMOUNT,0) + :usedAmount,")
					  .append(" BALANCE_AMOUNT = NVL(BALANCE_AMOUNT,0) - :usedAmount,")
					  .append(" MODIFIED_BY = :modifiedBy,")
					  .append(" MODIFIED_DATE = SYSDATE")
					  .append(" WHERE FIN_BOK_FRM_EXS_AMT_ID = :finBookingFormExcessAmountId")
					  .toString();
			 
			  public static final String QRY_TO_INCREASE_BOOKING_FORM_EXCESS_AMOUNT_DETAILS = new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_EXCESS_AMOUNT")
					  .append(" SET EXCESS_AMOUNT= NVL(EXCESS_AMOUNT,0) + :excessAmount,")
					  .append(" BALANCE_AMOUNT = NVL(BALANCE_AMOUNT,0) + :excessAmount,")
					  .append(" MODIFIED_BY = :modifiedBy,")
					  .append(" MODIFIED_DATE = SYSDATE")
					  .append(" WHERE FIN_BOK_FRM_EXS_AMT_ID = :finBookingFormExcessAmountId")
					  .toString();
			  
			  public static final String QRY_TO_REVERT_BOOKING_FORM_EXCESS_AMOUNT_DETAILS = new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_EXCESS_AMOUNT")
					  .append(" SET EXCESS_AMOUNT= NVL(EXCESS_AMOUNT,0) - :excessAmount,")
					  .append(" USED_AMOUNT= NVL(USED_AMOUNT,0) - :usedAmount,")
					  .append(" BALANCE_AMOUNT = NVL(BALANCE_AMOUNT,0) - :excessAmount,")
					  .append(" MODIFIED_BY = :modifiedBy,")
					  .append(" MODIFIED_DATE = SYSDATE")
					  .append(" WHERE FIN_BOK_FRM_EXS_AMT_ID = :finBookingFormExcessAmountId")
					  .toString();
			  
			  public static final String QRY_TO_INSERT_BOOKING_FORM_EXCESS_AMOUNT_USAGE_DETAILS = new StringBuilder()
					  .append(" INSERT INTO FIN_BOOKING_FORM_EXCESS_AMOUNT_USAGE (")
					    .append("FIN_BOK_FRM_EXS_AMT_USG_ID,FIN_BOK_FRM_EXS_AMT_ID,")
					    .append("FIN_BOK_FRM_ACC_ID,EXCESS_AMOUNT,")
					    .append("CONVERT_TYPE,CONVERTED_AMOUNT,")
					    .append("BALANCE_AMOUNT,CREATED_BY,CREATED_DATE ")
					  .append(") VALUES (")
					    .append("FIN_BOOKING_FORM_EXCESS_AMOUNT_USAGE_SEQ.NEXTVAL, :finBookingFormExcessAmountId,")
					    .append(":finBookingFormAccountsId, :excessAmount,")
					    .append(":convertType, :convertedAmount,")
					    .append(":balanceAmount, :createdBy, SYSDATE")
					  .append(")")
					  .toString();
			  
			  public static final String QRY_TO_INSERT_FIN_BOOKING_FORM_ACCOUNTS_STATEMENT_DATA = new StringBuilder("")
					  .append("INSERT INTO FIN_BOOKING_FORM_ACCOUNTS_STATEMENT (")
					    .append("FIN_BOK_FRM_ACC_SMT_ID,")
					    .append("FIN_BOOKING_FORM_ACCOUNTS_ID,")
					    .append("FIN_BOK_FRM_RCPT_ID,")
					    .append("PAID_AMOUNT,")
					    .append("ACTUAL_PAID_AMOUNT,")
					    .append("INTEREST_WAIVER_AMT,")
					    .append("PAID_DATE,")
					    .append("CREATED_BY,")
					    .append("CREATED_DATE,")
					    .append("STATUS_ID ")
					  .append(") VALUES (")
					    .append("FIN_BOOKING_FORM_ACCOUNTS_STATEMENT_SEQ.NEXTVAL,")
					    .append(":finBookingFormAccountsId,")
					    .append(":finBookingFormReceiptsId,")
					    .append(":paidAmount,")
					    .append(":actualPaidAmount,")
					    .append(":interestWaiverAdjAmount,")
					    .append(":paidDate,")
					    .append(":createdBy,")
					    .append("SYSDATE,")
					    .append(":statusId")
					  .append(")")
				 	  .toString();
			  
 			  public static final String QRY_TO_GET_FIN_PENALTY_DATA =new StringBuilder().append(" FP.FIN_PENALTY_ID, ")
					  .append(" FP.FIN_BOOKING_FORM_ACCOUNTS_ID, ")
					  .append(" NVL(FP.AMOUNT,0) AS AMOUNT, ")
					  .append(" FP.INTEREST_FROM, ")
					  .append(" NVL(FP.TAX_AMOUNT,0) AS TAX_AMOUNT, ")
					  .append(" NVL(FP.TOTAL_AMOUNT,0) AS TOTAL_AMOUNT, ")
					  .append(" FP.START_DATE, ")
					  .append(" FP.END_DATE, ")
					  .append(" FP.FIN_INTEREST_RATES_ID ")
					  .toString();
			  
			  public static final StringBuilder QRY_TO_GET_FIN_BOOKING_FORM_ACCOUNTS_DATA=new StringBuilder()
					  .append(" FBFA.FIN_BOOKING_FORM_ACCOUNTS_ID,")
					  .append("FBFA.TYPE_ID,")
					  .append("FBFA.TYPE,")
					  .append("NVL(FBFA.PAY_AMOUNT,0) as PAY_AMOUNT,")
					  .append("NVL(FBFA.PAID_AMOUNT,0) as PAID_AMOUNT,")
					  .append("FBFA.DUE_DATE,")
					  .append("FBFA.PAID_DATE,")
					  .append("FBFA.STATUS_ID,")
					  .append("FBFA.BOOKING_FORM_ID,")
					  .append("FBFA.PAYMENT_STATUS,")
					  .append("NVL(FBFA.BALANCE_AMOUNT,0) AS BALANCE_AMOUNT,")
					  .append("NVL(FBFA.PRINCIPAL_AMOUNT,0) AS PRINCIPAL_AMOUNT,")
					  .append("NVL(FBFA.REFUND_AMOUNT,0) AS REFUND_AMOUNT,")
					  //.append("FBFA.CREATED_BY,")
					  .append("FBFA.CREATED_DATE,")
					  .append("NVL(FBFA.PAID_TAX_AMOUNT,0) AS PAID_TAX_AMOUNT,")
					  .append("NVL(FBFA.PAID_TAX_AMOUNT/2,0) AS PAID_SGST_AMOUNT,")
					  .append("NVL(FBFA.PAID_TAX_AMOUNT/2,0) AS PAID_CGST_AMOUNT,")
					  .append("NVL(FBFA.IS_INTEREST_APPLICABLE,0) AS IS_INTEREST_APPLICABLE,")
					  .append("NVL(FBFA.IS_INTEREST_CALC_COMPLETED,0) AS IS_INTEREST_CALC_COMPLETED,")
					  .append("FBFA.FIN_BOK_ACC_INVOICE_NO, ")
					  .append("FBFA.TAX_AMOUNT,")
					  .append("FBFA.TAX_AMOUNT/2 AS SGST_AMOUNT,")
					  .append("FBFA.TAX_AMOUNT/2 AS CGST_AMOUNT ")
					  //.append(",FBFA.INTEREST_WAIVER_AMT as INTEREST_WAIVER_AMT ")//*can't add here this column
					  ;
			  
			  public static final StringBuilder QRY_TO_GET_PAYMENT_DETAILS = new StringBuilder("")
					  .append("SELECT FTSOE.FIN_TRN_SET_OFF_ENT_ID,")
					  .append("FBFAP.FIN_TRN_SET_OFF_APPR_ID,")
					  .append("FBFAP.REFUND_AMOUNT AS TOTAL_REFUND_AMOUNT, ")
					  .append("FTE.FIN_SITE_PROJ_ACC_MAP_ID,")
					  .append("FTE.FIN_TRANSACTION_NO,")
					  .append("FTE.TRANSACTION_STATUS_ID,")
					  .append("FTE.TRANSACTION_RECEIPT_NO,")
					  .append("FTE.TRANSACTION_CLOSED_DATE,FTE.IS_RECORD_UPLOADED,FTE.EXCEL_RECORD_NO,")
					  .append("FTE.PREV_FIN_TRANSACTION_ENTRY_ID,")
					  .append("FTE.FIN_TRANSACTION_ENTRY_ID,")
					  .append("FTE.FIN_TRANSACTION_TYPE_ID,")
					  .append("FTE.FIN_TRANSACTION_MODE_ID,")
					  .append("FTE.TRANSACTION_FOR as TRANSACTION_FOR_ID,")
					  .append("FTE.SITE_ID,FTE.PAYMENT_DATE AS TRANSACTION_DATE,")
					  .append("FTE.BOOKING_FORM_ID,")
					  .append("NVL(FTE.AMOUNT,0) AS AMOUNT,")
					  .append("FTE.SOURCE_OF_FUNDS,")
					  .append("FBFAPD.FIN_BOK_FRM_ACC_PMT_DTLS_ID,")
					  .append("FBFAPD.TYPE_ID,")
					  .append("FBFAPD.TYPE,")
					  .append("NVL(FBFAPD.REFUND_AMOUNT,0) AS REFUND_AMOUNT,")
					  .append("FBFAPD.FIN_BOK_FRM_ACC_PMT_ID  ,")			 
					  .append("FTM.NAME AS TRANSACTION_MODE, ")
					  .append("FTT.NAME AS TRANSACTION_TYPE_NAME,")
					  .append("FTR.NAME AS TRANSACTION_FOR ")
					  .append(" FROM ")
					  .append("FIN_TRANSACTION_SET_OFF_ENTRY FTSOE,")
					  .append("FIN_TRANSACTION_ENTRY FTE ")
					  .append("INNER JOIN FIN_TRANSACTION_MODE FTM ")
					  .append("ON FTE.FIN_TRANSACTION_MODE_ID = FTM.TRANSACTION_MODE_ID ")
					  .append("FULL JOIN FIN_TRANSACTION_FOR FTR ")
					  .append("ON(FTR.FIN_TRANSACTION_FOR_ID=FTE.TRANSACTION_FOR) ")
					  .append("FULL JOIN FIN_TRANSACTION_TYPE FTT ")
					  .append("ON(FTT.TRANSACTION_TYPE_ID=FTE.FIN_TRANSACTION_TYPE_ID), ")
					  .append("FIN_BOOKING_FORM_ACCOUNT_PAYMENT FBFAP, ")
					  .append("FIN_BOOKING_FORM_ACC_PMT_DTLS FBFAPD ")
					  .append(" WHERE FTE.FIN_TRANSACTION_ENTRY_ID = FTSOE.FIN_TRANSACTION_ENTRY_ID ")
					  .append("AND FTSOE.FIN_TRN_SET_OFF_ENT_ID = FBFAP.FIN_TRN_SET_OFF_ENT_ID ")
					  .append("AND FBFAP.FIN_BOK_FRM_ACC_PMT_ID = FBFAPD.FIN_BOK_FRM_ACC_PMT_ID ")
					  .append("AND FTE.TRANSACTION_STATUS_ID = :TRANSACTION_STATUS_ID ")
					  .append("AND FTE.STATUS_ID = :STATUS_ID ")
					  .append("AND FBFAP.STATUS_ID = :STATUS_ID ")
					  .append("AND FTE.BOOKING_FORM_ID = :BOOKING_FORM_ID ")
					  ;

			  public static final StringBuilder QRY_TO_GET_PAYMENT_DETAILS_FOR_CUSTOMER_LEDGER = new StringBuilder("")
					  .append("SELECT FTSOE.FIN_TRN_SET_OFF_ENT_ID,")
					  .append("FBA.FIN_BOOKING_FORM_ACCOUNTS_ID,")
					  //.append("FBA.TYPE_ID,")
					  .append("FPM.PROJECT_MILESTONE_ID,")
					  .append("FPM.MILESTONE_NAME,")
					  .append("FBFAP.FIN_TRN_SET_OFF_APPR_ID,")
					  .append("FBFAP.REFUND_AMOUNT AS TOTAL_REFUND_AMOUNT, ")
					  .append("FTE.FIN_SITE_PROJ_ACC_MAP_ID,")
					  .append("FTE.FIN_TRANSACTION_NO,")
					  .append("FTE.TRANSACTION_STATUS_ID,")
					  .append("FTE.TRANSACTION_RECEIPT_NO,")
					  .append("FTE.TRANSACTION_CLOSED_DATE,")
					  .append("FTE.PREV_FIN_TRANSACTION_ENTRY_ID,")
					  .append("FTE.FIN_TRANSACTION_ENTRY_ID,")
					  .append("FTE.FIN_TRANSACTION_TYPE_ID,")
					  .append("FTE.FIN_TRANSACTION_MODE_ID,")
					  .append("FTE.PAYMENT_DATE,FTE.TRANSACTION_CLOSED_DATE,FTE.IS_RECORD_UPLOADED,FTE.EXCEL_RECORD_NO,")
					  .append("FTE.TRANSACTION_FOR as TRANSACTION_FOR_ID,")
					  .append("FTE.SITE_ID,")
					  .append("FTE.CREATED_DATE AS TRN_CREATION_DATE,")
					  .append("FTE.BOOKING_FORM_ID,")
					  .append("NVL(FTE.AMOUNT,0) AS AMOUNT,")
					  .append("FTE.SOURCE_OF_FUNDS,")
					  .append("NVL(FTSO.SET_OFF_AMOUNT,0) AS SET_OFF_AMOUNT,")
					  .append("FBFAPD.FIN_BOK_FRM_ACC_PMT_DTLS_ID,")
					  .append("FBFAPD.TYPE_ID,")
					  .append("FBFAPD.TYPE,")
					  .append("NVL(FBFAPD.REFUND_AMOUNT,0) AS REFUND_AMOUNT,")
					  .append("FBFAPD.FIN_BOK_FRM_ACC_PMT_ID,")			 
					  .append("FTM.NAME AS TRANSACTION_MODE,")
					  .append("FTT.NAME AS TRANSACTION_TYPE_NAME,")
					  .append("FTR.NAME AS TRANSACTION_FOR ")
					  .append(" FROM ")
					  .append("FIN_TRANSACTION_SET_OFF_ENTRY FTSOE,")
				      .append("FIN_TRANSACTION_SET_OFF FTSO, ")
		              .append(" ")
					  .append("FIN_TRANSACTION_ENTRY FTE ")
					  .append("INNER JOIN FIN_TRANSACTION_MODE FTM ")
					  .append("ON FTE.FIN_TRANSACTION_MODE_ID = FTM.TRANSACTION_MODE_ID ")
					  .append("FULL JOIN FIN_TRANSACTION_FOR FTR ")
					  .append("ON(FTR.FIN_TRANSACTION_FOR_ID=FTE.TRANSACTION_FOR) ")
					  .append("FULL JOIN FIN_TRANSACTION_TYPE FTT ")
					  .append("ON(FTT.TRANSACTION_TYPE_ID=FTE.FIN_TRANSACTION_TYPE_ID), ")
					  .append("FIN_BOOKING_FORM_ACCOUNT_PAYMENT FBFAP, ")
					  .append("FIN_BOOKING_FORM_ACC_PMT_DTLS FBFAPD ")
					  .append("LEFT OUTER JOIN FIN_BOOKING_FORM_ACCOUNTS FBA ON FBFAPD.TYPE_ID = FBA.FIN_BOOKING_FORM_ACCOUNTS_ID AND FBA.STATUS_ID = :STATUS_ID ")
					  .append("INNER JOIN FIN_BOOKING_FORM_MILESTONES FBFM ON FBA.TYPE_ID = FBFM.FIN_BOOKING_FORM_MILESTONES_ID AND FBFM.STATUS_ID = :STATUS_ID ")
					  .append("INNER JOIN FIN_PROJECT_MILESTONES FPM ON FPM.PROJECT_MILESTONE_ID = FBFM.PROJECT_MILESTONE_ID ")
					  .append(" WHERE FTE.FIN_TRANSACTION_ENTRY_ID = FTSOE.FIN_TRANSACTION_ENTRY_ID ")
					  .append("AND FTSOE.FIN_TRN_SET_OFF_ENT_ID = FBFAP.FIN_TRN_SET_OFF_ENT_ID ")
					  .append("AND FBFAP.FIN_BOK_FRM_ACC_PMT_ID = FBFAPD.FIN_BOK_FRM_ACC_PMT_ID ")
					  .append("AND FTSO.FIN_TRN_SET_OFF_ENT_ID = FTSOE.FIN_TRN_SET_OFF_ENT_ID AND FTSO.SET_OFF_TYPE IN (:TYPE) AND FTSO.STATUS_ID = :STATUS_ID ")
					  .append("AND FTE.TRANSACTION_STATUS_ID = :TRANSACTION_STATUS_ID ")
					  .append("AND FTE.BOOKING_FORM_ID = :BOOKING_FORM_ID ")
					  //.append("AND FBA.TYPE IN (:TYPE) ")
					  .append("AND FTE.STATUS_ID = :STATUS_ID ")
					  .append("AND FBFAP.STATUS_ID = :STATUS_ID ");

			  public static final StringBuilder QRY_TO_GET_PAYMENT_DETAILS_FOR_CONSOLIDATED_RECEIPT = new StringBuilder("")
					  .append(" SELECT  FBA.FIN_BOOKING_FORM_ACCOUNTS_ID, ")
			          .append(" FTM.NAME AS TRANSACTION_MODE,")
					  .append(" FTT.NAME AS TRANSACTION_TYPE_NAME,")
					  .append(" FTR.NAME AS TRANSACTION_FOR ,")
					  .append(" FBA.TYPE_ID, FBFAPD.TYPE_ID REFUND_TYPE_ID,  FBFAPD.TYPE,")
			          .append(" FBFAP.REFUND_AMOUNT AS TOTAL_REFUND_AMOUNT, ")
					  .append(" FTE.TRANSACTION_STATUS_ID,	  FTE.TRANSACTION_RECEIPT_NO,")
					  .append(" FTE.TRANSACTION_CLOSED_DATE,  FTE.PREV_FIN_TRANSACTION_ENTRY_ID,")
					  .append(" FTE.FIN_TRANSACTION_ENTRY_ID,")
					  .append(" FTE.CREATED_DATE AS TRN_CREATION_DATE,")
			          .append(" FTE.FIN_TRANSACTION_TYPE_ID,  FTE.FIN_TRANSACTION_MODE_ID,")
			          .append(" NVL(FTE.PAYMENT_DATE,FTE.RECEIVED_DATE) AS PAYMENT_DATE, FTE.TRANSACTION_FOR as TRANSACTION_FOR_ID,")
					  .append(" FTE.SITE_ID, FTE.BOOKING_FORM_ID,")
					  .append(" FTSOE.FIN_TRN_SET_OFF_ENT_ID,")
					  .append(" NVL(FTE.AMOUNT,0) AS AMOUNT,")
					  .append(" NVL(FTSO.SET_OFF_AMOUNT,0) AS SET_OFF_AMOUNT,")
					  .append(" NVL(FBFAPD.REFUND_AMOUNT,0) AS REFUND_AMOUNT,")
					  .append(" NVL(FTC.CHEQUE_NO,FTO.REFERENCE_NO) AS CHEQUE_OR_REFERENCE_NO,")
				      .append(" (SELECT STATUS FROM STATUS WHERE STATUS_ID = FTE.TRANSACTION_STATUS_ID) AS TRANSACTION_STATUS,")
				      //.append(" CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTE.PAYMENT_DATE ELSE FTE.RECEIVED_DATE END AS TRANSACTION_DATE,")
				      .append(" CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.CHEQUE_NO ELSE  FTO.REFERENCE_NO END AS REFERENCE_NO,")
				      .append(" CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.CLEARANCE_DATE ELSE FTE.RECEIVED_DATE END AS CLEARANCE_DATE")
					  .append(" FROM ")
					  .append(" FIN_TRANSACTION_SET_OFF_ENTRY FTSOE,")
			          .append(" FIN_TRANSACTION_SET_OFF FTSO,")
			          .append(" FIN_TRANSACTION_ENTRY FTE ")
			          
			          .append(" LEFT JOIN FIN_TRANSACTION_ONLINE FTO ")
				      .append(" ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTO.FIN_TRANSACTION_ENTRY_ID ")
				      .append(" LEFT JOIN FIN_TRANSACTION_CHEQUE FTC ")
				      .append(" ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTC.FIN_TRANSACTION_ENTRY_ID ")
				      
					  .append(" INNER JOIN FIN_TRANSACTION_MODE FTM ")
					  .append(" ON FTE.FIN_TRANSACTION_MODE_ID = FTM.TRANSACTION_MODE_ID ")
					  .append(" FULL JOIN FIN_TRANSACTION_FOR FTR ")
					  .append(" ON(FTR.FIN_TRANSACTION_FOR_ID=FTE.TRANSACTION_FOR) ")
					  .append(" FULL JOIN FIN_TRANSACTION_TYPE FTT ")
					  .append(" ON(FTT.TRANSACTION_TYPE_ID=FTE.FIN_TRANSACTION_TYPE_ID), ")
					  .append(" FIN_BOOKING_FORM_ACCOUNT_PAYMENT FBFAP, ")
					  .append(" FIN_BOOKING_FORM_ACC_PMT_DTLS FBFAPD ")
					  .append(" LEFT OUTER JOIN FIN_BOOKING_FORM_ACCOUNTS FBA ON FBFAPD.TYPE_ID = FBA.FIN_BOOKING_FORM_ACCOUNTS_ID AND FBA.STATUS_ID = :STATUS_ID  AND FBA.TYPE IN (:TYPE) ")
					  .append(" LEFT OUTER JOIN FIN_BOOKING_FORM_MILESTONES FBFM ON FBA.TYPE_ID = FBFM.FIN_BOOKING_FORM_MILESTONES_ID AND FBFM.STATUS_ID = :STATUS_ID ")
			          .append(" WHERE FTE.FIN_TRANSACTION_ENTRY_ID = FTSOE.FIN_TRANSACTION_ENTRY_ID ")
					  .append(" AND FTSOE.FIN_TRN_SET_OFF_ENT_ID = FBFAP.FIN_TRN_SET_OFF_ENT_ID ")
					  .append(" AND FBFAP.FIN_BOK_FRM_ACC_PMT_ID = FBFAPD.FIN_BOK_FRM_ACC_PMT_ID ")
					  .append("AND FTSO.FIN_TRN_SET_OFF_ENT_ID = FTSOE.FIN_TRN_SET_OFF_ENT_ID AND FTSO.SET_OFF_TYPE IN (:TYPE) AND FTSO.STATUS_ID = :STATUS_ID ")
					  .append("AND FTE.TRANSACTION_STATUS_ID = :TRANSACTION_STATUS_ID ")
					  .append("AND FTE.BOOKING_FORM_ID = :BOOKING_FORM_ID ")
					  .append("AND FTE.STATUS_ID = :STATUS_ID ")
					  .append("AND FBFAP.STATUS_ID = :STATUS_ID ");
			  
			  public static final String QRY_TO_GET_RECEIPT_DETAILS_ADJUSTED_AMOUNT = new StringBuilder(" SELECT ")
					  .append("FTE.TRANSACTION_RECEIPT_NO,")
					  .append("FTE.FIN_TRANSACTION_ENTRY_ID,")
					  .append("FTE.BOOKING_FORM_ID,")
					  .append("FTE.AMOUNT,")
					  .append("FTE.SOURCE_OF_FUNDS,")
					  .append("FTE.RECEIVED_DATE,FTE.PAYMENT_DATE AS TRANSACTION_DATE,")
					  .append("FTE.FIN_TRANSACTION_MODE_ID,FTE.TRANSACTION_CLOSED_DATE,FTE.IS_RECORD_UPLOADED,FTE.EXCEL_RECORD_NO,")
					  .append("FTE.FIN_TRANSACTION_TYPE_ID,")
					  .append("FTM.NAME AS TRANSACTION_MODE,")
					  .append("FTT.NAME AS TRANSACTION_TYPE_NAME,")
					  .append("FTSE.FIN_TRN_SET_OFF_ENT_ID,")
					  .append("FBA.TYPE,")
					  .append("FBA.TYPE_ID,")
					  .append("FBA.REFUND_AMOUNT,")
					  .append("NVL(FBA.PAY_AMOUNT,0) as PAY_AMOUNT,")
					  .append("NVL(FBA.PAID_AMOUNT,0) as PAID_AMOUNT,")
					  .append("FBA.DUE_DATE,")
					  .append("FBA.PAID_DATE,")
					  .append("FBAS.PAID_AMOUNT AS SET_OFF_AMOUNT,")
					  .append("FBAS.FIN_BOOKING_FORM_ACCOUNTS_ID,")
					  .append("FBFDN.TYPE_OF_INTEREST AS INTEREST_SELECTION_TYPE,")
					  .append("(SELECT STATUS FROM STATUS WHERE STATUS_ID = FTE.TRANSACTION_STATUS_ID) AS TRANSACTION_STATUS ")
					  .append(" FROM ")
					  .append("FIN_TRANSACTION_ENTRY FTE ")
					  .append("INNER JOIN FIN_TRANSACTION_MODE FTM ") 
			          .append("ON FTE.FIN_TRANSACTION_MODE_ID = FTM.TRANSACTION_MODE_ID ") 
			          .append("INNER JOIN FIN_TRANSACTION_TYPE FTT ")
			          .append(" ON FTT.TRANSACTION_TYPE_ID=FTE.FIN_TRANSACTION_TYPE_ID ")
					  .append("INNER JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSE ")
					  .append("ON FTSE.FIN_TRANSACTION_ENTRY_ID = FTE.FIN_TRANSACTION_ENTRY_ID AND FTE.STATUS_ID = :STATUS_ID ")
					  .append("INNER JOIN FIN_BOOKING_FORM_RECEIPTS FBR ")
					  .append("ON FBR.FIN_TRN_SET_OFF_ENT_ID = FTSE.FIN_TRN_SET_OFF_ENT_ID  AND FBR.STATUS_ID = :STATUS_ID ")
					  .append("INNER JOIN FIN_BOOKING_FORM_ACCOUNTS_STATEMENT FBAS ")
					  .append("ON  FBR.FIN_BOK_FRM_RCPT_ID = FBAS.FIN_BOK_FRM_RCPT_ID ")
					  .append("INNER JOIN FIN_BOOKING_FORM_ACCOUNTS FBA ")
					  .append("ON FBA.FIN_BOOKING_FORM_ACCOUNTS_ID = FBAS.FIN_BOOKING_FORM_ACCOUNTS_ID ")
					  .append("LEFT OUTER JOIN FIN_BOOKING_FORM_MILESTONES FBFM ")
					  .append("ON FBFM.FIN_BOOKING_FORM_MILESTONES_ID =  FBA.TYPE_ID AND FBFM.STATUS_ID = :STATUS_ID ") 
					  .append("LEFT OUTER JOIN FIN_BOOKING_FORM_DEMAND_NOTE FBFDN ")
					  .append("ON FBFDN.FIN_BOK_FOM_DMD_NOTE_ID = FBFM.FIN_BOK_FOM_DMD_NOTE_ID AND FBFDN.STATUS_ID = :STATUS_ID ")
					  .append(" WHERE FBA.BOOKING_FORM_ID = :BOOKING_FORM_ID AND FTE.BOOKING_FORM_ID = :BOOKING_FORM_ID AND FBA.STATUS_ID = :STATUS_ID ")
					  .append("AND FTE.TRANSACTION_STATUS_ID = :TRANSACTION_STATUS_ID ") 
					  .append("AND FTE.STATUS_ID = :STATUS_ID ")
					  .append("AND FBR.STATUS_ID = :STATUS_ID ")
					  .toString();
			  
				public static final String QRY_TO_GET_RECEIPT_DETAILS = new StringBuilder(" SELECT ")			
					      .append("FTE.TRANSACTION_RECEIPT_NO,")
					      .append("FTE.FIN_TRANSACTION_ENTRY_ID,")
						  .append("FTE.FIN_TRANSACTION_MODE_ID,")
						  .append("FTE.FIN_TRANSACTION_TYPE_ID,")
						  .append("(SELECT FTT.NAME FROM  FIN_TRANSACTION_TYPE FTT ")
						  .append(" WHERE FTT.TRANSACTION_TYPE_ID=FTE.FIN_TRANSACTION_TYPE_ID ) AS TRANSACTION_TYPE_NAME,")
					      .append("FTE.BOOKING_FORM_ID,")
					      .append("FPM.MILESTONE_NAME,")
					      .append("FTE.AMOUNT,")
					      .append("FTE.SOURCE_OF_FUNDS,")
					      .append("FTE.CREATED_DATE AS TRN_CREATION_DATE,")
					      //.append("FTE.FIN_TRANSACTION_ENTRY_ID,")
					      .append("FTSE.FIN_TRN_SET_OFF_ENT_ID,")
					      .append("FTSO.SET_OFF_AMOUNT,")
					      .append("FBA.TYPE,")
					      .append("FBA.TYPE_ID,")
					      .append("FBA.REFUND_AMOUNT,")
					      //.append("FBAS.PAID_AMOUNT AS SET_OFF_AMOUNT,")
					      .append(" NVL(FBAS.ACTUAL_PAID_AMOUNT,0) AS ACTUAL_PAID_AMOUNT,")
						  .append(" NVL(FBAS.STATEMENT_REFUND_AMOUNT,0) AS STATEMENT_REFUND_AMOUNT,")
					      .append("FBAS.FIN_BOOKING_FORM_ACCOUNTS_ID,")
					      .append("FTE.RECEIVED_DATE,FTE.TRANSACTION_CLOSED_DATE,FTE.IS_RECORD_UPLOADED,FTE.EXCEL_RECORD_NO,")
					      .append("FTM.NAME AS TRANSACTION_MODE,")
					      .append("(SELECT STATUS FROM STATUS WHERE STATUS_ID = FTE.TRANSACTION_STATUS_ID) AS TRANSACTION_STATUS,")
					      .append("FB.BANK_NAME,")
					      .append("FTED.DOC_NAME,")
					      .append("FTED.LOCATION,")
					      .append("FBDND.LOCATION AS DEMAND_LOC,")
					      .append("CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.REFERENCE_NO ELSE  FTO.REFERENCE_NO END AS REFERENCE_NO,")
					      .append("CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.CLEARANCE_DATE ELSE FTE.RECEIVED_DATE END AS CLEARANCE_DATE")
					      .append(" FROM ")
					      .append("FIN_BOOKING_FORM_ACCOUNTS FBA ")
					      .append("INNER JOIN FIN_BOOKING_FORM_MILESTONES FBM ")
					      .append("ON FBA.TYPE_ID = FBM.FIN_BOOKING_FORM_MILESTONES_ID ")
					      .append("INNER JOIN FIN_PROJECT_MILESTONES FPM ")
					      .append("ON FBM.PROJECT_MILESTONE_ID = FPM.PROJECT_MILESTONE_ID ")
					      .append("INNER JOIN FIN_BOOKING_FORM_ACCOUNTS_STATEMENT FBAS ")
					      .append("ON FBA.FIN_BOOKING_FORM_ACCOUNTS_ID = FBAS.FIN_BOOKING_FORM_ACCOUNTS_ID  AND FBAS.STATUS_ID = :STATUS_ID  ")
					      .append("INNER JOIN FIN_BOOKING_FORM_RECEIPTS FBR ")
					      .append("ON FBAS.FIN_BOK_FRM_RCPT_ID = FBR.FIN_BOK_FRM_RCPT_ID AND FBR.STATUS_ID = :STATUS_ID ")
					      .append("INNER JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSE ")
					      .append("ON FBR.FIN_TRN_SET_OFF_ENT_ID = FTSE.FIN_TRN_SET_OFF_ENT_ID ")
					      .append("LEFT OUTER JOIN FIN_TRANSACTION_SET_OFF FTSO ")
			              .append(" ON FTSO.FIN_TRN_SET_OFF_ENT_ID = FTSE.FIN_TRN_SET_OFF_ENT_ID AND FTSO.SET_OFF_TYPE IN (:TYPE) AND FTSO.STATUS_ID = :STATUS_ID ")
					      .append("INNER JOIN FIN_TRANSACTION_ENTRY FTE ")
					      .append("ON FTSE.FIN_TRANSACTION_ENTRY_ID = FTE.FIN_TRANSACTION_ENTRY_ID AND FTE.STATUS_ID = :STATUS_ID ")
					      .append("INNER JOIN FIN_TRANSACTION_MODE FTM ")
					      .append("ON FTE.FIN_TRANSACTION_MODE_ID = FTM.TRANSACTION_MODE_ID ")
					      .append("LEFT OUTER JOIN FIN_BANK FB ")
					      .append("ON FTE.FIN_BANK_ID = FB.FIN_BANK_ID ")
					      .append("LEFT OUTER JOIN FIN_TRANSACTION_ENTRY_DOC FTED ")
					      .append("ON FTE.FIN_TRANSACTION_ENTRY_ID = FTED.FIN_TRANSACTION_ENTRY_ID AND FTED.DOC_TYPE = :DOC_TYPE AND FTED.RECEIPT_TYPE = :RECEIPT_TYPE ")
					      .append("LEFT OUTER JOIN FIN_BOOKING_FORM_DEMAND_NOTE FBDN ")
					      .append("ON FBM.FIN_BOK_FOM_DMD_NOTE_ID = FBDN.FIN_BOK_FOM_DMD_NOTE_ID ")
					      .append("LEFT OUTER JOIN FIN_BOOKING_FORM_DEMAND_NOTE_DOC FBDND ")
					      .append("ON FBDN.FIN_BOK_FOM_DMD_NOTE_ID = FBDND.FIN_BOK_FOM_DMD_NOTE_ID ")
					      .append("LEFT JOIN FIN_TRANSACTION_ONLINE FTO ")
					      .append("ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTO.FIN_TRANSACTION_ENTRY_ID ")
					      .append("LEFT JOIN FIN_TRANSACTION_CHEQUE FTC ")
					      .append("ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTC.FIN_TRANSACTION_ENTRY_ID ")
					      .append("WHERE FBA.BOOKING_FORM_ID = :BOOKING_FORM_ID AND FBA.STATUS_ID = :STATUS_ID ")
					      .append("AND FTE.TRANSACTION_STATUS_ID = :TRANSACTION_STATUS_ID ")
					      .append("AND FTE.STATUS_ID = :STATUS_ID ")
					      .toString();
			  
				public static final String QRY_TO_GET_RECEIPT_DETAILS_FOR_CONSOLIDATED_RECEIPT = new StringBuilder("")			
						  .append(" SELECT FTE.TRANSACTION_RECEIPT_NO,  FTE.FIN_TRANSACTION_ENTRY_ID,")
						  .append(" FTE.FIN_TRANSACTION_MODE_ID,	  FTE.FIN_TRANSACTION_TYPE_ID,")
						  .append(" (SELECT FTT.NAME FROM  FIN_TRANSACTION_TYPE FTT WHERE FTT.TRANSACTION_TYPE_ID=FTE.FIN_TRANSACTION_TYPE_ID ) AS TRANSACTION_TYPE_NAME,")
						  .append(" FTM.NAME AS TRANSACTION_MODE,")
					      .append(" FTE.BOOKING_FORM_ID,  FTE.AMOUNT,FTE.TRANSACTION_STATUS_ID,FTSE.FIN_TRN_SET_OFF_ENT_ID,")
					      .append(" FTE.CREATED_DATE AS TRN_CREATION_DATE,")
					      .append(" FTSO.SET_OFF_AMOUNT,")
					      .append(" FBA.TYPE, FBA.TYPE_ID,FBM.FIN_BOOKING_FORM_MILESTONES_ID,")
					      //.append(" FBAS.PAID_AMOUNT AS MS_ADJ_AMOUNT,")
					      //.append(" FBAS.PAID_AMOUNT AS SET_OFF_AMOUNT,")
					      .append(" NVL(FBAS.ACTUAL_PAID_AMOUNT,0) AS ACTUAL_PAID_AMOUNT,")
						  .append(" NVL(FBAS.STATEMENT_REFUND_AMOUNT,0) AS STATEMENT_REFUND_AMOUNT,")
					      .append(" FTE.RECEIVED_DATE,FTE.PAYMENT_DATE,")
					      .append(" NVL(FTC.CHEQUE_NO,FTO.REFERENCE_NO) AS CHEQUE_OR_REFERENCE_NO,")
					      .append(" (SELECT STATUS FROM STATUS WHERE STATUS_ID = FTE.TRANSACTION_STATUS_ID) AS TRANSACTION_STATUS,")
					      .append(" CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTE.PAYMENT_DATE ELSE FTE.RECEIVED_DATE END AS TRANSACTION_DATE,")
					      .append(" CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.CHEQUE_NO ELSE  FTO.REFERENCE_NO END AS REFERENCE_NO,")
					      .append(" CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.CLEARANCE_DATE ELSE FTE.RECEIVED_DATE END AS CLEARANCE_DATE")
					      .append(" FROM ")
					      .append(" FIN_BOOKING_FORM_ACCOUNTS FBA ")
					      .append(" INNER JOIN FIN_BOOKING_FORM_MILESTONES FBM ")
					      .append(" ON FBA.TYPE_ID = FBM.FIN_BOOKING_FORM_MILESTONES_ID ")
					      .append(" INNER JOIN FIN_BOOKING_FORM_ACCOUNTS_STATEMENT FBAS ")
					      .append(" ON FBA.FIN_BOOKING_FORM_ACCOUNTS_ID = FBAS.FIN_BOOKING_FORM_ACCOUNTS_ID  AND FBAS.STATUS_ID = 6  ")
					      .append(" INNER JOIN FIN_BOOKING_FORM_RECEIPTS FBR ")
					      .append(" ON FBAS.FIN_BOK_FRM_RCPT_ID = FBR.FIN_BOK_FRM_RCPT_ID AND FBR.STATUS_ID = 6 ")
					      .append(" INNER JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSE ")
					      .append(" ON FBR.FIN_TRN_SET_OFF_ENT_ID = FTSE.FIN_TRN_SET_OFF_ENT_ID ")
					      .append(" LEFT OUTER JOIN FIN_TRANSACTION_SET_OFF FTSO ")
					      .append(" ON FTSO.FIN_TRN_SET_OFF_ENT_ID = FTSE.FIN_TRN_SET_OFF_ENT_ID AND FTSO.SET_OFF_TYPE IN (:TYPE) AND FTSO.STATUS_ID = 6 ")
					      .append(" INNER JOIN FIN_TRANSACTION_ENTRY FTE ")
					      .append(" ON FTSE.FIN_TRANSACTION_ENTRY_ID = FTE.FIN_TRANSACTION_ENTRY_ID AND FTE.STATUS_ID = 6 ")
					      .append(" INNER JOIN FIN_TRANSACTION_MODE FTM ")
					      .append(" ON FTE.FIN_TRANSACTION_MODE_ID = FTM.TRANSACTION_MODE_ID ")
					      .append(" LEFT JOIN FIN_TRANSACTION_ONLINE FTO ")
					      .append(" ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTO.FIN_TRANSACTION_ENTRY_ID ")
					      .append(" LEFT JOIN FIN_TRANSACTION_CHEQUE FTC ")
					      .append(" ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTC.FIN_TRANSACTION_ENTRY_ID ")
					      .append("WHERE FBA.BOOKING_FORM_ID = :BOOKING_FORM_ID AND FBA.STATUS_ID = :STATUS_ID ")
					      .append("AND FTE.TRANSACTION_STATUS_ID = :TRANSACTION_STATUS_ID ")
					      .append("AND FTE.STATUS_ID = :STATUS_ID ")
					      .toString();
				
				
			 			  
				public static final String QRY_TO_GET_FINANCIAL_DETAILS = new StringBuilder(" SELECT ")	
						   .append("FPM.PROJECT_MILESTONE_ID,")			
						   .append("FPM.MILESTONE_NAME,")
						   .append("FPM.FIN_MILESTONE_CLASSIFIDES_ID,")
						   .append("FPM.PERCENTAGE_ID,")
						   .append("FPM.MILESTONE_DATE,")
						   .append("FPM.MILE_STONE_NO,")
						   .append("FPM.MASTER_DMD_NOTE_DATE,")
						   .append("FPM.MASTER_DMD_DUE_DATE,")
						   .append("FPM.STATUS_ID,")
						   .append("ST.STATUS AS MILESTONE_STATUS,")
						   .append("P.PERCENTAGE AS MILE_STONE_PERCENTAGE,")
						   .append("P.DESCRIPTION,")
						   .append("FBM.FIN_BOOKING_FORM_MILESTONES_ID,")
						   .append("FBM.MS_DMD_NOTE_DATE,")
						   .append("FBM.MS_STATUS_ID,")
						   .append("NVL(FBA.PAY_AMOUNT,0) AS PAY_AMOUNT,")
						   .append("NVL(FBA.PAID_AMOUNT,0) AS PAID_AMOUNT,")
						   .append("(NVL(FBA.PAY_AMOUNT,0) - NVL(FBA.PAID_AMOUNT,0)) AS MILESTONE_AMOUNT_DUE, ")
						   .append("FBA.DUE_DATE,")
						   .append("FBA.PAYMENT_STATUS")
						   .append(",(SELECT MAX(PAID_DATE) FROM FIN_BOOKING_FORM_ACCOUNTS_STATEMENT FBFAS WHERE FBA.FIN_BOOKING_FORM_ACCOUNTS_ID = FBFAS.FIN_BOOKING_FORM_ACCOUNTS_ID AND STATUS_ID = 6 ) AS LAST_RECEIPT_DATE")
						   .append(",(SELECT PAYABLE_AMOUNT FROM FIN_BOOKING_FORM_ACCOUNT_SUMMARY FBAS  WHERE FBAS.BOOKING_FORM_ID IN(:FLAT_BOOK_ID) AND FBAS.TYPE = 33) PAYABLE_AMOUNT ")
						   .append(",NVL(FP.TOTAL_AMOUNT,0.0) AS TOTAL_PENALITY_AMOUNT ")
						   .append(",NVL(FBFDN.TOTAL_AMOUNT,0.0) AS TOTAL_DN_AMOUNT ")
						   .append(",FBFDN.DEMAND_NOTE_NO ")
						   .append(",FBFDN.DEMAND_NOTE_DATE ")
						   //.append(",FBFDND.LOCATION,FBFDND.DOC_NAME ")
						   .append(" FROM FIN_PROJECT_MILESTONES FPM ")
						   .append("INNER JOIN STATUS ST ON FPM.PROJECT_MS_STATUS_ID = ST.STATUS_ID AND FPM.STATUS_ID = :STATUS_ID ")
						   .append("INNER JOIN FIN_MILESTONE_CLASSIFIDES FMC ")
						   .append("ON FPM.FIN_MILESTONE_CLASSIFIDES_ID = FMC.FIN_MILESTONE_CLASSIFIDES_ID AND FMC.STATUS_ID = :STATUS_ID ")
						   .append("INNER JOIN FIN_MIL_CLS_MAPPING_BLOCKS FMCMMB ")
						   .append("ON FMCMMB.FIN_MILESTONE_CLASSIFIDES_ID = FMC.FIN_MILESTONE_CLASSIFIDES_ID ")
						   .append("INNER JOIN PERCENTAGES P ")
						   .append("ON P.PERCENTAGE_ID = FPM.PERCENTAGE_ID ")
						   .append("LEFT OUTER JOIN FIN_BOOKING_FORM_MILESTONES FBM ")
						   .append("ON FBM.PROJECT_MILESTONE_ID = FPM.PROJECT_MILESTONE_ID AND FBM.BOOKING_FORM_ID = :FLAT_BOOK_ID  AND FBM.STATUS_ID = :STATUS_ID  ")
						   .append(" LEFT OUTER JOIN FIN_BOOKING_FORM_DEMAND_NOTE FBFDN ON FBFDN.FIN_BOK_FOM_DMD_NOTE_ID = FBM.FIN_BOK_FOM_DMD_NOTE_ID AND FBFDN.STATUS_ID = :STATUS_ID ")
						   //.append(" LEFT OUTER JOIN FIN_BOOKING_FORM_DEMAND_NOTE_DOC FBFDND ON (FBFDN.FIN_BOK_FOM_DMD_NOTE_ID = FBFDND.FIN_BOK_FOM_DMD_NOTE_ID AND FBFDN.STATUS_ID = :STATUS_ID)")
						   .append("LEFT OUTER JOIN FIN_BOOKING_FORM_ACCOUNTS FBA ")
						   .append("ON FBA.TYPE_ID = FBM.FIN_BOOKING_FORM_MILESTONES_ID AND FBA.TYPE = 29  AND FBA.STATUS_ID = :STATUS_ID ")
						   .append(" LEFT OUTER JOIN FIN_PENALTY FP ON FP.FIN_BOOKING_FORM_ACCOUNTS_ID = FBA.FIN_BOOKING_FORM_ACCOUNTS_ID AND FP.STATUS_ID = :STATUS_ID ")
						   .append("WHERE FMCMMB.BLOCK_ID IN( ")
						   .append(" SELECT  ")
						   .append(" BD.BLOCK_ID ")
						   .append(" FROM ")
						   .append(" BLOCK_DETAILS BD ")
						   .append(" INNER JOIN FLOOR_DETAILS FD ")
						   .append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID ")
						   .append(" INNER JOIN FLAT F ")
						   .append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID ")
						   .append(" INNER JOIN  FLAT_BOOKING FB ")
						   .append(" ON FB.FLAT_ID = F.FLAT_ID AND FB.FLAT_BOOK_ID IN (:FLAT_BOOK_ID) AND FB.STATUS_ID = :STATUS_ID ")
						   .append(" )")
						   .append(" AND FMC.SITE_ID = :SITE_ID ")
						   .append(" ORDER BY FPM.MILE_STONE_NO ")
						   .toString();
			  
			  public static final StringBuilder QRY_TO_UPDATE_FIN_BOOKING_FORM_ACCOUNTS_PAID_NON_PAID_DATA=new StringBuilder("")
					  .append("UPDATE FIN_BOOKING_FORM_ACCOUNTS SET PAYMENT_STATUS = :PAYMENT_STATUS ")
					  .append("WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :FIN_BOOKING_FORM_ACCOUNTS_ID");
			  
			  public static final String QRY_TO_GET_FIN_BOK_FOM_DMD_NOTE_ID_DATA=new StringBuilder(" ") 
					  .append("FBFDN.FIN_BOK_FOM_DMD_NOTE_ID,")
					  .append("FBFDN.BOOKING_FORM_ID,")
					  .append("FBFDN.DEMAND_NOTE_NO,")
					  //.append("FBFDN.CREATED_BY,")
					  .append("FBFDN.CREATED_DATE AS DN_CREATION_DATE,")
					  //.append("FBFDN.MODIFIED_BY,")
					  //.append("FBFDN.MODIFIED_DATE,")
					  .append("FBFDN.BASIC_AMOUNT AS TOTAL_DEMAND_NOTE_BASIC_AMT,")
					  .append("FBFDN.TOTAL_AMOUNT TOTAL_DEMAND_NOTE_TOTAL_AMT,")
					  .append("FBFDN.TAX_AMOUNT TOTAL_DEMAND_NOTE_TAX_AMT,")
					  .append("FBFDN.DEMAND_NOTE_DATE AS DEMAND_NOTE_DATE, ")
					  .append("FBFDN.TYPE_OF_INTEREST AS INTEREST_SELECTION_TYPE ")
					  .toString();
			  
			  public static final String QRY_TO_GET_FIN_BOOKING_FORM_DEMAND_NOTE_ID = new StringBuilder("SELECT ")
					  .append(QRY_TO_GET_FIN_BOK_FOM_DMD_NOTE_ID_DATA)
					  .append(",")
					  .append("FBFDN.CREATED_BY,")
					  .append("FBFDN.CREATED_DATE ")
					  .append(" FROM FIN_BOOKING_FORM_DEMAND_NOTE FBFDN ")
					  .append("WHERE FBFDN.BOOKING_FORM_ID = :BOOKING_FORM_ID AND FBFDN.STATUS_ID = :STATUS_ID ")
					  .append("AND FBFDN.CREATED_DATE = (SELECT MAX(CREATED_DATE) FROM FIN_BOOKING_FORM_DEMAND_NOTE WHERE BOOKING_FORM_ID = :BOOKING_FORM_ID  AND STATUS_ID = :STATUS_ID)")
					  .toString();
			  
			  public static final String QRY_TO_GET_FIN_BOOKING_FORM_DEMAND_NOTE_DETAILS = new StringBuilder("SELECT ")
					  .append(QRY_TO_GET_FIN_BOK_FOM_DMD_NOTE_ID_DATA)
					  .append(" FROM FIN_BOOKING_FORM_MILESTONES FBFM, ")
					  .append("FIN_BOOKING_FORM_DEMAND_NOTE FBFDN ")
					  .append(" WHERE FBFM.FIN_BOK_FOM_DMD_NOTE_ID = FBFDN.FIN_BOK_FOM_DMD_NOTE_ID ")
					  .append("AND FBFM.PROJECT_MILESTONE_ID = :PROJECT_MILESTONE_ID AND FBFDN.BOOKING_FORM_ID = :BOOKING_FORM_ID ")
					  .append("AND FBFDN.TYPE_OF_INTEREST = :TYPE_OF_INTEREST ")
					  .append("AND FBFDN.STATUS_ID = :STATUS_ID ")
					  .append("AND FBFM.STATUS_ID = :STATUS_ID ")
					  .append(" ").toString();
			  
			  public static final String QRY_TO_GET_DATA_FROM_FIN_BOOKING_FORM_MILESTONES=new StringBuilder("")
					  .append("FBFM.FIN_BOOKING_FORM_MILESTONES_ID,")
					  .append("FBFM.MS_DMD_NOTE_DATE,")
					  .append("FBFM.BOOKING_FORM_ID,")
					  .append("FBFM.PROJECT_MILESTONE_ID,")
					  .append("FBFM.FIN_BOK_FOM_DMD_NOTE_ID,")
					  .append("FBFM.MS_STATUS_ID,")
					  //.append("FBFM.CREATED_BY,")
					  //.append("FBFM.CREATED_DATE,")
					  //.append("FBFM.MODIFIED_BY,")
					  //.append("FBFM.MODIFIED_DATE,")
					  .append("FBFM.TAX_AMOUNT,")
					  .append("FBFM.BASIC_AMOUNT,")
					  .append("FBFM.TOTAL_AMOUNT ")
					  //.append("FBFM.TAX_AMOUNT/2 AS SGST_AMOUNT,")
					  //.append("FBFM.TAX_AMOUNT/2 AS CGST_AMOUNT ")
					  .toString();
			  
			  public static final String QRY_TO_GET_FIN_PROJECT_MILESTONES=new StringBuilder("") 
					  .append("FPM.PROJECT_MILESTONE_ID,")
					  .append("FPM.MILESTONE_NAME,")
					  .append("FPM.FIN_MILESTONE_CLASSIFIDES_ID,")
					  .append("FPM.PERCENTAGE_ID,")
					  .append("FPM.MILESTONE_DATE,")
					  .append("FPM.MILE_STONE_NO,")
					  .append("FPM.STATUS_ID ").toString();
			  
			  public static final String QRY_TO_GET_TYPE_FROM_BOOKING_FORM_ACCOUNTS_TABLE = "SELECT TYPE,TYPE_ID FROM FIN_BOOKING_FORM_ACCOUNTS WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :FIN_BOOKING_FORM_ACCOUNTS_ID";
			  
			  public static final String QRY_TO_GET_TYPE_FROM_BOOKING_FORM_ACCOUNTS_BY_ID = 
					  new StringBuilder("SELECT ")
					  .append(QRY_TO_GET_FIN_BOOKING_FORM_ACCOUNTS_DATA)
					  .append(" FROM FIN_BOOKING_FORM_ACCOUNTS FBFA WHERE FBFA.FIN_BOOKING_FORM_ACCOUNTS_ID = :FIN_BOOKING_FORM_ACCOUNTS_ID")
					  .append(" AND FBFA.TYPE = :TYPE")
					  .toString();
			  
			  public static final String QRY_TO_GET_FIN_BOK_FRM_MST_SCH_TAX_MAP=new StringBuilder("")
					  .append("FBFMSTM.FIN_BOK_FRM_MST_SCH_TAX_MAP_ID,")
					  .append("FBFMSTM.FIN_BOK_FRM_MST_TAX_ID,")
					  .append("FBFMSTM.FIN_SCHE_TAX_MAP_ID,")
					  .append("FBFMSTM.AMOUNT ")
					  //.append("FBFMSTM.TOTAL_AMOUNT ")
					  .append("").toString();
			  
			  public static final String QRY_TO_GET_SUM_BOK_FRM_MST_SCH_TAX_MAP=new StringBuilder("")
					  .append("SELECT NVL(SUM(FBFMS.AMOUNT),0) AS  AMOUNT  ")
					  .append(" FROM FIN_BOK_FRM_MST_SCH_TAX_MAP FBFMS,")
					  .append(" FIN_BOOKING_FORM_MILESTONE_TAX FBFMT,")
					  .append(" FIN_BOOKING_FORM_MILESTONES FBFM")
					  .append(" WHERE FBFMT.FIN_BOK_FRM_MST_TAX_ID = FBFMS.FIN_BOK_FRM_MST_TAX_ID")
					  .append(" AND FBFM.FIN_BOOKING_FORM_MILESTONES_ID = FBFMT.FIN_BOOKING_FORM_MILESTONES_ID ")
					  .toString();
			  
			  public static final String QRY_TO_GET_FIN_SCHEME=new StringBuilder("SELECT ")
					  .append("FC.FIN_SCHEME_ID AS FIN_SCHEME_ID,  FC.NAME AS FIN_SCHEME_NAME,  FC.DESCRIPTION AS FIN_SCHEME_DESCRIPTION,  FC.STATUS_ID")
					  .append(" FROM FIN_SCHEME  FC ")
					  .append("WHERE  FC.STATUS_ID = :STATUS_ID ")
					  .toString();
			  
			  public static final String QRY_TO_GET_FIN_TAX=new StringBuilder("SELECT ")
					  .append(" FT.FIN_TAX_ID as FIN_TAX_ID,")
					  .append("FT.NAME as TAX_NAME,")
					  .append("FT.DESCRIPTION as TAX_DESCRIPTION,")
					  .append("FT.STATUS_ID as STATUS_ID,")
					  .append("MT.NAME AS ALIAS_NAME,")
					  .append("FT.ALIAS_NAME AS ALIAS_NAME_ID ")
					  .append(" FROM ")
					  .append("FIN_TAX FT JOIN METADATA_TYPES MT ")
					  .append("ON MT.METADATA_TYPES_ID = FT.ALIAS_NAME ")
					  .toString();

			  public static final String QRY_TO_INSERT_FIN_SCHEME=new StringBuilder("INSERT INTO")
					  .append(" FIN_SCHEME (")
					  .append("FIN_SCHEME_ID,NAME,")
					  .append("DESCRIPTION,STATUS_ID,")
					  .append("CREATED_BY,CREATED_DATE")
					  .append(")VALUES(")
					  .append("FIN_SCHEME_SEQ.NEXTVAL, :finSchemeName,")
					  .append(":finSchemeDescription, :statusId,")
					  .append(":createdBy, :createdDate")
					  .append(")")
					  .toString();
			  
			  public static final String QRY_TO_INSERT_FIN_TAX=new StringBuilder("INSERT INTO")
					  .append(" FIN_TAX  (")
					  .append("FIN_TAX_ID, NAME,")
					  .append("DESCRIPTION, CREATED_BY,")
					  .append("CREATED_DATE, ALIAS_NAME,")
					  .append("STATUS_ID")
					  .append(")  VALUES  (")
					  .append("FIN_TAX_SEQ.NEXTVAL, :taxName,")
					  .append(":description, :createdBy,")
					  .append(":createdDate, :aliasNameId,")
					  .append(":statusId)")
					  .toString();
			  
			  public static final String QRY_TO_INSERT_FIN_SCHEME_TAX_MAPPING=new StringBuilder(" ")
					  .append("INSERT INTO FIN_SCHEME_TAX_MAPPING (")
					  .append("FIN_SCHE_TAX_MAP_ID,FIN_SCHEME_ID,")
					  .append("FIN_TAX_ID,PERCENTAGE_ID,")
					  .append("CREATED_BY,CREATED_DATE, ")
					  .append("START_DATE,END_DATE,")
					  .append("STATUS_ID,SITE_ID")
					  .append("  )  VALUES   (")
					  .append("FIN_SCHEME_TAX_MAPPING_SEQ.NEXTVAL, :finSchemeId,")
					  .append(":finTaxId,:percentageId,")
					  .append(":createdBy,:createdDate,")
					  .append(":startDate,:endDate,")
					  .append(":statusId,:siteId")
					  .append("  )")
					  .toString();
			  
			  public static final String QRY_TO_INSERT_FLAT_BOK_SCHM_MAPPING=new StringBuilder(" ")
					  .append("INSERT INTO FLAT_BOK_SCHM_MAPPING (")
					  .append("FLT_BOK_SCHM_MAP_ID, FLAT_BOOK_ID,")
					 .append("STATUS_ID, FIN_SCHE_TAX_MAP_ID,")
					 .append("CREATED_BY,  CREATED_DATE")
					 .append(") VALUES (")
					 .append("FLAT_BOK_SCHM_MAPPING_SEQ.NEXTVAL,  :bookingFormId,")
					 .append(":statusId, :finSchemeTaxMappingId,")
					 .append(":createdBy, :createdDate )").toString();
			  
			  public static final String QRY_TO_UPDATE_FLAT_BOK_SCHM_MAPPING = new StringBuilder("")
					.append("UPDATE FLAT_BOK_SCHM_MAPPING")
					.append(" SET STATUS_ID = :statusId")
					.append(",MODIFIED_BY = :modifiedBy")
					.append(",MODIFIED_DATE = SYSDATE")
					.append(" WHERE FLAT_BOOK_ID = :bookingFormId")
					.append(" AND STATUS_ID = :pastStatusId").toString();
			  
			  public static final String QRY_TO_GET_FLAT_BOK_SCHM_MAPPING_DETAILS_BY_SCHEME_NAME=new StringBuilder("")
					  .append(" SELECT ")
					  .append("   FCTM.FIN_SCHE_TAX_MAP_ID,FCTM.SITE_ID,FS.FIN_SCHEME_ID,FS.NAME AS FIN_SCHEME_NAME ")
					  .append(" FROM FIN_SCHEME_TAX_MAPPING FCTM,")
					  .append("   FIN_SCHEME FS")
					  .append(" WHERE FS.FIN_SCHEME_ID = FCTM.FIN_SCHEME_ID")
					  .append(" AND FCTM.SITE_ID = :SITE_ID")
					  .append(" AND UPPER(FS.NAME) = UPPER(:SCHEME_NAME) AND FS.STATUS_ID = :STATUS_ID AND FCTM.STATUS_ID = :STATUS_ID ")
					  .append(" ORDER BY FCTM.FIN_SCHE_TAX_MAP_ID")
					  .toString();
			  
			  public static final String QRY_TO_GET_FLAT_BOK_SCHM_MAPPING_DETAILS=new StringBuilder("SELECT  ")
					  .append(" FBCM.FLT_BOK_SCHM_MAP_ID,FBCM.FLAT_BOOK_ID ")
					  .append(" FROM FLAT_BOK_SCHM_MAPPING FBCM ")
					  .append(" WHERE FBCM.FLAT_BOOK_ID = :BOOKING_FORM_ID ")
					  .append(" AND FBCM.STATUS_ID = :STATUS_ID ")
					  .append(" AND FBCM.FIN_SCHE_TAX_MAP_ID = :FIN_SCHE_TAX_MAP_ID")
					  .append(" ORDER BY FBCM.FIN_SCHE_TAX_MAP_ID")
					  .toString();
			  
			  public static final String QRY_TO_GET_FLAT_BOK_SCHM_MAPPING_DETAILS1=new StringBuilder("")
					  .append("SELECT FS.FIN_SCHEME_ID,")
					  .append("  FS.NAME AS FIN_SCHEME_NAME,FBCM.FIN_SCHE_TAX_MAP_ID,FSTM.SITE_ID, P.PERCENTAGE AS PERCENTAGE_VALUE ")
					  .append("FROM FIN_SCHEME_TAX_MAPPING FSTM,")
					  .append("  FIN_SCHEME FS,")
					  .append("  FLAT_BOK_SCHM_MAPPING FBCM   , PERCENTAGES P ")
					  .append("WHERE FS.FIN_SCHEME_ID  = FSTM.FIN_SCHEME_ID ")
					  .append("AND FSTM.FIN_SCHE_TAX_MAP_ID = FBCM.FIN_SCHE_TAX_MAP_ID     AND P.PERCENTAGE_ID=FSTM.PERCENTAGE_ID ")
					  .append("AND  FBCM.FLAT_BOOK_ID = :BOOKING_FORM_ID ")
					  .append("AND FBCM.STATUS_ID = :STATUS_ID ")
					  //.append("AND UPPER(FS.NAME) = UPPER(:SCHEME_NAME) ")
					  .append("ORDER BY FBCM.FIN_SCHE_TAX_MAP_ID ")
					  .toString();
			  
	 		  public static final String QRY_TO_INSERT_FIN_PENALTY_DATA=new StringBuilder("")
					  .append("INSERT INTO FIN_PENALTY (")
					      .append("FIN_PENALTY_ID,")
					      .append("FIN_BOOKING_FORM_ACCOUNTS_ID,")
					      .append("FIN_INTEREST_RATES_ID,")
					      .append("AMOUNT,")
					      .append("TAX_AMOUNT,")
					      .append("TOTAL_AMOUNT,")
					      .append("START_DATE,")
					      .append("END_DATE,")
					      ///.append("INTEREST_FROM,")
					      .append("CREATED_DATE,")
					      .append("CREATED_BY,")
					      .append("STATUS_ID")
					    .append(") VALUES (")
					      .append("FIN_PENALTY_SEQ.NEXTVAL,")
					      .append(":finBookingFormAccountsId,")
					      .append(":finInterestRatesId,")
					      .append(":penaltyAmount,")
					      .append(":penaltyTaxAmount,")
					      .append(":penaltyTotalAmount,")
					      //.append(":interestFrom,")
					      .append(":startDate,")
					     .append(":endDate,")
					      .append("SYSDATE,")
					      .append(":createdBy,")
					      .append(":statusId")
					    .append(")")
					  .toString();
			  
		
		public static final String QRY_TO_INSERT_FIN_PENALTY_STATISTICS_DATA=new StringBuilder("")
					  .append("INSERT INTO FIN_PENALTY_STATISTICS (")
					  .append("FIN_PNT_STAT_ID,")
					  .append("FIN_PENALTY_ID,")
					  .append("FIN_INTEREST_RATES_ID,")
					  .append("AMOUNT,")
					  .append("TAX_AMOUNT,")
					  .append("STAT_TOTAL_AMOUNT,")
					  .append("START_DATE,")
					  .append("END_DATE,")
					  .append("DAYS_DIFF,")
					  .append("INTEREST_CAL_ON_AMOUNT,")
					  .append("CREATED_BY,")
					  .append("CREATED_DATE")
					  .append(") VALUES (")
					  .append("FIN_PENALTY_STATISTICS_SEQ.NEXTVAL,")
					  .append(":finPenaltyId,")
					  .append(":finInterestRatesId,")
					  .append(":penaltyAmount,")
					  .append(":penaltyTaxAmount,")
					  .append(":statTotalAmount,")
					  .append(":startDate,")
					  .append(":endDate,")
					  .append(":daysDifference,")
					  .append(":interestCalculationOnAmount,")
					  .append(":createdBy,")
					  .append("SYSDATE") 
					  .append(")")
					  .toString();
			  
		
		public static final String QRY_TO_GET_COUNT_FIN_BOOKING_FORM_ACCOUNTS_RECORD=new StringBuffer("SELECT FIN_BOOKING_FORM_ACCOUNTS_ID ")
				.append(" FROM  FIN_BOOKING_FORM_ACCOUNTS ")
				.append(" WHERE TYPE=:TYPE AND BOOKING_FORM_ID = :BOOKING_FORM_ID  AND STATUS_ID = :STATUS_ID").toString();
		
		public static final String QRY_TO_DELETE_FIN_PENALTY_RECORD=new StringBuffer("DELETE ")
				.append(" FROM FIN_PENALTY ")
				.append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :finBookingFormAccountsId").toString();
		
		public static final String QRY_TO_UPDATE_FIN_PENALTY_RECORD = new StringBuilder()
				.append(" UPDATE FIN_PENALTY ")
				.append(" SET AMOUNT = NVL(AMOUNT,0)+ :penaltyAmount")
				.append(",TAX_AMOUNT = NVL(TAX_AMOUNT,0) + :penaltyTaxAmount")
				.append(",TOTAL_AMOUNT = NVL(TOTAL_AMOUNT,0) + :penaltyTotalAmount")
				.append(",END_DATE = :endDate ")
				.append(" WHERE FIN_BOOKING_FORM_ACCOUNTS_ID = :finBookingFormAccountsId AND STATUS_ID = :statusId")
				.toString();
		
		public static final String QRY_TO_GET_FIN_PENALTY_TAX_PERCENTAGE=new StringBuffer(" ")
			.append("SELECT FTM.FIN_TAX_MAPING_ID,")
			.append(" FTM.START_DATE,")
			.append(" FTM.END_DATE,")
			.append(" FTM.PERCENTAGE_ID,")
			.append(" FTM.FIN_TAX_ID, FTM.TAX_TYPE, ")
			.append(" PERCENTAGE.PERCENTAGE AS PERCENTAGE_VALUE")
			.append(" FROM FIN_TAX_MAPPING FTM,")
			.append(" PERCENTAGES PERCENTAGE ")
			.toString();
		
		public static final String QRY_TO_GET_FIN_MODIFICATION_TAX_PERCENTAGE=new StringBuffer(" ")
				.append("SELECT FMT.FIN_MODI_TAX_ID,")
				.append(" FMT.START_DATE,")
				.append(" FMT.END_DATE,")
				.append(" FMT.PERCENTAGE_ID,")
				.append(" FMT.FIN_TAX_ID,")
				.append(" PERCENTAGE.PERCENTAGE AS PERCENTAGE_VALUE")
				.append(" FROM FIN_MODIFICATION_TAX FMT,")
				.append(" PERCENTAGES PERCENTAGE ")
				.toString();

		public static final String QRY_TO_GET_FIN_MODIFICATION_APPR_DETAILS=new StringBuffer(" ")
				.append(" SELECT FDIPJ.MODI_INVOICE_APPR_REJ_ID,  FDIPJ.FIN_BOK_FRM_MODI_COST_ID,")
				.append(" FDIPJ.ACTION_TYPE,  FDIPJ.EMP_ID ,NVL((EMP.FIRST_NAME || ' ' || EMP.LAST_NAME),'N/A') AS EMP_NAME,EMP.EMAIL AS EMP_EMAIL ")
				.append(" ,FDIPJ.COMMENTS,  FDIPJ.CREATED_DATE")
				.append(" FROM FIN_MODI_INVOICE_APPR_REJ FDIPJ INNER JOIN EMPLOYEE EMP  ON FDIPJ.EMP_ID = EMP.EMP_ID")
				.append(" WHERE FDIPJ.FIN_BOK_FRM_MODI_COST_ID = :FIN_BOK_FRM_MODI_COST_ID ORDER BY FDIPJ.MODI_INVOICE_APPR_REJ_ID ")
				.toString();
		
		public static final String QRY_TO_GET_NEXT_FIN_MODIFICATION_APPROVAL_DETAILS=new StringBuffer(" ")
				 .append("SELECT FIN_SET_OFF_APPR_LVL_ID  , (EMP.FIRST_NAME || ' ' || EMP.LAST_NAME) AS EMP_NAME ,EMP.EMAIL AS EMP_EMAIL,FSOL.FIN_LEVEL_ID ")
				 .append(",EMP.EMP_ID ")
				 .append(" FROM FIN_SET_OFF_APPROVAL_LEVEL FSOAL ")
				  .append(" INNER JOIN FIN_EMP_SET_OFF_LEVEL_MAPPING FESOLM ON (FESOLM.FIN_SET_OFF_LEVEL_ID=FSOAL.FIN_SET_OFF_LEVEL_ID) ")
				  .append(" INNER JOIN EMPLOYEE EMP ON FESOLM.EMP_ID = EMP.EMP_ID")
				  .append(" INNER JOIN FIN_SET_OFF_LEVEL FSOL ON (FESOLM.FIN_SET_OFF_LEVEL_ID=FSOL.FIN_SET_OFF_LEVEL_ID) ")
				  .append(" WHERE FESOLM.STATUS_ID = :STATUS_ID AND FSOL.STATUS_ID = :STATUS_ID")
				  .append(" AND FESOLM.FIN_SET_OFF_LEVEL_ID = :FIN_SET_OFF_LEVEL_ID AND  FSOL.TYPE = :TYPE")
				.toString();
		
		public static final String QRY_TO_GET_PENALTY_DETAILS = new StringBuilder()
				 .append("SELECT FBFA.FIN_BOOKING_FORM_ACCOUNTS_ID,FP.END_DATE")
				 .append(" FROM FIN_PENALTY FP, FIN_BOOKING_FORM_ACCOUNTS FBFA")
				 .append(" WHERE FBFA.FIN_BOOKING_FORM_ACCOUNTS_ID = FP.FIN_BOOKING_FORM_ACCOUNTS_ID")
				 .append(" AND FBFA.FIN_BOOKING_FORM_ACCOUNTS_ID = :FIN_BOOKING_FORM_ACCOUNTS_ID AND FP.STATUS_ID = :STATUS_ID ")
				.toString();
		
		public static final String QRY_TO_GET_MAX_FIN_INTEREST_RATES=new StringBuilder()
				.append(" SELECT FIR.FIN_INTEREST_RATES_ID,")
				.append(" FIR.START_DATE,")
				.append(" FIR.END_DATE,")
				.append(" FIR.PERCENTAGE_ID,")
				.append(" FIR.SITE_ID,")
				.append(" PERCENTAGE.PERCENTAGE as PERCENTAGE_VALUE,")
				.append(" FIR.STATUS_ID")
				.append(" FROM FIN_INTEREST_RATES FIR,PERCENTAGES PERCENTAGE ")
				.append(" WHERE FIR.PERCENTAGE_ID = PERCENTAGE.PERCENTAGE_ID ")
				.append(" AND FIR.SITE_ID = :SITE_ID")
				.append(" AND FIR.STATUS_ID = :STATUS_ID ")
				.append(" AND FIR.END_DATE = (SELECT MAX(END_DATE) FROM FIN_INTEREST_RATES WHERE STATUS_ID = :STATUS_ID AND  FIR.SITE_ID = SITE_ID)")
				.toString();
		
		public static final String QRY_TO_GET_FIN_INTEREST_RATES=new StringBuilder()
				.append(" SELECT FIR.FIN_INTEREST_RATES_ID,")
				.append(" FIR.START_DATE,")
				.append(" FIR.END_DATE,")
				.append(" FIR.PERCENTAGE_ID,")
				.append(" FIR.SITE_ID,")
				.append(" PERCENTAGE.PERCENTAGE as PERCENTAGE_VALUE,")
				.append(" FIR.STATUS_ID")
				.append(" FROM FIN_INTEREST_RATES FIR,PERCENTAGES PERCENTAGE ")
				.append(" WHERE FIR.PERCENTAGE_ID = PERCENTAGE.PERCENTAGE_ID ")
				.toString();
		
		public static final String QRY_TO_GET_GROUP_FIN_INTEREST_RATES=new StringBuilder()
				.append("SELECT * FROM (SELECT MAX(FIR.START_DATE) AS START_DATE,MAX(FIR.END_DATE) AS END_DATE,FIR.PERCENTAGE_ID,PER.PERCENTAGE AS PERCENTAGE_VALUE, ")
				.append("FIR.CREATED_BY ,(SELECT first_name||' '||last_name FROM EMPLOYEE E WHERE E.EMP_ID=FIR.CREATED_BY AND E.STATUS_ID=:STATUS_ID) AS EMP_NAME, ")
				.append(" FIR.MODIFIED_BY,(SELECT first_name||' '||last_name FROM EMPLOYEE E WHERE E.EMP_ID=FIR.MODIFIED_BY AND E.STATUS_ID=:STATUS_ID) AS MODIFIED_EMP_NAME ")
				.append("FROM FIN_INTEREST_RATES FIR,PERCENTAGES PER WHERE FIR.SITE_ID IN (:SITE_IDs) AND PER.PERCENTAGE_ID= FIR.PERCENTAGE_ID AND FIR.STATUS_ID=:STATUS_ID ")
				.append("GROUP BY FIR.START_DATE,FIR.END_DATE,FIR.PERCENTAGE_ID,PER.PERCENTAGE,FIR.CREATED_BY,FIR.MODIFIED_BY  ORDER BY FIR.START_DATE,FIR.END_DATE)")
				.toString();
		
		public static final String QRY_TO_GET_UPDATE_FIN_INTEREST_RATES=new StringBuilder()
				.append("UPDATE FIN_INTEREST_RATES SET ")
				//.append(" START_DATE = :START_DATE, END_DATE = :END_DATE, PERCENTAGE_ID = :PERCENTAGE_ID ")
				.append("STATUS_ID = :STATUS_ID,MODIFIED_BY = :MODIFIED_BY, MODIFIED_DATE = SYSDATE ")
				.append("WHERE TRUNC(START_DATE) = TRUNC(:ACTUAL_START_DATE) AND TRUNC(END_DATE) = TRUNC(:ACTUAL_END_DATE) ")
				.append("AND SITE_ID = :SITE_ID AND STATUS_ID = :ACTIVE_STATUS_ID ")
				.toString();
		
		public static final String QRY_TO_INTEREST_FIN_INTEREST_RATES = new StringBuffer("")
				 .append("INSERT INTO FIN_INTEREST_RATES  (")
				 .append("FIN_INTEREST_RATES_ID,")
				 .append("START_DATE, END_DATE,")
				 .append("PERCENTAGE_ID, SITE_ID,")
				 .append("STATUS_ID,")
				 .append("CREATED_BY, CREATED_DATE ")
				  .append(")VALUES(")
				 .append("FIN_INTEREST_RATES_SEQ.NEXTVAL,")
				 .append(":startDate,  :endDate,")
				 .append(":percentageId,  :siteId,")
				 .append(":statusId,")
				 .append(":createdBy,SYSDATE)").toString();
		
		public static final String QRY_TO_CHECK_PERCENTAGE_EXISTS_OR_NOT = new StringBuffer("")
				.append("SELECT PERCENTAGE_ID FROM PERCENTAGES WHERE PERCENTAGE = :PERCENTAGE AND ROWNUM = 1")
				.toString();
		
		public static final String QRY_TO_INSERT_PERCENTAGE = new StringBuffer("")
				.append("INSERT INTO PERCENTAGES (PERCENTAGE_ID,PERCENTAGE,DESCRIPTION,CREATED_DATE) VALUES(PERCENTAGES_SEQ.NEXTVAL,:PERCENTAGE,:DESCRIPTION,SYSDATE)")
				.toString();
				
		public static final String QRY_TO_GET_CHECK_MILESTONE_EXISTS_FOR_BOOKING_FORM_ID=new StringBuilder()
				.append("SELECT COUNT(*) FROM FIN_BOOKING_FORM_MILESTONES FBFM ")
				.append(" LEFT OUTER JOIN FIN_BOOKING_FORM_DEMAND_NOTE FBFDN ON FBFDN.FIN_BOK_FOM_DMD_NOTE_ID = FBFM.FIN_BOK_FOM_DMD_NOTE_ID ")
				.append(" WHERE FBFM.BOOKING_FORM_ID = :BOOKING_FORM_ID")
				.append(" AND FBFM.PROJECT_MILESTONE_ID = :PROJECT_MILESTONE_ID")
				.append(" AND FBFM.STATUS_ID = :STATUS_ID ")
				//.append(" AND FBFM.MS_STATUS_ID = :STATUS_ID ")
				.toString();
		
		public static final String QRY_TO_CHECK_FLAT_BOOKING_COMPLETED_OR_NOT = new StringBuilder("")
				.append("SELECT FB.BOOKING_DATE FROM FLAT_BOOKING FB WHERE FB.FLAT_BOOK_ID = :FLAT_BOOK_ID AND FB.STATUS_ID IN  (:STATUS_ID) ")
				//FB.BOOKING_DATE,FB.AGREEMENT_DATE
				.toString();
		
		public static final String QRY_TO_CHECK_FLAT_AGREEMENT_COMPLETED_OR_NOT = new StringBuilder("")
				.append("SELECT FB.BOOKING_DATE FROM FLAT_BOOKING FB WHERE FB.FLAT_BOOK_ID = :FLAT_BOOK_ID AND FB.STATUS_ID IN  (:STATUS_ID) ")
				//FB.BOOKING_DATE,FB.AGREEMENT_DATE
				.toString();
		
		public static final String LOAD_CUSTOMER_INVOLVED_ALIAN_NAME_DETAILS = new StringBuilder("")
				.append("SELECT FRM.MILE_STONE_NO,")
				.append("FRM.MILESTONE_DATE,")
				.append("FRM.PROJECT_MILESTONE_ID,")
				.append("FRM.MILESTONE_NAME, ")
				.append("FMC.FIN_MILESTONE_CLASSIFIDES_ID, ")
				.append("FMC.SITE_ID, ")
				.append("FMC.MILESTONE_ALIAS_NAME, ")
				.append("FBFM.FIN_BOOKING_FORM_MILESTONES_ID ")
				.append("FROM FIN_PROJECT_MILESTONES FRM, ")
				.append("FIN_MILESTONE_CLASSIFIDES FMC, ")
				.append("FIN_BOOKING_FORM_MILESTONES FBFM ")
				.append("WHERE FMC.FIN_MILESTONE_CLASSIFIDES_ID = FRM.FIN_MILESTONE_CLASSIFIDES_ID ")
				.append("AND FRM.PROJECT_MILESTONE_ID= FBFM.PROJECT_MILESTONE_ID AND FBFM.BOOKING_FORM_ID = :BOOKING_FORM_ID ")
				.append("AND FBFM.STATUS_ID = :STATUS_ID ")
				.append("AND FMC.STATUS_ID = :STATUS_ID ")
				.toString();
		
		public static final String QRY_TO_GET_CHECK_DATE_BETWEEN_FIN_INTEREST_RATES=new StringBuilder()
				.append(" SELECT 1 FROM DUAL WHERE :DATE_TO_CHECK BETWEEN :START_DATE AND :END_DATE")
				.toString();
		
		public static final String QRY_TO_INSERT_FIN_PENALTY_TAX_MAPPING = new StringBuilder()
				.append("INSERT INTO FIN_PENALTY_TAX_MAPPING (")
			    .append("FIN_PEN_TAX_MAP_ID,")
			    .append("AMOUNT,")
			    .append("TOTAL_INTEREST_AMOUNT,")
			    .append("FIN_PENALTY_ID,")
			    .append("FIN_TAX_MAPING_ID,")
			    .append("FIN_PNT_STAT_ID,")
			    
			    .append("START_DATE,")
			    .append("END_DATE,")
			    .append("GST_CALC_ON_AMT,")
			    .append("DAYS_DIFF,")
			    
			    .append("CREATED_BY,")
			    .append("CREATED_DATE") 
			  .append(") VALUES (")
			    .append("FIN_PENALTY_TAX_MAPPING_SEQ.NEXTVAL,")
			    .append(":amount,")
			    .append(":totalInterestAmount,")
			    .append(":finPenaltyId,")
			    .append(":finTaxMapingId,")
			    .append(":finPenaltyStatisticsId,")
			    
			    .append(":gstStartDate,")
			    .append(":gstEndDate,")
			    .append(":gstCalculationOnAmount,")
			    .append(":daysDifference,")
			    
			    .append(":createdBy,")
			    .append("SYSDATE ")
			  .append(")").toString();
		
		 public static final String QRY_TO_GET_ALL_EMP_ACCESSED_SITES_LIST = new StringBuilder(" SELECT SITE.NAME, " ) 
		  			.append(" SITE.SITE_ID FROM SITE SITE ")
		  			.append(" WHERE SITE.STATUS_ID=:STATUS_ID AND ")
		  			.append(" SITE.SITE_ID IN(:SITE_IDS) ")
		  			.append(" ORDER BY SITE.NAME " )
		  			.toString();
	  
	  public static final String QRY_TO_GET_ALL_INCOMPLETED_BLOCKS_TO_FILL_MILESTONES = new StringBuilder(" SELECT DISTINCT ") 
			  		.append(" BLOCK.NAME, BLOCK.BLOCK_ID AS SITE_ID ")
			  		.append(" FROM BLOCK BLOCK ")
			  		.append(" JOIN BLOCK_DETAILS BLOCKDET ")
			  		.append(" ON(BLOCKDET.BLOCK_ID=BLOCK.BLOCK_ID) ")
			  		.append(" WHERE BLOCKDET.SITE_ID IN(:SITE_ID) AND ")
			  		.append(" BLOCK.BLOCK_ID NOT IN(SELECT ")
			  		.append(" FMB.BLOCK_ID FROM FIN_MIL_CLS_MAPPING_BLOCKS FMB ")
			  		.append(" JOIN FIN_MILESTONE_CLASSIFIDES FMC ")
			  		.append(" ON(FMC.FIN_MILESTONE_CLASSIFIDES_ID=FMB.FIN_MILESTONE_CLASSIFIDES_ID) ")
			  		.append(" WHERE FMC.STATUS_ID=:STATUS_ID AND FMC.SITE_ID=:SITE_ID) AND ")
			  		.append(" BLOCK.STATUS_ID=:STATUS_ID ")
			  		.append(" ORDER BY BLOCK.NAME ")
		  			.toString();
	  
	  public static final String QRY_TO_GET_ALL_ALIAS_NAMES_OF_SITES_FOR_MILESTONES = new StringBuilder(" SELECT DISTINCT ")
	  				.append(" FIN_MILESTONE_CLASSIFIDES_ID, ")
			  		.append(" MILESTONE_ALIAS_NAME ") 
		  			.append(" FROM FIN_MILESTONE_CLASSIFIDES ")
		  			.append(" WHERE SITE_ID=:SITE_ID AND ")
		  			.append(" STATUS_ID=:STATUS_ID ")
		  			.append(" ORDER BY MILESTONE_ALIAS_NAME" )
		  			.toString();
	  
	  public static final String QRY_TO_GET_ALL_PERCENTAGES_FOR_MILESTONES = new StringBuilder("") 
		  			.append(" SELECT DISTINCT PERCENTAGE,PERCENTAGE_ID ")
		  			.append(" FROM PERCENTAGES ")
		  			.append(" WHERE PERCENTAGE > 0")
		  			.append(" ORDER BY PERCENTAGE ")
		  			.toString();
	  
	  public static final String QRY_TO_INSERT_FIN_MILESTONE_CLASSIFIEDES = new StringBuilder(" INSERT INTO ")
			   		.append(" FIN_MILESTONE_CLASSIFIDES ")
			   		.append(" (FIN_MILESTONE_CLASSIFIDES_ID,")
			   		.append(" SITE_ID, MILESTONE_ALIAS_NAME,")
			   		.append(" STATUS_ID,CREATED_BY, CREATED_DATE) VALUES ")
			   		.append(" (FIN_MILESTONE_CLASSIFIDES_SEQ.NEXTVAL,")
			   		.append(" :siteId, :mileStoneAliasName, 6, ")
			   		.append(" :createdBy, SYSTIMESTAMP) ")
			   		.toString();
	  
	  public static final String QRY_TO_INSERT_FIN_MILESTONE_CLASSIFIEDES_MAPPING_BLOCKS = new StringBuilder(" INSERT INTO")
			  		.append(" FIN_MIL_CLS_MAPPING_BLOCKS ")
			  		.append(" (PRO_MIL_CLS_MAPPING_BLOCKS_ID, ")
			  		.append(" BLOCK_ID, FIN_MILESTONE_CLASSIFIDES_ID, ")
			  		.append(" CREATED_BY, CREATED_DATE) VALUES ")
			  		.append(" (FIN_MIL_CLS_MAPPING_BLOCKS_SEQ.NEXTVAL,")
			  		.append(" :BLOCK_ID, :FIN_MILESTON_CLASSIFIDES_ID,")
			  		.append(" :CREATED_BY, SYSTIMESTAMP) ")
			  		.toString();
	  
	  public static final String QRY_TO_INSERT_FIN_PROJECT_MILESTONE_CLASSIFIEDES = new StringBuilder(" INSERT INTO ")
			  		.append(" FIN_PROJECT_MILESTONES ")
			  		.append(" (PROJECT_MILESTONE_ID,MILESTONE_NAME,")
			  		.append(" FIN_MILESTONE_CLASSIFIDES_ID,PERCENTAGE_ID,")
			  		.append(" CREATED_BY,CREATED_DATE,MILE_STONE_NO, ")
			  		.append(" PROJECT_MS_STATUS_ID,")
			  		.append(" STATUS_ID, MILESTONE_DATE) VALUES ")
			  		.append(" (FIN_PROJECT_MILESTONES_SEQ.NEXTVAL, ")
			  		.append(" :MILESTONE_NAME,")
			  		.append(" :FIN_MILESTONE_CLASSIFIDES_ID,")
			  		.append(" :PERCENTAGE_ID,:CREATED_BY, ")
			  		.append(" SYSTIMESTAMP,:MILE_STONE_NO, ")
			  		.append(" :PROJECT_MS_STATUS_ID,")
			  		.append(" :STATUS_ID, :MILESTONE_DATE) ")
			  		.toString();

	  public static final String QRY_TO_INSERT_FIN_MILESTONE_CHANGED_DETAILS = new StringBuilder("")
				  .append("INSERT INTO FIN_MILESTONES_CHANGED_DTLS ")
				  .append(" (FIN_MS_CHANGED_DTLS_ID,TYPE,TYPE_ID, ACTUAL_VALUE, CHANGED_VALUE, EMP_ID,")
				  .append("REMARKS, CREATED_DATE, COLUMN_ID,")
				  .append("ACTION_TYPE")
				  .append(")  VALUES ( ")
				   .append(" FIN_MS_CHANGED_DTLS_ID_SEQ.NEXTVAL,:TYPE,:TYPE_ID, :ACTUAL_VALUE, :CHANGED_VALUE, :EMP_ID,")
				   .append(":REMARKS, SYSDATE, :COLUMN_ID,")
				   .append(":ACTION_TYPE")
				  .append(" )").toString();
	  
	  public static final String QRY_TO_GET_RAISED_MILESTONE_SITES = new StringBuilder(" SELECT DISTINCT ")
		  		.append(" S.SITE_ID, S.NAME AS SITE_NAME FROM SITE S ")
		  		.append(" JOIN FIN_MILESTONE_CLASSIFIDES FMC ")
		  		.append(" ON(FMC.SITE_ID=S.SITE_ID) ")
		  		.append(" WHERE FMC.STATUS_ID=:STATUS_ID ")
		  		.append(" AND FMC.SITE_ID IN (:SITE_IDS) ")
		  		.append(" ORDER BY S.NAME ")
		  		.toString();
	  
	  public static final String QRY_TO_GET_RAISED_MILESTONE_BLOCKS = new StringBuilder(" SELECT DISTINCT ")
		  		.append(" B.BLOCK_ID, ")
		  		.append(" B.NAME AS BLOCK_NAME ")
		  		.append(" FROM BLOCK B ")
		  		.append(" JOIN BLOCK_DETAILS BD ")
		  		.append(" ON(BD.BLOCK_ID=B.BLOCK_ID) ")
		  		.append(" JOIN FIN_MIL_CLS_MAPPING_BLOCKS FMCMB ")
		  		.append(" ON (FMCMB.BLOCK_ID=B.BLOCK_ID) ")
		  		.toString();
	  
	  public static final String QRY_TO_GET_MILESTONE_NAMES_BY_SITE = new StringBuilder(" SELECT DISTINCT ")
		  		.append(" FPM.PROJECT_MILESTONE_ID, ")
		  		.append(" FPM.MILESTONE_NAME,FPM.MILE_STONE_NO,FPM.PROJECT_MS_STATUS_ID AS MS_STATUS_ID,FPM.PROJECT_MS_STATUS_ID,")
		  		.append(" B.NAME AS BLOCK_NAME,FPM.FIN_MILESTONE_CLASSIFIDES_ID,FPM.PERCENTAGE_ID,PERCENT.PERCENTAGE as MILE_STONE_PERCENTAGE ")
		  		.append(",FPM.MASTER_DMD_DUE_DATE,FPM.MASTER_DMD_NOTE_DATE ")
		  		.append(" FROM FIN_PROJECT_MILESTONES FPM INNER JOIN PERCENTAGES PERCENT ON PERCENT.PERCENTAGE_ID=FPM.PERCENTAGE_ID")
		  		.append(" JOIN FIN_MILESTONE_CLASSIFIDES FMC ")
		  		.append(" ON(FMC.FIN_MILESTONE_CLASSIFIDES_ID=FPM.FIN_MILESTONE_CLASSIFIDES_ID) ")
		  		//acp added
		  		.append(" JOIN FIN_MIL_CLS_MAPPING_BLOCKS FMCMB ")
		  		.append(" ON(FMC.FIN_MILESTONE_CLASSIFIDES_ID=FMCMB.FIN_MILESTONE_CLASSIFIDES_ID) ")
		  		.append(" JOIN BLOCK B ON (FMCMB.BLOCK_ID=B.BLOCK_ID) ")
		  		.toString();
	  
	  public static final String QRY_TO_GET_DEMAND_NOTES = new StringBuilder(" SELECT ")
		  		.append(" DISTINCT(FBFD.DEMAND_NOTE_NO), ")
		  		.append(" FBFD.FIN_BOK_FOM_DMD_NOTE_ID,")
		  		.append(" FBFD.BOOKING_FORM_ID,")
		  		.append(" (CUST.FIRST_NAME || ' ' || CUST.LAST_NAME) AS CUST_NAME, ")
		  		.append(" FBFD.TOTAL_AMOUNT, ")
		  		.append(" FBFD.DEMAND_NOTE_DATE,")
		  		//.append(" FBFA.DUE_DATE,  ")
		  		.append(" (SELECT INITCAP(S.STATUS) FROM STATUS S WHERE S.STATUS_ID=FBFD.STATUS_ID) AS DEMAND_NOTE_STATUS, ")
		  		//.append(" (SELECT INITCAP(S.STATUS) FROM STATUS S WHERE S.STATUS_ID=FBFA.PAYMENT_STATUS) AS STATUS, ")
		  		.append(" FBFDND.LOCATION, ")
		  		.append(" FBFD.DEMAND_NOTE_TYPE, ")
		  		.append(" FBFD.INTEREST_AMOUNT, ")
		  		.append(" FBFD.CREATED_DATE, ")
		  		.append(" EMP.FIRST_NAME AS EMP_NAME, ")
		  		
		  		.append(" F.FLAT_NO,FPM.MILESTONE_NAME,FBFM.STATUS_ID ")
		  		.append(",FBFA.DUE_DATE AS DUE_DATE,FB.AGREEMENT_DATE AS AGREEMENT_DATE,FB.BOOKING_DATE as BOOKING_DATE ")
		  		.append(",NVL(FBFA.BALANCE_AMOUNT,0) AS BALANCE_AMOUNT ")
		  		.append(" ,(SELECT FBFA1.BALANCE_AMOUNT FROM FIN_BOOKING_FORM_MILESTONES FBFM1 ")
		  		 .append(" INNER JOIN FIN_BOOKING_FORM_ACCOUNTS FBFA1 ON FBFA1.TYPE_ID=FBFM1.FIN_BOOKING_FORM_MILESTONES_ID AND FBFA1.TYPE=29 ")
		  		 .append(" WHERE FBFM1.STATUS_ID = 6 AND FBFM1.BOOKING_FORM_ID = FBFM.BOOKING_FORM_ID ")
		  		 .append(" AND FBFM1.PROJECT_MILESTONE_ID = FBFM.PROJECT_MILESTONE_ID ")
		  		 .append(" ) as REGULAR_BAL_MS_AMOUNT ")
		  		 
			  		.append(" ,(SELECT NVL(FBFA1.PAY_AMOUNT,0) FROM FIN_BOOKING_FORM_MILESTONES FBFM1 ")
			  		 .append(" INNER JOIN FIN_BOOKING_FORM_ACCOUNTS FBFA1 ON FBFA1.TYPE_ID=FBFM1.FIN_BOOKING_FORM_MILESTONES_ID AND FBFA1.TYPE=29 ")
			  		 .append(" WHERE FBFM1.STATUS_ID = 6 AND FBFM1.BOOKING_FORM_ID = FBFM.BOOKING_FORM_ID ")
			  		 .append(" AND FBFM1.PROJECT_MILESTONE_ID = FBFM.PROJECT_MILESTONE_ID ")
			  		 .append(" ) as PAY_AMOUNT ")
		  		 
		  		 .append(" ,(SELECT FBFA1.DUE_DATE FROM FIN_BOOKING_FORM_MILESTONES FBFM1  ")
		  		 .append(" INNER JOIN FIN_BOOKING_FORM_ACCOUNTS FBFA1 ON FBFA1.TYPE_ID=FBFM1.FIN_BOOKING_FORM_MILESTONES_ID AND FBFA1.TYPE=29 ")
		  		 .append(" WHERE FBFM1.STATUS_ID = 6 AND FBFM1.BOOKING_FORM_ID = FBFM.BOOKING_FORM_ID ")
		  		 .append(" AND FBFM1.PROJECT_MILESTONE_ID = FBFM.PROJECT_MILESTONE_ID ")
		  		 .append(" ) as REGULAR_MS_DUE_DATE ")
		  		 
		  		.append(" FROM  FIN_BOOKING_FORM_DEMAND_NOTE FBFD ")
		  		.append(" JOIN FIN_BOOKING_FORM_MILESTONES FBFM ")
		  		.append(" ON(FBFD.FIN_BOK_FOM_DMD_NOTE_ID=FBFM.FIN_BOK_FOM_DMD_NOTE_ID) ")
		  		.append(" JOIN FIN_BOOKING_FORM_DEMAND_NOTE_DOC FBFDND")
		  		.append(" ON (FBFD.FIN_BOK_FOM_DMD_NOTE_ID=FBFDND.FIN_BOK_FOM_DMD_NOTE_ID)")
		  		.append(" LEFT OUTER JOIN FIN_BOOKING_FORM_ACCOUNTS FBFA ")
		  		.append(" ON(FBFA.TYPE_ID=FBFM.FIN_BOOKING_FORM_MILESTONES_ID AND TYPE=29) ")
		  		.append(" JOIN FLAT_BOOKING FB ")
		  		.append(" ON(FB.FLAT_BOOK_ID=FBFD.BOOKING_FORM_ID) ")
		  		.append(" INNER JOIN FLAT F ")
		  		.append(" ON FB.FLAT_ID = F.FLAT_ID") 
		  		.append(" INNER JOIN FLOOR_DETAILS FD ")
		  		.append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID") 
		  		.append(" INNER JOIN FLOOR FL ")
		  		.append(" ON FL.FLOOR_ID = FD.FLOOR_ID ") 
		  		.append(" INNER JOIN BLOCK_DETAILS BD ")
		  		.append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID ") 
		  		.append(" INNER JOIN BLOCK BL ")
		  		.append(" ON BL.BLOCK_ID = BD.BLOCK_ID ") 
		  		.append(" INNER JOIN SITE S ")
		  		.append(" ON BD.SITE_ID = S.SITE_ID ")
		  		.append(" JOIN CUSTOMER CUST ")
		  		.append(" ON(CUST.CUST_ID=FB.CUST_ID) ")
		  		.append(" JOIN EMPLOYEE EMP ")
		  		.append(" ON(EMP.EMP_ID=FBFD.CREATED_BY) ")
		  		
                .append(" JOIN FIN_PROJECT_MILESTONES FPM ON (FBFM.PROJECT_MILESTONE_ID=FPM.PROJECT_MILESTONE_ID) ")
		  		//.append(" JOIN STATUS S ON(S.STATUS_ID=FBFA.PAYMENT_STATUS) ")
		  		.toString();
	  
	  
	  public static final String QRY_TO_GET_INTEREST_LETTER = new StringBuilder("")
			  .append(" SELECT	 DISTINCT(FBFD.DEMAND_NOTE_NO), FBFD.FIN_BOK_FOM_DMD_NOTE_ID,")
			  .append(" FBFD.BOOKING_FORM_ID,(CUST.FIRST_NAME || ' ' || CUST.LAST_NAME) AS CUST_NAME, ")
			  .append(" FBFD.TOTAL_AMOUNT, FBFD.DEMAND_NOTE_DATE,")
			  .append(" (SELECT INITCAP(S.STATUS) FROM STATUS S WHERE S.STATUS_ID=FBFD.STATUS_ID) AS DEMAND_NOTE_STATUS, ")
			  .append(" FBFDND.LOCATION, FBFD.DEMAND_NOTE_TYPE, ")
			  .append(" FBFD.INTEREST_AMOUNT, FBFD.CREATED_DATE, ")
			  .append(" EMP.FIRST_NAME AS EMP_NAME, F.FLAT_NO")
			  		  		
			  .append(" FROM  FIN_BOOKING_FORM_DEMAND_NOTE FBFD ")
			  .append(" JOIN FIN_BOOKING_FORM_DEMAND_NOTE_DOC FBFDND")
			  .append(" ON (FBFD.FIN_BOK_FOM_DMD_NOTE_ID=FBFDND.FIN_BOK_FOM_DMD_NOTE_ID)")
			  .append(" JOIN FLAT_BOOKING FB  	  		 ON(FB.FLAT_BOOK_ID=FBFD.BOOKING_FORM_ID) ")
			  .append(" INNER JOIN FLAT F 	  		 ON FB.FLAT_ID = F.FLAT_ID ")
			  .append(" INNER JOIN FLOOR_DETAILS FD 	  		 ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID ")
			  .append(" INNER JOIN FLOOR FL 	  		 ON FL.FLOOR_ID = FD.FLOOR_ID  ")
			  .append(" INNER JOIN BLOCK_DETAILS BD   		 ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID  ")
			  .append(" INNER JOIN BLOCK BL  	 ON BL.BLOCK_ID = BD.BLOCK_ID  ")
			  .append(" INNER JOIN SITE S         		 ON BD.SITE_ID = S.SITE_ID ")
			  .append(" JOIN CUSTOMER CUST  	 ON(CUST.CUST_ID=FB.CUST_ID) ")
			  .append(" JOIN EMPLOYEE EMP  		 ON(EMP.EMP_ID=FBFD.CREATED_BY) ")
			  .toString();

	  public static final String QRY_TO_INSERT_TRANSACTION_ENTRY_DETAILS = new StringBuilder("")
			    .append("INSERT INTO FIN_TRANSACTION_ENTRY   (")
			    .append("FIN_TRANSACTION_ENTRY_ID,FIN_TRANSACTION_NO,FIN_TRANSACTION_MODE_ID")
			    .append(",FIN_TRANSACTION_TYPE_ID ,FIN_SITE_PROJ_ACC_MAP_ID")
			    .append(",SITE_ID,BOOKING_FORM_ID")
			    .append(",AMOUNT")
			    //.append(",PAYABLE_AMOUNT")
			    .append(",FIN_BANK_ID,PAYMENT_DATE")
			    .append(",RECEIVED_DATE,TRANSACTION_FOR")
			    .append(",CREATED_BY,CREATED_DATE,STATUS_ID")
			    .append(",TRANSACTION_STATUS_ID")
			    .append(",PREV_FIN_TRANSACTION_ENTRY_ID")
			    .append(",EDIT_OR_SHIFT_USING_TRN_ENT_ID")
			    .append(",IS_RECORD_UPLOADED")
			    .append(",EXCEL_RECORD_NO")
			    .append(",SOURCE_OF_FUNDS")
			    //.append(",COMMENTS ") 
			    .append(") VALUES (")
			    .append(":transactionEntryId,:finTransactionNo,:transactionModeId")
			    .append(",:transactionTypeId ,:finSiteProjAccountMapId")
			    .append(",:siteId,:bookingFormId")
			    .append(",:transactionAmount")
			    //.append(",:payableAmount")
			    .append(",:bankId,:transactionDate")
			    .append(",:transactionReceiveDate,:transactionFor")
			    .append(",:createdBy,SYSDATE,:statusId")
			    .append(",:transactionStatusId")
			    .append(",:prevTransactionEntryId")
			    .append(",:editOrShiftUsingTrnEntId")
			    .append(",:isRecordUploaded")
			    .append(",:excelRecordNo")
			    .append(",:sourceOfFunds")
			    //.append(",:comments")
			    .append(")")
			  .toString();
	  

	  
	  public static final String QRY_TO_CHECK_DEMAND_NOTE_ENTRY_DETAILS = new StringBuilder("")
			  .append("SELECT COUNT(*) FROM FIN_BOOKING_FORM_MILESTONES FBFM ")
			  .append("WHERE FBFM.STATUS_ID = :STATUS_ID AND FBFM.BOOKING_FORM_ID = :BOOKING_FORM_ID")
			  .toString();
	  
	  public static final String QRY_TO_UPDATE_TRANSACTION_ENTRY_RECEIPT_NO = new StringBuilder("")
			  .append("UPDATE FIN_TRANSACTION_ENTRY SET TRANSACTION_RECEIPT_NO = :TRANSACTION_RECEIPT_NO,SOURCE_OF_FUNDS = :SOURCE_OF_FUNDS WHERE FIN_TRANSACTION_ENTRY_ID = :FIN_TRANSACTION_ENTRY_ID")
			  .toString();
	    
	  public static final String QRY_TO_UPDATE_TRANSACTION_ENTRY_STATUS = new StringBuilder("")
			  .append("UPDATE FIN_TRANSACTION_ENTRY SET TRANSACTION_STATUS_ID = :TRANSACTION_STATUS_ID,")
			  .append(" TRANSACTION_CLOSED_DATE = :TRANSACTION_CLOSED_DATE,MODIFIED_DATE = SYSDATE WHERE FIN_TRANSACTION_ENTRY_ID = :FIN_TRANSACTION_ENTRY_ID")
			  .toString();
	  
	  public static final String QRY_TO_UPDATE_TRANSACTION_ENTRY_DETAILS = new StringBuilder("")
			  .append("UPDATE FIN_TRANSACTION_ENTRY SET ")
			  .append(" FIN_BANK_ID = :bankId,		PAYMENT_DATE = :transactionDate")
			  .append(",RECEIVED_DATE = :transactionReceiveDate")
			  .append(",AMOUNT = :transactionAmount")
			  .append(",SOURCE_OF_FUNDS = :sourceOfFunds ")
			  .append(",FIN_SITE_PROJ_ACC_MAP_ID = :finSiteProjAccountMapId")
			  .append(" WHERE FIN_TRANSACTION_ENTRY_ID = :transactionEntryId")
			  .toString();

	  public static final String QRY_TO_UPDATE_MODIFICATION_ENTRY_STATUS = new StringBuilder("")
			  .append("UPDATE FIN_BOOKING_FORM_MODI_COST SET MODIFICATION_STATUS_ID = :MODIFICATION_STATUS_ID,FIN_SET_OFF_APPR_LVL_ID = :FIN_SET_OFF_APPR_LVL_ID,")
			  .append(" INVOICE_CLOSED_DATE = :INVOICE_CLOSED_DATE,MODIFIED_DATE = SYSDATE WHERE FIN_BOK_FRM_MODI_COST_ID = :FIN_BOK_FRM_MODI_COST_ID")
			  .toString();


	  public static final String QRY_TO_INSERT_TRANSACTION_CHANGED_DETAILS = new StringBuilder("")
			  .append("INSERT INTO FIN_TRANSACTION_CHANGED_DTLS  (")
			  .append("FIN_TRN_CHANGED_DTLS_ID")
			  .append(",FIN_TRN_APPR_STAT_ID")
			  .append(",FIN_ANMS_ENTRY_ID")
			  .append(",ACTUAL_VALUE ,CHANGED_VALUE")
			  .append(",EMP_ID ,REMARKS")
			  .append(",CREATED_DATE  ,COLUMN_ID")
			  .append(",ACTION_TYPE")
			  .append(") VALUES  (")
			  .append("FIN_TRANSACTION_CHANGED_DTLS_SEQ.NEXTVAL")
			  .append(",:transactionApproveStatId")
			  .append(",:anonymousEntryId")
			  .append(",:actualValue,:changedValue")
			  .append(",:empId,:remarks")
			  .append(",SYSDATE,:columnId")
			  .append(",:actionType")
			  .append(")").toString();
	  
	  public static final String QRY_TO_GET_TRANSACTION_CHANGED_DETAILS = new StringBuilder("")
			  .append("SELECT FTCD.FIN_TRN_CHANGED_DTLS_ID")
			  .append(",FTCD.ACTUAL_VALUE")
			  .append(",FTCD.CHANGED_VALUE")
			  .append(",FTCD.EMP_ID")
			  //.append(",FTCD.REMARKS")
			  .append(",CONCAT(NVL((EMP.FIRST_NAME || ' ' || EMP.LAST_NAME),'N/A'),' - '||FTCD.REMARKS) AS REMARKS")
			  .append(",FTCD.COLUMN_ID")
			  .append(",FTCD.CREATED_DATE")
			  .append(",MT.NAME AS METADATA_NAME")
			  .append(",FTSOE.FIN_TRN_SET_OFF_ENT_ID ")
			  .append(", NVL((EMP.FIRST_NAME || ' ' || EMP.LAST_NAME),'N/A') AS EMP_NAME ")
			  .append(" FROM FIN_TRANSACTION_CHANGED_DTLS FTCD")
			  .append(" JOIN METADATA_TYPES MT ON (MT.METADATA_TYPES_ID = FTCD. COLUMN_ID) ")
			  .append(" FULL JOIN EMPLOYEE EMP ")
			  .append(" ON(EMP.EMP_ID=FTCD.EMP_ID), ")
			  .append(" FIN_TRANSACTION_APPR_STAT FTAS,")
			  .append(" FIN_TRANSACTION_SET_OFF_ENTRY FTSOE")
			  .append(" WHERE FTAS.FIN_TRN_APPR_STAT_ID = FTCD.FIN_TRN_APPR_STAT_ID")
			  .append(" AND FTSOE.FIN_TRN_SET_OFF_ENT_ID = FTAS.FIN_TRN_SET_OFF_ENT_ID")
			  .append(" AND FTSOE.FIN_TRANSACTION_ENTRY_ID =  :FIN_TRANSACTION_ENTRY_ID")
			  .append(" ORDER BY FTCD.FIN_TRN_CHANGED_DTLS_ID")
			  .toString();
	  
	  public static final String QRY_TO_INSERT_TRANSACTION_APPROVAL_REJECT_DETAILS = new StringBuilder()
			    .append("INSERT INTO FIN_TRANSACTION_APPR_STAT (")
			    .append("FIN_TRN_APPR_STAT_ID")
			    .append(",FIN_TRN_SET_OFF_ENT_ID")
			    .append(",ACTION_TYPE")
			    .append(",EMP_ID")
			    .append(",COMMENTS")
			    .append(",CREATED_DATE")
			    .append(") VALUES (")
			    .append("FIN_TRANSACTION_APPR_REJECT_STAT_SEQ.NEXTVAL")
			    .append(",:transactionSetOffEntryId")
			    .append(",:actionType")
			    .append(",:empId")
			    .append(",:comment")
			    .append(",:createdDate")
			    .append(")")
			  .toString();
	  
	  public static final String QRY_TO_INSERT_TRANSACTION_APPROVAL_DETAILS = new StringBuilder()
				  .append("INSERT INTO FIN_TRANSACTION_SET_OFF_APPROVAL (")
				  .append("FIN_TRN_SET_OFF_APPR_ID")
				  .append(",FIN_TRN_SET_OFF_APPR_LVL_ID")
				  .append(",FIN_TRN_SET_OFF_ENT_ID")
				  .append(",CREATED_BY")
				  .append(",CREATED_DATE ")
				  .append(") VALUES (")
				  .append("FIN_TRANSACTION_SET_OFF_APPROVAL_SEQ.NEXTVAL")
				  .append(",:transactionSetOffApprovalLevelId")
				  .append(",:transactionSetOffEntryId")
				  .append(",:createdBy")
				  .append(",SYSDATE ")
				  .append(")").toString();
	  
	  public static final String QRY_TO_UPDATE_TRANSACTION_APPROVAL_DETAILS = new StringBuilder()
			  .append("UPDATE FIN_TRANSACTION_SET_OFF_APPROVAL")
			  .append(" SET FIN_TRN_SET_OFF_APPR_LVL_ID = :transactionSetOffApprovalLevelId, MODIFIED_BY = :modifiedBy , MODIFIED_DATE = SYSDATE")
			  .append(" WHERE FIN_TRN_SET_OFF_ENT_ID = :transactionSetOffEntryId ")
			  .toString();
	  
	  public static final String QRY_TO_GET_TRANSACTION_SET_OFF_APPROVAL= new StringBuilder()
			  .append("FTSOA.FIN_TRN_SET_OFF_APPR_ID,")
			  .append("FTSOA.FIN_TRN_SET_OFF_APPR_LVL_ID,")
			  .append("FTSOA.FIN_TRN_SET_OFF_ENT_ID ")
			  .toString();
	  
	  public static final String QRY_TO_GET_TRANSACTION_SET_OFF_APPROVAL_LEVEL = new StringBuilder()
			  .append("FTSOAL.FIN_TRN_SET_OFF_APPR_LVL_ID,")
			  .append("FTSOAL.FIN_TRAN_SET_OFF_LEVEL_ID,")
			  .append("FTSOAL.NEXT_TRN_SET_OFF_APPR_LVL_ID ")
			  .toString();
	  
	  public static final String QRY_TO_GET_TRANSACTION_APPROVAL_DETAILS = new StringBuilder()
			  .append(SELECT).append(QRY_TO_GET_TRANSACTION_SET_OFF_APPROVAL_LEVEL)
			  .append(" ,FTL.FIN_LEVEL_ID")
			  .append(" ,FTL.LEVEL_NAME")
			  .append(" ,FTSOL.SITE_ID")
			  //.append(" ,FTESOLM.EMP_ID")//if u want the approval should be employee level uncomment this line
			  .append(" ,FTSOL.FIN_TRANSACTION_TYPE_ID")
			  .append(" ,FTSOL.FIN_TRANSACTION_MODE_ID")
			  .append(" ,FTSOL.TRN_REQUEST_LEVEL ")
			  .append(" ,FTSOL.NEXT_APPROVAL_MODULE ")
			  .append(" ,FTSOL.MODIFY_TRAN_SET_OFF_LEVEL_ID ")
			  //.append(" ,FTESOLM.FIN_TRN_EMP_SET_OFF_LVL_MAP_ID")
			  .toString();

	  public static final String QRY_TO_GET_TRANSACTION_APPROVAL_EMP_EMAIL_DETAILS = new StringBuilder()
			  .append(SELECT).append(QRY_TO_GET_TRANSACTION_SET_OFF_APPROVAL_LEVEL)
			  .append(" ,FTL.FIN_LEVEL_ID")
			  .append(" ,FTL.LEVEL_NAME")
			  .append(" ,FTSOL.SITE_ID")
			  .append(" ,FTESOLM.EMP_ID,NVL((EMP.FIRST_NAME || ' ' || EMP.LAST_NAME),'N/A') AS EMP_NAME,EMP.EMAIL AS EMP_EMAIL")
			  .append(" ,FTSOL.FIN_TRANSACTION_TYPE_ID")
			  .append(" ,FTSOL.FIN_TRANSACTION_MODE_ID")
			  .append(" ,FTESOLM.FIN_TRN_EMP_SET_OFF_LVL_MAP_ID")
			  .append(" FROM FIN_TRANSACTION_SET_OFF_APPROVAL_LEVEL FTSOAL")
			  .append(" ,FIN_TRANSACTION_SET_OFF_LEVEL FTSOL")
			  .append(" ,FIN_TRANSACTION_LEVEL FTL")
			  .append(" ,FIN_TRN_EMP_SET_OFF_LEVEL_MAPPING FTESOLM")
			  .append(" JOIN EMPLOYEE EMP ")
			  .append("	ON(EMP.EMP_ID=FTESOLM.EMP_ID) ")
			  .append(" WHERE FTSOL.FIN_TRAN_SET_OFF_LEVEL_ID = FTSOAL.FIN_TRAN_SET_OFF_LEVEL_ID")
			  .append(" AND FTL.FIN_LEVEL_ID   = FTSOL.FIN_LEVEL_ID")
			  .append(" AND FTSOL.FIN_TRAN_SET_OFF_LEVEL_ID   = FTESOLM.FIN_TRAN_SET_OFF_LEVEL_ID")
			  .append(" AND FTSOL.FIN_TRANSACTION_TYPE_ID = :FIN_TRANSACTION_TYPE_ID")
			  .append(" AND FTSOL.FIN_TRANSACTION_MODE_ID = :FIN_TRANSACTION_MODE_ID")
			  .toString();
	  
	  /*public static final String QRY_TO_GET_TRANSACTION_SET_OFF_APPROVAL_DETAILS = new StringBuilder(SELECT)
			  .append(QRY_TO_GET_TRANSACTION_SET_OFF_APPROVAL).append(",")
			  .append(QRY_TO_GET_TRANSACTION_SET_OFF_APPROVAL_LEVEL)
			  .append(" FROM FIN_TRANSACTION_SET_OFF_APPROVAL FTSOA, FIN_TRANSACTION_SET_OFF_APPROVAL_LEVEL FTSOAL")
			  .append(" ,FIN_TRANSACTION_SET_OFF_ENTRY FTSOE INNER JOIN FIN_TRANSACTION_ENTRY FTE ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTSOE.FIN_TRANSACTION_ENTRY_ID ")
			  .append(" WHERE FTSOA.FIN_TRN_SET_OFF_ENT_ID = FTSOE.FIN_TRN_SET_OFF_ENT_ID ")
			  .append(" AND FTSOE.FIN_TRANSACTION_ENTRY_ID = :FIN_TRANSACTION_ENTRY_ID")
			  //.append(" AND FTSOA.FIN_TRN_SET_OFF_ENT_ID = :FIN_TRN_SET_OFF_ENT_ID ")
			  .append(" AND FTSOAL.FIN_TRN_SET_OFF_APPR_LVL_ID = FTSOA.FIN_TRN_SET_OFF_APPR_LVL_ID ")
			  .toString();*/
	  
	  public static final String QRY_TO_GET_TRANSACTION_SET_OFF_APPROVAL_DETAILS = new StringBuilder(SELECT)
			  .append(QRY_TO_GET_TRANSACTION_SET_OFF_APPROVAL).append(",")
			  .append(QRY_TO_GET_TRANSACTION_SET_OFF_APPROVAL_LEVEL)
			  .append(" FROM FIN_TRANSACTION_SET_OFF_APPROVAL FTSOA, FIN_TRANSACTION_SET_OFF_APPROVAL_LEVEL FTSOAL")
			  .append(" ,FIN_TRANSACTION_SET_OFF_ENTRY FTSOE INNER JOIN FIN_TRANSACTION_ENTRY FTE ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTSOE.FIN_TRANSACTION_ENTRY_ID")
			  .append(" ,FIN_TRN_EMP_SET_OFF_LEVEL_MAPPING FTESOLM")
			  .append(" WHERE FTSOA.FIN_TRN_SET_OFF_ENT_ID = FTSOE.FIN_TRN_SET_OFF_ENT_ID ")
			  .append(" AND FTSOAL.FIN_TRAN_SET_OFF_LEVEL_ID = FTESOLM.FIN_TRAN_SET_OFF_LEVEL_ID")
			  .append(" AND FTSOE.FIN_TRANSACTION_ENTRY_ID = :FIN_TRANSACTION_ENTRY_ID")
			  //.append(" AND FTSOA.FIN_TRN_SET_OFF_ENT_ID = :FIN_TRN_SET_OFF_ENT_ID ")
			  .append(" AND FTESOLM.EMP_ID = :EMP_ID")
			  //.append(" AND FTE.TRANSACTION_STATUS_ID IN (:TRANSACTION_STATUS_ID)")
			  .append(" AND FTSOAL.FIN_TRN_SET_OFF_APPR_LVL_ID = FTSOA.FIN_TRN_SET_OFF_APPR_LVL_ID ")
			  .toString();

	  
	  public static final String QRY_TO_GET_TRANSACTION_SET_OFF_APPROVAL_DETAILS_BY_EMPID = new StringBuilder(SELECT)
			  .append(QRY_TO_GET_TRANSACTION_SET_OFF_APPROVAL).append(",")
			  .append(QRY_TO_GET_TRANSACTION_SET_OFF_APPROVAL_LEVEL)
			  .append(" FROM FIN_TRANSACTION_SET_OFF_APPROVAL FTSOA, FIN_TRANSACTION_SET_OFF_APPROVAL_LEVEL FTSOAL")
			  .append(" ,FIN_TRANSACTION_SET_OFF_ENTRY FTSOE INNER JOIN FIN_TRANSACTION_ENTRY FTE ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTSOE.FIN_TRANSACTION_ENTRY_ID")
			  .append(" ,FIN_TRN_EMP_SET_OFF_LEVEL_MAPPING FTESOLM")
			  .append(" WHERE FTSOA.FIN_TRN_SET_OFF_ENT_ID = FTSOE.FIN_TRN_SET_OFF_ENT_ID ")
			  .append(" AND FTSOAL.FIN_TRAN_SET_OFF_LEVEL_ID = FTESOLM.FIN_TRAN_SET_OFF_LEVEL_ID")
			  .append(" AND FTSOE.FIN_TRANSACTION_ENTRY_ID = :FIN_TRANSACTION_ENTRY_ID")
			  //.append(" AND FTSOA.FIN_TRN_SET_OFF_ENT_ID = :FIN_TRN_SET_OFF_ENT_ID ")
			  .append(" AND FTESOLM.EMP_ID = :EMP_ID")
			  .append(" AND FTE.TRANSACTION_STATUS_ID IN (:TRANSACTION_STATUS_ID)")
			  .append(" AND FTSOAL.FIN_TRN_SET_OFF_APPR_LVL_ID = FTSOA.FIN_TRN_SET_OFF_APPR_LVL_ID ")
			  .toString();
	  
	  //not in use
	  public static final String QRY_TO_GET_TRANSACTION_SET_OFF_DETAILS1 = new StringBuilder()
			  .append("SELECT FTSOAM.FIN_BOOKING_FORM_ACCOUNTS_ID,")
			  .append("FTSO.FIN_TRN_SET_OFF_ID,")
			  .append("FTSO.SET_OFF_TYPE,")
			  .append("FTSO.SET_OFF_AMOUNT,")
			  .append("FIN_TRN_SET_OFF_ACC_MAP_ID")
			  .append("FROM FIN_TRANSACTION_ENTRY FTE LEFT OUTER JOIN")
			  .append("FIN_TRANSACTION_SET_OFF_ENTRY FTSOE ON FTE.FIN_TRANSACTION_ENTRY_ID = FTSOE.FIN_TRANSACTION_ENTRY_ID ")
			  .append("LEFT OUTER JOIN   FIN_TRANSACTION_SET_OFF FTSO ON FTSOE.FIN_TRN_SET_OFF_ENT_ID = FTSO.FIN_TRN_SET_OFF_ENT_ID")
			  .append("LEFT OUTER JOIN  FIN_TRN_SET_OFF_ACC_MAPPING FTSOAM ON FTSO.FIN_TRN_SET_OFF_ID = FTSOAM.FIN_TRN_SET_OFF_ID")
			  .append("WHERE FTE.FIN_TRANSACTION_ENTRY_ID =  :FIN_TRANSACTION_ENTRY_ID AND FTE.STATUS_ID=6")
			  .toString();
	  
	  public static final String QRY_TO_INSERT_TRANSACTION_SET_OFF_ENTRY_DETAILS = new StringBuilder("")
			    .append("INSERT INTO FIN_TRANSACTION_SET_OFF_ENTRY  (")
			    .append("FIN_TRN_SET_OFF_ENT_ID")
			    .append(",FIN_TRANSACTION_ENTRY_ID")
			    .append(",CREATED_BY")
			    .append(",CREATED_DATE ")
			    .append(") VALUES (")
			    .append("FIN_TRANSACTION_SET_OFF_ENTRY_SEQ.NEXTVAL")
			    .append(",:transactionEntryId")
			    .append(",:createdBy")
			    .append(",SYSDATE")
			    .append(")")
			    .toString();
	  
	  public static final String QRY_TO_INSERT_ANONYMOUS_ENTRY_DETAILS = new StringBuilder("")
			  .append("INSERT INTO FIN_ANONYMOUS_ENTRY  (")
			  .append("FIN_ANMS_ENTRY_ID")
			  .append(",FIN_TRANSFER_MODE_ID")
			  .append(",FIN_BANK_ID")
			  //.append(",BANK_ACCOUNT_NO")
			  .append(",AMOUNT")
			  .append(",REFERENCE_NUMBER")
			  .append(",RECEIVED_DATE")
			  .append(",CREATED_BY,CREATED_DATE")
			  .append(",STATUS_ID")
			  .append(",FIN_SITE_PROJ_ACC_MAP_ID")
			  .append(",SITE_ID")
			  .append(",IS_RECORD_UPLOADED")
			  .append(") VALUES  (")
			  .append("FIN_ANONYMOUS_ENTRY_SEQ.NEXTVAL")
			  .append(",:transferModeId")
			  .append(",:bankId")
			  //.append(",:bankAccountNumber")
			  .append(",:amount")
			  .append(",:referenceNo")
			  .append(",:transactionReceiveDate")
			  .append(",:createdBy,SYSDATE") 
			  .append(",:statusId")
			  .append(",:siteAccountId")
			  .append(",:siteId")
			  .append(",:isRecordUploaded")
			  .append(")")
			  .toString();
	  
	  public static final String QRY_TO_UPDATE_ANONYMOUS_ENTRY_DETAILS = new StringBuilder("")
			  .append("UPDATE  FIN_ANONYMOUS_ENTRY SET ")
			  .append("FIN_TRANSFER_MODE_ID = :transferModeId,")
			  .append("FIN_BANK_ID = :bankId,")
			  .append("AMOUNT =:amount,")
			  .append("REFERENCE_NUMBER = :referenceNo,")
			  .append("RECEIVED_DATE = :transactionReceiveDate,")
			  .append("STATUS_ID = :statusId,")
			  .append("FIN_SITE_PROJ_ACC_MAP_ID = :siteAccountId")
			  .append(" WHERE FIN_ANMS_ENTRY_ID = :anonymousEntryId")
			  .append(" AND STATUS_ID = :activeStatusId")
			  .toString();

	  public static final String QRY_TO_UPDATE_ANONYMOUS_ENTRY_REFERENCE = new StringBuilder("")
			  .append("UPDATE  FIN_ANONYMOUS_ENTRY SET ")
			  .append("FIN_BANK_ID = :bankId")
			  .append(",AMOUNT =:amount")
			  .append(",REFERENCE_NUMBER = :referenceNo ")
			  .append(",MODIFIED_DATE = SYSDATE ")
			  //.append(",RECEIVED_DATE = :transactionReceiveDate")
			  //.append(",STATUS_ID = :statusId")
			  //.append(",FIN_SITE_PROJ_ACC_MAP_ID = :siteAccountId ")
			  .append(" WHERE FIN_ANMS_ENTRY_ID = (select FIN_ANMS_ENTRY_ID from FIN_TRAN_ANNY_ENTRY_MAPPING where FIN_TRANSACTION_ENTRY_ID  = :transactionEntryId) ")
			  //.append(" AND STATUS_ID = :activeStatusId")
			  .toString();
	  
	  public static final String QRY_TO_COUNT_ANONYMOUS_ENTRY_DETAILS = new StringBuilder("SELECT")
			 // .append(" COUNT(*) FROM FIN_ANONYMOUS_ENTRY FAN WHERE FAN.REFERENCE_NUMBER = :REFERENCE_NUMBER")
			  .append(" COUNT(*) FROM FIN_ANONYMOUS_ENTRY FAN WHERE LOWER(FAN.REFERENCE_NUMBER) = LOWER(:REFERENCE_NUMBER) ")
			  .append(" AND FAN.STATUS_ID IN (:STATUS_ID)")
			  .append(" AND FAN.SITE_ID IN (:SITE_ID)")
			  .toString();
	  
	  public static final String QRY_TO_COUNT_ANONYMOUS_ENTRY_DETAILS_BY_ID = new StringBuilder("SELECT")
			  .append(" COUNT(*) FROM FIN_ANONYMOUS_ENTRY FAN WHERE FAN.REFERENCE_NUMBER = :REFERENCE_NUMBER")
			  .append(" AND FAN.STATUS_ID IN (:STATUS_ID)")
			  .append(" AND FAN.SITE_ID IN (:SITE_ID)")
			  .append(" AND FIN_ANMS_ENTRY_ID != :FIN_ANMS_ENTRY_ID ")
			  .toString();
	  
	  public static final String QRY_TO_COUNT_ANONYMOUS_ENTRY_DETAILS_FOR_UPLOAD_DATA = new StringBuilder("SELECT")
			  .append(" FAN.REFERENCE_NUMBER FROM FIN_ANONYMOUS_ENTRY FAN WHERE FAN.REFERENCE_NUMBER IN (:REFERENCE_NUMBER)")
			  .append(" AND FAN.STATUS_ID IN (:STATUS_ID)")
			  .append(" AND FAN.SITE_ID IN (:SITE_ID)")
			  .toString();
	  
	  public static final String QRY_TO_INSERT_FIN_BOOKING_FORM_MODI_COST = new StringBuilder("")
			  .append("INSERT INTO FIN_BOOKING_FORM_MODI_COST(")
			    .append("FIN_BOK_FRM_MODI_COST_ID")
			    .append(",BOOKING_FORM_ID")
			    .append(",SITE_ID")
			    .append(",TAX_AMOUNT")
			    .append(",TOTAL_AMOUNT")
			    .append(",BASIC_AMOUNT")
			    .append(",STATUS_ID")
			    .append(",CREATED_BY")
			   .append(" ,CREATED_DATE")
			   .append(" ,FIN_SET_OFF_APPR_LVL_ID")
			   .append(" ,FIN_SITE_PROJ_ACC_MAP_ID")
			   .append(" ,MODIFICATION_STATUS_ID")
			   .append(") VALUES(")
			    .append("FIN_BOOKING_FORM_MODI_COST_SEQ.NEXTVAL")
			    .append(",:bookingFormId")
			    .append(",:siteId")
			    .append(",:taxAmount")
			    .append(",:totalAmount")
			    .append(",:basicAmount")
			    .append(",:statusId")
			    .append(",:createdBy")
			    .append(",SYSDATE")
				   .append(",:finsetOffAppLevelId")
				   .append(",:siteAccountId")
				   .append(",:modifiacationStatusId")
			 .append(" )")
			  .toString();
	  
	  public static final String QRY_TO_GET_FIN_BOOKING_FORM_MODI_COST_DTLS = new StringBuilder("")
			  .append("SELECT FBFMC.FIN_BOK_FRM_MODI_COST_ID,")
			  .append("FBFMC.BOOKING_FORM_ID,")
			  .append("FBFMC.TAX_AMOUNT,")
			  .append("FBFMC.TOTAL_AMOUNT,")
			  .append("FBFMC.BASIC_AMOUNT,")
			  .append("FBFMCD.FIN_BOK_MODI_COST_DTLS_ID,")
			  .append("FBFMCD.FIN_BOK_FRM_MODI_COST_ID,")
			  .append("FBFMCD.MODIFICATION_DESC,")
			  .append("FBFMCD.UNITS,")
			  .append("FBFMCD.QUANTITY,")
			  .append("FBFMCD.RATE,")
		      .append("(SELECT DOC_NAME FROM FIN_INVOICE_DOCUMENT_LOCATION WHERE TYPE = :TYPE AND TYPE_ID = FBFMC.FIN_BOK_FRM_MODI_COST_ID) AS DOC_NAME,")
		      .append("(SELECT DOC_PATH FROM FIN_INVOICE_DOCUMENT_LOCATION WHERE TYPE = :TYPE AND TYPE_ID = FBFMC.FIN_BOK_FRM_MODI_COST_ID) AS LOCATION,")
			  .append("FBFMCD.MODIFICATION_AMOUNT,")
			  .append("PERCENTAGE.PERCENTAGE_ID AS PERCENTAGE_ID,")
			  .append("PERCENTAGE.PERCENTAGE AS PERCENTAGE_VALUE ")
			  .append(" FROM FIN_BOOKING_FORM_MODI_COST_DTLS FBFMCD,")
			  .append("FIN_BOOKING_FORM_MODI_COST FBFMC,")
			  .append("FIN_BOK_FRM_MODI_COST_TAX FBFMCT,")
			  //.append("FIN_TAX_MAPPING FTM,")
			  .append("PERCENTAGES PERCENTAGE")
			  .append(" WHERE FBFMC.FIN_BOK_FRM_MODI_COST_ID = FBFMCD.FIN_BOK_FRM_MODI_COST_ID ")
			  .append("AND FBFMCT.FIN_BOK_FRM_MODI_COST_ID = FBFMCD.FIN_BOK_FRM_MODI_COST_ID ")
			  //.append("AND FTM.FIN_TAX_MAPING_ID = FBFMCT.FIN_TAX_MAPING_ID ")
			  .append("AND FBFMCT.PERCENTAGE_ID = PERCENTAGE.PERCENTAGE_ID ")
			  .append("AND FBFMC.FIN_BOK_FRM_MODI_COST_ID = :FIN_BOK_FRM_MODI_COST_ID ").toString();

	  public static final String QRY_TO_GET_FIN_BOOKING_FORM_MODI_COST = new StringBuilder("")
			  .append("SELECT FBFMC.FIN_BOK_FRM_MODI_COST_ID,")
			  .append(" FBFMC.BOOKING_FORM_ID,FBFMC.FIN_SITE_PROJ_ACC_MAP_ID,FPA.ACCOUNT_NO AS ACCOUNT_NO,")
			  .append(" FBFMC.TAX_AMOUNT, FBFMC.TOTAL_AMOUNT, FBFMC.BASIC_AMOUNT,")
			  .append(" FBFMC.MODIFICATION_STATUS_ID,FBFMC.FIN_SET_OFF_APPR_LVL_ID,FBFMC.INVOICE_CLOSED_DATE,")
		      .append(" (SELECT DOC_NAME FROM FIN_INVOICE_DOCUMENT_LOCATION WHERE TYPE = :TYPE AND TYPE_ID = FBFMC.FIN_BOK_FRM_MODI_COST_ID) AS DOC_NAME,")
		      .append(" (SELECT DOC_PATH FROM FIN_INVOICE_DOCUMENT_LOCATION WHERE TYPE = :TYPE AND TYPE_ID = FBFMC.FIN_BOK_FRM_MODI_COST_ID) AS LOCATION ")
			  .append(" FROM  FIN_BOOKING_FORM_MODI_COST FBFMC ")
			  .append(" LEFT OUTER JOIN FIN_SITE_PROJ_ACC_MAPPING FSAM ON(FBFMC.FIN_SITE_PROJ_ACC_MAP_ID = FSAM.FIN_SITE_PROJ_ACC_MAP_ID) ")
			  .append(" INNER JOIN FIN_PROJECT_ACCOUNTS FPA ")
			  .append(" ON(FPA.FIN_PROJ_ACC_ID=FSAM.FIN_PROJ_ACC_ID) ")
			  .append(" WHERE  FBFMC.FIN_BOK_FRM_MODI_COST_ID = :FIN_BOK_FRM_MODI_COST_ID AND FBFMC.STATUS_ID = :STATUS_ID ").toString();
	  
	  public static final String QRY_TO_GET_FIN_BOOKING_FORM_LEGAL_COST = new StringBuilder("")	  
			  .append("SELECT FBFLCT.FIN_BOK_FRM_LGL_COST_TAX_ID,")
			  .append("FBFLCT.FIN_TAX_MAPING_ID,")
			  .append("FBFLCT.FIN_BOK_FRM_LEGAL_COST_ID,")
			  .append("FBFLCT.AMOUNT,")
			  .append("FBFLC.FIN_BOK_FRM_LEGAL_COST_ID,")
			  .append("FBFLC.BOOKING_FORM_ID,")
			  .append("FBFLC.LEGAL_AMOUNT,")
			  .append("FBFLC.TAX_AMOUNT,")
			  .append("FBFLC.TOTAL_AMOUNT,")
			  .append("FBFLC.STATUS_ID,")
		      .append("(SELECT DOC_NAME FROM FIN_INVOICE_DOCUMENT_LOCATION WHERE TYPE = :TYPE AND TYPE_ID = FBFLC.FIN_BOK_FRM_LEGAL_COST_ID) AS DOC_NAME,")
		      .append("(SELECT DOC_PATH FROM FIN_INVOICE_DOCUMENT_LOCATION WHERE TYPE = :TYPE AND TYPE_ID = FBFLC.FIN_BOK_FRM_LEGAL_COST_ID) AS LOCATION,")
			  .append("FBFLCD.FIN_BOOKING_FORM_LGL_COST_DTLS_ID,")
			  .append("FBFLCD.FIN_BOK_FRM_LEGAL_COST_ID,")
			  .append("FBFLCD.LEGAL_AMOUNT,")
			  .append("FBFLCD.DESCRIPTION,")
			  .append("FTM.PERCENTAGE_ID,")
			  .append("PERCENTAGE.PERCENTAGE as PERCENTAGE_VALUE ")
			  .append(" FROM FIN_BOK_FRM_LGL_COST_TAX FBFLCT,")
			  .append("FIN_BOOKING_FORM_LEGAL_COST FBFLC,")
			  .append("FIN_BOOKING_FORM_LGL_COST_DTLS FBFLCD,")
			  .append("FIN_TAX_MAPPING FTM,")
			  .append("PERCENTAGES PERCENTAGE")
			  .append(" WHERE FBFLC.FIN_BOK_FRM_LEGAL_COST_ID = FBFLCT.FIN_BOK_FRM_LEGAL_COST_ID ")
			  .append("AND FBFLC.FIN_BOK_FRM_LEGAL_COST_ID   = FBFLCD.FIN_BOK_FRM_LEGAL_COST_ID ")
			  .append("AND FTM.FIN_TAX_MAPING_ID = FBFLCT.FIN_TAX_MAPING_ID ")
			  .append("AND FTM.PERCENTAGE_ID = PERCENTAGE.PERCENTAGE_ID ")
			  .append("and FBFLC.FIN_BOK_FRM_LEGAL_COST_ID = :FIN_BOK_FRM_LEGAL_COST_ID ").toString();
	  
	  
	  public static final String QRY_TO_INSERT_FIN_BOOKING_FORM_MODI_COST_TAX=new StringBuilder("")
			 .append("INSERT INTO FIN_BOK_FRM_MODI_COST_TAX(")
			 .append("FIN_BOK_FRM_MODI_COST_TAX_ID")
			 .append(",PERCENTAGE_ID")
			 .append(",FIN_BOK_FRM_MODI_COST_ID")
			 .append(",AMOUNT")
			 .append(",CREATED_BY")
			 .append(",CREATED_DATE")
			 .append(")VALUES(")
			 .append("FIN_BOK_FRM_MODI_COST_TAX_SEQ.NEXTVAL")
			 .append(",:percentageId")
			 .append(",:finBookingFormModiCostId")
			 .append(",:amount")
			 .append(",:createdBy")
			 .append(",SYSDATE")
			 .append(")")
			 .toString();
	  
	  public static final String QRY_TO_INSERT_FIN_BOOKING_FORM_MODI_COST_DTLS = new StringBuilder("")
			  .append("INSERT INTO FIN_BOOKING_FORM_MODI_COST_DTLS  (")
			  .append("FIN_BOK_MODI_COST_DTLS_ID")
			  .append(",FIN_BOK_FRM_MODI_COST_ID")
			  .append(",MODIFICATION_DESC,UNITS")
		      .append(",QUANTITY,RATE,MODIFICATION_AMOUNT")
			  //.append(",TAX_AMOUNT,TOTAL_AMOUNT")
			  .append(",CREATED_BY,CREATED_DATE ")
			  .append(") VALUES  (")
			  .append("FIN_BOOKING_FORM_MODI_COST_DTLS_SEQ.NEXTVAL")
			  .append(",:finBookingFormModiCostId")
			  .append(",:modificationChargeDesc,:units")
			  .append(",:quantity,:rate,:basicAmount")
			 // .append(",:taxAmount,:totalAmount")
			  .append(",:createdBy,SYSDATE") 
			  .append(")")
			  .toString();
	  
	  public static final String QRY_TO_INSERT_TRANSACTION_CHEQUE_DETAILS = new StringBuilder("")
			  .append("INSERT INTO FIN_TRANSACTION_CHEQUE  (")
			    .append("FIN_TRANSACTION_CHEQUE_ID,")
			    .append("FIN_TRANSACTION_ENTRY_ID,")
			    .append("CHEQUE_NO,")
			    .append("CHEQUE_DATE,")
			    .append("CLEARANCE_DATE,")
			    .append("CHEQUE_DEPOSITED_DATE,")
			    .append("AMOUNT,")
			    .append("CREATED_BY,")
			    .append("CREATED_DATE ")
			  .append(") VALUES (")
			    .append("FIN_TRANSACTION_CHEQUE_SEQ.NEXTVAL,")
			    .append(":transactionEntryId,")
			    .append(":chequeNumber,")
			    .append(":chequeDate,")
			    .append(":chequeClearanceDate,")
			    .append(":chequeDepositedDate,")
			    .append(":chequeAmount,")
			    .append(":createdBy,")
			    .append("SYSDATE")
			  .append(")")
			  .toString();
	  
	  public static final String QRY_TO_UPDATE_TRANSACTION_CHEQUE_DETAILS = new StringBuilder("")
			  .append("UPDATE FIN_TRANSACTION_CHEQUE SET ")
			  .append(" CHEQUE_NO = :chequeNumber")
			  .append(" ,CHEQUE_DATE = :chequeDate")
			  .append(" ,AMOUNT= :chequeAmount")
			  .append(" ,MODIFIED_BY = :createdBy")
			  .append(" ,MODIFIED_DATE = SYSDATE")
			  .append(" ,CLEARANCE_DATE = :chequeClearanceDate ")
			  .append(" ,CHEQUE_DEPOSITED_DATE = :chequeDepositedDate ")
			  .append(" ,CHEQUE_HANDOVER_DATE = :chequeHandoverDate ")
			  .append(" ,CHEQUE_BOUNCE_DATE = :chequeBounceDate ")
			  .append(" WHERE FIN_TRANSACTION_ENTRY_ID = :transactionEntryId ")
			  .toString();
	  
	  public static final String QRY_TO_UPDATE_TRANSACTION_CHEQUE_BOUNCE_DETAILS = new StringBuilder("")
			  .append("UPDATE FIN_TRANSACTION_CHEQUE SET ")
			  .append(" CHEQUE_BOUNCE_REASON_ID = :chequeBounceReasonId ")
			  .append(",CHEQUE_BOUNCE_COMMENT = :chequeBounceComment ")
			  .append(",CHEQUE_BOUNCE_DATE = :chequeBounceDate ")
			  .append(",MODIFIED_BY = :modifiedBy ")
			  .append(",MODIFIED_DATE  = SYSDATE ")
			  .append(" WHERE FIN_TRANSACTION_ENTRY_ID = :transactionEntryId ")
			  .append("").toString();
	  
	  public static final String QRY_TO_INSERT_TRANSACTION_ONLINE_DETAILS = new StringBuilder("")
			  .append("INSERT INTO FIN_TRANSACTION_ONLINE  (")
			  .append("FIN_TRANSACTION_ONLINE_ID,FIN_TRANSACTION_ENTRY_ID,")
			  .append("FIN_TRANSFER_MODE_ID,REFERENCE_NO,")
			  .append("TRANSACTION_DATE,AMOUNT,")
			  .append("CREATED_BY, CREATED_DATE ")
			  .append(",ACCOUNT_NUMBER")
			  .append(",FIN_BANK_ID")
			  .append(") VALUES (")
			  .append("FIN_TRANSACTION_ONLINE_SEQ.NEXTVAL,:transactionEntryId,")
			  .append(":transferModeId,:referenceNo,")
			  .append(":transactionDate,:amount,")
			  .append(":createdBy, SYSDATE ")
			  .append(",:bankAccountNumber")
			  .append(",:finBankId")
			  .append(")")
			  .toString();
	  
	  public static final String QRY_TO_UPDATE_TRANSACTION_ONLINE_DETAILS = new StringBuilder("")
			  .append(" UPDATE FIN_TRANSACTION_ONLINE SET ")
			  .append(" TRANSACTION_DATE =:transactionDate")
			  .append(" ,REFERENCE_NO =:referenceNo")
			  .append(" ,FIN_BANK_ID = :finBankId,		AMOUNT = :amount")
			  .append(" ,MODIFIED_BY = :createdBy")
			  .append(" ,MODIFIED_DATE = SYSDATE")
			  .append(" ,CLEARANCE_DATE = SYSDATE ")
			  .append(" WHERE FIN_TRANSACTION_ENTRY_ID = :transactionEntryId ")
			  .toString();
	  
	  public static final String QRY_TO_INSERT_ANONYMOUS_ENTRY_MAP_DETAILS = new StringBuilder("")
			  .append("INSERT INTO FIN_TRAN_ANNY_ENTRY_MAPPING (")
			    .append("FIN_TRAN_ANMS_ENTRY_MAP_ID")
			    .append(",FIN_TRANSACTION_ENTRY_ID")
			    .append(",FIN_ANMS_ENTRY_ID")
			    .append(",CREATED_BY")
			    .append(",CREATED_DATE")
			    .append(") VALUES  (")
			    .append(" FIN_TRAN_ANNY_ENTRY_MAPPING_SEQ.NEXTVAL")
			    .append(",:transactionEntryId")
			    .append(",:anonymousEntryId")
			    .append(",:createdBy")
			  .append(",SYSDATE")
			  .append(")")
			  .toString();
	  
	  public static final String QRY_TO_CHECK_TRANSACTION_ONLINE_DETAILS = new StringBuilder("")
			  .append("SELECT FIN_ANMS_ENTRY_ID FROM FIN_ANONYMOUS_ENTRY WHERE REFERENCE_NUMBER = :REFERENCE_NUMBER") 
			  //.append(" AND BANK_ACCOUNT_NO = :BANK_ACCOUNT_NO")
			  .append(" AND STATUS_ID IN (:STATUS_ID) ")
			  .append(" AND SITE_ID IN (:SITE_ID)")
			  .toString();

	  public static final String QRY_TO_CHECK_TRANSACTION_ONLINE_DETAILS1 = new StringBuilder("")
			  .append("SELECT ")
			  .append("FAE.FIN_ANMS_ENTRY_ID ")
			  .append(" FROM FIN_TRAN_ANNY_ENTRY_MAPPING FTAEM,")
			  .append("FIN_ANONYMOUS_ENTRY FAE,")
			  .append("FIN_TRANSACTION_ENTRY FTE ")
			  .append(" WHERE FAE.FIN_ANMS_ENTRY_ID      = FTAEM.FIN_ANMS_ENTRY_ID ")
			  .append("AND FTE.FIN_TRANSACTION_ENTRY_ID = FTAEM.FIN_TRANSACTION_ENTRY_ID ")
			  .append("AND FAE.REFERENCE_NUMBER = :REFERENCE_NUMBER  AND FAE.STATUS_ID = :STATUS_ID ")
			  .append("AND FTE.FIN_TRANSACTION_ENTRY_ID = :FIN_TRANSACTION_ENTRY_ID")
			  .toString();
	  
	  
	  public static final String QRY_TO_ANONYMOUS_TRANSACTION_ONLINE_DETAILS = new StringBuilder("")
			  .append("UPDATE FIN_ANONYMOUS_ENTRY SET  STATUS_ID = :statusId ")
			  .append(" WHERE FIN_ANMS_ENTRY_ID = :anonymousEntryId")
			  .append(" AND STATUS_ID = :activeStatusId ")
			  .toString();
	  
	  public static final String QRY_TO_INSERT_TRANSACTION_PAYMENT_SET_OFF_DETAILS = new StringBuilder("")
			  .append("INSERT INTO FIN_TRANSACTION_SET_OFF (")
			  .append("FIN_TRN_SET_OFF_ID")
			  .append(",FIN_TRN_SET_OFF_ENT_ID")
			  .append(",SET_OFF_TYPE")
			  .append(",PAYABLE_AMOUNT")
			  .append(",SET_OFF_AMOUNT")
			  .append(",STATUS_ID")
			  .append(",PAID_BY")
			  .append(",CREATED_BY")
			  .append(",CREATED_DATE")
			  .append(",FIN_BOK_ACC_INVOICE_NO")
			  .append(") VALUES (")
			  .append("FIN_TRANSACTION_SET_OFF_SEQ.NEXTVAL")
			  .append(",:transactionSetOffEntryId")
			  .append(",:setOffType")
			  .append(",:payableAmount")
			  .append(",:setOffAmount")
			  .append(",:statusId")
			  .append(",:paidById")
			  .append(",:createdBy")
			  .append(",SYSDATE")
			  .append(",:finBokAccInvoiceNo")
			  .append(")")
			  .toString();
	  
	  public static final String QRY_TO_UPDATE_TRANSACTION_PAYMENT_SET_OFF_DETAILS = new StringBuilder("")
			  .append("UPDATE FIN_TRANSACTION_SET_OFF SET SET_OFF_AMOUNT = :setOffAmount")
			  .append(" ,FIN_BOK_ACC_INVOICE_NO = :finBokAccInvoiceNo")
			  .append(" ,STATUS_ID = :setOffRecordStatus")
			  .append(" ,PAID_BY = :paidById")
			  .append(" WHERE FIN_TRN_SET_OFF_ID = :finTransactionSetOffId")
			  .append(" AND FIN_TRN_SET_OFF_ENT_ID = :transactionSetOffEntryId")
			  .append(" AND STATUS_ID = :statusId")
			  .toString();

	  public static final String QRY_TO_UPDATE_TRANSACTION_PAYMENT_SET_OFF_GST_DETAILS = new StringBuilder("")
			  .append("UPDATE FIN_TRANSACTION_SET_OFF SET SET_OFF_GST_AMOUNT = :setOffGstAmount")
			  .append(" WHERE SET_OFF_TYPE = :setOffType")
			  .append(" AND FIN_TRN_SET_OFF_ENT_ID = :transactionSetOffEntryId")
			  .append(" AND STATUS_ID = :statusId")
			  .toString();

	  
	  public static final String QRY_TO_INSERT_TRANSACTION_SET_OFF_ACC_DETAILS = new StringBuilder("")
			  .append("INSERT INTO FIN_TRN_SET_OFF_ACC_MAPPING  (")
			  .append("FIN_TRN_SET_OFF_ACC_MAP_ID")
			  .append(",FIN_TRN_SET_OFF_ID")
			  .append(",FIN_BOOKING_FORM_ACCOUNTS_ID")
			  .append(",AMOUNT_TO_SET_OFF")
			  .append(",CREATED_BY")
			  .append(",CREATED_DATE")
			  .append(",STATUS_ID")
			  .append(") VALUES (")
			  .append("FIN_TRN_SET_OFF_ACC_MAPPING_SEQ.NEXTVAL")
			  .append(",:finTransactionSetOffId")
			  .append(",:finBookingFormAccountsId")
			  .append(",:msWiseAmountToSetOff")
			  .append(",:createdBy")
			  .append(",SYSDATE")
			  .append(",:statusId")
			  .append(")")
			  .toString();
	  
	  public static final String QRY_TO_UPDATE_TRANSACTION_SET_OFF_ACC_DETAILS_AMT = new StringBuilder("")
			  .append(" UPDATE FIN_TRN_SET_OFF_ACC_MAPPING SET AMOUNT_TO_SET_OFF = :msWiseAmountToSetOff")
			  .append(" ,MODIFIED_BY = :modifiedBy")
			  .append(" ,MODIFIED_DATE = SYSDATE")
			  .append(" WHERE FIN_TRN_SET_OFF_ACC_MAP_ID = :finTransactionSetOffAccMapId ")
			  .append(" AND FIN_TRN_SET_OFF_ID = :finTransactionSetOffId ")
			  .append(" AND STATUS_ID = :activeStatusId ")
			  .toString();
	  
	  public static final String QRY_TO_GET_TRANSACTION_SET_OFF_ACC_DETAILS = new StringBuilder("SELECT ")
			  .append(" FTSOAM.FIN_TRN_SET_OFF_ACC_MAP_ID,FTSOAM.FIN_TRN_SET_OFF_ID,FTSOAM.FIN_BOOKING_FORM_ACCOUNTS_ID")
			  .append(" FROM FIN_TRN_SET_OFF_ACC_MAPPING FTSOAM ")
			  .append(" WHERE FTSOAM.FIN_BOOKING_FORM_ACCOUNTS_ID = :finBookingFormAccountsId AND FTSOAM.STATUS_ID = :statusId")
			  .append(" AND FTSOAM.FIN_TRN_SET_OFF_ID = :finTransactionSetOffId")
			  .toString();
	  
	  public static final String QRY_TO_UPDATE_TRANSACTION_SET_OFF_ACC_DETAILS_INACTIVE = new StringBuilder("")
			  .append(" UPDATE FIN_TRN_SET_OFF_ACC_MAPPING SET STATUS_ID = :statusId ")
			  .append(" ,MODIFIED_BY = :modifiedBy")
			  .append(" ,MODIFIED_DATE = SYSDATE")
			  .append(" WHERE FIN_TRN_SET_OFF_ACC_MAP_ID not in (:finTransactionSetOffAccMapId)")
			  .append(" AND FIN_TRN_SET_OFF_ID = :finTransactionSetOffId ")
			  .append(" AND STATUS_ID = :activeStatusId ")
			  .toString();
	  
	  public static final String QRY_TO_INSERT_TRANSACTION_PAYMENT_SET_OFF_ACC_DETAILS = new StringBuilder("")
			  .append("INSERT INTO FIN_TRN_PMT_SET_OFF_ACC_MAP (")
			    .append("FIN_TRN_PMT_SET_OFF_ACC_MAP_ID,FIN_TRN_SET_OFF_ID")
			    .append(",TYPE_ID,TYPE")
			    .append(",CREATED_BY,CREATED_DATE ")
			    .append(",STATUS_ID")
			    .append(") VALUES (")
			    .append("FIN_TRN_PMT_SET_OFF_ACC_MAP_SEQ.NEXTVAL,:finTransactionSetOffId")
			    .append(",:typeId,:setOffTypeId")
			    .append(",:createdBy,SYSDATE ")
			    .append(",:statusId")
			  .append(")")
			  .toString();
	  
	  public static final String QRY_TO_UPDATE_TRANSACTION_PAYMENT_SET_OFF_ACC_DETAILS_INACTIVE = new StringBuilder("")
			  .append(" UPDATE FIN_TRN_PMT_SET_OFF_ACC_MAP SET STATUS_ID = :statusId")
			  .append(" ,MODIFIED_BY = :modifiedBy")
			  .append(" ,MODIFIED_DATE = SYSDATE")
			  .append(" WHERE FIN_TRN_PMT_SET_OFF_ACC_MAP_ID NOT IN (:finTrnPaymentSetOffAccMapId)")
			  .append(" AND FIN_TRN_SET_OFF_ID = :finTransactionSetOffId")
			  .append(" AND STATUS_ID = :activeStatusId")
			  .toString();
	  
	  public static final String QRY_TO_COUNT_TRANSACTION_PAYMENT_SET_OFF_ACC_DETAILS = new StringBuilder("SELECT")
			  .append(" FTPSOAM.FIN_TRN_PMT_SET_OFF_ACC_MAP_ID,FTPSOAM.TYPE_ID,FTPSOAM.TYPE FROM FIN_TRN_PMT_SET_OFF_ACC_MAP FTPSOAM")
			  .append(" WHERE FTPSOAM.TYPE_ID = :typeId AND FTPSOAM.STATUS_ID = :statusId")
			  .append(" AND FTPSOAM.FIN_TRN_SET_OFF_ID = :finTransactionSetOffId")
			  .toString();
	  
	  public static final String QRY_TO_INSERT_BOOKING_FORM_ACCOUNT_PAYMENT = new StringBuilder("")
			  .append("INSERT INTO FIN_BOOKING_FORM_ACCOUNT_PAYMENT  (")
			  .append("FIN_BOK_FRM_ACC_PMT_ID")
			  .append(",FIN_TRN_SET_OFF_APPR_ID")
			  .append(",FIN_TRN_SET_OFF_ENT_ID")
			  .append(",REFUND_AMOUNT")
			  .append(",BOOKING_FORM_ID")
			  .append(",STATUS_ID")
			  .append(",CREATED_BY")
			  .append(",CREATED_DATE")
			  .append(") VALUES(")
			  .append("FIN_BOOKING_FORM_ACCOUNT_PAYMENT_SEQ.NEXTVAL")
			  .append(",:transactionSetOffApprovalId")
			  .append(",:transactionSetOffEntryId")
			  .append(",:refundAmount")
			  .append(",:bookingFormId")
			  .append(",:statusId")
			  .append(",:createdBy")
			  .append(",SYSDATE")
			  .append(")")
			  .toString();
	  
	  public static final String QRY_TO_UPDATE_BOOKING_FORM_ACCOUNT_PAYMENT = new StringBuilder("")
			  .append("UPDATE FIN_BOOKING_FORM_ACCOUNT_PAYMENT")
			  .append(" SET REFUND_AMOUNT = :refundAmount")
			  .append(" WHERE FIN_TRN_SET_OFF_ENT_ID = :transactionSetOffEntryId")
			  .append(" AND STATUS_ID = :statusId ")
			  .toString();
	  
	  public static final String QRY_TO_INSERT_BOOKING_FORM_ACCOUNT_PAYMENT_DETAILS = new StringBuilder("")
			  .append("INSERT INTO FIN_BOOKING_FORM_ACC_PMT_DTLS (")
			    .append("FIN_BOK_FRM_ACC_PMT_DTLS_ID")
			    .append(",TYPE_ID")
			    .append(",TYPE")
			    .append(",REFUND_AMOUNT")
			    .append(",FIN_BOK_FRM_ACC_PMT_ID")
			    .append(",CREATED_BY")
			    .append(",CREATED_DATE")
			  .append(") VALUES (")
			    .append("FIN_BOOKING_FORM_ACC_PMT_DTLS_SEQ.NEXTVAL")
			    .append(",:typeId")
			    .append(",:type")
			    .append(",:refundAmount")
			    .append(",:bookingFormAccountPaymentId")
			    .append(",:createdBy")
			    .append(",SYSDATE")
			  .append(")")
			  .toString();
	  
	  
	  public static final String QRY_TO_INSERT_TRANSACTION_DOCS_DETAILS = new StringBuilder("")
			.append("INSERT INTO FIN_TRANSACTION_ENTRY_DOC(")
			.append("FIN_TRANSACTION_ENTRY_DOC_ID,")
			.append("FIN_TRANSACTION_ENTRY_ID, LOCATION, DOC_NAME,DOC_TYPE, CREATED_BY, CREATED_DATE ")
			.append(",STATUS_ID")
			.append(",DOC_PATH")
			.append(",RECEIPT_TYPE")
			.append(")VALUES(")
			.append("FIN_TRANSACTION_ENTRY_DOC_SEQ.NEXTVAL,")
			.append(":transactionEntryId,:documentLocation,:documentName,:documentType,:createdBy, SYSDATE")
			.append(",:statusId")
			.append(",:filePath, :receiptType  )")
			.toString();
	  
	  public static final String QRY_TO_INSERT_FIN_ANNY_ENTRY_DOC = new StringBuilder("")
			  .append("INSERT INTO FIN_ANNY_ENTRY_DOC  (")
			  .append("FIN_ANNY_ENTRY_DOC_ID, FIN_ANMS_ENTRY_ID, LOCATION,")
			  .append("DOC_NAME, CREATED_BY,  CREATED_DATE,DOC_PATH, STATUS_ID")
			  .append(")VALUES(")
			  .append("FIN_ANNY_ENTRY_DOC_SEQ.NEXTVAL, :finAnmsEntryId, :location,")
			  .append(":docName, :createdBy, SYSDATE,:filePath,:statusId")
			  .append(")")
			  .toString();
	  
	  public static final String QRY_TO_INACTIVE_FIN_ANNY_ENTRY_DOC = new StringBuilder("")
			  .append("UPDATE FIN_ANNY_ENTRY_DOC SET STATUS_ID = :STATUS_ID WHERE FIN_ANNY_ENTRY_DOC_ID = :FIN_ANNY_ENTRY_DOC_ID ")
			  .toString();
	  
	  public static final String QRY_TO_INSERT_FIN_ANNY_APPROVE_STAT = new StringBuilder("")
			  .append("INSERT INTO FIN_ANNY_APPR_STAT   (")
			  .append("FIN_ANNY_APPR_STAT_ID,")
			  .append("FIN_ANMS_ENTRY_ID,")
			  .append("ACTION_TYPE,")
			  .append("EMP_ID,")
			  .append("COMMENTS,")
			  .append("CREATED_DATE")
			  .append(") VALUES  (")
			  .append("FIN_ANNY_APPR_STAT_SEQ.NEXTVAL,")
			  .append(":anonymousEntryId,")
			  .append(":actionType,")
			  .append(":empId,")
			  .append(":comment,")
			  .append("SYSDATE")
			  .append(")")
			  .toString();
	  
	  public static final String QRY_TO_INSERT_TRANSACTION_COMMENT_DETAILS = new StringBuilder("")
			.append("INSERT INTO FIN_TRANSACTION_COMMENTS")
			.append("(FIN_TRANSACTION_COMMENT_ID,TYPE_ID,TYPE,COMMENTS,CREATED_BY,CREATED_DATE) ")
			.append(" VALUES")
			.append("(FIN_TRANSACTION_COMMENTS_SEQ.NEXTVAL,:typeId,:type,:comments,:createdBy,SYSDATE )")
			.toString();
	  
	  public static final String QRY_TO_INSERT_FIN_ANNY_ENTRY_COMMENTS = new StringBuilder("")
			  .append("INSERT INTO FIN_ANNY_ENTRY_COMMENTS  (")
			  .append("FIN_ANNY_ENTRY_COMMENTS_ID, TYPE_ID, TYPE,COMMENTS, CREATED_BY, CREATED_DATE")
			  .append(") VALUES  (")
			  .append("FIN_ANNY_ENTRY_COMMENTS_SEQ.NEXTVAL, :typeId, :type, :comments, :createdBy,SYSDATE )")
			  .toString();
	  
	  public static final String QRY_TO_INSERT_FIN_BANK_DETAILS = new StringBuilder("")
			  .append("INSERT INTO FIN_BANK   (")
			  .append("  FIN_BANK_ID,")
			  .append("BANK_NAME,")
			  .append("CREATED_BY,")
			  .append("CREATED_DATE,")
			  .append("STATUS_ID)")
			  .append(" VALUES ")
			  .append("(FIN_BANK_SEQ.NEXTVAL,")
			  .append(":bankName,")
			  .append(":createdBy,")
			  .append(":createdDate,")
			  .append(":statusId")
			  .append(")")
		  	  .toString();
	  
	  public static final String QRY_TO_GET_FIN_BANK = new StringBuilder(" FB.FIN_BANK_ID, ")
		  		.append(" FB.BANK_NAME ")
		  		.toString();
	  
	  public static final String QRY_TO_GET_FIN_TRANSACTION_MODE = new StringBuilder(" FTM.TRANSACTION_MODE_ID, ")
		  		.append(" FTM.NAME, ")
		  		.append(" FTM.DESCRIPTION ")
		  		.toString();
	  
	  public static final String QRY_TO_GET_FIN_TRANSACTION_TYPE = new StringBuilder(" SELECT ")
		  		.append(" FTT.TRANSACTION_TYPE_ID, ")
		  		.append(" FTT.NAME, ")
		  		.append(" FTT.DESCRIPTION ")
		  		.toString();

	  public static final String QRY_TO_GET_FIN_TRANSACTION_FOR	 = new StringBuilder(" SELECT ")
		  		.append(" FTF.FIN_TRANSACTION_FOR_ID, ")
		  		.append(" FTF.NAME, ")
		  		.append(" FTF.DESCRIPTION ")
		  		.toString();
	  
	  public static final String QRY_TO_GET_FIN_PROJECT__ACCOUNT = new StringBuilder()
		  		.append(" FPA.FIN_PROJ_ACC_ID, ")
		  		.append(" FPA.FIN_BANK_ID, ")
		  		.append(" FPA.ACCOUNT_NO, ")
		  		.append(" FPA.IFSC_CODE, ")
		  		.append(" FPA.HOLDER_NAME, ")
		  		.append(" FPA.ADDRESS_ID ")
		  		.toString();
	  
	  public static final String QRY_TO_GET_FIN_SITE_PROJ_ACC_MAPPING = new StringBuilder()
		  		.append(" FSAM.FIN_SITE_PROJ_ACC_MAP_ID, ")
		  		.append(" FSAM.SITE_ID ")
		  		.toString();
	  
	  public static final StringBuilder QRY_TO_GET_CUSTOMER_INVOICES = new StringBuilder("SELECT ")
			  .append(QRY_TO_GET_FIN_BOOKING_FORM_ACCOUNTS_DATA)
			  .append(",FIDL.DOC_NAME,FIDL.DOC_PATH AS LOCATION,")
			  .append("MT.DESCRIPTION AS METADATA_NAME ")
			  .append(" FROM FIN_BOOKING_FORM_ACCOUNTS FBFA ")
			  .append("RIGHT JOIN  METADATA_TYPES MT ON MT.METADATA_TYPES_ID = FBFA.TYPE ")
			  .append("LEFT OUTER JOIN FIN_INVOICE_DOCUMENT_LOCATION FIDL ON FIDL.TYPE = FBFA.TYPE AND FIDL.TYPE_ID =FBFA.TYPE_ID ")
			  .append(" WHERE FBFA.TYPE IN (:TYPEs) AND FBFA.STATUS_ID = :STATUS_ID ")
			  .append("AND FBFA.BOOKING_FORM_ID = :BOOKING_FORM_ID ")
			  .append("ORDER BY FBFA.TYPE,FBFA.CREATED_DATE ");
	  
	  public static final String QRY_TO_GET_FIN_TRANSACTION_ENTRY = new StringBuilder()
			  .append(" DISTINCT(FTE.FIN_TRANSACTION_ENTRY_ID) AS FIN_TRANSACTION_ENTRY_ID, ")//added distinct
			  .append(" FTE.FIN_TRANSACTION_TYPE_ID, ")
			  .append(" FTE.FIN_TRANSACTION_MODE_ID, ")
			  .append(" FTE.SITE_ID, ")
			  .append(" FTE.BOOKING_FORM_ID, ")
			  .append(" FTE.AMOUNT, ")
			  .append(" FTE.SOURCE_OF_FUNDS, ")
			  .append(" FTE.FIN_BANK_ID, ")
			  .append(" FTE.PAYMENT_DATE, ")
			  .append(" FTE.RECEIVED_DATE, ")
			  .append(" FTE.TRANSACTION_FOR, ")
			  .append(" FTE.COMMENTS, ")
			  .append(" FTE.CREATED_BY, ")
			  .append(" FTE.CREATED_DATE, ")
			  .append(" FTE.MODIFIED_BY, ")
			  .append(" FTE.MODIFIED_DATE, ")
			  .append(" FTE.FIN_SITE_PROJ_ACC_MAP_ID, ")
			  .append(" FTE.FIN_TRANSACTION_NO, ")
			  .append(" FTE.TRANSACTION_RECEIPT_NO,")
			  .append(" FTE.STATUS_ID, ")
			  .append(" FTE.TRANSACTION_STATUS_ID,")
			  .append(" FTE.TRANSACTION_CLOSED_DATE as TRANSACTION_CLOSED_DATE11")
			  .toString();
	  
	  public static final String QRY_TO_GET_FIN_TRANSACTION_ENTRY_PAYMENT_SET_OFF = new StringBuilder()
			  .append("SELECT FTR.FIN_TRANSACTION_ENTRY_ID,FTSO.SET_OFF_TYPE, MT.NAME AS METADATA_NAME,NVL(FTSO.SET_OFF_AMOUNT,0) as SET_OFF_AMOUNT ")
			  .append(" FROM FIN_TRANSACTION_SET_OFF FTSO,")
			  .append("FIN_TRANSACTION_SET_OFF_ENTRY FTSOE,FIN_TRANSACTION_ENTRY FTR, ")
			  .append("METADATA_TYPES MT ")
			  .append(" WHERE FTSOE.FIN_TRN_SET_OFF_ENT_ID = FTSO.FIN_TRN_SET_OFF_ENT_ID")
			  .append(" AND MT.METADATA_TYPES_ID = FTSO.SET_OFF_TYPE AND FTSOE.FIN_TRANSACTION_ENTRY_ID = FTR.FIN_TRANSACTION_ENTRY_ID ")
			  
			  .append(" AND FTSO.STATUS_ID = :STATUS_ID")
			  .append(" AND NVL(FTSO.SET_OFF_AMOUNT,0) != 0 ")
			  .toString();
	  
	  public static final String QRY_TO_CHECK_PENDING_TRANSACTION_ENTRY_DETAILS = new StringBuilder("SELECT ")
			  .append(QRY_TO_GET_FIN_TRANSACTION_ENTRY)
			  .append(" FROM FIN_TRANSACTION_ENTRY FTE WHERE FTE.BOOKING_FORM_ID = :BOOKING_FORM_ID ")
			  .append(" AND FTE.STATUS_ID = :STATUS_ID")
			  .toString();
	  
	  public static final String QRY_TO_CHECK_READJUST_TRANSACTION_ENTRY_DETAILS = new StringBuilder("SELECT ")
			  .append(QRY_TO_GET_FIN_TRANSACTION_ENTRY)
			  .append(" FROM FIN_TRANSACTION_ENTRY FTE WHERE FTE.BOOKING_FORM_ID = :BOOKING_FORM_ID ")
			  .append(" AND FTE.STATUS_ID = :STATUS_ID")
			  .toString();
	  
	  public static final String QRY_TO_GET_LEVEL_NAME_BY_EMPID = new StringBuilder("")
		        .append(" JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSOE ON (FTE.FIN_TRANSACTION_ENTRY_ID =FTSOE. FIN_TRANSACTION_ENTRY_ID)")
		        .append(" JOIN FIN_TRANSACTION_SET_OFF_APPROVAL FTSOA ON (FTSOA.FIN_TRN_SET_OFF_ENT_ID = FTSOE. FIN_TRN_SET_OFF_ENT_ID)")
		        .append(" JOIN FIN_TRANSACTION_SET_OFF_APPROVAL_LEVEL FTSOAL ON (FTSOAL.FIN_TRN_SET_OFF_APPR_LVL_ID = FTSOA.FIN_TRN_SET_OFF_APPR_LVL_ID)")
		        .append(" JOIN FIN_TRANSACTION_SET_OFF_LEVEL FTSOL ON (FTSOL.FIN_TRAN_SET_OFF_LEVEL_ID = FTSOAL.FIN_TRAN_SET_OFF_LEVEL_ID)")
		        .append(" JOIN FIN_TRANSACTION_LEVEL FTL ON (FTL.FIN_LEVEL_ID = FTSOL.FIN_LEVEL_ID)")
		        //.append(" JOIN FIN_TRANSACTION_LEVEL_DEPT_MAP FTLDM ON (FTLDM.FIN_LEVEL_ID = FTL.FIN_LEVEL_ID)")
		        //.append(" JOIN DEPARTMENT DEPT ON (DEPT.DEPT_ID = FTLDM.DEPT_ID)")
		        .append("JOIN FIN_TRN_EMP_SET_OFF_LEVEL_MAPPING FTESOLM ON (FTESOLM.FIN_TRAN_SET_OFF_LEVEL_ID = FTSOL.FIN_TRAN_SET_OFF_LEVEL_ID)")
		        //.append("JOIN EMPLOYEE_DETAILS ED ON(ED.EMPLOYEE_ID = FTESOLM.EMP_ID)")
			  .toString();
	  
	  public static final String QRY_TO_GET_MIS_RECEIPT_CHEQUE = new StringBuilder( " SELECT ")
			  .append(" FTCH.FIN_TRANSACTION_CHEQUE_ID, ")
			  .append(" FTE.FIN_TRANSACTION_ENTRY_ID, ")
			  .append(" FTCH.CHEQUE_NO, ")
			  .append(" FTE.PAYMENT_DATE AS TRANSACTION_DATE,FTE.TRANSACTION_CLOSED_DATE,FTE.IS_RECORD_UPLOADED,FTE.EXCEL_RECORD_NO, ")
			  .append(" FTCH.CLEARANCE_DATE,FTCH.CHEQUE_DEPOSITED_DATE,")
			  .append(" FTCH.CHEQUE_HANDOVER_DATE,")
			  .append(" FTCH.CHEQUE_BOUNCE_REASON_ID,")
			  .append(" FTCH.CHEQUE_BOUNCE_COMMENT, FTCH.CHEQUE_BOUNCE_DATE,")
			  .append(" (SELECT NAME FROM METADATA_TYPES MT WHERE FTCH.CHEQUE_BOUNCE_REASON_ID = MT.METADATA_TYPES_ID) as CHEQUE_BOUNCE_REASON_VALUE,")
			  .append(" FTCH.CHEQUE_DATE, ")
			  .append(" FTE.AMOUNT, ")
			  .append(" FTE.RECEIVED_DATE, ")
			  .append(" (SELECT INITCAP(MT.STATUS) FROM STATUS MT WHERE FTE.TRANSACTION_STATUS_ID = MT.STATUS_ID AND ROWNUM = 1) as TRANSACTION_STATUS_NAME,")
			  .append(" FTE.TRANSACTION_STATUS_ID,")
			  .append(" FTE.COMMENTS, ")
			  .append(" FTE.FIN_TRANSACTION_NO, ")
			  .append(" FTE.SOURCE_OF_FUNDS, ")
			  .append(" FTE.TRANSACTION_RECEIPT_NO,")
			  .append(" FTE.SITE_ID,")
			  .append(" SI.NAME AS SITE_NAME,")
			  //.append(" FTE.PAYABLE_AMOUNT, ")
			  .append(" FTE.BOOKING_FORM_ID, ")
			  .append(" FIN_TRANSACTION_MODE_ID, ")
			  .append(" FIN_TRANSACTION_TYPE_ID, ")
			  .append(" FTE.PAYMENT_DATE, ")
			  .append(" FIB.FIN_BANK_ID, ")
			  .append(" FIB.BANK_NAME, ")
			  //.append(" FPA.FIN_PROJ_ACC_ID, ")
			  .append(" FTE.FIN_SITE_PROJ_ACC_MAP_ID AS FIN_PROJ_ACC_ID,")
			  .append(" FPA.ACCOUNT_NO, ")
			  .append(" FTED.LOCATION, ")
			  .append(" FTED.DOC_NAME, ")
			  .append(" FTSOE.FIN_TRN_SET_OFF_ENT_ID,")
			  .append(" FTM.NAME AS TRANSACTION_MODE, ")
			  .append(" FTT.NAME AS TRANSACTION_TYPE_NAME,")
			  .append(" FTR.NAME AS TRANSACTION_FOR, ")
			  .append(" FTE.TRANSACTION_FOR AS TRANSACTION_FOR_ID ")
			  .append(" FROM FIN_TRANSACTION_ENTRY FTE")
			  .append(" LEFT OUTER JOIN FIN_TRANSACTION_CHEQUE FTCH ")
			  .append(" ON(FTE.FIN_TRANSACTION_ENTRY_ID=FTCH.FIN_TRANSACTION_ENTRY_ID) ")
			  .append(" JOIN SITE SI ON SI.SITE_ID = FTE.SITE_ID")
			  .append(" LEFT OUTER JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSOE ON (FTE.FIN_TRANSACTION_ENTRY_ID = FTSOE.FIN_TRANSACTION_ENTRY_ID)")
			  .append(" LEFT OUTER JOIN FIN_BANK FIB ")
			  .append(" ON(FIB.FIN_BANK_ID=FTE.FIN_BANK_ID) ")
			  .append(" LEFT OUTER JOIN  FIN_SITE_PROJ_ACC_MAPPING FSPAM ")
			  .append(" ON(FSPAM.FIN_SITE_PROJ_ACC_MAP_ID=FTE.FIN_SITE_PROJ_ACC_MAP_ID) ")
			  .append(" LEFT OUTER JOIN  FIN_PROJECT_ACCOUNTS FPA ")
			  .append(" ON(FPA.FIN_PROJ_ACC_ID=FSPAM.FIN_PROJ_ACC_ID) ")
			  .append(" FULL JOIN FIN_TRANSACTION_ENTRY_DOC FTED ")
			  .append(" ON(FTED.FIN_TRANSACTION_ENTRY_ID=FTE.FIN_TRANSACTION_ENTRY_ID) ")
			  .append(" JOIN FIN_TRANSACTION_MODE FTM ")
			  .append(" ON(FTM.TRANSACTION_MODE_ID=FTE.FIN_TRANSACTION_MODE_ID) ")
			  .append(" FULL JOIN FIN_TRANSACTION_FOR FTR ")
			  .append(" ON(FTR.FIN_TRANSACTION_FOR_ID=FTE.TRANSACTION_FOR) ")

			  .append(" FULL JOIN FIN_TRANSACTION_TYPE FTT ")
			  .append(" ON(FTT.TRANSACTION_TYPE_ID=FTE.FIN_TRANSACTION_TYPE_ID) ")

			  .append(" WHERE FTE.STATUS_ID=:STATUS_ID ")
			  .append(" AND FTE.BOOKING_FORM_ID=:FLAT_BOOK_ID ")
			  .append(" AND FTE.FIN_TRANSACTION_ENTRY_ID=:FIN_TRANSACTION_ENTRY_ID ")
			  .toString();
	  
	  public static final String QRY_TO_GET_TRANSACTION_ENTRY_DOC = new StringBuilder( " SELECT ")
			  .append(" FTED.FIN_TRANSACTION_ENTRY_DOC_ID")
			  .append(",FTED.FIN_TRANSACTION_ENTRY_ID")
			  .append(",FTED.LOCATION")
			  .append(",FTED.DOC_NAME")
			  .append(",FTED.DOC_TYPE")
			  .append(",FTED.DOC_PATH")
			  .append(" FROM FIN_TRANSACTION_ENTRY FTE ")
			  .append(" FULL JOIN FIN_TRANSACTION_ENTRY_DOC FTED ")
			  .append(" ON(FTED.FIN_TRANSACTION_ENTRY_ID=FTE.FIN_TRANSACTION_ENTRY_ID) ")
			  .append(" WHERE FTE.FIN_TRANSACTION_ENTRY_ID = :FIN_TRANSACTION_ENTRY_ID")
			  .append(" AND FTED.DOC_TYPE = :DOC_TYPE ")
			  .append(" AND FTED.STATUS_ID = :STATUS_ID")
			  .toString();
	  
	  public static final String QRY_TO_UPDATE_TRANSACTION_ENTRY_DOC = new StringBuilder( )
			  .append(" UPDATE FIN_TRANSACTION_ENTRY_DOC SET STATUS_ID = :STATUS_ID ")
			  .append(" WHERE  DOC_TYPE = :DOC_TYPE ")
			  //.append(" AND  FTE.FIN_TRANSACTION_ENTRY_ID = :FIN_TRANSACTION_ENTRY_ID ")
			  .append(" AND  STATUS_ID = :ACTIVE_STATUS_ID")
			  .append(" AND  FIN_TRANSACTION_ENTRY_DOC_ID = :FIN_TRANSACTION_ENTRY_DOC_ID ")
			  .toString();
	  
	  public static final String QRY_TO_GET_FIN_TRANSACTION_SET_OFF = new StringBuilder()
			  .append(" FTSO.FIN_TRN_SET_OFF_ID, ")
			  .append(" FTSO.SET_OFF_TYPE, ")
			  .append(" FTSO.PAYABLE_AMOUNT, ")
			  .append(" FTSO.SET_OFF_AMOUNT, ")
			  .append(" FTSO.CREATED_BY, ")
			  .append(" FTSO.CREATED_DATE, ")
			  .append(" FTSO.FIN_TRN_SET_OFF_ENT_ID ")
			  .toString();
	  
	  public static final String QRY_TO_GET_FIN_TRANSACTION_SET_OFF_BY_ENTRY_ID = new StringBuilder(" SELECT ")
			  .append(SqlQuery.QRY_TO_GET_FIN_TRANSACTION_SET_OFF)
			  .append(" ,MT.NAME AS METADATA_NAME ")
			  .append(",FTSO.PAID_BY")
			  .append(" ,NVL(FBFA.FIN_BOK_ACC_INVOICE_NO, FTSO.FIN_BOK_ACC_INVOICE_NO) AS FIN_BOK_ACC_INVOICE_NO ")
			  .append(",(SELECT INITCAP(NAME) FROM METADATA_TYPES WHERE FTSO.PAID_BY = METADATA_TYPES_ID ) AS PAID_BY_NAME")
			 //.append(" ,FTSO.FIN_BOK_ACC_INVOICE_NO AS ACC_INVOICE_NO_FOR_REFUND ")
			  .append(" ,FTSOAM.FIN_BOOKING_FORM_ACCOUNTS_ID")
			  .append(" FROM FIN_TRANSACTION_SET_OFF FTSO ")
			  .append(" FULL JOIN METADATA_TYPES MT ")
			  .append(" ON(MT.METADATA_TYPES_ID=FTSO.SET_OFF_TYPE) ")
			  .append(" JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSOE ")
			  .append(" ON(FTSOE.FIN_TRN_SET_OFF_ENT_ID=FTSO.FIN_TRN_SET_OFF_ENT_ID) ")
			  .append(" LEFT OUTER JOIN FIN_TRN_SET_OFF_ACC_MAPPING FTSOAM ")
			  .append(" ON(FTSOAM.FIN_TRN_SET_OFF_ID=FTSO.FIN_TRN_SET_OFF_ID  AND FTSOAM.STATUS_ID = :STATUS_ID ) ")
			  .append(" LEFT OUTER JOIN FIN_BOOKING_FORM_ACCOUNTS FBFA ")
			  .append(" ON(FBFA.FIN_BOOKING_FORM_ACCOUNTS_ID=FTSOAM.FIN_BOOKING_FORM_ACCOUNTS_ID AND FBFA.STATUS_ID = :STATUS_ID ) ")
			  .toString();

	  public static final String QRY_TO_GET_FIN_TRANSACTION__ENTRY_INCOMPLETE_TRN = new StringBuilder("")
			  .append(" SELECT  FTE.TRANSACTION_RECEIPT_NO,  FTE.FIN_TRANSACTION_ENTRY_ID, ")
			  .append(" FTE.FIN_TRANSACTION_MODE_ID, FTE.FIN_TRANSACTION_TYPE_ID,")
			  .append(" FBA.FIN_BOOKING_FORM_ACCOUNTS_ID,FBA.TYPE, FBA.TYPE_ID,")
			  .append(" (SELECT FTT.NAME FROM  FIN_TRANSACTION_TYPE FTT WHERE FTT.TRANSACTION_TYPE_ID=FTE.FIN_TRANSACTION_TYPE_ID ) AS TRANSACTION_TYPE_NAME,")
			  .append(" FTE.BOOKING_FORM_ID,  FTE.AMOUNT,")
			  .append(" FTSO.SET_OFF_AMOUNT,")
			  .append(" FTE.CREATED_DATE AS TRN_CREATION_DATE,")
			  .append(" FTE.RECEIVED_DATE,FTE.PAYMENT_DATE,FTE.TRANSACTION_STATUS_ID,")
			  .append(" NVL(FTC.CHEQUE_NO,FTO.REFERENCE_NO) AS CHEQUE_OR_REFERENCE_NO,")
		      .append(" (SELECT STATUS FROM STATUS WHERE STATUS_ID = FTE.TRANSACTION_STATUS_ID) AS TRANSACTION_STATUS,")
		      .append(" CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTE.PAYMENT_DATE ELSE FTE.RECEIVED_DATE END AS TRANSACTION_DATE,")
		      .append(" CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.CHEQUE_NO ELSE  FTO.REFERENCE_NO END AS REFERENCE_NO,")
		      .append(" CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.CLEARANCE_DATE ELSE FTE.RECEIVED_DATE END AS CLEARANCE_DATE")
			  .append(" FROM FIN_TRANSACTION_SET_OFF FTSO ")
			  .append(" JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSOE ")
			  .append(" ON(FTSOE.FIN_TRN_SET_OFF_ENT_ID=FTSO.FIN_TRN_SET_OFF_ENT_ID) ")
			  .append(" INNER JOIN FIN_TRANSACTION_ENTRY FTE ")
			  .append(" ON FTSOE.FIN_TRANSACTION_ENTRY_ID = FTE.FIN_TRANSACTION_ENTRY_ID AND FTE.STATUS_ID = :STATUS_ID ")
			  
		      .append(" LEFT JOIN FIN_TRANSACTION_ONLINE FTO ")
		      .append(" ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTO.FIN_TRANSACTION_ENTRY_ID ")
		      .append(" LEFT JOIN FIN_TRANSACTION_CHEQUE FTC ")
		      .append(" ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTC.FIN_TRANSACTION_ENTRY_ID ")
			  
			  .append(" LEFT OUTER JOIN FIN_TRN_SET_OFF_ACC_MAPPING FTSOAM ")
			  .append(" ON(FTSOAM.FIN_TRN_SET_OFF_ID=FTSO.FIN_TRN_SET_OFF_ID  AND FTSOAM.STATUS_ID = :STATUS_ID ) ")
			  .append(" LEFT OUTER JOIN FIN_BOOKING_FORM_ACCOUNTS FBA ")
			  .append(" ON(FBA.FIN_BOOKING_FORM_ACCOUNTS_ID=FTSOAM.FIN_BOOKING_FORM_ACCOUNTS_ID AND FBA.STATUS_ID = :STATUS_ID )")
			  .append(" WHERE FTE.TRANSACTION_STATUS_ID = :TRANSACTION_STATUS_ID AND FTE.STATUS_ID = :STATUS_ID ") 
			  .append(" AND FTE.BOOKING_FORM_ID = :BOOKING_FORM_ID")
			  .toString();

	  public static final String QRY_TO_GET_FIN_TRANSACTION_ENTRY_EXCESS_AMOUNT_TRN = new StringBuilder("")
			  .append(" SELECT FTE.TRANSACTION_RECEIPT_NO,  FTE.FIN_TRANSACTION_ENTRY_ID,")
			  .append(" FTE.FIN_TRANSACTION_MODE_ID,	  FTE.FIN_TRANSACTION_TYPE_ID,")
			  .append(" (SELECT FTT.NAME FROM  FIN_TRANSACTION_TYPE FTT WHERE FTT.TRANSACTION_TYPE_ID=FTE.FIN_TRANSACTION_TYPE_ID ) AS TRANSACTION_TYPE_NAME,")
			  .append(" FTM.NAME AS TRANSACTION_MODE,")
			  .append(" FTE.BOOKING_FORM_ID,  FTE.AMOUNT,FTE.TRANSACTION_STATUS_ID,FTSE.FIN_TRN_SET_OFF_ENT_ID,")
			  .append(" FTE.CREATED_DATE AS TRN_CREATION_DATE,")
			  .append(" FTSO.SET_OFF_AMOUNT,")
			  .append(" FTE.RECEIVED_DATE,FTE.PAYMENT_DATE,")
			  .append(" NVL(FTC.CHEQUE_NO,FTO.REFERENCE_NO) AS CHEQUE_OR_REFERENCE_NO,")
			  .append(" (SELECT STATUS FROM STATUS WHERE STATUS_ID = FTE.TRANSACTION_STATUS_ID) AS TRANSACTION_STATUS,")
			  .append(" CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTE.PAYMENT_DATE ELSE FTE.RECEIVED_DATE END AS TRANSACTION_DATE,")
			  .append(" CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.CHEQUE_NO ELSE  FTO.REFERENCE_NO END AS REFERENCE_NO,")
			  .append(" CASE WHEN FTE.FIN_TRANSACTION_MODE_ID = 1 THEN  FTC.CLEARANCE_DATE ELSE FTE.RECEIVED_DATE END AS CLEARANCE_DATE")
			  .append(" FROM FIN_BOOKING_FORM_RECEIPTS FBR ")
			  .append(" INNER JOIN FIN_BOOKING_FORM_EXCESS_AMOUNT FBFEA ON FBFEA.FIN_BOK_FRM_RCPT_ID = FBR.FIN_BOK_FRM_RCPT_ID")
			  .append(" INNER JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSE ")
			  .append(" ON FBR.FIN_TRN_SET_OFF_ENT_ID = FTSE.FIN_TRN_SET_OFF_ENT_ID ")
			  .append(" LEFT OUTER JOIN FIN_TRANSACTION_SET_OFF FTSO ")
			  .append(" ON FTSO.FIN_TRN_SET_OFF_ENT_ID = FTSE.FIN_TRN_SET_OFF_ENT_ID AND FTSO.SET_OFF_TYPE IN (:TYPE) AND FTSO.STATUS_ID = :STATUS_ID ")
			  .append(" INNER JOIN FIN_TRANSACTION_ENTRY FTE ")
			  .append(" ON FTSE.FIN_TRANSACTION_ENTRY_ID = FTE.FIN_TRANSACTION_ENTRY_ID AND FTE.STATUS_ID = :STATUS_ID ")
			  .append(" INNER JOIN FIN_TRANSACTION_MODE FTM ")
			  .append(" ON FTE.FIN_TRANSACTION_MODE_ID = FTM.TRANSACTION_MODE_ID ")
			  .append(" LEFT JOIN FIN_TRANSACTION_ONLINE FTO ")
			  .append(" ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTO.FIN_TRANSACTION_ENTRY_ID ")
			  .append(" LEFT JOIN FIN_TRANSACTION_CHEQUE FTC ")
			  .append(" ON  FTE.FIN_TRANSACTION_ENTRY_ID = FTC.FIN_TRANSACTION_ENTRY_ID ")
			  .append(" WHERE FBR.BOOKING_FORM_ID = :BOOKING_FORM_ID AND FBR.STATUS_ID = :STATUS_ID ")
			  .append(" AND FTE.TRANSACTION_STATUS_ID = :TRANSACTION_STATUS_ID ")
			  .append(" AND FTE.STATUS_ID = :STATUS_ID ")
			  .append(" AND FBFEA.EXCESS_AMOUNT = FBR.PAID_AMOUNT")
			  .toString();
	  
	  public static final String QRY_TO_GET_FIN_TRANSACTION_SET_OFF_PAYMENT_BY_ENTRY_ID = new StringBuilder(" SELECT ")
			  .append(SqlQuery.QRY_TO_GET_FIN_TRANSACTION_SET_OFF)
			  .append(",MT.NAME AS METADATA_NAME")
		      .append(",FTPSOAM.TYPE,FTPSOAM.TYPE_ID")
			  .append(" FROM FIN_TRANSACTION_SET_OFF FTSO ")
			  .append(" JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSOE ")
			  .append(" ON(FTSOE.FIN_TRN_SET_OFF_ENT_ID=FTSO.FIN_TRN_SET_OFF_ENT_ID) ")
			  .append(" JOIN FIN_TRN_PMT_SET_OFF_ACC_MAP FTPSOAM ")
			  .append(" ON(FTPSOAM.FIN_TRN_SET_OFF_ID=FTSO.FIN_TRN_SET_OFF_ID)")
			  .append(" FULL JOIN METADATA_TYPES MT ")
			  .append(" ON(MT.METADATA_TYPES_ID=FTPSOAM.TYPE) ")
			  .toString();
	  
	  public static final String QRY_TO_GET_FIN_TRANSACTION_COMMENTS = new StringBuilder()
			  .append(" FTCM.FIN_TRANSACTION_COMMENT_ID, ")
			  .append(" FTCM.TYPE_ID, ")
			  .append(" FTCM.TYPE, ")
			  .append(" FTCM.COMMENTS, ")
			  .append(" FTCM.CREATED_BY, ")
			  .append(" FTCM.CREATED_DATE, ")
			  .append(" FTCM.MODIFIED_BY, ")
			  .append(" FTCM.MODIFIED_DATE ")
			  .toString();
			  
	  public static final String QRY_TO_GET_FIN_TRANSACTION_COMMENTS_BY_ENTRY_ID = new StringBuilder(" SELECT ")
			  .append(SqlQuery.QRY_TO_GET_FIN_TRANSACTION_COMMENTS)
			  .append(" ,MT.NAME AS METADATA_NAME ")
			  .append(" FROM FIN_TRANSACTION_COMMENTS FTCM ")
			  .append(" FULL JOIN METADATA_TYPES MT ")
			  .append(" ON(MT.METADATA_TYPES_ID=FTCM.TYPE) ")
			  .toString();
	  
	  public static final String QRY_TO_GET_MIS_RECEIPT_ONLINE = new StringBuilder( " SELECT ")
			  .append(" FTON.FIN_TRANSACTION_ONLINE_ID, ")
			  .append(" FTON.FIN_TRANSACTION_ENTRY_ID, ")
			  .append(" FTON.REFERENCE_NO, ")
			  .append(" FTON.TRANSACTION_DATE, ")
			  .append(" FTON.CLEARANCE_DATE,")
			  .append(" FTON.AMOUNT, ")
			  .append(" FTE.RECEIVED_DATE as RECEIVED_DATE,FTE.TRANSACTION_CLOSED_DATE,FTE.IS_RECORD_UPLOADED,FTE.EXCEL_RECORD_NO,")
			  .append(" FTE.RECEIVED_DATE, ")
			  .append(" (SELECT INITCAP(MT.STATUS) FROM STATUS MT WHERE FTE.TRANSACTION_STATUS_ID = MT.STATUS_ID AND ROWNUM = 1) as TRANSACTION_STATUS_NAME,")
			  .append(" FTE.TRANSACTION_STATUS_ID,")
			  .append(" FTE.COMMENTS, ")
			  .append(" FTE.SOURCE_OF_FUNDS, ")
			  .append(" FTE.FIN_TRANSACTION_NO, ")
			  .append(" FTE.TRANSACTION_RECEIPT_NO,")
			  .append(" FTE.SITE_ID,")
			  .append(" SI.NAME AS SITE_NAME,")
			  //.append(" FTE.PAYABLE_AMOUNT, ")
			  .append(" FTE.BOOKING_FORM_ID, ")
			  .append(" FTE.PAYMENT_DATE, ")
			  .append(" FIN_TRANSACTION_MODE_ID, ")
			  .append(" FIN_TRANSACTION_TYPE_ID, ")
			  .append(" FTON.FIN_TRANSFER_MODE_ID,")
			  .append(" FTON.ACCOUNT_NUMBER,")
			  .append(" FIB.FIN_BANK_ID, ")
			  .append(" FIB.BANK_NAME, ")
			  //.append(" FPA.FIN_PROJ_ACC_ID, ")
			  .append(" FTE.FIN_SITE_PROJ_ACC_MAP_ID AS FIN_PROJ_ACC_ID,")
			  .append(" FPA.ACCOUNT_NO, ")
			  .append(" FTMO.NAME AS TRANSFER_MODE, ")
			  .append(" FTED.LOCATION, ")
			  .append(" FTED.DOC_NAME, ")
			  .append(" FTSOE.FIN_TRN_SET_OFF_ENT_ID,")
			  .append(" FTM.NAME AS TRANSACTION_MODE, ")
			  .append(" FTT.NAME AS TRANSACTION_TYPE_NAME,")
			  .append(" FTR.NAME AS TRANSACTION_FOR, ")
			  .append(" FTE.TRANSACTION_FOR AS TRANSACTION_FOR_ID ")
			  .append(" FROM FIN_TRANSACTION_ONLINE FTON ")
			  .append(" JOIN FIN_TRANSACTION_ENTRY FTE ")
			  .append(" ON(FTE.FIN_TRANSACTION_ENTRY_ID=FTON.FIN_TRANSACTION_ENTRY_ID) ")
			  .append(" JOIN SITE SI ON SI.SITE_ID = FTE.SITE_ID")
			  .append(" LEFT OUTER JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSOE ON (FTE.FIN_TRANSACTION_ENTRY_ID = FTSOE.FIN_TRANSACTION_ENTRY_ID)")
			  .append(" LEFT OUTER JOIN FIN_BANK FIB ")
			  .append(" ON(FIB.FIN_BANK_ID=FTE.FIN_BANK_ID) ")
			  .append(" LEFT OUTER JOIN FIN_SITE_PROJ_ACC_MAPPING FSPAM ")
			  .append(" ON(FSPAM.FIN_SITE_PROJ_ACC_MAP_ID=FTE.FIN_SITE_PROJ_ACC_MAP_ID) ")
			  .append(" LEFT OUTER JOIN FIN_PROJECT_ACCOUNTS FPA ")
			  .append(" ON(FPA.FIN_PROJ_ACC_ID=FSPAM.FIN_PROJ_ACC_ID) ")
			  .append(" LEFT OUTER JOIN  FIN_TRANSFER_MODE FTMO ")
			  .append(" ON(FTMO.TRANSFER_MODE_ID=FTON.FIN_TRANSFER_MODE_ID) ")
			  .append(" FULL JOIN FIN_TRANSACTION_ENTRY_DOC FTED ")
			  .append(" ON(FTED.FIN_TRANSACTION_ENTRY_ID=FTE.FIN_TRANSACTION_ENTRY_ID) ")// AND FTED.DOC_TYPE = :DOC_TYPE
			  .append(" JOIN FIN_TRANSACTION_MODE FTM ")
			  .append(" ON(FTM.TRANSACTION_MODE_ID=FTE.FIN_TRANSACTION_MODE_ID) ")
/*			  .append(" FULL JOIN METADATA_TYPES MDTY ")
			  .append(" ON (MDTY.METADATA_TYPES_ID=FTE.TRANSACTION_FOR) ")*/
			  .append(" LEFT OUTER JOIN FIN_TRANSACTION_FOR FTR ")
			  .append(" ON(FTR.FIN_TRANSACTION_FOR_ID=FTE.TRANSACTION_FOR) ")
			  
			  .append(" FULL JOIN FIN_TRANSACTION_TYPE FTT ")
			  .append(" ON(FTT.TRANSACTION_TYPE_ID=FTE.FIN_TRANSACTION_TYPE_ID) ")
			  
			  .append(" WHERE FTE.STATUS_ID=:STATUS_ID ")
			  .append(" AND FTE.BOOKING_FORM_ID=:FLAT_BOOK_ID ")
			  .append(" AND FTE.FIN_TRANSACTION_ENTRY_ID=:FIN_TRANSACTION_ENTRY_ID ")
			  .toString();
	  
	  public static final StringBuilder QRY_TO_GET_FIN_BOOKING_FORM_ACCOUNTS_INVOICES=new StringBuilder().append(" SELECT ")
			  .append(SqlQuery.QRY_TO_GET_FIN_BOOKING_FORM_ACCOUNTS_DATA)
			  .append(" ,MDTY.NAME AS METADATA_NAME ")
			  .append(" ,MDTY.DESCRIPTION AS METADATA_DESC ")
			  .append(",FIDL.DOC_NAME,FIDL.DOC_PATH AS LOCATION ")
			  .append(" FROM FIN_BOOKING_FORM_ACCOUNTS FBFA ")
			  .append(" JOIN METADATA_TYPES MDTY ON(MDTY.METADATA_TYPES_ID=FBFA.TYPE) ")
			  .append("LEFT OUTER JOIN FIN_INVOICE_DOCUMENT_LOCATION FIDL ON FIDL.TYPE = FBFA.TYPE AND FIDL.TYPE_ID =FBFA.TYPE_ID ")
			  .append(" WHERE FBFA.STATUS_ID=:STATUS_ID ")
			  .append(" AND FBFA.TYPE IN(:TYPE) ")
			  .append(" AND FBFA.BOOKING_FORM_ID=:BOOKING_FORM_ID ");
	  
	  public static final StringBuilder QRY_TO_GET_FIN_BOOKING_FORM_ACCOUNTS_CUSTOMER_INVOICES=new StringBuilder().append(" SELECT  ")
			  .append(" FBFA.FIN_BOOKING_FORM_ACCOUNTS_ID,                                                                          ")
			  .append(" FBFA.TYPE_ID,                                                                                               ")
			  .append(" FBFA.TYPE,                                                                                                  ")
			  .append(" NVL(FBFA.PAY_AMOUNT,0) AS PAY_AMOUNT,                                                                       ")
			  .append(" NVL(FBFA.PAID_AMOUNT,0) AS PAID_AMOUNT,                                                                     ")
			  .append(" FBFA.DUE_DATE,                                                                                              ")
			  .append(" FBFA.PAID_DATE,                                                                                             ")
			  .append(" FBFA.STATUS_ID,                                                                                             ")
			  .append(" FBFA.BOOKING_FORM_ID,                                                                                       ")
			  .append(" FBFA.PAYMENT_STATUS,                                                                                        ")
			  .append(" NVL(FBFA.BALANCE_AMOUNT,0) AS BALANCE_AMOUNT,                                                               ")
			  .append(" NVL(FBFA.PRINCIPAL_AMOUNT,0) AS PRINCIPAL_AMOUNT,                                                           ")
			  .append(" NVL(FBFA.REFUND_AMOUNT,0) AS REFUND_AMOUNT,                                                                 ")
			  .append(" FBFA.CREATED_DATE,                                                                                          ")
			  .append(" NVL(FBFA.PAID_TAX_AMOUNT,0) AS PAID_TAX_AMOUNT,                                                             ")
			  .append(" NVL(FBFA.PAID_TAX_AMOUNT/2,0) AS PAID_SGST_AMOUNT,                                                          ")
			  .append(" NVL(FBFA.PAID_TAX_AMOUNT/2,0) AS PAID_CGST_AMOUNT,                                                          ")
			  .append(" FBFA.IS_INTEREST_APPLICABLE,                                                                                ")
			  .append(" CASE                                                                                                        ")
			  .append(" WHEN FBFA.TYPE=35 THEN 'Legal-' || FBFA.FIN_BOK_ACC_INVOICE_NO                                              ")
			  .append(" WHEN FBFA.TYPE=34 THEN 'Modification-' || FBFA.FIN_BOK_ACC_INVOICE_NO                                       ")
			  .append(" ELSE FBFA.FIN_BOK_ACC_INVOICE_NO                                                                            ")
			  .append(" END AS FIN_BOK_ACC_INVOICE_NO,                                                                              ")
			  .append(" FBFA.TAX_AMOUNT,                                                                                            ")
			  .append(" FBFA.TAX_AMOUNT/2 AS SGST_AMOUNT,                                                                           ")
			  .append(" FBFA.TAX_AMOUNT/2 AS CGST_AMOUNT,                                                                           ")
			  .append(" MDTY.NAME AS METADATA_NAME,                                                                                 ")
			  .append(" MDTY.DESCRIPTION AS METADATA_DESC,                                                                          ")
			  .append(" FIDL.DOC_NAME,FIDL.DOC_PATH AS LOCATION                                                                     ")
			  .append(" FROM FIN_BOOKING_FORM_ACCOUNTS FBFA                                                                         ")
			  .append(" JOIN METADATA_TYPES MDTY ON(MDTY.METADATA_TYPES_ID=FBFA.TYPE)                                               ")
			  .append(" LEFT OUTER JOIN FIN_INVOICE_DOCUMENT_LOCATION FIDL ON FIDL.TYPE = FBFA.TYPE AND FIDL.TYPE_ID =FBFA.TYPE_ID  ")
			  .append(" WHERE FBFA.STATUS_ID=:STATUS_ID                                                                             ")
			  .append(" AND FBFA.TYPE IN(34,35)                                                                                     ")
			  .append(" AND FBFA.BOOKING_FORM_ID=:BOOKING_FORM_ID                                                                   ");
	  
	  public static final StringBuilder QRY_TO_GET_CO_APPLICANT_BY_FLAT_BOOKING_ID =new StringBuilder(" SELECT ")
			  .append(" (CA.NAME_PREFIX || ' ' || CA.FIRST_NAME || ' ' || CA.LAST_NAME) AS CO_APP_FULL_NAME, ")
			  .append(" (CUST.NAME_PREFIX || ' ' || CUST.FIRST_NAME || ' ' || CUST.LAST_NAME) AS CUST_FULL_NAME, ")
			  
				.append(" CA.CO_APPLICANT_ID AS CO_APPLICANT_ID , ")
				.append(" CA.CO_APPLICANT_NUMBER AS CO_APPLICANT_NUMBER , ")
				.append(" CA.NAME_PREFIX AS NAME_PREFIX , ")
				.append(" CA.FIRST_NAME AS FIRST_NAME , ")
				.append(" CA.LAST_NAME AS LAST_NAME , ")
				.append(" CA.MIDDLE_NAME AS MIDDLE_NAME , ")
				.append(" CA.GENDER AS GENDER , ")
				.append(" CA.DATE_OF_BIRTH AS DATE_OF_BIRTH , ")
				.append(" CA.AGE AS AGE , ")
				.append(" CA.AADHAR_ID AS AADHAR_ID , ")
				.append(" CA.VOTER_ID AS VOTER_ID , ")
				.append(" CA.PANCARD AS PANCARD , ")
				.append(" CA.PASSPORT AS PASSPORT, ")
				.append(" CA.NATIONALITY AS NATIONALITY , ")
				.append(" CA.RELATION_WITH AS RELATION_WITH , ")
				.append(" CA.RELATION_WITH_CUST AS RELATION_WITH_CUST , ")
				.append(" CA.RELATION_NAME AS RALATION_NAME , ")
				.append(" CA.RELATION_NAME_PREFIX AS RELATION_NAME_PREFIX , ")
				.append(" CA.STATUS_ID AS STATUS_ID , ")
				.append(" CA.CREATED_DATE AS CREATED_DATE , ")
				.append(" CA.UPDATED_DATE AS UPDATED_DATE  ")
			  .append(" FROM CO_APPLICANT CA ")
			  .append(" JOIN CO_APP_BOOK_INFO CABI ")
			  .append(" ON(CABI.CO_APPLICANT_ID=CA.CO_APPLICANT_ID) ")
			  .append(" JOIN CUST_BOOK_INFO CBI ")
			  .append(" ON(CBI.CUST_BOOK_INFO_ID=CABI.CUST_BOOK_INFO_ID) ")
			  .append(" JOIN CUSTOMER CUST ")
			  .append(" ON(CUST.CUST_ID=CBI.CUST_ID) ")
			  .append(" WHERE CBI.STATUS_ID=:STATUS_ID ")
			  .append(" AND CBI.FLAT_BOOK_ID=:BOOKING_FORM_ID ")
			  .append(" AND CABI.TYPE IN (:TYPE) ");
	  
	  public static final StringBuilder QRY_TO_GET_FIN_ANONYMOUS_ENTRY =new StringBuilder()
			  .append(" FAEN.FIN_ANMS_ENTRY_ID, ")
			  .append(" FAEN.FIN_TRANSFER_MODE_ID, ")
			  .append(" FAEN.FIN_BANK_ID, ")
			  //.append(" FAEN.BANK_ACCOUNT_NO, ")
			  .append(" FAEN.AMOUNT, ")
			  .append(" FAEN.REFERENCE_NUMBER, ")
			  .append(" FAEN.RECEIVED_DATE, ")
			  .append(" FAEN.CREATED_BY, ")
			  .append(" FAEN.CREATED_DATE, ")
			  .append(" FAEN.MODIFIED_BY, ")
			  .append(" FAEN.MODIFIED_DATE, ")
			  .append(" FAEN.STATUS_ID ");
	  
	  public static final StringBuilder QRY_TO_GET_FIN_ANONYMOUS_ENTRY_DATA =new StringBuilder(" SELECT ")
			  .append(SqlQuery.QRY_TO_GET_FIN_ANONYMOUS_ENTRY)
			  .append(",").append(SqlQuery.QRY_TO_GET_FIN_BANK)
			  .append(" ,FAEN.FIN_SITE_PROJ_ACC_MAP_ID")
			  .append(" ,FPA.ACCOUNT_NO AS SITE_BANK_ACCOUNT_NUMBER")
			  .append(" ,FAEN.SITE_ID")
			  .append(" ,SI.NAME AS SITE_NAME")
			  .append(" ,FTMO.NAME AS TRANSFER_MODE ")
			  .append("   ,(SELECT FAAS.CREATED_DATE FROM   FIN_ANNY_APPR_STAT FAAS WHERE  FAAS.FIN_ANNY_APPR_STAT_ID = (SELECT Max(FIN_ANNY_APPR_STAT_ID) FROM   FIN_ANNY_APPR_STAT WHERE FIN_ANMS_ENTRY_ID =  FAEN.fin_anms_entry_id)) as LAST_APPROVED_DATE ")
	  		  .append(" FROM FIN_ANONYMOUS_ENTRY FAEN ")
	  		  .append(" LEFT OUTER JOIN FIN_BANK FB ")
	  		  .append(" ON(FB.FIN_BANK_ID=FAEN.FIN_BANK_ID) ")
	  		  .append(" JOIN FIN_TRANSFER_MODE FTMO ")
	  		  .append(" ON(FTMO.TRANSFER_MODE_ID=FAEN.FIN_TRANSFER_MODE_ID) ")
	  		  .append(" JOIN FIN_SITE_PROJ_ACC_MAPPING FSPAM ")
	          .append(" ON(FSPAM.FIN_SITE_PROJ_ACC_MAP_ID=FAEN.FIN_SITE_PROJ_ACC_MAP_ID)") 
			  .append(" JOIN FIN_PROJECT_ACCOUNTS FPA ")
	          .append(" ON(FPA.FIN_PROJ_ACC_ID=FSPAM.FIN_PROJ_ACC_ID)") 
	          .append(" JOIN SITE SI ")
	          .append(" ON (SI.SITE_ID = FAEN.SITE_ID)")
	  		  .append(" WHERE FAEN.STATUS_ID = :STATUS_ID ")
	  		  .append(" AND FAEN.SITE_ID IN (:SITE_ID) ")
//	  		  .append(" ORDER BY FAEN.FIN_ANMS_ENTRY_ID")
	  		  ;
	  
	  public static final StringBuilder QRY_TO_GET_FIN_ANNY_ENTRY_DOC =new StringBuilder()
			  .append(" FAED.FIN_ANNY_ENTRY_DOC_ID, ")
			  .append(" FAED.FIN_ANMS_ENTRY_ID, ")
			  .append(" FAED.LOCATION, ")
			  .append(" FAED.DOC_NAME, ")
			  .append(" FAED.CREATED_BY, ")
			  .append(" FAED.CREATED_DATE, ")
			  .append(" FAED.MODIFIED_BY, ")
			  .append(" FAED.MODIFIED_DATE, ")
			  .append(" FAED.DOC_PATH");
	  
	  public static final StringBuilder QRY_TO_GET_FIN_ANNY_ENTRY_DOC_DATA =new StringBuilder(" SELECT ")
			  .append(SqlQuery.QRY_TO_GET_FIN_ANNY_ENTRY_DOC)
			  .append(" FROM FIN_ANNY_ENTRY_DOC FAED ")
			  .append(" WHERE FAED.FIN_ANMS_ENTRY_ID=:FIN_ANMS_ENTRY_ID ")
			  .append(" AND FAED.STATUS_ID = :STATUS_ID");
	  
	  /* QRY_TO_GET_FLAT_FLAT_BOOKING_FLOOR_BLOCK_SITE_DETAILS  */
		public static final String QRY_TO_GET_FLAT_FLAT_BOOKING_FLOOR_BLOCK_SITE_DETAILS = new StringBuilder("SELECT DISTINCT ")
				.append(" FD.FLAT_ID,")
				.append(" F.FLAT_NO,")
				.append(" FLD.FLOOR_ID,")
				.append(" FL.NAME AS FLOOR_NAME,")
				.append(" BD.BLOCK_ID,")
				.append(" B.NAME AS BLOCK_NAME,")
				.append(" S.SITE_ID,")
				.append(" AD.STATE_ID AS STATE_ID,")
				.append(" S.NAME AS SITE_NAME, ")
				.append(" FB.FLAT_BOOK_ID, ")
				.append(" FB.CUST_ID,")
				.append(" (CUST.NAME_PREFIX || ' ' || CUST.FIRST_NAME || ' ' || CUST.LAST_NAME) AS CUSTOMER_NAME ")
				.append(" FROM FLAT_DETAILS FD ")
				.append(" INNER JOIN FLAT F ")
				.append(" ON FD.FLAT_ID=F.FLAT_ID ")
				.append(" INNER JOIN FLOOR_DETAILS FLD ")
				.append(" ON FD.FLOOR_DET_ID=FLD.FLOOR_DET_ID ")
				.append(" INNER JOIN FLOOR FL ")
				.append(" ON FLD.FLOOR_ID=FL.FLOOR_ID ")
				.append(" INNER JOIN BLOCK_DETAILS BD ")
				.append(" ON FLD.BLOCK_DET_ID=BD.BLOCK_DET_ID ")
				.append(" INNER JOIN BLOCK B ")
				.append(" ON BD.BLOCK_ID=B.BLOCK_ID ")
				.append(" INNER JOIN SITE S ")
				.append(" ON BD.SITE_ID=S.SITE_ID ")
				.append(" INNER JOIN ADDRESS AD ")
				.append(" ON AD.ADDRESS_ID = S.ADDRESS_ID ")
				.append(" JOIN FLAT_BOOKING FB ")
				.append(" ON(FB.FLAT_ID=F.FLAT_ID AND FB.STATUS_ID=:STATUS_ID) ")
				.append(" JOIN CUSTOMER CUST ")
				.append(" ON(CUST.CUST_ID=FB.CUST_ID AND CUST.STATUS_ID=:STATUS_ID) ")
				.toString ();
		
		public static final String QRY_TO_GET_FIN_ANNY_ENTRY_COMMENTS = new StringBuilder()
				.append(" FAEC.FIN_ANNY_ENTRY_COMMENTS_ID, ")
				.append(" FAEC.TYPE_ID, ")
				.append(" FAEC.TYPE, ")
				.append(" FAEC.COMMENTS, ")
				.append(" FAEC.CREATED_BY, ")
				.append(" FAEC.CREATED_DATE, ")
				.append(" FAEC.MODIFIED_BY, ")
				.append(" FAEC.MODIFIED_DATE ")
				.toString();
		
		public static final String QRY_TO_GET_FIN_ANNY_ENTRY_COMMENTS_DATA = new StringBuilder(" SELECT ")
				.append(SqlQuery.QRY_TO_GET_FIN_ANNY_ENTRY_COMMENTS)
				.append(" ,MT.NAME AS METADATA_NAME ")
				.append(",NVL((EMP.FIRST_NAME || ' ' || EMP.LAST_NAME),'N/A') AS EMP_NAME")
				.append(" FROM FIN_ANNY_ENTRY_COMMENTS FAEC ")
				.append(" FULL JOIN METADATA_TYPES MT ")
				.append(" ON(MT.METADATA_TYPES_ID=FAEC.TYPE) ")
				.append(" INNER JOIN EMPLOYEE EMP ON (EMP.EMP_ID=FAEC.CREATED_BY) ")
				.toString();
		
		public static final String QRY_TO_GET_FIN_TRANSFER_MODE = new StringBuilder()
				.append(" FTFM.TRANSFER_MODE_ID, ")
				.append(" FTFM.NAME, ")
				.append(" FTFM.DESCRIPTION, ")
				.append(" FTFM.CREATED_BY, ")
				.append(" FTFM.CREATED_DATE, ")
				.append(" FTFM.MODIFIED_BY, ")
				.append(" FTFM.MODIFIED_DATE ")
				.toString();
		
		public static final String QRY_TO_GET_NON_REFUND_FLATS = new StringBuilder()
				
				.toString();
		
		public static final StringBuilder QRY_TO_GET_NON_REFUND_FLATS1 = new StringBuilder(" SELECT ")
				.append("(SELECT ST.STATUS FROM BOOKING_STATUS_CHANGED_DTLS BSCD,STATUS ST WHERE BSCD.CHANGED_STATUS = ST.STATUS_ID AND BSCD.FLAT_BOOK_ID = FB.FLAT_BOOK_ID ")
 				.append(" AND BSCD.BOOKING_CHANGED_DTLS_ID =   (SELECT MAX(BSCD1.BOOKING_CHANGED_DTLS_ID) FROM BOOKING_STATUS_CHANGED_DTLS BSCD1 WHERE BSCD1.FLAT_BOOK_ID = FB.FLAT_BOOK_ID )) AS  NEW_STATUS,")
 				
 				.append("(SELECT ST.STATUS FROM BOOKING_STATUS_CHANGED_DTLS BSCD,STATUS ST WHERE BSCD.ACTUAL_STATUS = ST.STATUS_ID AND BSCD.FLAT_BOOK_ID = FB.FLAT_BOOK_ID ")
 				.append(" AND BSCD.BOOKING_CHANGED_DTLS_ID = (SELECT MAX(BSCD1.BOOKING_CHANGED_DTLS_ID) FROM BOOKING_STATUS_CHANGED_DTLS BSCD1 WHERE BSCD1.FLAT_BOOK_ID = FB.FLAT_BOOK_ID )) AS  ACTUAL_STATUS,")
 				
		     	.append("(SELECT  CUST.CUST_ID  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS CUST_ID,")
				.append("(SELECT  CUST.NAME_PREFIX ||' '|| CUST.FIRST_NAME ||' '|| CUST.LAST_NAME  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS CUST_NAME,")
				.append("(SELECT  CUST.PANCARD  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS PANCARD,")
				.append("(SELECT  NVL(SUM(FBFA.PAID_AMOUNT),0) AS PAID_AMOUNT ")
				.append(" FROM FIN_BOOKING_FORM_ACCOUNTS FBFA ")
				.append(" WHERE FBFA.BOOKING_FORM_ID = FB.FLAT_BOOK_ID AND FBFA.TYPE IN (:TYPEs) AND FBFA.STATUS_ID = :STATUS_ID) AS CUST_PAID_AMOUNT,")
				.append("FB.FLAT_BOOK_ID AS FLAT_BOOK_ID,")
				.append("FB.BOOKING_DATE,")
				//.append("FB.AGREEMENT_DATE,")
				//.append("NVL(FB.MILESTONE_DAYS,0) AS MILESTONE_DAYS,")
				.append("F.FLAT_ID AS FLAT_ID,")
				.append("F.FLAT_NO AS FLAT_NO,")
				//.append("FD.FLOOR_ID AS FLOOR_ID,")
				.append("FL.NAME AS FLOOR_NAME,")
				//.append("BD.BLOCK_ID AS BLOCK_ID,")
				.append("BL.NAME AS BLOCK_NAME,")
				.append("S.SITE_ID AS SITE_ID,")
				.append("S.NAME AS SITE_NAME ")
				//.append("S.SHORT_FORM AS SITE_SHORT_FORM ")
				.append(" FROM FLAT_BOOKING FB INNER JOIN FLAT F ")
				.append("ON FB.FLAT_ID = F.FLAT_ID ")
				.append("INNER JOIN FLOOR_DETAILS FD ")
				.append("ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID ")
				.append("INNER JOIN FLOOR FL ")
				.append("ON FL.FLOOR_ID = FD.FLOOR_ID ")
				.append("INNER JOIN BLOCK_DETAILS BD ")
				.append("ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID ")
				.append("INNER JOIN BLOCK BL ")
				.append("ON BL.BLOCK_ID = BD.BLOCK_ID ")
				.append("INNER JOIN SITE S ")
				.append("ON BD.SITE_ID = S.SITE_ID ")
				.append(" WHERE ")
				.append(" (SELECT  NVL(SUM(FBFA.PAID_AMOUNT),0) AS PAID_AMOUNT ") 
				.append("FROM FIN_BOOKING_FORM_ACCOUNTS FBFA ")
				.append(" WHERE FBFA.BOOKING_FORM_ID = FB.FLAT_BOOK_ID AND FBFA.TYPE IN (:TYPEs) AND FBFA.STATUS_ID = :STATUS_ID)   > 0")
				.append(" AND FB.STATUS_ID IN (:BOOKING_STATUS_ID) ")
				;
		
		public static final String QRY_TO_GET_FIN_TRANSFER_MODE_DATA = new StringBuilder(" SELECT ")
				.append(SqlQuery.QRY_TO_GET_FIN_TRANSFER_MODE)
				.append(" FROM FIN_TRANSFER_MODE FTFM ")
				.append(" WHERE FTFM.STATUS_ID=:STATUS_ID ")
				.append(" ORDER BY FTFM.NAME ")
				.toString();
		
		public static final String QRY_TO_GET_FIN_TRANSACTION_APPR_STAT = new StringBuilder()
				.append(" FTAS.FIN_TRN_APPR_STAT_ID, ")
				.append(" FTAS.FIN_TRN_SET_OFF_ENT_ID, ")
				.append(" FTAS.ACTION_TYPE, ")
				.append(" FTAS.EMP_ID, ")
				.append(" FTAS.COMMENTS, ")
				.append(" FTAS.CREATED_DATE ")
				.toString();
		
		public static final String QRY_TO_GET_FIN_TRANSACTION_APPR_STAT_DATA = new StringBuilder(" SELECT ")
				.append(SqlQuery.QRY_TO_GET_FIN_TRANSACTION_APPR_STAT)
				.append(" ,NVL((EMP.FIRST_NAME || ' ' || EMP.LAST_NAME),'N/A') AS EMP_NAME,EMP.EMAIL AS EMP_EMAIL ")
				.append(" FROM FIN_TRANSACTION_APPR_STAT FTAS ")
				.append(" JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSOE ")
				.append(" ON(FTSOE.FIN_TRN_SET_OFF_ENT_ID=FTAS.FIN_TRN_SET_OFF_ENT_ID) ")
				.append(" FULL JOIN EMPLOYEE EMP ")
				.append(" ON(EMP.EMP_ID=FTAS.EMP_ID) ")
				.append(" WHERE FTSOE.FIN_TRANSACTION_ENTRY_ID=:FIN_TRANSACTION_ENTRY_ID ")
				.append(" ORDER BY FTAS.FIN_TRN_APPR_STAT_ID ")
				.toString();
		
		public static final String QRY_TO_GET_FIN_ANNY_APPR_STAT_DATA = new StringBuilder("")
				.append("FAAS.FIN_ANNY_APPR_STAT_ID")
				//.append(",FAAS.FIN_ANMS_ENTRY_ID")
				.append(",FAAS.ACTION_TYPE")
				.append(",FAAS.EMP_ID")
				.append(",FAAS.COMMENTS")
				.append(",FAAS.CREATED_DATE").toString();
		
		public static final String QRY_TO_GET_ANNYNOMOUS_APPR_STAT_DATA = new StringBuilder(" SELECT ")
				.append(QRY_TO_GET_FIN_ANNY_APPR_STAT_DATA)
				 .append(",NVL((EMP.FIRST_NAME || ' ' || EMP.LAST_NAME),'N/A') AS EMP_NAME ")
				 .append(",ST.STATUS AS ACTION_TYPE_NAME ")
				 .append(" FROM FIN_ANNY_APPR_STAT FAAS ")
				 .append(" LEFT OUTER JOIN STATUS ST ")
				 .append(" ON ST.STATUS_ID = FAAS.ACTION_TYPE")
				 .append(" JOIN FIN_ANONYMOUS_ENTRY FAE ")
				 .append(" ON(FAAS.FIN_ANMS_ENTRY_ID=FAE.FIN_ANMS_ENTRY_ID) ")
				 .append(" FULL JOIN EMPLOYEE EMP ")
				 .append(" ON(EMP.EMP_ID=FAAS.EMP_ID) ")
				 .append(" WHERE FAE.FIN_ANMS_ENTRY_ID=:FIN_ANMS_ENTRY_ID ")
				 .append(" AND FAAS.ACTION_TYPE NOT IN (:ACTION_TYPE) ")
				 .append(" ORDER BY FAAS.FIN_ANNY_APPR_STAT_ID  ")
				.toString();
		
		/* QRY_TO_GET_FLAT_FLAT_BOOKING_FLOOR_BLOCK_SITE_DETAILS  */
		public static final String QRY_TO_GET_FLOOR_BLOCK_SITE_DETAILS = new StringBuilder("SELECT DISTINCT ")
				.append(" FLD.FLOOR_ID,")
				.append(" FL.NAME AS FLOOR_NAME,")
				.append(" BD.BLOCK_ID,")
				.append(" B.NAME AS BLOCK_NAME,")
				.append(" S.SITE_ID,")
				.append(" AD.STATE_ID AS STATE_ID,")
				.append(" S.NAME AS SITE_NAME ")
				.append(" FROM FLAT_DETAILS FD ")
				.append(" INNER JOIN FLAT F ")
				.append(" ON FD.FLAT_ID=F.FLAT_ID ")
				.append(" INNER JOIN FLOOR_DETAILS FLD ")
				.append(" ON FD.FLOOR_DET_ID=FLD.FLOOR_DET_ID ")
				.append(" INNER JOIN FLOOR FL ")
				.append(" ON FLD.FLOOR_ID=FL.FLOOR_ID ")
				.append(" INNER JOIN BLOCK_DETAILS BD ")
				.append(" ON FLD.BLOCK_DET_ID=BD.BLOCK_DET_ID ")
				.append(" INNER JOIN BLOCK B ")
				.append(" ON BD.BLOCK_ID=B.BLOCK_ID ")
				.append(" INNER JOIN SITE S ")
				.append(" ON BD.SITE_ID=S.SITE_ID ")
				.append(" INNER JOIN ADDRESS AD ")
				.append(" ON AD.ADDRESS_ID = S.ADDRESS_ID ")
				.append(" JOIN FLAT_BOOKING FB ")
				.append(" ON(FB.FLAT_ID=F.FLAT_ID AND FB.STATUS_ID=:STATUS_ID) ")
				.append(" JOIN CUSTOMER CUST ")
				.append(" ON(CUST.CUST_ID=FB.CUST_ID AND CUST.STATUS_ID=:STATUS_ID) ")
				.toString ();
		
		public static final String QRY_TO_INSERT_INTO_FIN_BOOKING_FORM_LEGAL_COST = new StringBuilder( "INSERT INTO ")
				.append(" FIN_BOOKING_FORM_LEGAL_COST ")
				.append(" (FIN_BOK_FRM_LEGAL_COST_ID, ")
				.append(" BOOKING_FORM_ID, ")
				.append(" LEGAL_AMOUNT, ")
				.append(" TAX_AMOUNT, ")
				.append(" TOTAL_AMOUNT, ")
				.append(" FIN_SITE_PROJ_ACC_MAP_ID, ")
				.append(" CREATED_BY, ")
				.append(" CREATED_DATE, ")
				.append(" STATUS_ID) ")
				.append(" VALUES ")
				.append(" (FIN_BOOKING_FORM_LEGAL_COST_SEQ.NEXTVAL, ")
				.append(" :bookingFormId, ")
				.append(" :legalAmount, ")
				.append(" :taxAmount, ")
				.append(" :totalAmount, ")
				.append(" :finSiteProjAccountMapId, ")
				.append(" :createdBy, ")
				.append(" SYSDATE, ")
				.append(" 6) ")
				.toString();
		
		public static final String QRY_TO_INSERT_INTO_FIN_BOOKING_FORM_LGL_COST_DTLS = new StringBuilder( "INSERT INTO ")
				.append(" FIN_BOOKING_FORM_LGL_COST_DTLS ")
				.append(" (FIN_BOOKING_FORM_LGL_COST_DTLS_ID, ")
				.append(" FIN_BOK_FRM_LEGAL_COST_ID, ")
				.append(" LEGAL_AMOUNT, ")
				.append(" DESCRIPTION, ")
				.append(" CREATED_BY, ")
				.append(" CREATED_DATE) ")
				.append(" VALUES ")
				.append(" (FIN_BOOKING_FORM_LGL_COST_DTLS_SEQ.nextval, ")
				.append(" :finBokFrmLegalCostId, ")
				.append(" :legalAmount, ")
				.append(" :description, ")
				.append(" :createdBy, ")
				.append(" SYSDATE) ")
				.toString();	
		
		public static final String QRY_TO_GET_COUNT_FIN_BOOKING_FORM_ACCOUNTS = new StringBuilder(" SELECT ")
				.append(" COUNT(*) FROM  ")
				.append(" FIN_BOOKING_FORM_ACCOUNTS FBA ")
				.append(" WHERE FBA.TYPE=:TYPE ")
				.append(" AND FBA.BOOKING_FORM_ID=:BOOKING_FORM_ID ")
				.append(" AND FBA.STATUS_ID=:STATUS_ID ")
				.toString();
		
		public static final String QRY_TO_INSERT_INTO_FIN_BOK_FRM_LGL_COST_TAX = new StringBuilder(" INSERT INTO ")
				.append(" FIN_BOK_FRM_LGL_COST_TAX ")
				.append(" (FIN_BOK_FRM_LGL_COST_TAX_ID, ")
				.append(" FIN_TAX_MAPING_ID, ")
				.append(" FIN_BOK_FRM_LEGAL_COST_ID, ")
				.append(" AMOUNT, ")
				.append(" CREATED_BY, ")
				.append(" CREATED_DATE) ")
				.append(" VALUES ")
				.append(" (FIN_BOK_FRM_LGL_COST_TAX_SEQ.NEXTVAL, ")
				.append(" :finTaxMappingId, ")
				.append(" :finBokFrmLegalCostId, ")
				.append(" :amount, ")
				.append(" :createdBy, ")
				.append(" SYSDATE) ")
				.toString();
		
public static final String QRY_TO_GET_TICKET_REPPORTING_DETAILS = new StringBuilder()
				.append("  SELECT    ")
				.append("  T.TICKET_ID AS TICKET_NO,   ")
				.append("  T.TICKET_STATUS AS HIGHLEVEL_STATUS, ")
				.append("  TT.NAME AS TICKET_TYPE,   ")
				.append("  E.FIRST_NAME AS TICKET_OWNER,   ")
				.append("  E.EMP_ID AS EMP_ID,   ")
				.append("  CASE   ")
				.append("  WHEN T.ESTIMATED_RESOLVED_DATE_STATUS IS NOT NULL AND T.TICKET_STATUS NOT IN(11) THEN ST.STATUS    ")
				.append("  ELSE   ")
				.append("  S.STATUS   ")
				.append("  END AS TICKET_STATUS,   ")
				.append("  CASE   ")
				.append("  WHEN T.ESTIMATED_RESOLVED_DATE_STATUS IS NOT NULL AND T.TICKET_STATUS NOT IN(11) THEN    ")
				.append("  (   ")
				.append("      SELECT    ")
				.append("      EMP.FIRST_NAME   ")
				.append("      FROM TICKET_ESCALATION TE   ")
				.append("      INNER JOIN TICKET_ESCA_LVL_MAP TELVM   ")
				.append("      ON TELVM.ID = TE.TICKET_ESC_LVL_MAP_ID   ")
				.append("      INNER JOIN TICKET_ESC_LEVEL_EMP_MAP TELEM   ")
				.append("      ON TELEM.TICKET_ESC_LVL_MAP_ID = TELVM.ID   ")
				.append("      INNER JOIN EMPLOYEE EMP   ")
				.append("      ON TELEM.EMPLOYEE_ID = EMP.EMP_ID   ")
				.append("      WHERE TE.TICKET_ID = T.TICKET_ID AND TE.STATUS = 6 AND TELVM.STATUS_ID = 6 AND TELEM.STATUS_ID =6   ")
				.append("  )   ")
				.append("  ELSE   ")
				.append("     CASE   ")
				.append("      WHEN T.DEPARTMENT_ID IS NOT NULL AND  T.DEPARTMENT_ID <> 0 THEN  DEPT.NAME     ")
				.append("      WHEN T.ASSIGNMENT_TO IS NOT NULL AND T.ASSIGNMENT_TO <>  0 THEN EMP.FIRST_NAME   ")
				.append("      ELSE E.FIRST_NAME    ")
				.append("     END    ")
				.append("  END AS PENDING_EMPLOYEE   ")
				.append("  FROM TICKET T   ")
				.append("  INNER JOIN TICKET_TYPE_DETAILS TTD   ")
				.append("  ON T.TICKET_TYPE_DETAILS_ID = TTD.TICKET_TYPE_DETAILS_ID   ")
				.append("  INNER JOIN TICKET_TYPE TT   ")
				.append("  ON TT.TICKET_TYPE_ID = TTD.TICKET_TYPE_ID   ")
				.append("  INNER JOIN EMPLOYEE_DETAILS ED   ")
               .append("  ON TTD.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID  ")
               .append("  INNER JOIN EMPLOYEE E  ")
               .append("  ON ED.EMPLOYEE_ID = E.EMP_ID  ")
               .append("  LEFT JOIN STATUS ST  ")
               .append("  ON T.ESTIMATED_RESOLVED_DATE_STATUS = ST.STATUS_ID  ")
               .append("  LEFT JOIN STATUS S  ")
               .append("  ON S.STATUS_ID = T.TICKET_STATUS  ")
               .append("  LEFT JOIN DEPARTMENT DEPT  ")
               .append("  ON T.DEPARTMENT_ID = DEPT.DEPT_ID  ")
               .append("  LEFT JOIN EMPLOYEE EMP  ")
               .append("  ON EMP.EMP_ID = T.ASSIGNMENT_TO  ")
               .append("  WHERE T.BOOKING_ID IN (   ")
               .append("  SELECT   ")
               .append("  FB.FLAT_BOOK_ID   ")
               .append("  FROM  FLAT_BOOKING FB  ")
               .append("  INNER JOIN FLAT F       ")
               .append("  ON FB.FLAT_ID = F.FLAT_ID   ")
               .append("  INNER JOIN FLOOR_DETAILS FD   ")
               .append("  ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID   ")
               .append("  INNER JOIN FLOOR FL  ")
               .append("  ON FL.FLOOR_ID = FD.FLOOR_ID  ")
               .append("  INNER JOIN BLOCK_DETAILS BD   ")
               .append("  ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID   ")
               .append("  INNER JOIN BLOCK BL   ")
               .append("  ON BL.BLOCK_ID = BD.BLOCK_ID  ")
               .append("  INNER JOIN SITE S   ")
               .append("  ON BD.SITE_ID = S.SITE_ID AND S.SITE_ID IN (:SITE_ID))  ")
               .append("  AND T.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE  ")
               .append("  AND T.STATUS = :STATUS ORDER BY  T.TICKET_ID ")
			   .toString();

public static final String QRY_TO_GET_TICKET_OWNER_DETAILS = new StringBuilder(" SELECT ")
               .append("  DISTINCT EMP.FIRST_NAME AS EMP_NAME, ")
               .append("  EMP.EMP_ID AS EMP_ID ")
               .append("  FROM ")
               .append("  TICKET_TYPE_DETAILS TTD ")
               .append("  INNER JOIN EMPLOYEE_DETAILS ED ")
               .append("  ON TTD.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID ")
               .append("  INNER JOIN EMPLOYEE EMP ")
               .append("  ON ED.EMPLOYEE_ID = EMP.EMP_ID ")
               .append("  WHERE TTD.STATUS = :STATUS ")
               .toString();

//public static final String QRY_TO_GET_TICKET_ESCALATION_EMPLOYEE_DETAILS = new StringBuilder(" SELECT ")
//             .append(" DISTINCT E.FIRST_NAME AS EMP_NAME, ")
//             .append(" E.EMP_ID AS EMP_ID, ")
//             .append(" TELM.LEVEL_ID AS LEVEL_ID ")
//             .append(" FROM TICKET_ESCA_EXT_APPROVAL_LEVAL TEEAL ")
//             .append(" INNER JOIN TICKET_ESCA_LVL_MAP TELM ")
//             .append(" ON TEEAL.ID = TELM.TICKET_ESC_APR_LVL_ID ")
//             .append(" INNER JOIN TICKET_ESC_LEVEL_EMP_MAP TELEM ")
//             .append(" ON TELM.ID = TELEM.TICKET_ESC_LVL_MAP_ID  ")
//             .append(" INNER JOIN EMPLOYEE E ")
//             .append(" ON TELEM.EMPLOYEE_ID = E.EMP_ID ")
//             .append(" WHERE TEEAL.SITE_ID IN(:SITE_ID) AND TEEAL.STATUS = :STATUS AND TELM.STATUS_ID = :STATUS AND TELEM.STATUS_ID = :STATUS ")
//             .append(" ORDER BY TELM.LEVEL_ID ")
//             .toString();



public static final String QRY_TO_GET_TICKET_ESCALATION_EMPLOYEE_DETAILS = new StringBuilder(" SELECT ") 
         .append(" DISTINCT CONCAT(CONCAT(CONCAT(CONCAT(E.FIRST_NAME,' - '), DEPT.NAME),'- LVL - '),TELM.LEVEL_ID)  AS EMP_NAME, ")
         .append(" E.EMP_ID AS EMP_ID, ")
         .append(" DEPT.NAME AS DEPT_NAME, ")
         .append(" TELM.LEVEL_ID AS LEVEL_ID ")
         .append(" FROM TICKET_ESCA_EXT_APPROVAL_LEVAL TEEAL ")
         .append(" INNER JOIN TICKET_ESCA_LVL_MAP TELM ")
         .append(" ON TEEAL.ID = TELM.TICKET_ESC_APR_LVL_ID ")
         .append(" INNER JOIN TICKET_ESC_LEVEL_EMP_MAP TELEM ")
         .append(" ON TELM.ID = TELEM.TICKET_ESC_LVL_MAP_ID  ")
         .append(" INNER JOIN EMPLOYEE E ")
         .append(" ON TELEM.EMPLOYEE_ID = E.EMP_ID ")
         .append(" INNER JOIN TICKET_TYPE TT ")
         .append(" ON TT.TICKET_TYPE_ID  = TEEAL.TICKET_TYPE_ID ")
         .append(" INNER JOIN TICKET_TYPE_DETAILS TTD ")
         .append(" ON TTD.TICKET_TYPE_ID = TT.TICKET_TYPE_ID ")
         .append(" INNER JOIN DEPARTMENT DEPT ")
         .append(" ON TTD.DEPARTMENT_ID = DEPT.DEPT_ID ")
         .append(" WHERE TEEAL.SITE_ID IN(:SITE_ID) AND TEEAL.STATUS = :STATUS AND TELM.STATUS_ID = :STATUS AND TELEM.STATUS_ID = :STATUS AND TTD.STATUS = :STATUS ")
         //.append(" AND TT.STATUS_ID = :STATUS ")
         .append(" AND DEPT.STATUS_ID = :STATUS ")
         .append(" ORDER BY TELM.LEVEL_ID ")
         .toString();
         
                public static final String QRY_TO_GET_ADMIN_ESCALATION_COUNT = new StringBuilder()						     
               .append(" SELECT  ")
               .append(" COUNT(DISTINCT(T.TICKET_ID)) AS ESCALATED_COUNT, ")
               .append(" CONCAT(CONCAT(CONCAT(CONCAT(E.FIRST_NAME,' - '), DEPT.NAME),'- LVL - '),TELM.LEVEL_ID)  AS EMP_NAME,  ")
               .append(" DEPT.NAME AS DEPT_NAME, ")
               .append(" TELM.LEVEL_ID AS LEVEL_ID,  ")
               .append(" E.EMP_ID AS EMP_ID ")
               .append(" FROM TICKET_ESCALATION TE  ") 
               .append(" INNER JOIN TICKET T  ")
               .append(" ON TE.TICKET_ID = T.TICKET_ID AND T.STATUS = 6  ")
               .append(" INNER JOIN TICKET_TYPE_DETAILS TTD ")
               .append(" ON TTD.TICKET_TYPE_DETAILS_ID = T.TICKET_TYPE_DETAILS_ID ")
               .append(" INNER JOIN DEPARTMENT DEPT ")
               .append(" ON TTD.DEPARTMENT_ID = DEPT.DEPT_ID ")
               .append(" INNER JOIN TICKET_ESCA_LVL_MAP TELM  ")
               .append(" ON TE.TICKET_ESC_LVL_MAP_ID = TELM.ID  ")
               .append(" INNER JOIN TICKET_ESC_LEVEL_EMP_MAP TELEM  ")
               .append(" ON TELM.ID = TELEM.TICKET_ESC_LVL_MAP_ID AND TELEM.STATUS_ID = 6  ")
               .append(" LEFT JOIN EMPLOYEE E  ")
               .append(" ON E.EMP_ID = TELEM.EMPLOYEE_ID  ")
               .append(" WHERE  TE.TICKET_ESC_LVL_MAP_ID IN   ")
               .append(" (  ")
               .append(" SELECT  ")
               .append("  DISTINCT TELM.ID  ")
               .append(" FROM TICKET_ESCA_EXT_APPROVAL_LEVAL TEEAL  ")
               .append(" INNER JOIN TICKET_ESCA_LVL_MAP TELM  ")
               .append(" ON TEEAL.ID = TELM.TICKET_ESC_APR_LVL_ID  ")
               .append(" WHERE TEEAL.SITE_ID IN(:SITE_ID) AND TEEAL.STATUS = 6 AND TELM.STATUS_ID = 6  ")
               .append(" ) AND TE.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE ")
               .append(" GROUP BY E.FIRST_NAME,TELM.LEVEL_ID,E.EMP_ID, DEPT.NAME ")
               .append(" ORDER BY TELM.LEVEL_ID  ")
               .toString();

//public static final String QRY_TO_GET_ADMIN_ESCALATION_COUNT = new StringBuilder()
//            .append(" SELECT  ")
//            .append(" COUNT(DISTINCT(T.TICKET_ID)) AS ESCALATED_COUNT, ")
//            .append(" TELM.LEVEL_ID AS LEVEL_ID, ")
//            .append(" E.FIRST_NAME AS EMP_NAME, ")
//            .append(" E.EMP_ID AS EMP_ID")
//            .append(" FROM TICKET_ESCALATION TE ")
//            .append(" INNER JOIN TICKET T ")
//            .append(" ON TE.TICKET_ID = T.TICKET_ID AND T.STATUS = 6 ")
//            .append(" INNER JOIN TICKET_ESCA_LVL_MAP TELM ")
//            .append(" ON TE.TICKET_ESC_LVL_MAP_ID = TELM.ID ")
//            .append(" INNER JOIN TICKET_ESC_LEVEL_EMP_MAP TELEM ")
//            .append(" ON TELM.ID = TELEM.TICKET_ESC_LVL_MAP_ID AND TELEM.STATUS_ID = 6 ")
//            .append(" LEFT JOIN EMPLOYEE E ")
//            .append(" ON E.EMP_ID = TELEM.EMPLOYEE_ID ")
//            .append(" WHERE  TE.TICKET_ESC_LVL_MAP_ID IN  ")
//            .append(" ( ")
//            .append(" SELECT ")
//            .append("  DISTINCT TELM.ID ")
//            .append(" FROM TICKET_ESCA_EXT_APPROVAL_LEVAL TEEAL ")
//            .append(" INNER JOIN TICKET_ESCA_LVL_MAP TELM ")
//            .append(" ON TEEAL.ID = TELM.TICKET_ESC_APR_LVL_ID ")
//            .append(" WHERE TEEAL.SITE_ID IN(:SITE_ID) AND TEEAL.STATUS = 6 AND TELM.STATUS_ID = 6 ")
//            .append(" ) AND TE.CREATED_DATE BETWEEN  :STARTDATE AND :ENDDATE ")
//            .append(" GROUP BY E.FIRST_NAME,TELM.LEVEL_ID,E.EMP_ID ")
//            .append(" ORDER BY TELM.LEVEL_ID ")
//            .toString();

public static final String QRY_TO_GET_ESCALATION_COUNT  = new StringBuilder(" SELECT ESCALATED_COUNT FROM ")
            .append(" ( ")
            .append(" SELECT ")
            .append(" COUNT(DISTINCT(TE.TICKET_ID)) AS ESCALATED_COUNT,")
            .append(" EMP.FIRST_NAME AS EMP_NAME,")
            .append(" EMP.EMP_ID AS EMP_ID")
            .append(" FROM TICKET_ESCALATION TE")
            .append(" INNER JOIN TICKET T")
            .append(" ON TE.TICKET_ID = T.TICKET_ID  AND T.STATUS = :STATUS")
            .append(" INNER  JOIN TICKET_TYPE_DETAILS TTD")
            .append(" ON T.TICKET_TYPE_DETAILS_ID = TTD.TICKET_TYPE_DETAILS_ID AND TTD.SITE_ID IN(:SITE_ID) AND TTD.STATUS = :STATUS")
            .append(" INNER  JOIN EMPLOYEE_DETAILS ED")
            .append(" ON TTD.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID")
            .append(" INNER JOIN EMPLOYEE EMP")
            .append(" ON ED.EMPLOYEE_ID = EMP.EMP_ID")
            .append(" WHERE")
            .append(" EMP.EMP_ID IN (")
            .append(" :EMP_ID")
            .append(" )")
            .append(" AND")
            .append(" TE.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE ")
            .append(" GROUP BY EMP.FIRST_NAME,EMP.EMP_ID")
            .append(" ) ")
            .toString();
            public static final String QRY_TO_GET_TICKET_REPORT_MAILS  = new StringBuilder(" SELECT ")
            .append("  TP.EMP_ID AS EMP_ID,             ")
            .append("  TP.SITE_ID AS SITE_ID,           ")
            .append("  E.FIRST_NAME AS EMP_NAME,        ")
            .append("  E.EMAIL AS EMAIL,                ")
            .append("  S.NAME AS SITE_NAME              ")
            .append("  FROM                             ")
            .append("  TICKET_REPORTING TP              ")
            .append("  INNER JOIN EMPLOYEE E            ")
            .append("  ON TP.EMP_ID = E.EMP_ID          ")
            .append("  INNER JOIN SITE S                ")
            .append("  ON TP.SITE_ID = S.SITE_ID        ")
            .append("  WHERE TP.STATUS_ID = :STATUS_ID  ")
            .toString();

public static final String QRY_TO_INSERT_FIN_BKF_FLAT_CANCELATION_COST = new StringBuilder(" INSERT ")
              .append(" INTO FIN_BKF_FLAT_CANCELATION_COST ")
              .append("   (                                ")
              .append("     ID,                            ")
              .append("     FIN_TRANSACTION_ENTRY_ID,      ")
              .append("     BOOKING_FORM_ID,               ")
              .append("     AMOUNT,                        ")
              .append("     STATUS,                        ")
              .append("     CREATED_DATE,                  ")
              .append("     MODIFIED_DATE                  ")
              .append("   )                                ")
              .append("   VALUES                           ")
              .append("   (                                ")
              .append("     FIN_BKF_FLAT_CANCELATION_COST_SEQ.NEXTVAL, ")
              .append("     :finTransactionEntryId,     ")
              .append("     :bookingFormId,              ")
              .append("     :amount,                       ")
              .append("     :status,                       ")
              .append("     :createdDate,                 ")
              .append("     :modifiedDate                 ")
              .append("    )                              ")
              .toString();


public static final String QRY_TO_INSERT_FIN_BKNG_FORM_REFUNDABLE_ADV = new StringBuilder(" INSERT ")
           .append(" INTO FIN_BKNG_FORM_REFUNDABLE_ADV ")
           .append(" ( ")
           .append(" ID, ")
           .append(" FIN_TRANSACTION_ENTRY_ID, ")
           .append(" BOOKINGFORM_ID, ")
           .append(" AMOUNT, ")
           .append(" STATUS,")
           .append(" CREATED_BY,")
           .append(" CREATED_DATE,")
           .append(" MODIFIED_BY,")
           .append(" MODIFIED_DATE")
           .append(" ) ")
           .append(" VALUES ")
           .append(" ( ")
           .append(" FIN_BKNG_FORM_REFUNDABLE_ADV_SEQ.nextval,")
           .append(" :finTransactionEntryId, ")
           .append(" :bookingFormId,")
           .append(" :amount,")
           .append(" :status,")
           .append(" :createdBy,")
           .append(" :createdDate,")
           .append(" :modifiedBy,")
           .append(" :modifiedDate")
           .append(" )")
           .toString();

public static final String QRY_TO_GET_CUSTOMER_DETAILS_PENDING_AMOUNT = new StringBuilder(" SELECT ")
		  .append(" FT.FLAT_NO, (CUST.NAME_PREFIX || ' ' || ")
		  .append(" CUST.FIRST_NAME || ' ' || CUST.LAST_NAME) AS CUST_NAME,")
		  .append(" (FBFA.PAY_AMOUNT-FBFA.PAID_AMOUNT) AS PENDING_AMOUNT,")
		  .append(" FT.FLAT_ID, FB.FLAT_BOOK_ID, CUST.CUST_ID ")
		  .append(" FROM FIN_BOOKING_FORM_ACCOUNTS FBFA ")
		  .append(" JOIN FIN_BOOKING_FORM_MILESTONES FBFM ")
		  .append(" ON (FBFA.TYPE=29 AND ")
		  .append(" FBFA.TYPE_ID=FBFM.FIN_BOOKING_FORM_MILESTONES_ID) ")
		  .append(" JOIN FLAT_BOOKING FB ON ")
		  .append(" (FB.FLAT_BOOK_ID=FBFA.BOOKING_FORM_ID) ")
		  .append(" JOIN FLAT FT ON ")
		  .append(" (FT.FLAT_ID=FB.FLAT_ID) ")
		  .append(" JOIN FLOOR_DETAILS FD ON ")
		  .append(" (FD.FLOOR_DET_ID = FT.FLOOR_DET_ID) ")
		  .append(" JOIN FLOOR FL ON")
		  .append(" (FL.FLOOR_ID = FD.FLOOR_ID) ")
		  .append(" JOIN BLOCK_DETAILS BD ON ")
		  .append(" (FD.BLOCK_DET_ID = BD.BLOCK_DET_ID) ")
		  .append(" JOIN BLOCK BL ON ")
		  .append(" (BL.BLOCK_ID = BD.BLOCK_ID) ")		  
		  .append(" JOIN CUSTOMER CUST ON ")
		  .append(" (CUST.CUST_ID=FB.CUST_ID) ")
		  .append(" WHERE FBFM.PROJECT_MILESTONE_ID  IN (:MILESTONE_IDS)  ")
		  .append(" AND FBFM.STATUS_ID=:STATUS_ID")
		  .append(" AND BL.BLOCK_ID IN (:BLOCK_IDS)")
		  //.append(" AND (FBFA.PAY_AMOUNT-FBFA.PAID_AMOUNT)>0")
		  .append(" ORDER BY FT.FLAT_NO ")
		  .toString();

public static final String QRY_TO_INSERT_INTO_INVOICE_DOCUMENT_LOCATION = new StringBuilder(" INSERT INTO ")
		  .append("FIN_INVOICE_DOCUMENT_LOCATION ")
		  .append("(INV_DOC_LOC_ID, ")
		  .append("TYPE, ")
		  .append("TYPE_ID, ")
		  .append("DOC_NAME, ")
		  .append("DOC_LOCATION, ")
		  .append("DOC_PATH, ")
		  .append("CREATED_BY, ")
		  .append("CREATED_DATE) ")
		  .append("VALUES( ")
		  .append("FIN_INVOICE_DOCUMENT_LOCATION_SEQ.NEXTVAL, ")
		  .append(":type, ")
		  .append(":typeId, ")
		  .append(":docName, ")
		  .append(":docLocation, ")
		  .append(":docPath, ")
		  .append(":createdBy, ")
		  .append("SYSDATE) ")
		  .toString();

public static final String QRT_TO_GET_EXCESS_AMOUNT_FOR_REFUND = new StringBuilder(" SELECT ")
.append(" FBFEA.FIN_BOK_FRM_EXS_AMT_ID, ")
.append(" FBFEA.FIN_BOK_FRM_RCPT_ID, ")
.append(" NVL(FBFEA.EXCESS_AMOUNT,0) AS EXCESS_AMOUNT, ")
.append(" NVL(FBFEA.USED_AMOUNT,0) AS USED_AMOUNT, ")
.append(" NVL(FBFEA.BALANCE_AMOUNT,0) AS BALANCE_AMOUNT, ")
.append(" FBFEA.TYPE, ")
.append(" (SELECT NAME FROM METADATA_TYPES WHERE METADATA_TYPES_ID = FBFEA.TYPE) AS METADATA_NAME,")
.append(" FBFEA.FIN_BOK_ACC_INVOICE_NO, ")
.append(" FBFR.BOOKING_FORM_ID ,")
.append("        (SELECT DOC_NAME FROM FIN_INVOICE_DOCUMENT_LOCATION WHERE TYPE = FBFA.TYPE AND TYPE_ID = FBFA.TYPE_ID) AS DOC_NAME,")
.append("        (SELECT DOC_PATH FROM FIN_INVOICE_DOCUMENT_LOCATION WHERE TYPE = FBFA.TYPE AND TYPE_ID = FBFA.TYPE_ID) AS LOCATION")
.append(" FROM FIN_BOOKING_FORM_EXCESS_AMOUNT FBFEA ")
.append(" JOIN FIN_BOOKING_FORM_RECEIPTS FBFR ")
.append(" ON (FBFR.FIN_BOK_FRM_RCPT_ID=FBFEA.FIN_BOK_FRM_RCPT_ID) ")
.append("       join FIN_BOOKING_FORM_ACCOUNTS FBFA ON FBFA.FIN_BOK_ACC_INVOICE_NO = FBFEA.FIN_BOK_ACC_INVOICE_NO")
.append(" WHERE FBFEA.BALANCE_AMOUNT>0 ")
.append(" AND FBFR.BOOKING_FORM_ID=:BOOKING_FORM_ID ")
.append(" AND FBFEA.TYPE IN(:TYPE_IDS) ")
.append(" AND FBFR.STATUS_ID =:STATUS_ID")
.append("       and FBFA.STATUS_ID =:STATUS_ID and  FBFA.BOOKING_FORM_ID = :BOOKING_FORM_ID  and FBFA.TYPE IN(:TYPE_IDS) ")
.append(" ORDER BY FBFEA.BALANCE_AMOUNT ")
		  .toString();

public static final String QRT_TO_GET_EXCESS_AMOUNT_PAYMENT_REFUND = new StringBuilder("SELECT ")
			.append("FTE.FIN_TRANSACTION_NO,")
			.append("FBFAP.STATUS_ID,")
			.append("FBFAP.FIN_BOK_FRM_ACC_PMT_ID,")
			.append("FBFAP.FIN_TRN_SET_OFF_APPR_ID,")
			.append("FBFAP.FIN_TRN_SET_OFF_ENT_ID,")
			.append("NVL(FBFAP.REFUND_AMOUNT,0) AS TOTAL_REFUND_AMOUNT,")
			.append("FBFAPD.FIN_BOK_FRM_ACC_PMT_DTLS_ID,")
			.append("FBFAPD.TYPE_ID,")
			.append("FBFAPD.TYPE,")
			.append("NVL(FBFAPD.REFUND_AMOUNT,0) AS REFUND_AMOUNT ")
			.append(" FROM ")
			.append("FIN_TRANSACTION_SET_OFF_ENTRY FTSOE, ")
			.append("FIN_TRANSACTION_ENTRY FTE, ")
			.append("FIN_BOOKING_FORM_ACC_PMT_DTLS FBFAPD, ")
			.append("FIN_BOOKING_FORM_ACCOUNT_PAYMENT FBFAP ")
			.append("	WHERE FBFAP.FIN_BOK_FRM_ACC_PMT_ID = FBFAPD.FIN_BOK_FRM_ACC_PMT_ID ") 
			.append("AND FTSOE.FIN_TRN_SET_OFF_ENT_ID = FBFAP.FIN_TRN_SET_OFF_ENT_ID ")
			.append("AND FTE.FIN_TRANSACTION_ENTRY_ID = FTSOE.FIN_TRANSACTION_ENTRY_ID ")
			.append("AND FTE.STATUS_ID = :statusId ")
			.append("AND FBFAP.STATUS_ID = :statusId ")
			.append("AND FBFAPD.TYPE_ID = :typeId ")
			.append("AND FBFAPD.TYPE IN (:type) ")
			.toString();

public static final String QRY_TO_GET_OFFICE_DTLS_DATA = new StringBuilder("")
		  .append(" OFD.ID, ")
		  .append(" OFD.NAME, ")
		  .append(" OFD.PLOT_NO, ")
		  .append(" OFD.FLOOR_NO, ")
		  .append(" OFD.TOWER, ")
		  .append(" OFD.NEAR, ")
		  .append(" OFD.CITY, ")
		  .append(" OFD.PINCODE, ")
		  .append(" OFD.CONTACT_NO, ")
		  .append(" OFD.EMAIL, ")
		  .append(" OFD.WEBSITE, ")
		  .append(" OFD.STREET, ")
		  .append(" OFD.GSTIN, ")
		  .append(" OFD.PAN, ")
		  .append(" OFD.CIN, ")
          .append(" OFD.LLPIN, ")
		  .append(" OFD.TELEPHONE_NO, ")
		  .append(" OFD.CRM_MAIL, ")
		  .append(" OFD.BILLING_ADDRESS ")
		  .toString();

public static final String QRY_TO_GET_OFFICE_DTLS_BY_SITE_ID = new StringBuilder(" SELECT ")
		  .append(QRY_TO_GET_OFFICE_DTLS_DATA)
		  .append(" FROM OFFICE_DTLS OFD ")
		  .append(" JOIN SITE ST ")
		  .append(" ON(ST.OFFICE_DTLS_ID=OFD.ID) ")
		  .append(" WHERE ST.SITE_ID=:SITE_ID ")
		  .toString();

public static final String QRY_TO_CHECK_OLD_PASSWORD = new StringBuilder(" SELECT ")
		  .append(" COUNT(*) FROM ")
		  .append(" EMPLOYEE_LOGIN ")
		  .append(" WHERE EMPLOYEE_ID=:employeeId ")
		  .append(" AND PASSWORD=:password ")
		  .toString();

public static final String QRY_TO_CHANGE_PASSWORD = new StringBuilder(" UPDATE ")
		  .append(" EMPLOYEE_LOGIN ")
		  .append(" SET PASSWORD=:password ")
		  .append(" WHERE EMPLOYEE_ID=:employeeId ")
		  .toString();

public static final String QRY_TO_GET_EMP_BY_MOBILE_NO = new StringBuilder(" SELECT ")
		  .append(" EMP.CS_EMP_ID, ")
		  .append(" EMP.EMP_ID, ")
		  .append(" EMP.FIRST_NAME, ")
		  .append(" EMP.LAST_NAME, ")
		  .append(" (EMP.FIRST_NAME || ' ' || EMP.LAST_NAME) AS EMP_NAME, ")
		  .append(" EMP.EMAIL, ")
		  .append(" EMP.STATUS_ID, ")
		  .append(" EMP.CREATED_DATE, ")
		  .append(" EMP.MODIFIED_DATE, ")
		  .append(" EMP.MOBILE_NO, ")
		  .append(" EMP.USER_PROFILE, ")
		  .append(" EMP.SALESFORCE_EMP_NAME, ")
		  .append(" EMLG.USERNAME ")
		  .append(" FROM EMPLOYEE EMP ")
		  .append(" JOIN EMPLOYEE_LOGIN EMLG ON ")
		  .append(" (EMLG.EMPLOYEE_ID=EMP.EMP_ID) ")
		  .toString();


public static final String QRY_TO_GET_ESCALATED_LEVEL_EMPLOYEE_DETAILS_BY_TICKET_ID = new StringBuilder(" SELECT ")
         .append(" CONCAT(CONCAT(CONCAT(CONCAT(CONCAT('LEVEL-',TELVM.LEVEL_ID),'-'),EMP.FIRST_NAME),'-'),DEPT.NAME) AS EMP_NAME, ")
         .append(" EMP.EMP_ID AS EMP_ID ")
         .append(" FROM TICKET_ESCALATION TE    ")
         .append(" INNER JOIN TICKET_ESCA_LVL_MAP TELVM    ")
         .append(" ON TELVM.ID = TE.TICKET_ESC_LVL_MAP_ID    ")
         .append(" INNER JOIN TICKET_ESC_LEVEL_EMP_MAP TELEM    ")
         .append(" ON TELEM.TICKET_ESC_LVL_MAP_ID = TELVM.ID    ")
         .append(" INNER JOIN EMPLOYEE EMP    ")
         .append(" ON TELEM.EMPLOYEE_ID = EMP.EMP_ID ")
         .append(" INNER JOIN EMPLOYEE_DETAILS ED ")
         .append(" ON ED.EMPLOYEE_ID =  EMP.EMP_ID ")
         .append(" INNER JOIN DEPARTMENT DEPT ")
         .append(" ON DEPT.DEPT_ID = ED.DEPT_ID ")
         .append(" WHERE TE.TICKET_ID IN (:TICKET_ID) AND TE.STATUS = :STATUS_ID AND TELVM.STATUS_ID = :STATUS_ID AND TELEM.STATUS_ID = :STATUS_ID ")
         .toString();

/* QRY_TO_GET_TICKET_ESC_APR_LVL_EMP_DET BY TICKET_ID  */
public static final String QRY_TO_GET_TICKET_ESC_APR_LVL_EMP_DET = new StringBuilder(" SELECT                      ")				   
		.append(" DISTINCT  E.EMP_ID AS EMP_ID,                                                                    ")    
		.append(" CONCAT(CONCAT(E.FIRST_NAME,''),E.LAST_NAME) AS EMP_NAME,                                         ")
		.append(" E.EMAIL AS EMAIL,                                                                                ")
		.append(" DEPT.DEPT_ID AS DEPT_ID,                                                                         ")
		.append(" DEPT.NAME AS DEPT_NAME,                                                                          ")
		.append(" TELM.LEVEL_ID AS LEVEL_ID                                                                        ")
		.append(" FROM TICKET_ESCA_EXT_APPROVAL_LEVAL TEEAL                                                        ")
		.append(" INNER JOIN TICKET_ESCA_LVL_MAP TELM                                                              ")
		.append(" ON TEEAL.ID = TELM.TICKET_ESC_APR_LVL_ID                                                         ")
		.append(" INNER JOIN TICKET_ESC_LEVEL_EMP_MAP TELEM                                                        ")
		.append(" ON TELM.ID = TELEM.TICKET_ESC_LVL_MAP_ID                                                         ")
		.append(" INNER JOIN EMPLOYEE E                                                                            ")
		.append(" ON TELEM.EMPLOYEE_ID = E.EMP_ID                                                                  ")
		.append(" INNER JOIN EMPLOYEE_DETAILS ED                                                                   ")
		.append(" ON ED.EMPLOYEE_ID =  E.EMP_ID                                                                    ")
		.append(" INNER JOIN DEPARTMENT DEPT                                                                       ")
		.append(" ON DEPT.DEPT_ID = ED.DEPT_ID                                                                     ")
		.append(" WHERE TEEAL.SITE_ID IN (                                                                         ")
		.append(" SELECT                                                                                           ")
		.append(" S.SITE_ID AS SITE_ID                                                                             ")
	
		.append(" FROM  SITE S                                                                                     ")
		.append(" JOIN BLOCK_DETAILS BD                                                                            ")
		.append(" ON(BD.SITE_ID = S.SITE_ID)                                                                       ")
		.append(" JOIN FLOOR_DETAILS FD                                                                            ")
		.append(" ON(BD.BLOCK_DET_ID=FD.BLOCK_DET_ID)                                                              ")
		.append(" JOIN  FLAT F                                                                                     ")
		.append(" ON(F.FLOOR_DET_ID=FD.FLOOR_DET_ID)                                                               ")
		.append(" JOIN                                                                                             ")
		.append(" FLAT_BOOKING FB                                                                                  ")
		.append(" ON(F.FLAT_ID=FB.FLAT_ID)                                                                         ")
		.append(" INNER JOIN TICKET T                                                                              ")
		.append(" ON (T.BOOKING_ID = FB.FLAT_BOOK_ID)                                                              ")
		.append(" WHERE T.TICKET_ID= :TICKET_ID)                                                                   ")
		.append(" AND                                                                                              ")
		.append(" TEEAL.TICKET_TYPE_ID IN (SELECT T.TICKET_TYPE_ID  FROM TICKET T WHERE T.TICKET_ID = :TICKET_ID)  ")
		.append(" AND TEEAL.STATUS = :STATUS_ID AND TELM.STATUS_ID = :STATUS_ID                                    ")
		.append(" AND TELEM.STATUS_ID = :STATUS_ID AND E.STATUS_ID = :STATUS_ID AND ED.STATUS_ID = :STATUS_ID      ")
		.append(" AND DEPT.STATUS_ID = :STATUS_ID                                                                  ")
		.append(" AND TELM.LEVEL_ID=1                                                                              ")
		.append(" UNION                                                                                            ")
		.append(" SELECT DISTINCT EMP.EMP_ID AS EMP_ID,                                                            ")
		.append(" EMP.FIRST_NAME AS EMP_NAME,                                                                      ")
		.append(" EMP.EMAIL AS EMAIL,                                                                              ")
		.append(" DPT.DEPT_ID AS DEPT_ID,                                                                          ")
		.append(" DPT.NAME AS DEPT_NAME,                                                                           ")
		.append(" 0 AS LEVEL_ID                                                                                    ")
		.append(" FROM EMPLOYEE EMP                                                                                ")
		.append(" JOIN EMPLOYEE_DEPARTMENT_MAPING EDM                                                              ")
		.append(" ON EDM.EMPLOYEE_ID=EMP.EMP_ID                                                                    ")
		.append(" JOIN DEPARTMENT_ROLE_MAPPING DRM                                                                 ")
		.append(" ON DRM.DEPARTMENT_ROLE_MAPPING_ID=EDM.DEPARTMENT_ROLE_MAPPING_ID                                 ")
		.append(" JOIN DEPARTMENT DPT                                                                              ")
		.append(" ON DPT.DEPT_ID=DRM.DEPT_ID                                                                       ")
		.append(" JOIN EMPLOYEE_ROLES EMR                                                                          ")
		.append(" ON EMR.ROLE_ID=DRM.ROLE_ID                                                                       ")
		.append(" JOIN EMPLOYEE_LOGIN EML                                                                          ")
		.append(" ON EML.EMPLOYEE_ID=EMP.EMP_ID                                                                    ")
		.append(" WHERE EMP.STATUS_ID=:STATUS_ID AND EDM.STATUS=:STATUS_ID                                         ")
		.append(" AND DRM.STATUS=:STATUS_ID AND DPT.STATUS_ID=:STATUS_ID                                           ")
		.append(" AND EMR.STATUS_ID=:STATUS_ID AND EML.STATUS=:STATUS_ID                                           ")
		.append(" AND EMR.ROLE_ID=:ROLE_ID AND DPT.DEPT_ID=:DEPT_ID                                                ")
		.append(" ORDER BY LEVEL_ID                                                                                ")
		.toString();


/* QRY_TO_GET_TICKET_DET_BY_TICKET_ID  */
public static final String QRY_TO_GET_TICKET_DET_BY_TICKET_ID = new StringBuilder("SELECT ")
             .append("  T.TICKET_ID AS TICKET_ID,")
             .append("  T.TITLE AS TITLE,")
             .append("  T.DESCRIPTION AS DESCRIPTION,")
             .append("  TT.TICKET_TYPE_ID AS TICKET_TYPE_ID,")
             .append("  TT.NAME AS TICKET_TYPE,")
             .append("  EMP.EMP_ID AS EMP_ID,")
             .append("  EMP.EMAIL AS EMAIL,")
             .append("  DEPT.DEPT_ID AS DEPT_ID,")
             .append("  DEPT.NAME AS DEPT_NAME, ")
             .append("  CUST.NAME_PREFIX, ")
             .append("  CONCAT(CONCAT(CONCAT(CONCAT(EMP.FIRST_NAME,''),EMP.LAST_NAME),'-'),DEPT.NAME) AS EMP_NAME,")
             .append("  CUST.CUST_ID AS CUST_ID,")
             .append("  CONCAT(CONCAT(CUST.FIRST_NAME,' '),CUST.LAST_NAME) AS CUST_NAME,")
			 .append("  S.SITE_ID AS SITE_ID,")
             .append("  S.NAME AS SITE_NAME,")
             .append("  BL.BLOCK_ID AS BLOCK_ID,")
             .append("  BL.NAME AS BLOCK_NAME,")
             .append("  FL.FLOOR_ID AS FLOOR_ID,")
             .append("  FL.NAME AS FLOOR_NAME,")
             .append("  F.FLAT_ID AS FLAT_ID,")
             .append("  F.FLAT_NO AS FLAT_NO,")
             .append("  FB.FLAT_BOOK_ID AS FLAT_BOOK_ID")
			 .append("  FROM  SITE S")
			 .append("  INNER JOIN BLOCK_DETAILS BD")
			 .append("  ON(BD.SITE_ID = S.SITE_ID)")
             .append("  INNER JOIN BLOCK BL")
             .append("  ON BL.BLOCK_ID = BD.BLOCK_ID")
			 .append("  INNER JOIN FLOOR_DETAILS FD")
			 .append("  ON(BD.BLOCK_DET_ID=FD.BLOCK_DET_ID)")
             .append("  INNER JOIN FLOOR FL")
             .append("  ON FD.FLOOR_ID = FL.FLOOR_ID")
			 .append("  INNER JOIN  FLAT F ")
			 .append("  ON(F.FLOOR_DET_ID=FD.FLOOR_DET_ID)")
			 .append("  INNER JOIN FLAT_BOOKING FB ")
			 .append("  ON(F.FLAT_ID=FB.FLAT_ID) ")
             .append("  INNER JOIN CUSTOMER CUST")
             .append("  ON FB.CUST_ID = CUST.CUST_ID")
			 .append("  INNER JOIN TICKET T")
             .append("  ON (T.BOOKING_ID = FB.FLAT_BOOK_ID)")
             .append("  INNER JOIN TICKET_TYPE TT")
             .append("  ON T.TICKET_TYPE_ID = TT.TICKET_TYPE_ID")
             .append("  INNER JOIN TICKET_TYPE_DETAILS TTD")
             .append("  ON T.TICKET_TYPE_DETAILS_ID = TTD.TICKET_TYPE_DETAILS_ID")
             .append("  INNER JOIN EMPLOYEE_DETAILS ED")
             .append("  ON TTD.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID")
             .append("  INNER JOIN DEPARTMENT DEPT")
             .append("  ON DEPT.DEPT_ID = ED.DEPT_ID")
             .append("  INNER JOIN EMPLOYEE EMP")
             .append("  ON ED.EMPLOYEE_ID = EMP.EMP_ID")
             .append("  WHERE T.TICKET_ID IN (:TICKET_ID)")
             .append("  AND BD.STATUS_ID = :STATUS_ID")
             .append("  AND BL.STATUS_ID = :STATUS_ID")
             .append("  AND FD.STATUS_ID = :STATUS_ID")
             .append("  AND F.STATUS_ID = :STATUS_ID")
             .append("  AND FB.STATUS_ID = :STATUS_ID")
             .append("  AND CUST.STATUS_ID = :STATUS_ID")
             .append("  AND T.STATUS = :STATUS_ID")
             //.append("  AND TT.STATUS_ID = :STATUS_ID")
             .append("  AND TTD.STATUS = :STATUS_ID")
             .append("  AND DEPT.STATUS_ID = :STATUS_ID")
             .append("  AND EMP.STATUS_ID = :STATUS_ID")
             .toString();

public static final String QRY_TO_GET_INSERT_CHANGE_TICKET_TYPE_REQUEST = new StringBuilder("INSERT")           
             .append("  INTO CHANGE_TICKET_TYPE_REQUEST  ")  
             .append("  (                                ")
             .append("    ID,                            ")
             .append("    TICKET_ID,                     ")
             .append("    REQUESTED_TICKET_TYPE,         ")
             .append("    COMMENTS,                      ")
             .append("    REQUEST_RAISED_BY,             ")
             .append("    ACTUAL_TICKET_TYPE,            ")
             .append("    CHANGED_TICKET_TYPE,           ")
             .append("    NO_OF_TIME_REQUESTED,          ")
             .append("    STATUS,                        ")
             .append("    CREATED_DATE,                  ")
             .append("    MODIFIED_DATE,                 ")
             .append("    STATUS_UPDATED_BY              ")
             .append("  )                                ")
             .append("  VALUES                           ")
             .append("  (                                ")
             .append("CHANGE_TICKET_TYPE_REQUEST_SEQ.NEXTVAL,")
             .append(":ticketId,")
             .append(":categoryToBeChanged,")
             .append(":messageBody,")
             .append(":employeeId,")
             .append(":ticketTypeId,")
             .append(":changedTicketTypeId,")
             .append(":noOfTimesRequested,")
			/*
			 * .append(" ( SELECT                          ")
			 * .append(" CASE                              ")
			 * .append(" WHEN NO_OF_TIME_REQUESTED IS NOT NULL ")
			 * .append(" THEN NO_OF_TIME_REQUESTED+1       ")
			 * .append(" ELSE  1                           ")
			 * .append(" END  AS NO_OF_TIME_REQUESTED      ")
			 * .append(" FROM CHANGE_TICKET_TYPE_REQUEST   ")
			 * .append(" WHERE TICKET_ID = :ticketId  ),   ")
			 */
             .append(":statusId,")
             .append(":createdDate,")
             .append(":modifiedDate,")
             .append(":employeeId ")
             .append(" )")
             .toString();



/* QRY_TO_UPDATE_TICKET_TYPE_CHANGE_REQUEST_STATUS_ FROM TICKET  */
public static final String QRY_TO_UPDATE_TICKET_TYPE_CHANGE_REQUEST_STATUS = new StringBuilder("UPDATE TICKET ")
		   .append("SET TICKET_TYPE_CHANGE_REQUEST  = :TICKET_TYPE_CHANGE_REQUEST,")
		   .append("MODIFIED_DATE = SYSTIMESTAMP ")
		   .append("WHERE ")
		   .append("TICKET_ID =  :TICKET_ID ")
		   .append("AND STATUS = :STATUS ")
		   .toString();


/* QRY_TO_INSERT_INTO_CHANGE_TICKET_TYPE_REQUEST_STATISTICS_ FROM TICKET  */
public static final String QRY_TO_INSERT_INTO_CHANGE_TICKET_TYPE_REQUEST_STATISTICS_ = new StringBuilder(" INSERT ")					   
            .append(" INTO CHANGE_TICKET_TYPE_REQUEST_STATISTICS    ")
            .append("(                    ")
            .append("CH_TT_RQ_STAT_ID,    ")
            .append("ID,                  ")
            .append("TICKET_ID,            ")
            .append("REQUESTED_TICKET_TYPE,")
            .append("COMMENTS,             ")
            .append("REQUEST_RAISED_BY,    ")
            .append("STATUS,               ")
            .append("CREATED_DATE,         ")
            .append("MODIFIED_DATE,        ")
            .append("ACTUAL_TICKET_TYPE,   ")
            .append("CHANGED_TICKET_TYPE,  ")
            .append("NO_OF_TIME_REQUESTED, ")
            .append("STATUS_UPDATED_BY  ")
            .append(") VALUES (")
            .append("CHANGE_TICKET_TYPE_REQUEST_STATISTICS_SEQ.NEXTVAL,")
            .append(":id,")
            .append(":ticketId, ")
            .append(":requestedTicketType, ")
            .append(":comments, ")
            .append(":requestRaisedBy,")
            .append(":status, ")
            .append(":createdDate,")
            .append(":modifiedDate,")
            .append(":actualTicketType,")
            .append(":changedTicketType,") 
            .append(":noOfTimeRequested,") 
            .append(":statusUpdatedBy ") 
            .append(")")
            .toString();


/* QRY_TO_SELECT_CHANGE_TICKET_TYPE_REQUEST FROM CHANGE_TICKET_TYPE_REQUEST  */
public static final String QRY_TO_SELECT_CHANGE_TICKET_TYPE_REQUEST = new StringBuilder(" SELECT ")	
                                           .append(" CTT.ID,                      ")
                                           .append(" CTT.TICKET_ID,               ")
                                           .append(" CTT.REQUESTED_TICKET_TYPE,   ")
                                           .append(" CTT.COMMENTS,                ")
                                           .append(" CTT.REQUEST_RAISED_BY,       ")
                                           .append(" CTT.STATUS,                  ")
                                           .append(" CTT.CREATED_DATE,            ")
                                           .append(" CTT.MODIFIED_DATE,           ")
                                           .append(" CTT.ACTUAL_TICKET_TYPE,      ")
                                           .append(" CTT.CHANGED_TICKET_TYPE,     ")
                                           .append(" CTT.NO_OF_TIME_REQUESTED,    ")
                                           .append(" CTT.STATUS_UPDATED_BY        ")
                                           .append(" FROM CHANGE_TICKET_TYPE_REQUEST CTT ")
                                           .append(" WHERE CTT.TICKET_ID = :TICKET_ID AND CTT.STATUS IN (:STATUS)")
                                           .toString();

/* QRY_TO_UPDATE_CHANGE_TICKET_TYPE_REQUEST FROM CHANGE_TICKET_TYPE_REQUEST  */
public static final String QRY_TO_UPDATE_CHANGE_TICKET_TYPE_REQUEST = new StringBuilder(" UPDATE CHANGE_TICKET_TYPE_REQUEST ")
                      .append(" SET                                           ")      
                      .append(" TICKET_ID             = :ticketId,            ")
                      .append(" REQUESTED_TICKET_TYPE = :categoryToBeChanged, ")
                      .append(" COMMENTS              = :messageBody,         ")
                      .append(" REQUEST_RAISED_BY     = :employeeId,          ")
                      .append(" STATUS                = :statusId,            ")
                      .append(" STATUS_UPDATED_BY     = :employeeId,          ")
                      .append(" MODIFIED_DATE         = :modifiedDate,        ")
                      .append(" ACTUAL_TICKET_TYPE    = :ticketTypeId ,       ")
                      .append(" CHANGED_TICKET_TYPE   = :changedTicketTypeId, ")
                      .append(" NO_OF_TIME_REQUESTED  = :noOfTimesRequested   ")
					/*
					 * .append("(SELECT                                       ")
					 * .append("   CASE                                       ")
					 * .append("   WHEN NO_OF_TIME_REQUESTED IS NOT NULL      ")
					 * .append("   THEN NO_OF_TIME_REQUESTED+1                ")
					 * .append("   ELSE  1                                    ")
					 * .append("   END  AS NO_OF_TIME_REQUESTED               ")
					 * .append("   FROM CHANGE_TICKET_TYPE_REQUEST            ")
					 * .append("   WHERE TICKET_ID = :ticketId                ")
					 * .append(" )                                            ")
					 */                    
                      .append(" WHERE                                        ")
                      .append(" TICKET_ID = :ticketId                        ")
                      .toString();

/* QRY_TO_UPDATE_CHANGE_TICKET_TYPE_REQUEST_ACTION FROM CHANGE_TICKET_TYPE_REQUEST  */
public static final String QRY_TO_UPDATE_CHANGE_TICKET_TYPE_REQUEST_ACTION = new StringBuilder(" UPDATE CHANGE_TICKET_TYPE_REQUEST ")
                     .append(" SET                                             ")      
                     .append(" STATUS                = :statusId,              ")
                     .append(" MODIFIED_DATE         = SYSTIMESTAMP,           ")
                     .append(" STATUS_UPDATED_BY     = :employeeId,            ")
                     .append(" CHANGED_TICKET_TYPE   = :changedTicketTypeId    ")
                     .append(" WHERE                                           ")
                     .append(" TICKET_ID IN (:ticketId ) AND STATUS NOT IN (7) ")
                     .toString();


/* QRY_TO_UPDATE_CHANGE_TICKET_TYPE_REQUEST_ACTION_TICKET FROM TICKET  */
public static final String QRY_TO_UPDATE_CHANGE_TICKET_TYPE_REQUEST_ACTION_TICKET = new StringBuilder(" UPDATE TICKET ")
                    .append(" MODIFIED_DATE = SYSTIMESTAMP,")
                    .append(" TICKET_TYPE_DETAILS_ID = :TICKET_TYPE_DETAILS_ID, ")
                    .append(" TICKET_TYPE_ID = :TICKET_TYPE_ID, ")
                    .append(" TICKET_TYPE_CHANGE_REQUEST = :TICKET_TYPE_CHANGE_REQUEST ")
                    .append(" WHERE ")
                    .append(" TICKET_ID IN (:TICKET_ID) AND STATUS = :STATUS ")
                    .toString();


/* QRY_TO_UPDATE_CHANGE_TICKET_TYPE_REQUEST_ACTION_TICKET FROM TICKET  */
public static final String QRY_TO_UPDATE_CHANGE_TICKET_TYPE_TICKET = new StringBuilder("UPDATE TICKET ")
                    .append("  SET                                                                    ")
                    .append("  TITLE = :TITLE,                                                        ")
                    .append("  MODIFIED_DATE = SYSTIMESTAMP,                                          ")
                    .append("  TICKET_TYPE_DETAILS_ID =                                               ")
                    .append("  (                                                                      ")
                    .append("  SELECT                                                                 ")
                    .append("  TICKET_TYPE_DETAILS_ID                                                 ")
                    .append("  FROM TICKET_TYPE_DETAILS TT                                            ")
                    .append("  WHERE TT.SITE_ID IN (                                                  ")
                    .append("               SELECT                                                    ")
                    .append("               S.SITE_ID AS SITE_ID                                      ")
                    .append("               FROM  SITE S                                              ")
                    .append("               JOIN BLOCK_DETAILS BD                                     ")
                    .append("               ON(BD.SITE_ID = S.SITE_ID)                                ")
                    .append("               JOIN FLOOR_DETAILS FD                                     ")
                    .append("               ON(BD.BLOCK_DET_ID=FD.BLOCK_DET_ID)                       ")
                    .append("               JOIN  FLAT F                                              ")
                    .append("               ON(F.FLOOR_DET_ID=FD.FLOOR_DET_ID)                        ")
                    .append("               JOIN                                                      ")
                    .append("               FLAT_BOOKING FB                                           ")
                    .append("               ON(F.FLAT_ID=FB.FLAT_ID)                                  ")
                    .append("               INNER JOIN TICKET T                                       ")
                    .append("               ON (T.BOOKING_ID = FB.FLAT_BOOK_ID)                       ")
                    .append("               WHERE T.TICKET_ID IN (:TICKET_ID)                         ")
                    .append("               AND BD.STATUS_ID=:STATUS AND FD.STATUS_ID=:STATUS         ")
                    .append("               AND F.STATUS_ID=:STATUS AND ROWNUM=1 )                    ")
                    .append("  AND TT.TICKET_TYPE_ID IN (:TICKET_TYPE_ID) AND TT.STATUS IN (:STATUS)  ")
                    .append("  AND TT.BLOCK_ID IN (                                               ")
                    .append("               SELECT                                                    ")
                    .append("               DISTINCT BL.BLOCK_ID FROM BLOCK BL                        ")
                    .append("               JOIN BLOCK_DETAILS BD ON(BD.BLOCK_ID=BL.BLOCK_ID)         ")
                    .append("               JOIN FLOOR_DETAILS FD                                     ")
                    .append("               ON(BD.BLOCK_DET_ID=FD.BLOCK_DET_ID)                       ")
                    .append("               JOIN  FLAT F                                              ")
                    .append("               ON(F.FLOOR_DET_ID=FD.FLOOR_DET_ID)                        ")
                    .append("               JOIN                                                      ")
                    .append("               FLAT_BOOKING FB                                           ")
                    .append("               ON(F.FLAT_ID=FB.FLAT_ID)                                  ")
                    .append("               INNER JOIN TICKET T                                       ")
                    .append("               ON (T.BOOKING_ID = FB.FLAT_BOOK_ID)                       ")
                    .append("               WHERE T.TICKET_ID IN (:TICKET_ID)                         ")
                    .append("               AND BD.STATUS_ID=:STATUS AND FD.STATUS_ID=:STATUS         ")
                    .append("               AND F.STATUS_ID=:STATUS AND ROWNUM=1 )                    ")
                    .append("  ),                                                                     ")
                    .append("  TICKET_TYPE_ID = :TICKET_TYPE_ID,                                      ")
                    .append("  DEPARTMENT_ID = NULL,                                                  ")
                    .append("  ASSIGNMENT_TO = NULL,                                                  ")
                    .append("  TICKET_TYPE_CHANGE_REQUEST = :TICKET_TYPE_CHANGE_REQUEST               ")
                    .append("  WHERE                                                                  ")
                    .append("  TICKET_ID IN (:TICKET_ID) AND STATUS = :STATUS                         ")
                    .toString();


/* QRY_TO_UPDATE_CHANGE_TICKET_TYPE_REQUEST_ACTION_TICKET FROM TICKET  */
public static final String QRY_TO_GET_CHANGE_TICKET_TYPE_DETAILS = new StringBuilder("")
                    .append("  SELECT                                                                    ")
                    .append("  TICKET_TYPE_DETAILS_ID as TICKET_TYPE_DETAILS_ID,                         ")
                    .append("  DEPARTMENT_ID AS DEPT_ID,                                                 ")
                    .append("  EMP.EMAIL AS EMAIL,                                                       ")
                    .append("  CONCAT(CONCAT(CONCAT(CONCAT(EMP.FIRST_NAME,''),EMP.LAST_NAME),'-'),(SELECT NAME FROM DEPARTMENT WHERE DEPT_ID = DEPARTMENT_ID)) AS EMP_NAME, ")
                    .append("  (SELECT NAME FROM DEPARTMENT WHERE DEPT_ID = DEPARTMENT_ID ) AS DEPT_NAME ")
                    .append("  FROM TICKET_TYPE_DETAILS TT                                               ")
                    .append("  INNER JOIN EMPLOYEE_DETAILS ED                                            ") 
                    .append("  ON TT.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID                             ") 
                    .append("  INNER JOIN EMPLOYEE EMP                                                   ") 
                    .append("  ON ED.EMPLOYEE_ID = EMP.EMP_ID                                            ")
                    .append("  WHERE TT.SITE_ID IN (                                                   ")
                    .append("               SELECT                                                     ")
                    .append("               S.SITE_ID AS SITE_ID                                       ")
                    .append("               FROM  SITE S                                               ")
                    .append("               JOIN BLOCK_DETAILS BD                                      ")
                    .append("               ON(BD.SITE_ID = S.SITE_ID)                                 ")
                    .append("               JOIN FLOOR_DETAILS FD                                      ")
                    .append("               ON(BD.BLOCK_DET_ID=FD.BLOCK_DET_ID)                        ")
                    .append("               JOIN  FLAT F                                               ")
                    .append("               ON(F.FLOOR_DET_ID=FD.FLOOR_DET_ID)                         ")
                    .append("               JOIN                                                       ")
                    .append("               FLAT_BOOKING FB                                            ")
                    .append("               ON(F.FLAT_ID=FB.FLAT_ID)                                   ")
                    .append("               INNER JOIN TICKET T                                        ")
                    .append("               ON (T.BOOKING_ID = FB.FLAT_BOOK_ID)                        ")
                    .append("               WHERE T.TICKET_ID IN (:TICKET_ID)                          ")
                    .append("               AND BD.STATUS_ID=:STATUS AND FD.STATUS_ID=:STATUS          ")
                    .append("               AND F.STATUS_ID=:STATUS AND ROWNUM=1 )                     ")
                    .append("  AND TT.TICKET_TYPE_ID IN (:TICKET_TYPE_ID) AND TT.STATUS IN (:STATUS)   ")
                    .append("  AND TT.BLOCK_ID IN (                                               ")
                    .append("               SELECT                                                    ")
                    .append("               DISTINCT BL.BLOCK_ID FROM BLOCK BL                        ")
                    .append("               JOIN BLOCK_DETAILS BD ON(BD.BLOCK_ID=BL.BLOCK_ID)         ")
                    .append("               JOIN FLOOR_DETAILS FD                                     ")
                    .append("               ON(BD.BLOCK_DET_ID=FD.BLOCK_DET_ID)                       ")
                    .append("               JOIN  FLAT F                                              ")
                    .append("               ON(F.FLOOR_DET_ID=FD.FLOOR_DET_ID)                        ")
                    .append("               JOIN                                                      ")
                    .append("               FLAT_BOOKING FB                                           ")
                    .append("               ON(F.FLAT_ID=FB.FLAT_ID)                                  ")
                    .append("               INNER JOIN TICKET T                                       ")
                    .append("               ON (T.BOOKING_ID = FB.FLAT_BOOK_ID)                       ")
                    .append("               WHERE T.TICKET_ID IN (:TICKET_ID)                         ")
                    .append("               AND BD.STATUS_ID=:STATUS AND FD.STATUS_ID=:STATUS         ")
                    .append("               AND F.STATUS_ID=:STATUS AND ROWNUM=1 )                    ")
                    .toString();

	/*  Query to get Project wise Ticket Count */
		public static final String QRY_TO_GET_PROJECT_WISE_TICKET_COUNT = new StringBuilder()
				   .append("  SELECT  ")  
			       .append("  COUNT(T.TICKET_ID) AS TICKET_COUNT,")
			       .append("  S.STATUS AS TICKET_STATUS ")
			       .append("  FROM ")
			       .append("  TICKET T ")
			       .append("  INNER JOIN STATUS S ")
			       .append("  ON T.TICKET_STATUS = S.STATUS_ID ")
			       .append("  JOIN TICKET_TYPE_DETAILS TTD ON TTD.TICKET_TYPE_DETAILS_ID=T.TICKET_TYPE_DETAILS_ID ")
			       .append("  WHERE T.STATUS = :STATUS_ID AND T.BOOKING_ID IN (  ") 
			       .append("           SELECT   ")
			       .append("           FB.FLAT_BOOK_ID   ")
			       .append("           FROM  FLAT_BOOKING FB  ")
			       .append("           INNER JOIN FLAT F      ")
			       .append("           ON FB.FLAT_ID = F.FLAT_ID  AND FB.STATUS_ID = :STATUS_ID AND F.STATUS_ID = :STATUS_ID ")
			       .append("           INNER JOIN FLOOR_DETAILS FD   ")
			       .append("           ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID ")
			       .append("           INNER JOIN FLOOR FL  ")
			       .append("           ON FL.FLOOR_ID = FD.FLOOR_ID  ")
			       .append("           INNER JOIN BLOCK_DETAILS BD   ")
			       .append("           ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID ")
			       .append("           INNER JOIN BLOCK BL   ")
			       .append("           ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID ")
			       .append("           INNER JOIN SITE S   ")
			       .append("           ON BD.SITE_ID = S.SITE_ID AND S.SITE_ID IN (:SITE_ID)) ")
			       .append(" AND T.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE    ")
			       .append(" AND TTD.DEPARTMENT_ID IN (:DEPARTMENT_IDS) ")
			       .append(" GROUP BY S.STATUS ")
                   .toString();	
		
		public static final String QRY_TO_GET_TICKET_DETAILS_TICKET_REPORT = new StringBuilder()
	       .append(" SELECT                                                                                                             ")          
		   .append("		  T.TICKET_ID AS TICKET_NO,                                                                                 ")
		   .append("		  T.TICKET_TYPE_DETAILS_ID AS TICKET_TYPE_DETAILS_ID,                                                       ")
	       .append("   (SELECT                                                                                                          ")
	       .append("           CUST.NAME_PREFIX ||' '|| CUST.FIRST_NAME ||' '|| CUST.LAST_NAME  AS CUST_NAME                            ")
	       .append("           FROM CUSTOMER CUST                                                                                       ")
	       .append("           INNER JOIN  FLAT_BOOKING FB                                                                              ")
	       .append("           ON FB.CUST_ID  = CUST.CUST_ID                                                                            ")
	       .append("           INNER JOIN FLAT F                                                                                        ")
	       .append("           ON FB.FLAT_ID = F.FLAT_ID  AND FB.STATUS_ID = :STATUS_ID AND F.STATUS_ID = :STATUS_ID                    ")
	       .append("           INNER JOIN FLOOR_DETAILS FD                                                                              ")
	       .append("           ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID                                       ")
	       .append("           INNER JOIN FLOOR FL                                                                                      ")
	       .append("           ON FL.FLOOR_ID = FD.FLOOR_ID                                                                             ")
	       .append("           INNER JOIN BLOCK_DETAILS BD                                                                              ")
	       .append("           ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID                                       ")
	       .append("           INNER JOIN BLOCK BL                                                                                      ")
	       .append("           ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID                                              ")
	       .append("           INNER JOIN SITE S                                                                                        ")
	       .append("           ON BD.SITE_ID = S.SITE_ID                                                                                ")
	       .append("           WHERE FB.FLAT_BOOK_ID = T.BOOKING_ID ) AS CUST_NAME,                                                     ")
	       .append("         (SELECT                                                                                                    ")
	       .append("           S.NAME                                                                                                   ")
	       .append("           FROM  FLAT_BOOKING FB                                                                                    ")
	       .append("           INNER JOIN FLAT F                                                                                        ")
	       .append("           ON FB.FLAT_ID = F.FLAT_ID  AND FB.STATUS_ID = :STATUS_ID AND F.STATUS_ID = :STATUS_ID                    ")
	       .append("           INNER JOIN FLOOR_DETAILS FD                                                                              ")
	       .append("           ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID                                       ")
	       .append("           INNER JOIN FLOOR FL                                                                                      ")
	       .append("           ON FL.FLOOR_ID = FD.FLOOR_ID                                                                             ")
	       .append("           INNER JOIN BLOCK_DETAILS BD                                                                              ")
	       .append("           ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID                                       ")
	       .append("           INNER JOIN BLOCK BL                                                                                      ")
	       .append("           ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID                                              ")
	       .append("           INNER JOIN SITE S                                                                                        ")
	       .append("           ON BD.SITE_ID = S.SITE_ID                                                                                ")
	       .append("           WHERE FB.FLAT_BOOK_ID = T.BOOKING_ID) AS SITE_NAME,                                                      ")
	       .append("  TMT.NAME ||' / '|| TT.NAME AS TICKET_TYPE,                                                                        ")
	       .append("  CASE                                                                                                              ")
		   .append("		  WHEN T.ESTIMATED_RESOLVED_DATE_STATUS IS NOT NULL AND T.TICKET_STATUS NOT IN(11) THEN                     ")
			.append("		  (                                                                                                         ")
			.append("		      SELECT                                                                                                ")
			.append("		      EMP.FIRST_NAME                                                                                        ")
			.append("		      FROM TICKET_ESCALATION TE                                                                             ")
			.append("		      INNER JOIN TICKET_ESCA_LVL_MAP TELVM                                                                  ")
			.append("		      ON TELVM.ID = TE.TICKET_ESC_LVL_MAP_ID                                                                ")
			.append("		      INNER JOIN TICKET_ESC_LEVEL_EMP_MAP TELEM                                                             ")
			.append("		      ON TELEM.TICKET_ESC_LVL_MAP_ID = TELVM.ID                                                             ")
			.append("		      INNER JOIN EMPLOYEE EMP                                                                               ")
			.append("		      ON TELEM.EMPLOYEE_ID = EMP.EMP_ID                                                                     ")
			.append("		      WHERE TE.TICKET_ID = T.TICKET_ID AND TE.STATUS = :STATUS_ID AND TELVM.STATUS_ID = :STATUS_ID AND TELEM.STATUS_ID = :STATUS_ID  ")
			.append("		  )                                                                                                         ")
			.append("		  ELSE                                                                                                      ")
			.append("		     CASE                                                                                                   ")
			.append("		      WHEN T.DEPARTMENT_ID IS NOT NULL AND  T.DEPARTMENT_ID <> 0 THEN  DEPT.NAME                            ")
			.append("		      WHEN T.ASSIGNMENT_TO IS NOT NULL AND T.ASSIGNMENT_TO <>  0 THEN EMP.FIRST_NAME                        ")
			.append("		      ELSE E.FIRST_NAME                                                                                     ")
			.append("		     END                                                                                                    ")
			.append("		  END AS PENDING_DEPT_EMP,                                                                                  ")
			.append("		  T.TICKET_STATUS AS HIGHLEVEL_STATUS,                                                                      ")
	       .append("   (SELECT STATUS FROM STATUS TST WHERE TST.STATUS_ID =  T.TICKET_STATUS) AS TICKET_HIGHLEVEL_STATUS,               ")
	       .append("   T.CREATED_DATE AS RECIVED_DATE,                                                                                  ")
			.append("		  T.ESTIMATED_RESOLVED_DATE AS ESCALATION_DATE,                                                             ")
			.append("		  E.FIRST_NAME AS TICKET_OWNER,                                                                             ")
			.append("		  E.EMP_ID AS EMP_ID,                                                                                       ")
			.append("		  CASE                                                                                                      ")
			.append("		  WHEN T.ESTIMATED_RESOLVED_DATE_STATUS IS NOT NULL AND T.TICKET_STATUS NOT IN(11) THEN ST.STATUS           ")
			.append("		  ELSE                                                                                                      ")
			.append("		  S.STATUS                                                                                                  ")
			.append("		  END AS TICKET_STATUS                                                                                      ")
			.append("		  FROM TICKET T                                                                                             ")
			.append("		  INNER JOIN TICKET_TYPE_DETAILS TTD                                                                        ")
			.append("		  ON T.TICKET_TYPE_DETAILS_ID = TTD.TICKET_TYPE_DETAILS_ID                                                  ")
			.append("		  INNER JOIN TICKET_TYPE TT                                                                                 ")
			.append("		  ON TT.TICKET_TYPE_ID = TTD.TICKET_TYPE_ID                                                                 ")
			.append("		  INNER JOIN EMPLOYEE_DETAILS ED                                                                            ")
	       .append("           ON TTD.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID                                                           ")
	       .append("           INNER JOIN EMPLOYEE E                                                                                    ")
	       .append("           ON ED.EMPLOYEE_ID = E.EMP_ID                                                                             ")
	       .append("           LEFT JOIN STATUS ST                                                                                      ")
	       .append("           ON T.ESTIMATED_RESOLVED_DATE_STATUS = ST.STATUS_ID                                                       ")
	       .append("           LEFT JOIN STATUS S                                                                                       ")
	       .append("           ON S.STATUS_ID = T.TICKET_STATUS                                                                         ")
	       .append("           LEFT JOIN DEPARTMENT DEPT                                                                                ")
	       .append("           ON T.DEPARTMENT_ID = DEPT.DEPT_ID                                                                        ")
	       .append("           LEFT JOIN EMPLOYEE EMP                                                                                   ")
	       .append("           ON EMP.EMP_ID = T.ASSIGNMENT_TO                                                                          ")
	       .append("    LEFT JOIN TICKET_MAIN_TYPE TMT                                                                                  ")
	       .append("    ON TT.TICKET_MAIN_TYPE_ID = TMT.ID                                                                              ")
	       .append("           JOIN TICKET_TYPE_DETAILS TTYD ON(TTYD.TICKET_TYPE_DETAILS_ID=T.TICKET_TYPE_DETAILS_ID)                   ")
	       .append("           WHERE T.BOOKING_ID IN (                                                                                  ")
	       .append("           SELECT                                                                                                   ")
	       .append("           FB.FLAT_BOOK_ID                                                                                          ")
	       .append("           FROM  FLAT_BOOKING FB                                                                                    ")
	       .append("           INNER JOIN FLAT F                                                                                        ")
	       .append("           ON FB.FLAT_ID = F.FLAT_ID  AND FB.STATUS_ID = :STATUS_ID AND F.STATUS_ID = :STATUS_ID                    ")
	       .append("           INNER JOIN FLOOR_DETAILS FD                                                                              ")
	       .append("           ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID                                       ")
	       .append("           INNER JOIN FLOOR FL                                                                                      ")
	       .append("           ON FL.FLOOR_ID = FD.FLOOR_ID                                                                             ")
	       .append("           INNER JOIN BLOCK_DETAILS BD                                                                              ")
	       .append("           ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID                                       ")
	       .append("           INNER JOIN BLOCK BL                                                                                      ")
	       .append("           ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID                                              ")
	       .append("           INNER JOIN SITE S                                                                                        ")
	       .append("           ON BD.SITE_ID = S.SITE_ID AND S.SITE_ID IN (:SITE_ID))                                                   ")
	       .append("           AND T.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE                                                       ")
	       .append("           AND T.STATUS = :STATUS_ID                                                                                ")
	       .append("           AND T.TICKET_STATUS IN (:TICKET_STATUS)                                                                  ")
	       .append("                                                                                                                    ")
	       .toString();
		
		public static final String QRY_TO_GET_TICKETTYPE_WISE_TICKET_COUNT = new StringBuilder()	   
				.append("  SELECT ")                                       
				.append("  COUNT(T.TICKET_ID) AS TICKET_COUNT, ")
				.append("  TT.TICKET_TYPE_ID AS TICKET_TYPE_ID, ")
				.append("  TMT.NAME ||'/'|| TT.NAME AS TICKET_TYPE, ")
				.append("  T.TICKET_STATUS AS TICKET_STATUS_ID, ")
				.append("  S.STATUS AS TICKET_STATUS ")
				.append("  FROM ")
				.append("  TICKET T ")
				.append("  INNER JOIN TICKET_TYPE TT ")
				.append("  ON T.TICKET_TYPE_ID = TT.TICKET_TYPE_ID ")
				.append("  LEFT OUTER JOIN TICKET_MAIN_TYPE TMT ")
				.append("  ON TMT.ID = TT.TICKET_MAIN_TYPE_ID ")
				.append("  INNER JOIN STATUS S ")
				.append("  ON T.TICKET_STATUS = S.STATUS_ID ")
				.append(" JOIN TICKET_TYPE_DETAILS TTD ON TTD.TICKET_TYPE_DETAILS_ID=T.TICKET_TYPE_DETAILS_ID AND TTD.STATUS = :STATUS_ID ")
				.append("  WHERE T.STATUS = :STATUS_ID AND T.BOOKING_ID IN (  ") 
				.append("           SELECT   ")
				.append("           FB.FLAT_BOOK_ID   ")
				.append("           FROM  FLAT_BOOKING FB  ")
				.append("           INNER JOIN FLAT F   ")   
				.append("           ON FB.FLAT_ID = F.FLAT_ID  AND FB.STATUS_ID = :STATUS_ID AND F.STATUS_ID = :STATUS_ID ")
				.append("           INNER JOIN FLOOR_DETAILS FD  ") 
				.append("           ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID ")
				.append("           INNER JOIN FLOOR FL ") 
				.append("           ON FL.FLOOR_ID = FD.FLOOR_ID ")
				.append("           INNER JOIN BLOCK_DETAILS BD   ")
				.append("           ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID ")
				.append("           INNER JOIN BLOCK BL ")  
				.append("           ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID ")
				.append("           INNER JOIN SITE S   ")
				.append("           ON BD.SITE_ID = S.SITE_ID AND S.SITE_ID IN (:SITE_ID)) ")
				.append(" AND T.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE ")
				.append(" AND TTD.DEPARTMENT_ID IN (:DEPARTMENT_IDS) ")
				.append(" GROUP BY T.TICKET_STATUS,S.STATUS,TT.TICKET_TYPE_ID,TT.NAME,TMT.NAME ")
				.append(" ORDER BY TT.TICKET_TYPE_ID ")
				.toString();
		public static final String QRY_TO_GET_CLOSED_TICKETS = new StringBuilder()	
				.append(" SELECT ")
				//.append(" COUNT(Distinct TE.TICKET_ID) as ESCALATED_COUNT ,")
				.append(" T.TICKET_STATUS AS TICKET_STATUS_ID,")
				.append(" T.CREATED_DATE  as CREATED_DATE, ")
				.append(" T.RESOLVED_DATE as RESOLVED_DATE , ")
				.append(" S.STATUS AS TICKET_STATUS, ")	
				.append(" ST.SITE_ID as SITE_ID, ")
				.append(" ST.NAME as SITE_NAME, ")
				.append(" T.TICKET_ID as TICKET_NO ")
				.append(" FROM TICKET T ")
				//.append(" INNER JOIN TICKET_ESCALATION TE ")
				//.append(" ON T.TICKET_ID=TE.TICKET_ID ")
				.append(" INNER JOIN TICKET_TYPE TT  ")
				.append(" ON T.TICKET_TYPE_ID = TT.TICKET_TYPE_ID  ")
				.append(" INNER JOIN TICKET_TYPE_DETAILS TTD  ")
				.append(" ON T.TICKET_TYPE_DETAILS_ID = TTD.TICKET_TYPE_DETAILS_ID  ")
				.append(" LEFT OUTER JOIN TICKET_MAIN_TYPE TMT  ")
				.append(" ON TMT.ID = TT.TICKET_MAIN_TYPE_ID  ")
				.append(" INNER JOIN STATUS S   ")
				.append(" ON T.TICKET_STATUS = S.STATUS_ID  ")
				//.append(" AND T.STATUS=TS.STATUS ")
				//.append(" AND T.BOOKING_ID=TS.BOOKING_ID ")
				.append(" JOIN FLAT_BOOKING FB ON (FB.FLAT_BOOK_ID=T.BOOKING_ID)  ")
				.append(" INNER JOIN FLAT F   ")
				.append(" ON FB.FLAT_ID = F.FLAT_ID  AND F.STATUS_ID = :STATUS_ID  ")
				.append(" INNER JOIN FLOOR_DETAILS FD ")
				.append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID      ")
				.append(" INNER JOIN FLOOR FL  ")
				.append(" ON FL.FLOOR_ID = FD.FLOOR_ID   ")
				.append(" INNER JOIN BLOCK_DETAILS BD ")
				.append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID   ")
				.append(" INNER JOIN BLOCK BL       ")
				.append(" ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID   ")
				.append(" INNER JOIN SITE ST     ")
				.append(" ON BD.SITE_ID = ST.SITE_ID  ")
				.append(" where T.TICKET_STATUS IN (:TICKET_STATUS)")
				.append(" AND T.STATUS=:STATUS_ID ")
				.append(" AND ST.SITE_ID IN (:SITE_ID) ")
				.append(" AND T.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE ")
				.append(" AND T.TICKET_TYPE_ID IN (:TICKET_TYPE_ID)  ")
				.append(" GROUP BY ST.NAME, ST.SITE_ID,T.CREATED_DATE,T.RESOLVED_DATE,T.TICKET_STATUS,S.STATUS, T.TICKET_ID ")
		
				.toString();
		
		
		public static final String QRY_TO_GET_REOPEN_TICKET_COUNT = new StringBuilder()	
				.append(" SELECT ")
				//.append(" COUNT(DISTINCT TS.TICKET_ID) as REOPEN_COUNT , ")
				.append(" COUNT(DISTINCT TE.TICKET_ID) as ESCALATED_COUNT ")
				.append(" FROM  TICKET T ")
				.append(" INNER JOIN TICKET_ESCALATION TE  ")
				.append(" ON T.TICKET_ID=TE.TICKET_ID  ")
				.append(" INNER JOIN TICKET_TYPE TT  ")
				.append(" ON T.TICKET_TYPE_ID = TT.TICKET_TYPE_ID  ")
				.append(" INNER JOIN TICKET_TYPE_DETAILS TTD  ")
				.append(" ON T.TICKET_TYPE_DETAILS_ID = TTD.TICKET_TYPE_DETAILS_ID AND TTD.STATUS = :STATUS_ID  ")
				.append(" LEFT OUTER JOIN TICKET_MAIN_TYPE TMT  ")
				.append(" ON TMT.ID = TT.TICKET_MAIN_TYPE_ID  ")
				.append("  INNER JOIN STATUS S ")
				.append("  ON T.TICKET_STATUS = S.STATUS_ID ")
				//.append(" AND T.BOOKING_ID=TS.BOOKING_ID ")
				//.append(" INNER JOIN TICKET_ESCALATION TE ")
				//.append(" ON T.TICKET_ID= TE.TICKET_ID ")
				.append(" JOIN FLAT_BOOKING FB ON (FB.FLAT_BOOK_ID=T.BOOKING_ID)  ")
				.append(" INNER JOIN FLAT F   ")
				.append(" ON FB.FLAT_ID = F.FLAT_ID   AND F.STATUS_ID = :STATUS_ID  ")
				.append(" INNER JOIN FLOOR_DETAILS FD ")
				.append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID      ")
				.append(" INNER JOIN FLOOR FL  ")
				.append(" ON FL.FLOOR_ID = FD.FLOOR_ID   ")
				.append(" INNER JOIN BLOCK_DETAILS BD ")
				.append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID   ")
				.append(" INNER JOIN BLOCK BL       ")
				.append(" ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID   ")
				.append(" INNER JOIN SITE ST     ")
				.append(" ON BD.SITE_ID = ST.SITE_ID  ")
				.append(" where ")
				.append("  T.STATUS=:STATUS_ID ")
				.append(" AND ST.SITE_ID IN (:SITE_ID) ")
				.append(" AND T.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE ")
				.append(" AND T.TICKET_TYPE_ID IN (:TICKET_TYPE_ID)  ")
				.toString();
		
		public static final String QRY_TO_GET_CLOSED_TICKET_DATES = new StringBuilder()	
				.append(" SELECT ")
				.append(" max(TS.RESOLVED_DATE) as RESOLVED_DATE  ")
				.append(" FROM TICKET_STATISTICS TS ")
				.append(" WHERE TS.TICKET_ID=:TICKET_ID ")
				.append(" AND TS.STATUS=:STATUS_ID ")
				.append(" AND TS.TICKET_STATUS = :TICKET_STATUS ")
				.toString();
		public static final String QRY_TO_GET_CLOSED_TICKET_COUNT = new StringBuilder()	
				.append(" SELECT ")
				.append(" COUNT(DISTINCT T.TICKET_ID) as TICKET_COUNT , ")
				.append(" ST.SITE_ID as SITE_ID, ")
				.append(" ST.NAME as SITE_NAME ")
				
				.append(" FROM  TICKET T ")
				//.append(" INNER JOIN TICKET_STATISTICS TS  ")
				//.append("  ON T.TICKET_ID=TS.TICKET_ID ")
				.append(" INNER JOIN TICKET_TYPE TT  ")
				.append(" ON T.TICKET_TYPE_ID = TT.TICKET_TYPE_ID  ")
				.append(" INNER JOIN TICKET_TYPE_DETAILS TTD  ")
				.append(" ON T.TICKET_TYPE_DETAILS_ID = TTD.TICKET_TYPE_DETAILS_ID AND TTD.STATUS = :STATUS_ID  ")
			    .append(" INNER JOIN EMPLOYEE_DETAILS ED ")
	            .append(" ON TTD.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID AND ED.STATUS_ID = :STATUS_ID ")
	            .append(" INNER JOIN EMPLOYEE EMP ")
	            .append(" ON EMP.EMP_ID = ED.EMPLOYEE_ID AND EMP.STATUS_ID = :STATUS_ID ")
				.append(" LEFT OUTER JOIN TICKET_MAIN_TYPE TMT  ")
				.append(" ON TMT.ID = TT.TICKET_MAIN_TYPE_ID  ")
				.append(" JOIN FLAT_BOOKING FB ON (FB.FLAT_BOOK_ID=T.BOOKING_ID)  ")
				.append(" INNER JOIN FLAT F   ")
				.append(" ON FB.FLAT_ID = F.FLAT_ID  AND F.STATUS_ID = :STATUS_ID  ")
				.append(" INNER JOIN FLOOR_DETAILS FD ")
				.append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID      ")
				.append(" INNER JOIN FLOOR FL  ")
				.append(" ON FL.FLOOR_ID = FD.FLOOR_ID ")
				.append(" INNER JOIN BLOCK_DETAILS BD ")
				.append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID   ")
				.append(" INNER JOIN BLOCK BL       ")
				.append(" ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID   ")
				.append(" INNER JOIN SITE ST     ")
				.append(" ON BD.SITE_ID = ST.SITE_ID  ")
				.append(" where ")
				.append(" T.STATUS=:STATUS_ID ")
				.append(" AND ST.SITE_ID IN (:SITE_ID) ")
				.append(" AND T.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE ")
				.append(" AND T.TICKET_TYPE_ID IN (:TICKET_TYPE_ID)  ")
				.append(" GROUP BY ST.NAME, ST.SITE_ID ")
				.toString();
		public static final String QRY_TO_GET_CLOSED_TICKETREOPEN_COUNT = new StringBuilder()	
				.append(" SELECT ")
				.append(" COUNT(DISTINCT T.TICKET_ID) as REOPEN_COUNT, ")
				.append(" ST.SITE_ID as SITE_ID, ")
				.append(" ST.NAME as SITE_NAME ")
				.append(" FROM   TICKET  T ")
				.append(" INNER JOIN TICKET_STATISTICS TS  ")
				.append("  ON TS.TICKET_ID=T.TICKET_ID ")
				.append(" INNER JOIN STATUS S ")
				.append("  ON TS.TICKET_STATUS = S.STATUS_ID  ")
				.append(" INNER JOIN TICKET_TYPE TT  ")
				.append(" ON T.TICKET_TYPE_ID = TT.TICKET_TYPE_ID  ")
				.append(" INNER JOIN TICKET_TYPE_DETAILS TTD  ")
				.append(" ON T.TICKET_TYPE_DETAILS_ID = TTD.TICKET_TYPE_DETAILS_ID AND TTD.STATUS = :STATUS_ID ")
			   // .append(" INNER JOIN EMPLOYEE_DETAILS ED ")
	           // .append(" ON TTD.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID AND ED.STATUS_ID = :STATUS_ID ")
	          //  .append(" INNER JOIN EMPLOYEE EMP ")
	          //  .append(" ON EMP.EMP_ID = ED.EMPLOYEE_ID AND EMP.STATUS_ID = :STATUS_ID ")
				//.append(" LEFT OUTER JOIN TICKET_MAIN_TYPE TMT  ")
				//.append(" ON TMT.ID = TT.TICKET_MAIN_TYPE_ID  ")
				.append(" JOIN FLAT_BOOKING FB ON (FB.FLAT_BOOK_ID=T.BOOKING_ID)  ")
				.append(" INNER JOIN FLAT F   ")
				.append(" ON FB.FLAT_ID = F.FLAT_ID   AND F.STATUS_ID = :STATUS_ID  ")
				.append(" INNER JOIN FLOOR_DETAILS FD ")
				.append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID      ")
				.append(" INNER JOIN FLOOR FL  ")
				.append(" ON FL.FLOOR_ID = FD.FLOOR_ID ")
				.append(" INNER JOIN BLOCK_DETAILS BD ")
				.append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID   ")
				.append(" INNER JOIN BLOCK BL       ")
				.append(" ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID   ")
				.append(" INNER JOIN SITE ST     ")
				.append(" ON BD.SITE_ID = ST.SITE_ID  ")
				.append(" where TS.TICKET_STATUS = :TICKET_STATUS ")
				.append(" AND T.STATUS=:STATUS_ID ")
				.append(" AND ST.SITE_ID IN (:SITE_ID) ")
				.append(" AND T.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE ")
				.append(" AND TS.TICKET_TYPE_ID IN (:TICKET_TYPE_ID)  ")
				.append(" GROUP BY ST.NAME, ST.SITE_ID ")
				.toString();
		public static final String QRY_TO_GET_TICKETTYPES = new StringBuilder()	
				.append("  SELECT ")
				.append("  DISTINCT TT.TICKET_TYPE_ID AS TICKET_TYPE_ID ")
				.append("  FROM  TICKET_TYPE TT  ")
				.append("  INNER JOIN TICKET T  ")
				.append("  ON T.TICKET_TYPE_ID = TT.TICKET_TYPE_ID  ")
				.append("  LEFT OUTER JOIN TICKET_MAIN_TYPE TMT ")
				.append("  ON TMT.ID = TT.TICKET_MAIN_TYPE_ID ")
				.append("  JOIN TICKET_TYPE_DETAILS TTD ON TTD.TICKET_TYPE_DETAILS_ID=T.TICKET_TYPE_DETAILS_ID AND TTD.STATUS = :STATUS_ID ")
				.append("  WHERE T.STATUS = :STATUS_ID  AND TTD.DEPARTMENT_ID IN (:DEPARTMENT_IDS) ")
				.toString();
		
		public static final String QRY_TO_GET_MAINTICKETTYPE_WISE_TICKET_COUNT = new StringBuilder()	   
				.append("  SELECT ")                                       
				.append("  COUNT(T.TICKET_ID) AS TICKET_COUNT, ")
				.append("  TT.TICKET_MAIN_TYPE_ID AS TICKET_TYPE_ID, ")
				.append("  TMT.NAME  AS TICKET_TYPE, ")
				.append("  T.TICKET_STATUS AS TICKET_STATUS_ID, ")
				.append("  S.STATUS AS TICKET_STATUS ")
				.append("  FROM ")
				.append("  TICKET T ")
				.append("  INNER JOIN TICKET_TYPE TT ")
				.append("  ON T.TICKET_TYPE_ID = TT.TICKET_TYPE_ID ")
				.append("  LEFT OUTER JOIN TICKET_MAIN_TYPE TMT ")
				.append("  ON TMT.ID = TT.TICKET_MAIN_TYPE_ID ")
				.append("  INNER JOIN STATUS S ")
				.append("  ON T.TICKET_STATUS = S.STATUS_ID ")
				.append(" JOIN TICKET_TYPE_DETAILS TTD ON TTD.TICKET_TYPE_DETAILS_ID=T.TICKET_TYPE_DETAILS_ID AND TTD.STATUS = :STATUS_ID ")
				.append("  WHERE T.STATUS = :STATUS_ID AND T.BOOKING_ID IN (  ") 
				.append("           SELECT   ")
				.append("           FB.FLAT_BOOK_ID   ")
				.append("           FROM  FLAT_BOOKING FB  ")
				.append("           INNER JOIN FLAT F   ")   
				.append("           ON FB.FLAT_ID = F.FLAT_ID  AND FB.STATUS_ID = :STATUS_ID AND F.STATUS_ID = :STATUS_ID ")
				.append("           INNER JOIN FLOOR_DETAILS FD  ") 
				.append("           ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID ")
				.append("           INNER JOIN FLOOR FL ") 
				.append("           ON FL.FLOOR_ID = FD.FLOOR_ID ")
				.append("           INNER JOIN BLOCK_DETAILS BD   ")
				.append("           ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID ")
				.append("           INNER JOIN BLOCK BL ")  
				.append("           ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID ")
				.append("           INNER JOIN SITE S   ")
				.append("           ON BD.SITE_ID = S.SITE_ID AND S.SITE_ID IN (:SITE_ID)) ")
				.append(" AND T.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE ")
				.append(" AND TTD.DEPARTMENT_ID IN (:DEPARTMENT_IDS) ")
				.append(" GROUP BY T.TICKET_STATUS,S.STATUS,TT.TICKET_MAIN_TYPE_ID,TMT.NAME ")
				.append(" ORDER BY TT.TICKET_MAIN_TYPE_ID ")
				.toString();
	
		
		
		
		
		public static final String QRY_TO_GET_MAINTICKETTYPE_SITE_WISE_TICKET_COUNT = new StringBuilder()
                .append(" SELECT ")                                                                                      
                .append("  COUNT(T.TICKET_ID) AS TICKET_COUNT,")                                                        
                .append("  TT.TICKET_MAIN_TYPE_ID AS TICKET_TYPE_ID,")                                                      
                .append("  TMT.NAME  AS TICKET_TYPE,")                                                    
                .append("  T.TICKET_STATUS AS TICKET_STATUS_ID,")                                                     
                .append("  S.STATUS AS TICKET_STATUS,")
                .append("  EMP.FIRST_NAME || ''||EMP.LAST_NAME AS EMP_NAME, ")
                .append("  EMP.EMP_ID, ")
                .append("  ST.SITE_ID AS SITE_ID ")
                .append("  FROM   ")                                                                                      
                .append("  TICKET T  ")                                                                                  
                .append("  INNER JOIN TICKET_TYPE TT ")                                                                   
                .append("  ON T.TICKET_TYPE_ID = TT.TICKET_TYPE_ID   ") 
                .append("  INNER JOIN TICKET_TYPE_DETAILS TTD ")
                .append("  ON T.TICKET_TYPE_DETAILS_ID = TTD.TICKET_TYPE_DETAILS_ID AND TTD.STATUS = :STATUS_ID ")
                .append("  INNER JOIN EMPLOYEE_DETAILS ED ")
                .append("  ON TTD.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID AND ED.STATUS_ID = :STATUS_ID ")
                .append("  INNER JOIN EMPLOYEE EMP ")
                .append("  ON EMP.EMP_ID = ED.EMPLOYEE_ID AND EMP.STATUS_ID = :STATUS_ID ")
                .append("  LEFT OUTER JOIN TICKET_MAIN_TYPE TMT ")                                                       
                .append("  ON TMT.ID = TT.TICKET_MAIN_TYPE_ID  ")                                                         
                .append("  INNER JOIN STATUS S   ")                                                          
                .append("  ON T.TICKET_STATUS = S.STATUS_ID   ")
                .append("  JOIN FLAT_BOOKING FB ON (FB.FLAT_BOOK_ID=T.BOOKING_ID) ")
                .append("  INNER JOIN FLAT F     ")                                                              
                .append("  ON FB.FLAT_ID = F.FLAT_ID  AND FB.STATUS_ID = :STATUS_ID AND F.STATUS_ID = :STATUS_ID ")
                .append("  INNER JOIN FLOOR_DETAILS FD   ")                                                      
                .append("  ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID   ")              
                .append("  INNER JOIN FLOOR FL  ")                                                               
                .append("  ON FL.FLOOR_ID = FD.FLOOR_ID  ")                                                     
                .append("  INNER JOIN BLOCK_DETAILS BD ")                                                        
                .append("  ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID     ")             
                .append("  INNER JOIN BLOCK BL   ")                                                              
                .append("  ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID ")                       
                .append("  INNER JOIN SITE ST  ")                                                                
                .append("  ON BD.SITE_ID = ST.SITE_ID   ")
                .append("  WHERE T.STATUS = :STATUS_ID ")                                                               
                .append("   AND ST.SITE_ID IN (:SITE_ID) ")                             
                .append("   AND T.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE  ")                                        
                .append("   AND TT.TICKET_MAIN_TYPE_ID IN (:TICKET_TYPE_ID) ")                                            
                .append(" GROUP BY T.TICKET_STATUS,S.STATUS,TT.TICKET_MAIN_TYPE_ID,TT.NAME,TMT.NAME, EMP.FIRST_NAME,EMP.LAST_NAME,EMP.EMP_ID,ST.SITE_ID")                    
                       
                .append(" ORDER BY TMT.NAME")     
				.toString();
                
		public static final String QRY_TO_GET_TICKETTYPE_SITE_WISE_TICKET_COUNT = new StringBuilder()
	                .append(" SELECT ")                                                                                      
	                .append("  COUNT(T.TICKET_ID) AS TICKET_COUNT,")                                                        
	                .append("  TT.TICKET_TYPE_ID AS TICKET_TYPE_ID,")                                                      
	                .append("  TMT.NAME ||'/'|| TT.NAME AS TICKET_TYPE,")                                                    
	                .append("  T.TICKET_STATUS AS TICKET_STATUS_ID,")                                                     
	                .append("  S.STATUS AS TICKET_STATUS,")
	                .append("  EMP.FIRST_NAME || ''||EMP.LAST_NAME AS EMP_NAME, ")
	                .append("  EMP.EMP_ID, ")
	                .append("  ST.SITE_ID AS SITE_ID ")
	                .append("  FROM   ")                                                                                      
	                .append("  TICKET T  ")                                                                                  
	                .append("  INNER JOIN TICKET_TYPE TT ")                                                                   
	                .append("  ON T.TICKET_TYPE_ID = TT.TICKET_TYPE_ID   ") 
	                .append("  INNER JOIN TICKET_TYPE_DETAILS TTD ")
	                .append("  ON T.TICKET_TYPE_DETAILS_ID = TTD.TICKET_TYPE_DETAILS_ID AND TTD.STATUS = :STATUS_ID ")
	                .append("  INNER JOIN EMPLOYEE_DETAILS ED ")
	                .append("  ON TTD.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID AND ED.STATUS_ID = :STATUS_ID ")
	                .append("  INNER JOIN EMPLOYEE EMP ")
	                .append("  ON EMP.EMP_ID = ED.EMPLOYEE_ID AND EMP.STATUS_ID = :STATUS_ID ")
	                .append("  LEFT OUTER JOIN TICKET_MAIN_TYPE TMT ")                                                       
	                .append("  ON TMT.ID = TT.TICKET_MAIN_TYPE_ID  ")                                                         
	                .append("  INNER JOIN STATUS S   ")                                                          
	                .append("  ON T.TICKET_STATUS = S.STATUS_ID   ")
	                .append("  JOIN FLAT_BOOKING FB ON (FB.FLAT_BOOK_ID=T.BOOKING_ID) ")
	                .append("  INNER JOIN FLAT F     ")                                                              
	                .append("  ON FB.FLAT_ID = F.FLAT_ID  AND FB.STATUS_ID = :STATUS_ID AND F.STATUS_ID = :STATUS_ID ")
	                .append("  INNER JOIN FLOOR_DETAILS FD   ")                                                      
	                .append("  ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID   ")              
	                .append("  INNER JOIN FLOOR FL  ")                                                               
	                .append("  ON FL.FLOOR_ID = FD.FLOOR_ID  ")                                                     
	                .append("  INNER JOIN BLOCK_DETAILS BD ")                                                        
	                .append("  ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID     ")             
	                .append("  INNER JOIN BLOCK BL   ")                                                              
	                .append("  ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID ")                       
	                .append("  INNER JOIN SITE ST  ")                                                                
	                .append("  ON BD.SITE_ID = ST.SITE_ID   ")
	                .append("  WHERE T.STATUS = :STATUS_ID ")     
	                .append("   AND T.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE  ") 
	                .append("   AND ST.SITE_ID IN (:SITE_ID) ")                             
	              //  .append("   AND T.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE  ")                                 
	                .append("   AND T.TICKET_TYPE_ID IN (:TICKET_TYPE_ID) ")                                            
	                .append(" GROUP BY T.TICKET_STATUS,S.STATUS,TT.TICKET_TYPE_ID,TT.NAME,TMT.NAME, EMP.FIRST_NAME,EMP.LAST_NAME,EMP.EMP_ID,ST.SITE_ID")                    
	                .append(" ORDER BY TT.TICKET_TYPE_ID ")     
					.toString();
		
public static final String QRY_TO_GET_EMPLOYEEWISE_PROJECT_TICKET_DETAILS = new StringBuilder()
                    .append(" SELECT ")
                    .append(" DISTINCT ")
                    .append(" EMP.EMP_ID as EMP_ID, ")
                    .append(" EMP.FIRST_NAME as EMP_NAME, ")
                    .append(" TT.TICKET_TYPE_ID AS TICKET_TYPE_ID, ")
                    .append(" TMT.NAME ||'/'|| TT.NAME AS TICKET_TYPE, ")
                    .append(" TTD.TICKET_TYPE_DETAILS_ID AS TICKET_TYPE_DETAILS_ID, ")
                    .append(" S.SITE_ID AS SITE_ID,")
                    .append(" S.NAME AS SITE_NAME ")
                    .append(" FROM TICKET_TYPE_DETAILS TTD ")
                    .append(" INNER JOIN TICKET_TYPE TT ")
                    .append(" ON TTD.TICKET_TYPE_ID = TT.TICKET_TYPE_ID AND TTD.STATUS = :STATUS_ID ")
                    //.append(" AND TT.STATUS_ID = :STATUS_ID ")
                    .append(" INNER JOIN EMPLOYEE_DETAILS ED ")
                    .append(" ON TTD.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID AND ED.STATUS_ID = :STATUS_ID ")
                    .append(" INNER JOIN EMPLOYEE EMP ")
                    .append(" ON ED.EMPLOYEE_ID = EMP.EMP_ID AND EMP.STATUS_ID = :STATUS_ID ")
                    .append(" INNER JOIN  SITE S ")
                    .append(" ON TTD.SITE_ID = S.SITE_ID ")
                    .append(" LEFT OUTER JOIN TICKET_MAIN_TYPE TMT ")
                    .append(" ON TMT.ID = TT.TICKET_MAIN_TYPE_ID ")
                    .append(" INNER JOIN TICKET T ON (T.TICKET_TYPE_DETAILS_ID=TTD.TICKET_TYPE_DETAILS_ID) ")
                    .append(" WHERE T.STATUS = :STATUS_ID ")		 
                    .append(" AND T.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE ")
                    .append(" AND TTD.DEPARTMENT_ID IN (:DEPARTMENT_IDS) ")
                    .append(" ORDER BY S.SITE_ID,TT.TICKET_TYPE_ID ")
                    .toString();


public static final String QRY_TO_GET_EMPLOYEEWISE_PROJECT_TICKET_COUNT = new StringBuilder()
                    .append(" SELECT  ")                                      
                    .append(" COUNT(T.TICKET_ID) AS TICKET_COUNT,") 
                    .append(" T.TICKET_STATUS AS TICKET_STATUS_ID, ")
                    .append(" T.TICKET_TYPE_DETAILS_ID AS TICKET_TYPE_DETAILS_ID, ")
                    .append(" S.STATUS AS TICKET_STATUS, ")
                    .append(" EMP.EMP_ID as EMP_ID, ")
                    .append(" EMP.FIRST_NAME as EMP_NAME, ")
                    .append(" S.SITE_ID AS SITE_ID ")
                    .append(" FROM ")
                    .append(" TICKET T ")
                    .append(" INNER JOIN STATUS S ")
                    .append(" ON T.TICKET_STATUS = S.STATUS_ID ")
                    .append(" INNER JOIN TICKET_TYPE_DETAILS TTD ")
                    .append(" ON TTD.TICKET_TYPE_DETAILS_ID=T.TICKET_TYPE_DETAILS_ID ")
                    .append(" INNER JOIN EMPLOYEE_DETAILS ED ")
                    .append(" ON TTD.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID AND ED.STATUS_ID = :STATUS_ID ")
                    .append(" INNER JOIN EMPLOYEE EMP ")
                    .append(" ON ED.EMPLOYEE_ID = EMP.EMP_ID AND EMP.STATUS_ID = :STATUS_ID ")
                    .append(" INNER JOIN  SITE S ")
                    .append(" ON TTD.SITE_ID = S.SITE_ID ")
                    .append(" WHERE T.STATUS = :STATUS_ID ")
                    //.append(" AND T.TICKET_TYPE_DETAILS_ID IN (:TICKET_TYPE_DETAILS_ID)")		 
                    .append(" AND T.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE ")
                    .append(" AND TTD.DEPARTMENT_ID IN (:DEPARTMENT_IDS) ")
                    .append(" GROUP BY T.TICKET_STATUS,S.STATUS,T.TICKET_TYPE_DETAILS_ID,EMP.EMP_ID,EMP.FIRST_NAME,S.SITE_ID ")
                    .toString();

public static final String QRY_TO_GET_PROJECT_TICKETTYPE_WISE_ESCALATION_TICKET_COUNT = new StringBuilder()
                     .append(" SELECT ")
                     .append(" COUNT(DISTINCT TE.TICKET_ID) AS TICKET_COUNT, ")
                     .append(" TT.TICKET_TYPE_ID AS TICKET_TYPE_ID,  ")
                     .append(" TMT.NAME ||' / '|| TT.NAME AS TICKET_TYPE, ")
                     .append(" EMP.FIRST_NAME AS EMP_NAME,")
                     .append(" EMP.EMP_ID, ")
                     .append(" TELM.LEVEL_ID AS ESCALATION_LEVEL, ")
                     .append(" CASE")
                     .append(" 	WHEN TELEM.EMPLOYEE_ID IS NOT NULL THEN ")
                     .append("  (SELECT EMP.FIRST_NAME FROM EMPLOYEE EMP WHERE ROWNUM=1 AND EMP.EMP_ID=TELEM.EMPLOYEE_ID AND EMP.STATUS_ID=:STATUS_ID) ")
                     .append("  ELSE '-' ")
                     .append(" END AS ESCALATION_LEVEL_EMP, ")
                     .append(" S.SITE_ID AS SITE_ID, ")
                     .append(" S.NAME AS SITE_NAME  ")
                     .append(" FROM TICKET_ESCALATION TE  ")
                     .append(" INNER JOIN TICKET T  ")
                     .append(" ON TE.TICKET_ID = T.TICKET_ID AND T.STATUS = :STATUS_ID  ")
                     .append(" INNER JOIN TICKET_ESCA_LVL_MAP TELM  ")
                     .append(" ON TELM.ID = (SELECT MAX(TES.TICKET_ESC_LVL_MAP_ID) FROM TICKET_ESCALATION TES WHERE TES.TICKET_ID=T.TICKET_ID) AND TELM.STATUS_ID = :STATUS_ID  ")
                     .append(" JOIN TICKET_ESC_LEVEL_EMP_MAP TELEM ")
                     .append(" ON(TELEM.TICKET_ESC_LVL_MAP_ID=TELM.ID) ")
                     .append(" INNER JOIN TICKET_TYPE_DETAILS TTD ")
                     .append(" ON T.TICKET_TYPE_DETAILS_ID = TTD.TICKET_TYPE_DETAILS_ID ")
                     .append(" INNER JOIN EMPLOYEE_DETAILS ED ")
                     .append(" ON TTD.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID ")
                     .append(" INNER JOIN EMPLOYEE EMP ")
                     .append(" ON ED.EMPLOYEE_ID = EMP.EMP_ID ")
                     .append(" INNER JOIN TICKET_TYPE TT  ")
                     .append(" ON T.TICKET_TYPE_ID = TT.TICKET_TYPE_ID ")
                     //.append(" AND TT.STATUS_ID = :STATUS_ID  ")
                     .append(" INNER JOIN FLAT_BOOKING FB   ")  
                     .append(" ON T.BOOKING_ID = FB.FLAT_BOOK_ID  ")
                     .append(" INNER JOIN FLAT F  ")                                  
                     .append(" ON FB.FLAT_ID = F.FLAT_ID AND F.STATUS_ID = :STATUS_ID  ")
                     .append(" INNER JOIN FLOOR_DETAILS FD  ")
                     .append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID  ")
                     .append(" INNER JOIN FLOOR FL  ")
                     .append(" ON FL.FLOOR_ID = FD.FLOOR_ID  ") 
                     .append(" INNER JOIN BLOCK_DETAILS BD    ")
                     .append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID  ")
                     .append(" INNER JOIN BLOCK BL  ")
                     .append(" ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID   ")
                     .append(" INNER JOIN SITE S   ")
                     .append(" ON BD.SITE_ID = S.SITE_ID  ")
                     .append(" LEFT JOIN TICKET_MAIN_TYPE TMT   ")
                     .append(" ON TT.TICKET_MAIN_TYPE_ID = TMT.ID    ") 
                     .append(" WHERE  ")
                     .append(" TE.CREATED_DATE  BETWEEN :STARTDATE AND :ENDDATE  ")
                     //.append(" AND TE.STATUS=:STATUS_ID ")
                     .append(" AND TTD.DEPARTMENT_ID IN (:DEPARTMENT_IDS) ")
                     .append(" GROUP BY S.SITE_ID,S.NAME,TT.TICKET_TYPE_ID,TT.NAME,TMT.NAME,TELM.LEVEL_ID,EMP.FIRST_NAME,TELEM.EMPLOYEE_ID,EMP.EMP_ID ")
                     .append(" ORDER BY S.SITE_ID  ")
                     .toString();

public static final String  QRY_TO_GET_PROJECT_TICKETTYPE_WISE_ESCALATION_TICKET_DETAILS = new StringBuilder()
						.append(" SELECT ")
						.append("  T.TICKET_ID AS TICKET_NO, ")
						.append("  T.TICKET_TYPE_DETAILS_ID AS TICKET_TYPE_DETAILS_ID, ")
						.append("  ( ")
						.append("  SELECT ")
						.append("  CUST.NAME_PREFIX ||' '|| CUST.FIRST_NAME ||' '|| CUST.LAST_NAME  AS CUST_NAME ")
						.append("  FROM CUSTOMER CUST  ")
						.append("  INNER JOIN  FLAT_BOOKING FB  ")
						.append("  ON FB.CUST_ID  = CUST.CUST_ID  ")
						.append("  INNER JOIN FLAT F  ")
						.append("  ON FB.FLAT_ID = F.FLAT_ID AND F.STATUS_ID = :STATUS_ID  ") 
						.append("  INNER JOIN FLOOR_DETAILS FD   ")
						.append("  ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID  ")
						.append("  INNER JOIN FLOOR FL ")
						.append("  ON FL.FLOOR_ID = FD.FLOOR_ID ")
						.append("  INNER JOIN BLOCK_DETAILS BD  ")
						.append("  ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID  ")
						.append("  INNER JOIN BLOCK BL  ")
						.append("  ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID ")
						.append("  INNER JOIN SITE S   ")
						.append("  ON BD.SITE_ID = S.SITE_ID ")
						.append("  WHERE FB.FLAT_BOOK_ID = T.BOOKING_ID ) AS CUST_NAME, ")    
						.append("  (  ")
						.append("  SELECT  ")
						.append("  S.NAME  ")
						.append("  FROM  FLAT_BOOKING FB ")
						.append("  INNER JOIN FLAT F  ")
						.append("  ON FB.FLAT_ID = F.FLAT_ID AND F.STATUS_ID = :STATUS_ID  ")
						.append("  INNER JOIN FLOOR_DETAILS FD    ")
						.append("  ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID  ")
						.append("  INNER JOIN FLOOR FL   ")
						.append("  ON FL.FLOOR_ID = FD.FLOOR_ID  ")  
						.append("  INNER JOIN BLOCK_DETAILS BD   ")
						.append("  ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID  ")   
						.append("  INNER JOIN BLOCK BL  ")
						.append("  ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID  ")     
						.append("  INNER JOIN SITE S   ")
						.append("  ON BD.SITE_ID = S.SITE_ID  ")
						.append("  WHERE FB.FLAT_BOOK_ID = T.BOOKING_ID) AS SITE_NAME, ")       
						.append("  TMT.NAME ||' / '|| TT.NAME AS TICKET_TYPE, ")
						.append("  CASE  ")                               
						.append("  WHEN T.ESTIMATED_RESOLVED_DATE_STATUS IS NOT NULL AND T.TICKET_STATUS NOT IN(11) THEN  ") 
						.append("  (    ")                                                                              
						.append("  SELECT  ")                                                           
						.append("  EMP.FIRST_NAME ")
						.append("  FROM TICKET_ESCALATION TE ")
						.append("  INNER JOIN TICKET_ESCA_LVL_MAP TELVM ")
						.append("  ON TELVM.ID = TE.TICKET_ESC_LVL_MAP_ID  ")
						.append("  INNER JOIN TICKET_ESC_LEVEL_EMP_MAP TELEM  ")
						.append("  ON TELEM.TICKET_ESC_LVL_MAP_ID = TELVM.ID  ")
						.append("  INNER JOIN EMPLOYEE EMP   ")                
						.append("  ON TELEM.EMPLOYEE_ID = EMP.EMP_ID   ")      
						.append("  WHERE TE.TICKET_ID = T.TICKET_ID AND TE.STATUS = :STATUS_ID AND TELVM.STATUS_ID = :STATUS_ID AND TELEM.STATUS_ID = :STATUS_ID  ")
						.append("  )   ")                                                                                                      		
						.append("  ELSE ")                                                                                                     
						.append("  CASE  ")                                                                                                  	
						.append("  WHEN T.DEPARTMENT_ID IS NOT NULL AND  T.DEPARTMENT_ID <> 0 THEN  DEPT.NAME  ")                           		
						.append("  WHEN T.ASSIGNMENT_TO IS NOT NULL AND T.ASSIGNMENT_TO <>  0 THEN EMP.FIRST_NAME   ")                      		
						.append("  ELSE E.FIRST_NAME   ")                                                                                  		
						.append("  END  ")                                                                                                  	
						.append("  END AS PENDING_DEPT_EMP,  ")                                                                                 
						.append("  T.TICKET_STATUS AS HIGHLEVEL_STATUS,  ")                                                                     
						.append("  (SELECT STATUS FROM STATUS TST WHERE TST.STATUS_ID =  T.TICKET_STATUS) AS TICKET_HIGHLEVEL_STATUS,  ")      
						.append("  T.CREATED_DATE AS RECIVED_DATE,  ")                                                                         
						.append("  T.ESTIMATED_RESOLVED_DATE AS ESCALATION_DATE, ")                                                          
						.append("  E.FIRST_NAME AS TICKET_OWNER, ")
						.append("  E.EMP_ID AS EMP_ID, ")
						.append("  CASE   ")           
						.append("  WHEN T.ESTIMATED_RESOLVED_DATE_STATUS IS NOT NULL AND T.TICKET_STATUS NOT IN(11) THEN ST.STATUS  ")
						.append("  ELSE  ") 
						.append("  S.STATUS ")     
						.append("  END AS TICKET_STATUS ")    
						.append("  FROM TICKET T ")          
						.append("  INNER JOIN TICKET_TYPE_DETAILS TTD ")  
						.append("  ON T.TICKET_TYPE_DETAILS_ID = TTD.TICKET_TYPE_DETAILS_ID ")
						.append("  INNER JOIN TICKET_TYPE TT   ")                             
						.append("  ON TT.TICKET_TYPE_ID = TTD.TICKET_TYPE_ID  ")              
						.append("  INNER JOIN EMPLOYEE_DETAILS ED ")                           
						.append("  ON TTD.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID  ")         
						.append("  INNER JOIN EMPLOYEE E  ")                                  
						.append("  ON ED.EMPLOYEE_ID = E.EMP_ID  ")                           
						.append("  LEFT JOIN STATUS ST   ")                                   
						.append("  ON T.ESTIMATED_RESOLVED_DATE_STATUS = ST.STATUS_ID  ")    
						.append("  LEFT JOIN STATUS S  ")                                     
						.append("  ON S.STATUS_ID = T.TICKET_STATUS  ")                       
						.append("  LEFT JOIN DEPARTMENT DEPT  ")                              
						.append("  ON T.DEPARTMENT_ID = DEPT.DEPT_ID  ")                      
						.append("  LEFT JOIN EMPLOYEE EMP ")                                  
						.append("  ON EMP.EMP_ID = T.ASSIGNMENT_TO ")                         
						.append("  LEFT JOIN TICKET_MAIN_TYPE TMT  ")                         
						.append("  ON TT.TICKET_MAIN_TYPE_ID = TMT.ID  ")                     
						.append("  WHERE ")
						.append(" T.TICKET_ID IN ( ")
						.append(" SELECT DISTINCT ")
						.append(" TE.TICKET_ID AS TICKET_ID ")
						//.append(" --S.SITE_ID AS SITE_ID ")
						.append(" FROM TICKET_ESCALATION TE ")
						.append(" INNER JOIN TICKET T ")
						.append(" ON TE.TICKET_ID = T.TICKET_ID AND T.STATUS = :STATUS_ID ")
						.append(" INNER JOIN TICKET_ESCA_LVL_MAP TELM ")
						//.append(" ON TELM.ID = TE.TICKET_ESC_LVL_MAP_ID AND TELM.STATUS_ID = :STATUS_ID ")
						.append(" ON TELM.ID = (SELECT MAX(TES.TICKET_ESC_LVL_MAP_ID) FROM TICKET_ESCALATION TES WHERE TES.TICKET_ID=T.TICKET_ID) AND TELM.STATUS_ID = :STATUS_ID  ")
						.append(" INNER JOIN TICKET_TYPE TT ")
						.append(" ON T.TICKET_TYPE_ID = TT.TICKET_TYPE_ID ")
						//.append(" AND TT.STATUS_ID = :STATUS_ID ")
						.append(" INNER JOIN FLAT_BOOKING FB  ")  
						.append(" ON T.BOOKING_ID = FB.FLAT_BOOK_ID ")
						.append(" INNER JOIN FLAT F  ")                                      
						.append(" ON FB.FLAT_ID = F.FLAT_ID AND F.STATUS_ID = :STATUS_ID ")
						.append(" INNER JOIN FLOOR_DETAILS FD ")
						.append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID ")
						.append(" INNER JOIN FLOOR FL ")
						.append(" ON FL.FLOOR_ID = FD.FLOOR_ID  ") 
						.append(" INNER JOIN BLOCK_DETAILS BD ")
						.append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID ")
						.append(" INNER JOIN BLOCK BL ")
						.append(" ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID ")
						.append(" INNER JOIN SITE S  ")
						.append(" ON BD.SITE_ID = S.SITE_ID ")
						.append(" INNER JOIN TICKET_TYPE_DETAILS TTD                                                  ")
                        .append(" ON TTD.TICKET_TYPE_DETAILS_ID=T.TICKET_TYPE_DETAILS_ID AND TTD.STATUS=:STATUS_ID    ")
                        .append(" INNER JOIN EMPLOYEE_DETAILS ED                                                      ")
                        .append(" ON ED.EMP_DETAILS_ID=TTD.EMPLOYEE_DETAILS_ID AND ED.STATUS_ID=:STATUS_ID            ")
                        .append(" INNER JOIN EMPLOYEE EMP                                                             ")
                        .append(" ON EMP_ID=ED.EMPLOYEE_ID AND EMP.STATUS_ID=:STATUS_ID                               ")
						.append(" WHERE ")
						.append(" S.SITE_ID IN (:SITE_ID) ")
						.append(" AND TT.TICKET_TYPE_ID IN (:TICKET_TYPE_ID) ")
						.append(" AND TELM.LEVEL_ID IN (:LEVEL_ID) ")
						.append(" AND TE.CREATED_DATE  BETWEEN :STARTDATE AND :ENDDATE ")
						.append(" AND EMP.EMP_ID IN (:EMP_ID) ")
						//.append(" AND TE.STATUS=:STATUS_ID ")
						.append(" ) ")
						.append(" ORDER BY T.TICKET_ID ")
                        .toString();
public static final String QRY_TO_GET_COUNT_SITE_WISE_TICKETS = new StringBuilder()
                .append("SELECT ")
                .append("COUNT(T.TICKET_ID) AS TICKET_COUNT")                                                               
                //.append("ST.SITE_ID AS SITE_ID  ")
                .append(" FROM ")
               .append("  TICKET T ") 
               .append("  JOIN FLAT_BOOKING FB ON (FB.FLAT_BOOK_ID=T.BOOKING_ID) ") 
               .append("    INNER JOIN FLAT F  ")                                                                  
               .append("     ON FB.FLAT_ID = F.FLAT_ID  AND FB.STATUS_ID = :STATUS_ID AND F.STATUS_ID = :STATUS_ID ") 
               .append("     INNER JOIN FLOOR_DETAILS FD ")                                                         
               .append("   ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID  ")               
               .append("    INNER JOIN FLOOR FL ")                                                                 
               .append("   ON FL.FLOOR_ID = FD.FLOOR_ID ")                                                     
               .append("     INNER JOIN BLOCK_DETAILS BD ")                                                        
               .append("  ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID ")                 
               .append("      INNER JOIN BLOCK BL   ")                                                               
               .append("     ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID ")                       
               .append("    INNER JOIN SITE ST  ")                                                              
               .append("   ON BD.SITE_ID = ST.SITE_ID ") 
               .append("    WHERE T.STATUS = :STATUS_ID ")                                                                
               .append("  AND ST.SITE_ID IN (:SITE_ID) ") 
               .append("  AND T.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE ") 
               .append(" AND T.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE ") 
               .append("   GROUP BY ST.SITE_ID") 
               .toString() ;
  
                         
public static final String QRY_TO_GET_TICKET_IDS_WRT_SITE_TICKET_TYPE = new StringBuilder()
                           .append(" SELECT  ")    
                           .append(" T.TICKET_ID AS TICKET_NO,")
                           .append(" T.TICKET_TYPE_DETAILS_ID AS TICKET_TYPE_DETAILS_ID, ")
                           .append(" T.CREATED_DATE AS CREATED_DATE,")
                           .append(" T.RESOLVED_DATE AS RESOLVED_DATE,")
                           .append(" T.TICKET_STATUS AS TICKET_STATUS_ID,")                                                     
                           .append(" EMP.FIRST_NAME || ''||EMP.LAST_NAME AS EMP_NAME, ")
                           .append(" EMP.EMP_ID, ")
                           .append(" T.TICKET_TYPE_ID, ST.SITE_ID ")
                           .append(" FROM  ")                                                                                       
                           .append(" TICKET T ")                                                                                   
                           .append(" INNER JOIN TICKET_TYPE TT ")                                                                   
                           .append(" ON T.TICKET_TYPE_ID = TT.TICKET_TYPE_ID ")  
                           .append(" INNER JOIN TICKET_TYPE_DETAILS TTD ")
                           .append(" ON T.TICKET_TYPE_DETAILS_ID = TTD.TICKET_TYPE_DETAILS_ID AND TTD.STATUS = :STATUS_ID ")
                           .append(" INNER JOIN EMPLOYEE_DETAILS ED ")
                           .append(" ON TTD.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID AND ED.STATUS_ID = :STATUS_ID ")
                           .append(" INNER JOIN EMPLOYEE EMP ")
                           .append(" ON EMP.EMP_ID = ED.EMPLOYEE_ID AND EMP.STATUS_ID = :STATUS_ID  ")
                           .append(" JOIN FLAT_BOOKING FB ON (FB.FLAT_BOOK_ID=T.BOOKING_ID) ")
       	                   .append(" INNER JOIN FLAT F     ")                                                              
       	                   .append(" ON FB.FLAT_ID = F.FLAT_ID  AND FB.STATUS_ID = :STATUS_ID AND F.STATUS_ID = :STATUS_ID ")
       	                   .append(" INNER JOIN FLOOR_DETAILS FD   ")                                                      
       	                   .append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID   ")              
       	                   .append(" INNER JOIN FLOOR FL  ")                                                               
       	                   .append(" ON FL.FLOOR_ID = FD.FLOOR_ID  ")                                                     
       	                   .append(" INNER JOIN BLOCK_DETAILS BD ")                                                        
       	                   .append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID     ")             
       	                   .append(" INNER JOIN BLOCK BL   ")                                                              
       	                   .append(" ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID ")                       
       	                   .append(" INNER JOIN SITE ST  ")                                                                
       	                   .append(" ON BD.SITE_ID = ST.SITE_ID   ")
                           .append(" WHERE T.STATUS = :STATUS_ID ") 
                           .append(" AND ST.SITE_ID IN (:SITE_ID) ")                             
                           .append(" AND T.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE ")                                         
                           .append(" AND T.TICKET_TYPE_ID IN (:TICKET_TYPE_ID) ")   
                           .toString()
                           ;  


public static final String QRY_TO_GET_TICKET_DETAILS_WRT_TICKET_ID = new StringBuilder()
                                            .append(" SELECT  ")                                                                                                      
                                            .append("	  T.TICKET_ID AS TICKET_NO,  ")
                                            .append("	  T.TICKET_TYPE_DETAILS_ID AS TICKET_TYPE_DETAILS_ID,  ")
                                           // .append(" (SELECT EXTRACT(HOUR FROM DIFF) HOURS FROM (SELECT T.ESTIMATED_RESOLVED_DATE - SYSTIMESTAMP DIFF FROM DUAL)) AS HRS_PENDING, ")
                                            .append("	  T.MODIFIED_DATE AS MODIFIED_DATE,  ")
                                            .append("	  T.RATING AS RATING,  ")
                                            .append("	  T.FEEDBACK_DESC AS FEEDBACK_DESC,  ")
                                            .append("  (SELECT      ")                                                                                               
                                            .append("          CUST.NAME_PREFIX ||' '|| CUST.FIRST_NAME ||' '|| CUST.LAST_NAME  AS CUST_NAME    ")                   
                                            .append("          FROM CUSTOMER CUST       ")                                                                           
                                            .append("          INNER JOIN  FLAT_BOOKING FB  ")                                                                       
                                            .append("          ON FB.CUST_ID  = CUST.CUST_ID  ")                                                                     
                                            .append("          INNER JOIN FLAT F  ")                                                                                 
                                            .append("          ON FB.FLAT_ID = F.FLAT_ID  AND FB.STATUS_ID = :STATUS_ID AND F.STATUS_ID = :STATUS_ID   ")            
                                            .append("          INNER JOIN FLOOR_DETAILS FD  ")                                                                        
                                            .append("          ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID  ")                                 
                                            .append("          INNER JOIN FLOOR FL   ")                                                                              
                                            .append("          ON FL.FLOOR_ID = FD.FLOOR_ID  ")                                                                      
                                            .append("          INNER JOIN BLOCK_DETAILS BD  ")                                                                       
                                            .append("          ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID   ")                               
                                            .append("          INNER JOIN BLOCK BL ")                                                                                
                                            .append("          ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID ")                                        
                                            .append("          INNER JOIN SITE S   ")                                                                                
                                            .append("          ON BD.SITE_ID = S.SITE_ID  ")                                                                         
                                            .append("          WHERE FB.FLAT_BOOK_ID = T.BOOKING_ID ) AS CUST_NAME,   ")                                             
                                            .append("        (SELECT     ")                                                                                          
                                            .append("          S.NAME     ")                                                                                         
                                            .append("          FROM  FLAT_BOOKING FB  ")                                                                             
                                            .append("          INNER JOIN FLAT F    ")                                                                               
                                            .append("          ON FB.FLAT_ID = F.FLAT_ID  AND FB.STATUS_ID = :STATUS_ID AND F.STATUS_ID = :STATUS_ID    ")           
                                            .append("          INNER JOIN FLOOR_DETAILS FD  ")                                                                       
                                            .append("          ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID  ")                                
                                            .append("          INNER JOIN FLOOR FL   ")                                                                              
                                            .append("          ON FL.FLOOR_ID = FD.FLOOR_ID  ")                                                                      
                                            .append("          INNER JOIN BLOCK_DETAILS BD   ")                                                                      
                                            .append("          ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID  ")                                
                                            .append("          INNER JOIN BLOCK BL  ")                                                                               
                                            .append("          ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID  ")                                       
                                            .append("          INNER JOIN SITE S  ")                                                                                 
                                            .append("          ON BD.SITE_ID = S.SITE_ID   ")                                                                       
                                            .append("          WHERE FB.FLAT_BOOK_ID = T.BOOKING_ID) AS SITE_NAME,  ")                                                
                                            .append(" TMT.NAME ||' / '|| TT.NAME AS TICKET_TYPE,  ")                                                                 
                                            .append(" CASE    ")                                                                                                     
                                            .append("	  WHEN T.ESTIMATED_RESOLVED_DATE_STATUS IS NOT NULL AND T.TICKET_STATUS NOT IN(11) THEN   ")             
                                            .append("		  (   ")                                                                                                 
                                            .append("		      SELECT  ")                                                                                         
                                            .append("		      EMP.FIRST_NAME   ")                                                                                
                                            .append("		      FROM TICKET_ESCALATION TE   ")                                                                     
                                            .append("		      INNER JOIN TICKET_ESCA_LVL_MAP TELVM   ")                                                          
                                            .append("		      ON TELVM.ID = TE.TICKET_ESC_LVL_MAP_ID    ")                                                       
                                            .append("		      INNER JOIN TICKET_ESC_LEVEL_EMP_MAP TELEM   ")                                                     
                                            .append("		      ON TELEM.TICKET_ESC_LVL_MAP_ID = TELVM.ID   ")                                                     
                                            .append("		      INNER JOIN EMPLOYEE EMP      ")                                                                    
                                            .append("		      ON TELEM.EMPLOYEE_ID = EMP.EMP_ID   ")                                                             
                                            .append("		      WHERE TE.TICKET_ID = T.TICKET_ID AND TE.STATUS = :STATUS_ID AND TELVM.STATUS_ID = :STATUS_ID AND TELVM.STATUS_ID = :STATUS_ID AND TELEM.STATUS_ID = :STATUS_ID  ")
                                            .append("		  )  ")                                                                                                  
                                            .append("		  ELSE   ")                                                                                               
                                            .append("		     CASE  ")                                                                                            
                                            .append("		      WHEN T.DEPARTMENT_ID IS NOT NULL AND  T.DEPARTMENT_ID <> 0 THEN  DEPT.NAME    ")                   
                                            .append("		      WHEN T.ASSIGNMENT_TO IS NOT NULL AND T.ASSIGNMENT_TO <>  0 THEN EMP.FIRST_NAME ")                  
                                            .append("		      ELSE E.FIRST_NAME   ")                                                                              
                                            .append("		     END            ")                                                                                   
                                            .append("		  END AS PENDING_DEPT_EMP,  ")                                                                           
                                            .append("		  T.TICKET_STATUS AS HIGHLEVEL_STATUS,  ")                                                               
                                            .append("  (SELECT STATUS FROM STATUS TST WHERE TST.STATUS_ID =  T.TICKET_STATUS) AS TICKET_HIGHLEVEL_STATUS,   ")       
                                            .append("      T.CREATED_DATE AS RECIVED_DATE, ")                                                                            
                                            .append("		  T.ESTIMATED_RESOLVED_DATE AS ESCALATION_DATE,")                                                        
                                            .append("		  E.FIRST_NAME AS TICKET_OWNER,")                                                                        
                                            .append("		  E.EMP_ID AS EMP_ID,")                                                                                  
                                            .append("		  CASE  ")                                                                                                
                                            .append("		  WHEN T.ESTIMATED_RESOLVED_DATE_STATUS IS NOT NULL AND T.TICKET_STATUS NOT IN(11) THEN ST.STATUS  ")    
                                            .append("		  ELSE  ")                                                                                               
                                            .append("		  S.STATUS    ")                                                                                         
                                            .append("		  END AS TICKET_STATUS  ")                                                                               
                                            .append("		  FROM TICKET T     ")                                                                                   
                                            .append("		  INNER JOIN TICKET_TYPE_DETAILS TTD  ")                                                                 
                                            .append("		  ON T.TICKET_TYPE_DETAILS_ID = TTD.TICKET_TYPE_DETAILS_ID  ")                                           
                                            .append("		  INNER JOIN TICKET_TYPE TT  ")                                                                          
                                            .append("		  ON TT.TICKET_TYPE_ID = TTD.TICKET_TYPE_ID   ")                                                         
                                            .append("		  INNER JOIN EMPLOYEE_DETAILS ED   ")                                                                    
                                            .append("          ON TTD.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID      ")                                                
                                            .append("          INNER JOIN EMPLOYEE E    ")                                                                           
                                            .append("          ON ED.EMPLOYEE_ID = E.EMP_ID   ")                                                                     
                                            .append("          LEFT JOIN STATUS ST       ")                                                                          
                                            .append("          ON T.ESTIMATED_RESOLVED_DATE_STATUS = ST.STATUS_ID  ")                                                
                                            .append("          LEFT JOIN STATUS S     ")                                                                             
                                            .append("          ON S.STATUS_ID = T.TICKET_STATUS   ")                                                                 
                                            .append("          LEFT JOIN DEPARTMENT DEPT   ")                                                                        
                                            .append("          ON T.DEPARTMENT_ID = DEPT.DEPT_ID     ")                                                              
                                            .append("          LEFT JOIN EMPLOYEE EMP          ")                                                                    
                                            .append("          ON EMP.EMP_ID = T.ASSIGNMENT_TO   ")                                                                  
                                            .append("   LEFT JOIN TICKET_MAIN_TYPE TMT    ")                                                                         
                                            .append("   ON TT.TICKET_MAIN_TYPE_ID = TMT.ID ")
                                            .append("   WHERE ")
                                            .append("   T.STATUS in (:STATUS_ID)  ")
                                            .append("   AND T.TICKET_ID IN (:TICKET_ID) ORDER BY T.TICKET_ID DESC ")
                                            .toString();

public static final String QRY_TO_GET_DEVICETOKENS_WRT_CUST_DOB_DOA = new StringBuilder()
                                           .append(" SELECT DISTINCT ")
                                           .append("   DE.DEVICE_ID AS DEVICE_ID,")
                                           .append("   DE.DEVICE_TOKEN AS DEVICE_TOKEN,")
                                           .append("   DE.OS_TYPE AS OS_TYPE,")
                                           .append("   DE.MODIFIED_DATE AS MODIFIED_DATE,")
                                           .append("   CUST.CUST_ID AS CUST_ID, ")
                                           .append("   CUST.NAME_PREFIX ||' ' || CUST.FIRST_NAME ||' '||CUST.LAST_NAME AS CUST_NAME,")
                                           .append("   CUST.FIRST_NAME ||' '||CUST.LAST_NAME AS NAME,")
                                           .append("   CUST.DATE_OF_BIRTH AS DATE_OF_BIRTH,")
                                           .append("   (SELECT 6 FROM DUAL WHERE TO_CHAR(CUST.DATE_OF_BIRTH,'MM-DD') = TO_CHAR(CAST(:DATE_OF_BIRTH AS DATE), 'MM-DD')) AS DATE_OF_BIRTH_STATUS,")
                                           .append("   (SELECT 6 FROM DUAL WHERE TO_CHAR(CB.DATE_OF_ANNIVERSERY,'MM-DD') = TO_CHAR(CAST(:DATE_OF_ANNIVERSERY AS DATE), 'MM-DD')) AS DATE_OF_ANNIVERSERY_STATUS,")
                                           .append("   FB.FLAT_ID AS FLAT_ID, ")
                                           .append("   CB.DATE_OF_ANNIVERSERY AS  DATE_OF_ANNIVERSERY ")
                                           .append(" FROM CUSTOMER CUST ")
                                           .append(" INNER JOIN FLAT_BOOKING FB")
                                           .append(" ON ")
                                           .append(" FB.CUST_ID = CUST.CUST_ID AND FB.STATUS_ID IN(:STATUS_ID) ")
                                           .append(" INNER JOIN CUST_BOOK_INFO CB ")
                                           .append(" ON CB.FLAT_BOOK_ID = FB.FLAT_BOOK_ID AND CB.STATUS_ID IN (:STATUS_ID) ")
                                           .append(" INNER JOIN APP_REGISTRATION APR ")
                                           .append(" ON FB.CUST_ID = APR.CUST_ID AND APR.STATUS_ID IN (:STATUS_ID) ")
                                           .append(" INNER JOIN DEVICE DE ")
                                           .append(" ON APR.DEVICE_ID = DE.DEVICE_ID AND DE.STATUS_ID IN (:STATUS_ID) ")
                                           .append(" WHERE TO_CHAR(CB.DATE_OF_ANNIVERSERY,'MM-DD') = TO_CHAR(CAST(:DATE_OF_ANNIVERSERY AS DATE), 'MM-DD') ")
                                           .append(" OR ")
                                           .append(" TO_CHAR(CUST.DATE_OF_BIRTH,'MM-DD') = TO_CHAR(CAST(:DATE_OF_BIRTH AS DATE), 'MM-DD') ")
                                           .append(" ORDER BY CUST.CUST_ID ")
                                           .toString();
public static final String QRY_TO_GET_HOLIDAY_SEASONAL_CELEBRATIONS_NOTIFICATIONS = new StringBuilder()		 
                                           .append(" SELECT ")
                                           .append(" NOTIF.ID, ")
                                           .append(" NOTIF.NOTIFICATIONTEXT, ")
                                           .append(" NOTIF.MESSAGE, ")
                                           .append(" NOTIF.DESCRIPTION, ")
                                           .append(" NOTIF.IMAGELOCATION, ")
                                           .append(" NOTIF.FILELOCATION, ")
                                           .append(" NOTIF.CREATED_DATE, ")
                                           .append(" NOTIF.MODIFIED_DATE, ")
                                           .append(" NOTIF.STATUS_ID,")
                                           .append(" NOTIF.HOLIDAY_SEASONAL_CELEBRATIONS_NOTIFICATIONS_EVENT_ID, ")
                                           .append(" NOTIFE.EVENT_NAME ")
                                           .append(" FROM HOLIDAY_SEASONAL_CELEBRATIONS_NOTIFICATIONS NOTIF ")
                                           .toString();

public static final String QRY_TO_UPDATE_FLAT_AGREEMENT_DATE = new StringBuilder()
                                           .append(" UPDATE FLAT_BOOKING ")
                                           .append(" SET AGREEMENT_DATE  = :AGREEMENT_DATE ")
                                           .append(" WHERE ")
                                           .append(" CUST_ID = (SELECT CUST_ID FROM CUSTOMER WHERE PANCARD = :PANCARD AND STATUS_ID IN (:STATUS_ID)) ")
                                           .append(" AND FLAT_ID  = ")
                                           .append(" (  SELECT  ")                                                                                                  
                                           .append("    F.FLAT_ID ")
                                           .append("    FROM     ")                                                                                
                                           .append("    FLAT F   ")                                                                                                       
                                           .append("    INNER JOIN FLOOR_DETAILS FD  ")                                                                            
                                           .append("    ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID  AND F.STATUS_ID IN (:STATUS_ID)   ")                                  
                                           .append("    INNER JOIN FLOOR FL   ")                                                                                   
                                           .append("    ON FL.FLOOR_ID = FD.FLOOR_ID  ")                                                                           
                                           .append("    INNER JOIN BLOCK_DETAILS BD  ")                                                                            
                                           .append("    ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID IN (:STATUS_ID)    ")                                  
                                           .append("    INNER JOIN BLOCK BL   ")                                                                                   
                                           .append("    ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID IN (:STATUS_ID) ")
                                           .append("    INNER JOIN SITE S ")
                                           .append("    ON BD.SITE_ID = S.SITE_ID    ")
                                           .append("    WHERE ")
                                           .append("    S.SALES_FORCE_SITE_NAME = :SITE_NAME ")
                                           .append("    AND BL.NAME = :BLOCK_NAME ")
                                           .append("    AND FL.NAME = :FLOOR_NAME  ")
                                           .append("    AND F.FLAT_NO = :FLAT_NO ")
                                           .append("  )  ")
                                           .append(" AND STATUS_ID  IN (:STATUS_ID) ")
                                           .toString();

public static final String QRY_TO_GET_DEVICETOKENS_WRT_CUSTOMER_STATUS = new StringBuilder()
                                           .append(" SELECT DISTINCT ")
                                           .append(" DE.DEVICE_TOKEN AS DEVICE_TOKEN, ")
                                           .append(" DE.OS_TYPE AS OS_TYPE,")
                                           .append(" DE.MODIFIED_DATE AS MODIFIED_DATE,")
                                           .append(" CUST.CUST_ID AS CUST_ID,")
                                           .append(" FB.FLAT_ID AS FLAT_ID,")
                                           .append(" CUST.NAME_PREFIX ||' ' || CUST.FIRST_NAME ||' '||CUST.LAST_NAME AS CUST_NAME ")
                                           .append(" FROM CUSTOMER CUST ")
                                           .append(" INNER JOIN FLAT_BOOKING FB ")
                                           .append(" ON ")
                                           .append(" FB.CUST_ID = CUST.CUST_ID AND FB.STATUS_ID IN(:STATUS_ID) ")
                                           .append(" INNER JOIN APP_REGISTRATION APR ") 
                                           .append(" ON FB.CUST_ID = APR.CUST_ID AND APR.STATUS_ID IN (:STATUS_ID) ")
                                           .append(" INNER JOIN DEVICE DE ")
                                           .append(" ON APR.DEVICE_ID = DE.DEVICE_ID AND DE.STATUS_ID IN (:STATUS_ID) ")
                                           .append(" ORDER BY CUST.CUST_ID ")
                                           .toString();


                   public static final String QRY_TO_GET_MESSAGES = new StringBuilder()
                                                                .append(" SELECT ")
                                                                .append(" MSG.MESSENGER_ID AS MESSENGER_ID, ")
                                                                .append(" MSG.MESSAGE_ID AS MESSAGE_ID, ")
                                                                .append(" MSG.CREATED_BY_ID AS CREATED_BY_ID , ")
                                                                .append(" MSG.CREATED_BY_TYPE AS CREATED_BY_TYPE, ")
                                                                .append(" MSG.STATUS AS STATUS, ")
                                                                .append(" UPPER(ST.STATUS) AS MESSANGER_STATUS, ")
                                                                .append(" MSG.SEND_TO AS SEND_TO, ")
                                                                .append(" MSG.SEND_TYPE AS SEND_TYPE, ")
                                                                .append(" MSG.CREATED_DATE AS CREATED_DATE, ")
                                                                .append(" MSG.LAST_CHATTED_DATE AS LAST_CHATTED_DATE, ")
                                                                .append(" MSG.SUBJECT AS SUBJECT, ")
                                                                .append(" FB.FLAT_BOOK_ID AS FLAT_BOOK_ID, ")
                                                                .append(" CUST.CUST_ID AS CUST_ID, ")
                                                                .append(" CUST.NAME_PREFIX ||' '|| CUST.FIRST_NAME AS CUST_NAME, ")
                                                                .append(" EMP.FIRST_NAME AS EMP_NAME,")
                                                                .append(" EMP.FIRST_NAME AS CREATED_BY_NAME,")
                                                                .append(" DEPT.NAME AS DEPT_NAME,")
                                                                .append(" DEPT.DEPT_ID AS DEPT_ID,")
                                                                .append(" EMP.EMP_ID AS EMP_ID,")  
                                                                .append(" F.FLAT_ID AS FLAT_ID,  ")
                                                                .append(" F.FLAT_NO AS FLAT_NO,  ")
                                                                .append(" FL.NAME AS FLOOR_NAME, ")
                                                                .append(" BL.NAME AS BLOCK_NAME, ")
                                                                .append(" S.NAME AS SITE_NAME,  ")
                                                                .append(" S.SITE_ID AS SITE_ID  ")
                                                                .append(" FROM MESSENGER MSG  ")
                                                                .append(" INNER JOIN EMPLOYEE EMP ")
                                                                .append(" ON MSG.CREATED_BY_ID = EMP.EMP_ID	 ")															 
																.append(" INNER JOIN EMPLOYEE_DETAILS ED ")
																.append(" ON ED.EMPLOYEE_ID = EMP.EMP_ID ")
																.append(" INNER JOIN DEPARTMENT DEPT ")
																.append(" ON ED.DEPT_ID = DEPT.DEPT_ID ")
                                                                .append(" INNER JOIN FLAT_BOOKING FB  ")
                                                                .append(" ON MSG.SEND_TO = FB.FLAT_BOOK_ID AND  MSG.STATUS IN (:STATUS_ID)  ")
                                                                .append(" INNER JOIN  ")
                                                                .append(" FLAT F  ")
                                                                .append(" ON F.FLAT_ID = FB.FLAT_ID AND FB.STATUS_ID IN (:STATUS_ID)  ")
                                                                .append(" INNER JOIN FLOOR_DETAILS FD  ")                                                                          
                                                                .append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID in (:STATUS_ID)  AND F.STATUS_ID IN (:STATUS_ID)  ")                                  
                                                                .append(" INNER JOIN FLOOR FL   ")                                                                                    
                                                                .append(" ON FL.FLOOR_ID = FD.FLOOR_ID  ")                                                                            
                                                                .append(" INNER JOIN BLOCK_DETAILS BD   ")                                                                            
                                                                .append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID IN (:STATUS_ID)  ")                                   
                                                                .append(" INNER JOIN BLOCK BL  ")                                                                                     
                                                                .append(" ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID IN (:STATUS_ID)  ")
                                                                .append(" INNER JOIN SITE S  ")
                                                                .append(" ON BD.SITE_ID = S.SITE_ID  ")
                                                                .append(" INNER JOIN CUSTOMER CUST  ")
                                                                .append(" ON FB.CUST_ID = CUST.CUST_ID AND CUST.STATUS_ID IN (:STATUS_ID)  ")
                                                                .append(" INNER JOIN STATUS ST  ")
                                                                .append(" ON ST.STATUS_ID = MSG.STATUS  ")
                                                                .append(" WHERE 1=1 ")
                                                                .toString()
                                                                ;
                   
                   /* For Customer Single Page Data request */
                   public static final String QRY_TO_GET_MESSAGES_WITHOUT_BOOKING_STATUS = new StringBuilder()
                           .append(" SELECT ")
                           .append(" MSG.MESSENGER_ID AS MESSENGER_ID, ")
                           .append(" MSG.MESSAGE_ID AS MESSAGE_ID, ")
                           .append(" MSG.CREATED_BY_ID AS CREATED_BY_ID , ")
                           .append(" MSG.CREATED_BY_TYPE AS CREATED_BY_TYPE, ")
                           .append(" MSG.STATUS AS STATUS, ")
                           .append(" UPPER(ST.STATUS) AS MESSANGER_STATUS, ")
                           .append(" MSG.SEND_TO AS SEND_TO, ")
                           .append(" MSG.SEND_TYPE AS SEND_TYPE, ")
                           .append(" MSG.CREATED_DATE AS CREATED_DATE, ")
                           .append(" MSG.LAST_CHATTED_DATE AS LAST_CHATTED_DATE, ")
                           .append(" MSG.SUBJECT AS SUBJECT, ")
                           .append(" FB.FLAT_BOOK_ID AS FLAT_BOOK_ID, ")
                           .append(" CUST.CUST_ID AS CUST_ID, ")
                           .append(" CUST.NAME_PREFIX ||' '|| CUST.FIRST_NAME AS CUST_NAME, ")
                           .append(" EMP.FIRST_NAME AS EMP_NAME,")
                           .append(" EMP.FIRST_NAME AS CREATED_BY_NAME,")
                           .append(" DEPT.NAME AS DEPT_NAME,")
                           .append(" DEPT.DEPT_ID AS DEPT_ID,")
                           .append(" EMP.EMP_ID AS EMP_ID,")  
                           .append(" F.FLAT_ID AS FLAT_ID,  ")
                           .append(" F.FLAT_NO AS FLAT_NO,  ")
                           .append(" FL.NAME AS FLOOR_NAME, ")
                           .append(" BL.NAME AS BLOCK_NAME, ")
                           .append(" S.NAME AS SITE_NAME,  ")
                           .append(" S.SITE_ID AS SITE_ID  ")
                           .append(" FROM MESSENGER MSG  ")
                           .append(" INNER JOIN EMPLOYEE EMP ")
                           .append(" ON MSG.CREATED_BY_ID = EMP.EMP_ID	 ")															 
						   .append(" INNER JOIN EMPLOYEE_DETAILS ED ")
						   .append(" ON ED.EMPLOYEE_ID = EMP.EMP_ID ")
						   .append(" INNER JOIN DEPARTMENT DEPT ")
						   .append(" ON ED.DEPT_ID = DEPT.DEPT_ID ")
                           .append(" INNER JOIN FLAT_BOOKING FB  ")
                           .append(" ON MSG.SEND_TO = FB.FLAT_BOOK_ID AND  MSG.STATUS IN (:STATUS_ID)  ")
                           .append(" INNER JOIN  ")
                           .append(" FLAT F  ")
                           .append(" ON F.FLAT_ID = FB.FLAT_ID ")
                           .append(" INNER JOIN FLOOR_DETAILS FD  ")                                                                          
                           .append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID in (:STATUS_ID)  AND F.STATUS_ID IN (:STATUS_ID)  ")                                  
                           .append(" INNER JOIN FLOOR FL   ")                                                                                    
                           .append(" ON FL.FLOOR_ID = FD.FLOOR_ID  ")                                                                            
                           .append(" INNER JOIN BLOCK_DETAILS BD   ")                                                                            
                           .append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID IN (:STATUS_ID)  ")                                   
                           .append(" INNER JOIN BLOCK BL  ")                                                                                     
                           .append(" ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID IN (:STATUS_ID)  ")
                           .append(" INNER JOIN SITE S  ")
                           .append(" ON BD.SITE_ID = S.SITE_ID  ")
                           .append(" INNER JOIN CUSTOMER CUST  ")
                           .append(" ON FB.CUST_ID = CUST.CUST_ID ")
                           .append(" INNER JOIN STATUS ST  ")
                           .append(" ON ST.STATUS_ID = MSG.STATUS  ")
                           .append(" WHERE 1=1 ")
                           .toString();
                   
                   public static final String QRY_TO_GET_MESSAGES_COUNT = new StringBuilder()
                           .append(" SELECT ")
                           .append(" count(*) ")
                           .append(" FROM MESSENGER MSG  ")
                           .append(" INNER JOIN EMPLOYEE EMP ")
                           .append(" ON MSG.CREATED_BY_ID = EMP.EMP_ID	 ")															 
						   .append(" INNER JOIN EMPLOYEE_DETAILS ED ")
						   .append(" ON ED.EMPLOYEE_ID = EMP.EMP_ID ")
						   .append(" INNER JOIN DEPARTMENT DEPT ")
						   .append(" ON ED.DEPT_ID = DEPT.DEPT_ID ")
                           .append(" INNER JOIN FLAT_BOOKING FB  ")
                           .append(" ON MSG.SEND_TO = FB.FLAT_BOOK_ID AND  MSG.STATUS IN (:STATUS_ID)  ")
                           .append(" INNER JOIN  ")
                           .append(" FLAT F  ")
                           .append(" ON F.FLAT_ID = FB.FLAT_ID AND FB.STATUS_ID IN (:STATUS_ID)  ")
                           .append(" INNER JOIN FLOOR_DETAILS FD  ")                                                                          
                           .append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID in (:STATUS_ID)  AND F.STATUS_ID IN (:STATUS_ID)  ")                                  
                           .append(" INNER JOIN FLOOR FL   ")                                                                                    
                           .append(" ON FL.FLOOR_ID = FD.FLOOR_ID  ")                                                                            
                           .append(" INNER JOIN BLOCK_DETAILS BD   ")                                                                            
                           .append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID IN (:STATUS_ID)  ")                                   
                           .append(" INNER JOIN BLOCK BL  ")                                                                                     
                           .append(" ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID IN (:STATUS_ID)  ")
                           .append(" INNER JOIN SITE S  ")
                           .append(" ON BD.SITE_ID = S.SITE_ID  ")
                           .append(" INNER JOIN CUSTOMER CUST  ")
                           .append(" ON FB.CUST_ID = CUST.CUST_ID AND CUST.STATUS_ID IN (:STATUS_ID)  ")
                           .append(" INNER JOIN STATUS ST  ")
                           .append(" ON ST.STATUS_ID = MSG.STATUS  ")
                           .append(" WHERE 1=1 ")
                           .toString()
                           ;
                   
                   public static final String QRY_TO_GET_MESSAGES_WRT_FLATIDS = new StringBuilder()
                                                                .append(" AND F.FLAT_ID IN (:FLAT_IDS)  ")
                                                                .toString();
                   
                   public static final String QRY_TO_GET_MESSAGES_WRT_DATES = new StringBuilder()
                                                                .append(" AND  MSG.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE  ")
                                                                .toString();
                   
                   public static final String QRY_TO_GET_MESSAGES_WRT_MESSENGER_IDS = new StringBuilder()
                           .append(" AND MSG.MESSENGER_ID IN(:MESSENGER_IDS)  ")
                           .toString();
                   
                   
                   public static final String QRY_TO_GET_MESSAGES_WRT_EMPLOYEE_IDS = new StringBuilder()
                           .append(" AND  MSG.CREATED_BY_ID IN(:CREATED_BY_ID)  AND MSG.CREATED_BY_TYPE IN(:CREATED_BY_TYPE)  ")
                           .toString();
                   
                   
                   public static final String QRY_TO_GET_MESSAGES_ORDER_BY_LAST_ACTIVITY = new StringBuilder()
                           .append(" ORDER BY MSG.LAST_CHATTED_DATE DESC ")
                           .toString();
                   
                   public static final String QRY_TO_GET_MESSAGES_WRT_MESSENGER_CONVERS_VIEW_STATUS = new StringBuilder()
                		                                         .append(" AND MSG.MESSENGER_ID IN ( ")
                		                                         .append(" SELECT DISTINCT ")
                		                                         .append(" MC.MESSENGER_ID AS MESSENGER_ID ")
                		                                         .append(" FROM MESSENGER_CONVERS_VIEW_STATUS MCVS ")
                		                                         .append(" INNER JOIN MESSENGER_CONVERSATION MC ")
                		                                         .append(" ON MC.MESSENGER_CONVERSATION_ID = MCVS.MESSENGER_CONVERSATION_ID ")
                		                                         .append(" WHERE MCVS.RECIPIENT_TYPE IN (:RECIPIENT_TYPE) AND MCVS.RECIPIENT_ID IN (:RECIPIENT_ID) AND MCVS.STATUS IN(:STATUS_ID)) ")
                		                                         .toString();
                   
                   public static final String QRY_TO_GET_MESSAGES_WRT_MESSENGER_CONVERS_VIEW_STATUS_COUNT = new StringBuilder()
                		   .append(" SELECT DISTINCT ")
                		   .append(" MC.MESSENGER_ID AS MESSENGER_ID,")
                		   .append(" COUNT(MCVS.VIEW_STATUS) AS VIEW_COUNT ")
                		   .append(" FROM MESSENGER_CONVERS_VIEW_STATUS MCVS ")	 										 
                		   .append(" INNER JOIN MESSENGER_CONVERSATION MC	")										 
                		   .append(" ON MC.MESSENGER_CONVERSATION_ID = MCVS.MESSENGER_CONVERSATION_ID ")											 
                		   .append(" WHERE MCVS.RECIPIENT_TYPE IN (:RECIPIENT_TYPE) ")
                		   .append(" AND MCVS.RECIPIENT_ID IN (:RECIPIENT_ID)  ")
                		   .append(" AND MCVS.STATUS IN(:STATUS_ID)  ")
                		   .append(" AND MCVS.VIEW_STATUS IN (:VIEW_STATUS) ")
                		   .append(" GROUP BY MC.MESSENGER_ID ")
                		   .append(" ORDER BY  MC.MESSENGER_ID DESC ")
                		   .toString();
                   
                   public static final String QRY_TO_GET_MESSAGES_WRT_MESSENGER_CONVERS_VIEW_STATUS_COUNT_EMP = new StringBuilder()
                		   .append(" SELECT DISTINCT  ")
                	       .append(" MC.MESSENGER_ID AS MESSENGER_ID, ")
                	       .append(" COUNT(MCVS.VIEW_STATUS) AS VIEW_COUNT ") 
                	       .append(" FROM MESSENGER_CONVERS_VIEW_STATUS MCVS  ")	 										 
                	       .append(" INNER JOIN MESSENGER_CONVERSATION MC ")	 										 
                	       .append(" ON MC.MESSENGER_CONVERSATION_ID = MCVS.MESSENGER_CONVERSATION_ID ")
                	       .append(" FULL JOIN MESSENGER_PERSONS_INVOLVED MPI ")
                	       .append(" ON (MPI.MESSENGER_ID=MC.MESSENGER_ID) ")
                	       .append(" INNER JOIN MESSENGER MSG ")
                	       .append(" ON MSG.MESSENGER_ID=MC.MESSENGER_ID AND MSG.STATUS IN(:STATUS_ID) ")
                	       .append(" INNER JOIN FLAT_BOOKING FB ")
                	       .append(" ON FB.FLAT_BOOK_ID=MSG.SEND_TO AND MSG.SEND_TYPE IN(4) AND FB.STATUS_ID IN(:STATUS_ID) ")
                	       .append(" WHERE MCVS.RECIPIENT_TYPE IN (:RECIPIENT_TYPE)  ")
                	       .append(" AND MCVS.RECIPIENT_ID IN (:RECIPIENT_ID)  ") 
                	       .append(" AND MCVS.STATUS IN(:STATUS_ID)  ") 
                	       .append(" AND MCVS.VIEW_STATUS IN (:VIEW_STATUS) ")
                	       //.append(" AND ((MC.CREATED_BY_TYPE IN (:RECIPIENT_TYPE) AND MC.CREATED_BY_ID IN (:RECIPIENT_ID)) OR MPI.TYPE_ID IN (:RECIPIENT_ID) OR MC.CREATED_BY_TYPE=4) ")
                	       .append(" AND (MSG.CREATED_BY_ID IN (:RECIPIENT_ID) OR MPI.TYPE_ID IN (:RECIPIENT_ID)) ")
                	       .append(" GROUP BY MC.MESSENGER_ID  ")
                	       .append(" ORDER BY  MC.MESSENGER_ID DESC ")
                		   .toString();
                   
                   public static final String QRY_TO_GET_LAST_MESSENGER_CONVERSATION_WRO_MESSENGER_ID = new StringBuilder()  
                   .append(" SELECT ")
                   .append(" MESS.MESSENGER_ID,")
                   .append(" MC.MESSENGER_CONVERSATION_ID,")
                   .append(" MC.CHAT_MSG,")
                   .append(" MC.CREATED_DATE AS CONV_CREATED_DATE, ")
                  // .append(" SUBSTR(TO_CHAR(MC.CHAT_MSG_WITHOUT_TAGS),0,80) AS CHAT_MSG_WITHOUT_TAGS ")
                   .append(" SUBSTR(MC.CHAT_MSG_WITHOUT_TAGS,0,80) AS CHAT_MSG_WITHOUT_TAGS ")
                   .append(" FROM ")
                   .append(" MESSENGER_CONVERSATION MC ")
                   .append(" INNER JOIN MESSENGER MESS ")
                   .append(" ON MESS.MESSENGER_ID = MC.MESSENGER_ID ")
                   .append(" WHERE MC.MESSENGER_ID IN ( ")
                   .append(" SELECT DISTINCT 	 ")										 
                   .append(" MC.MESSENGER_ID AS MESSENGER_ID 	 ")										 
                   .append(" FROM MESSENGER_CONVERS_VIEW_STATUS MCVS ")	 										 
                   .append(" INNER JOIN MESSENGER_CONVERSATION MC	")										 
                   .append(" ON MC.MESSENGER_CONVERSATION_ID = MCVS.MESSENGER_CONVERSATION_ID ")											 
                   .append(" WHERE MCVS.RECIPIENT_TYPE IN (:RECIPIENT_TYPE) AND MCVS.RECIPIENT_ID IN (:RECIPIENT_ID) AND MCVS.STATUS IN(:STATUS_ID) ) ORDER BY MC.MESSENGER_CONVERSATION_ID DESC ")
                   .toString();
                   
       public static final String QRY_TO_GET_START_NEW_CHAT_DETAILS = new StringBuilder()
                   .append(" SELECT ")
                   .append(" FB.FLAT_BOOK_ID AS FLAT_BOOK_ID,")
                   .append(" CUST.CUST_ID AS CUST_ID,")
                   .append(" CUST.NAME_PREFIX ||' '|| CUST.FIRST_NAME AS CUST_NAME,")
                   .append(" F.FLAT_ID AS FLAT_ID,")
                   .append(" F.FLAT_NO AS FLAT_NO,")
                   .append(" FL.NAME AS FLOOR_NAME,")
                   .append(" BL.NAME AS BLOCK_NAME,")
                   .append(" S.SITE_ID  AS SITE_ID,")
                   .append(" S.NAME AS SITE_NAME ")
                   .append(" FROM ")
                   .append(" FLAT_BOOKING FB ")
                   .append(" INNER JOIN ")
                   .append(" FLAT F ")
                   .append(" ON F.FLAT_ID = FB.FLAT_ID AND FB.STATUS_ID IN (:STATUS_ID) ")
                   .append(" INNER JOIN FLOOR_DETAILS FD ")                                                                             
                   .append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID IN (:STATUS_ID)  AND F.STATUS_ID IN (:STATUS_ID) ")                                    
                   .append(" INNER JOIN FLOOR FL ")                                                                                     
                   .append(" ON FL.FLOOR_ID = FD.FLOOR_ID  ")                                                                          
                   .append(" INNER JOIN BLOCK_DETAILS BD  ")                                                                            
                   .append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID IN (:STATUS_ID)   ")                                   
                   .append(" INNER JOIN BLOCK BL ")                                                                                     
                   .append(" ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID IN (:STATUS_ID) ")
                   .append(" INNER JOIN SITE S ")
                   .append(" ON BD.SITE_ID = S.SITE_ID ")
                   .append(" INNER JOIN CUSTOMER CUST ")
                   .append(" ON FB.CUST_ID = CUST.CUST_ID AND CUST.STATUS_ID IN (:STATUS_ID) ")
                   .append(" WHERE F.FLAT_ID IN (:FLAT_IDS) ")
                   .toString()
                    ;
       
       public static final String QRY_TO_GET_INSERT_MESSENGER = new StringBuilder()
    		   .append( "INSERT ")
    		   .append( "INTO MESSENGER  ")
    		   .append( "  (  ")
    		   .append( "    MESSENGER_ID,  ")
    		   .append( "    MESSAGE_ID,  ")
    		   .append( "    CREATED_BY_ID,  ")
    		   .append( "    CREATED_BY_TYPE,  ")
    		   .append( "    STATUS,  ")
    		   .append( "    SEND_TO,  ")
    		   .append( "    SEND_TYPE,  ")
    		   .append( "    CREATED_DATE,  ")
    		   .append( "    SUBJECT,  ")
    		   .append( "    LAST_CHATTED_DATE  ")
    		   .append( "  )  ")
    		   .append( "  VALUES  ")
    		   .append( "  (  ")
    		   .append( "    messenger_seq.NEXTVAL,  ")
    		   .append( "    :MESSAGE_ID,  ")
    		   .append( "    :CREATED_BY_ID,  ")
    		   .append( "    :CREATED_BY_TYPE,  ")
    		   .append( "    :STATUS,  ")
    		   .append( "    :SEND_TO,  ")
    		   .append( "    :SEND_TYPE,  ")
    		   .append( "    :CREATED_DATE,  ")
    		   .append( "    :SUBJECT,  ")
    		   .append( "    :LAST_CHATTED_DATE  ")
    		   .append( "  )  ")
    		   .toString();   
       
       
       public static final String QRY_TO_GET_INSERT_MESSENGER_CONVERSATION = new StringBuilder()
    		   .append(" INSERT  ")
    		   .append(" INTO MESSENGER_CONVERSATION ")
    		   .append("   (  ")
    		   .append("     MESSENGER_CONVERSATION_ID,")
    		   .append("     MESSENGER_ID,")
    		   .append("     CREATED_BY_ID,")
    		   .append("     CREATED_BY_TYPE,")
    		   .append("     CHAT_MSG,")
    		   .append("     STATUS,")
    		   .append("     CREATED_DATE,")
    		   .append("     MODIFIED_DATE, ")
    		   .append("     CHAT_MSG_WITHOUT_TAGS ")
    		   .append("   ) ")
    		   .append("   VALUES ")
    		   .append("   (  ")
    		   .append("     messenger_conversation_seq.NEXTVAL,")
    		   .append("     :MESSENGER_ID,")
    		   .append("     :CREATED_BY_ID,")
    		   .append("     :CREATED_BY_TYPE,")
    		   .append("     :CHAT_MSG,")
    		   .append("     :STATUS,")
    		   .append("     :CREATED_DATE,")
    		   .append("     :MODIFIED_DATE, ")
    		   .append("     :CHAT_MSG_WITHOUT_TAGS ")
    		   .append("   ) ")
    		   .toString();
       
       public static final String QRY_TO_GET_INSERT_MESSENGER_PERSONS_INVOLVED = new StringBuilder()
      .append( " INSERT ")
      .append( " INTO MESSENGER_PERSONS_INVOLVED ")
      .append( "   (  ")
      .append( "     MESSENGER_PER_INV_ID,")
      .append( "     MESSENGER_ID,")
      .append( "     TYPE,")
      .append( "     TYPE_ID,")
      .append( "     RECIPENT,")
      .append( "     STATUS,")
      .append( "     CREATED_DATE,")
      .append( "     MODIFIED_DATE ")
      .append( "   ) ")
      .append( "   VALUES ")
      .append( "   ( ")
      .append( "     messenger_persons_involved_seq.NEXTVAL,")
      .append( "     :MESSENGER_ID,")
      .append( "     :TYPE,")
      .append( "     :TYPE_ID,")
      .append( "     :RECIPENT,")
      .append( "     :STATUS,")
      .append( "     :CREATED_DATE,")
      .append( "     :MODIFIED_DATE ")
      .append( "   ) ")
      .toString();
       
       public static final String QRY_TO_GET_INSERT_MESSENGER_CONVERS_VIEW_STATUS = new StringBuilder()
    		   .append(" INSERT ")
    		   .append(" INTO MESSENGER_CONVERS_VIEW_STATUS ")
    		   .append("   (   ")
    		   .append("     MESSENGER_CONVER_VIW_STAT_ID,")
    		   .append("     MESSENGER_CONVERSATION_ID,")
    		   .append("     RECIPIENT_TYPE,")
    		   .append("     RECIPIENT_ID,")
    		   .append("     VIEW_STATUS,")
    		   .append("     STATUS,")
    		   .append("     CREATED_DATE,")
    		   .append("     MODIFIED_DATE ")
    		   .append("   )  ")
    		   .append("   VALUES ")
    		   .append("   (   ")
    		   .append("     messenger_convers_view_status_seq.NEXTVAL,")
    		   .append("     :MESSENGER_CONVERSATION_ID,")
    		   .append("     :RECIPIENT_TYPE,")
    		   .append("     :RECIPIENT_ID,")
    		   .append("     :VIEW_STATUS,")
    		   .append("     :STATUS,")
    		   .append("     :CREATED_DATE,")
    		   .append("     :MODIFIED_DATE ")
    		   .append("   ) ")
    		   .toString();
       
       
       public static final String QRY_TO_GET_INSERT_DOCUMENT_LOCATION = new StringBuilder()
    		   .append(" INSERT ")
    		   .append(" INTO DOCUMENT_LOCATION ")
    		   .append("   ( ")
    		   .append("     DOCUMENT_LOC_ID,")
    		   .append("     MESSENGER_CONVERSATION_ID,")
    		   .append("     LOCATION,")
    		   .append("     STATUS,")
    		   .append("     TYPE,")
    		   .append("     CREATED_DATE,")
    		   .append("     MODIFIED_DATE ")
    		   .append("   ) ")
    		   .append("   VALUES ")
    		   .append("   ( ")
    		   .append("     document_location_seq.NEXTVAL,")
    		   .append("     :MESSENGER_CONVERSATION_ID,")
    		   .append("     :LOCATION,")
    		   .append("     :STATUS,")
    		   .append("     :TYPE,")
    		   .append("     :CREATED_DATE,")
    		   .append("     :MODIFIED_DATE ")
    		   .append("   ) ")
    		   .toString();
       
       
       public static final String QRY_TO_UPDATE_MESSENGER_CONVERS_VIEW_STATUS = new StringBuilder()
    		   .append(" UPDATE MESSENGER ")
    		   .append(" SET ")
    		   .append(" LAST_CHATTED_DATE = :LAST_CHATTED_DATE,")
    		   .append(" MODIFIED_DATE = :MODIFIED_DATE ")
    		   .append(" WHERE MESSENGER_ID  = :MESSENGER_ID ")
    		   .append(" AND STATUS IN( :STATUS ) ")
    		   .toString();
       

public static final String QRY_TO_GET_MESSENGER_CHAT_DETAILS = new StringBuilder()
                .append("   SELECT ")
                .append("   MC.MESSENGER_CONVERSATION_ID,")
                .append("   MC.MESSENGER_ID,")
                .append("   CASE ")
                .append("   WHEN MC.CREATED_BY_TYPE = :CREATED_BY_TYPE ")
                .append("   THEN EMP.FIRST_NAME ")
                .append("   WHEN CUST.NAME_PREFIX IS NOT NULL THEN ")
                .append("   UPPER(SUBSTR(CUST.NAME_PREFIX,1,1)) || LOWER(SUBSTR(CUST.NAME_PREFIX,2)) ||' '|| CUST.FIRST_NAME ")
                .append("   ELSE ")
                .append("   CUST.NAME_PREFIX ||' '|| CUST.FIRST_NAME ")
                .append("   END AS CREATED_BY_NAME,")
                .append("   MC.CREATED_BY_ID,")
                .append("   MC.CREATED_BY_TYPE,")
                .append("   MC.CHAT_MSG,")
                .append("   MC.STATUS,")
                .append("   MC.CREATED_DATE,")
                .append("   MC.MODIFIED_DATE,")
                .append("   MES.SUBJECT,")
                .append("   MES.CREATED_BY_ID AS CHAT_CREATED_BY,")
                .append("   MES.CREATED_BY_TYPE AS CHAT_CREATED_BY_TYPE,")
                .append("   NVL(MVS.VIEW_STATUS,86) AS VIEW_STATUS,")
                .append("   DEPT.DEPT_ID, ST.SITE_ID, FLBK.FLAT_BOOK_ID,FLBK.CUST_ID, ")
                .append("   DL.LOCATION, ")
                .append("   DL.TYPE ")  
                .append(" FROM MESSENGER_CONVERSATION MC ")
                .append(" INNER JOIN MESSENGER MES ")
                .append(" ON MES.MESSENGER_ID = MC.MESSENGER_ID AND MC.STATUS IN (:STATUS) AND MES.STATUS IN (:STATUS) ")
                .append(" FULL JOIN MESSENGER_CONVERS_VIEW_STATUS MVS ")
                .append(" ON MVS.MESSENGER_CONVERSATION_ID = MC.MESSENGER_CONVERSATION_ID ")
                .append(" AND (MVS.RECIPIENT_TYPE = :RECIPIENT_TYPE AND MVS.RECIPIENT_ID = :RECIPIENT_ID) ")
                .append(" LEFT OUTER JOIN DOCUMENT_LOCATION DL ")
                .append(" ON DL.MESSENGER_CONVERSATION_ID = MC.MESSENGER_CONVERSATION_ID ")
                .append(" LEFT OUTER JOIN EMPLOYEE EMP ")
                .append(" ON MC.CREATED_BY_ID = EMP.EMP_ID ")
                .append(" LEFT OUTER JOIN FLAT_BOOKING FB ")
                .append(" ON MC.CREATED_BY_ID = FB.FLAT_BOOK_ID   ")
                .append(" LEFT OUTER JOIN CUSTOMER CUST ")
                .append(" ON FB.CUST_ID = CUST.CUST_ID ")
                .append(" LEFT JOIN EMPLOYEE_DEPARTMENT_MAPING EDM ")
                .append(" ON(MC.CREATED_BY_TYPE = :CREATED_BY_TYPE AND EDM.EMPLOYEE_ID=MC.CREATED_BY_ID AND EDM.STATUS=:STATUS) ")
                .append(" LEFT JOIN DEPARTMENT_ROLE_MAPPING DRM ")
                .append(" ON(DRM.DEPARTMENT_ROLE_MAPPING_ID=EDM.DEPARTMENT_ROLE_MAPPING_ID AND DRM.STATUS=:STATUS) ")
                .append(" LEFT JOIN DEPARTMENT DEPT ON(DEPT.DEPT_ID=DRM.DEPT_ID)  ")
                .append(" LEFT JOIN FLAT_BOOKING FLBK ON(FLBK.FLAT_BOOK_ID=MES.SEND_TO AND MES.SEND_TYPE=4) ")
                .append(" LEFT JOIN FLAT FT ON FT.FLAT_ID=FLBK.FLAT_ID ")
                .append(" LEFT JOIN FLOOR_DETAILS FLD ON FLD.FLOOR_DET_ID=FT.FLOOR_DET_ID ")
                .append(" LEFT JOIN BLOCK_DETAILS BLD ON BLD.BLOCK_DET_ID=FLD.BLOCK_DET_ID ")
                .append(" LEFT JOIN SITE ST ON ST.SITE_ID=BLD.SITE_ID ")
                .append(" WHERE MES.MESSENGER_ID IN (:MESSENGER_ID)  ")
                .append(" ORDER BY MC.MESSENGER_CONVERSATION_ID ASC ")
                .toString()
                ;
public static final String QRY_TO_UPDATE_MESSENGER_CONVERSATION_VIEW_DETAILS = new StringBuilder()
                .append(" UPDATE MESSENGER_CONVERS_VIEW_STATUS ")
                .append(" SET ")
                .append(" VIEW_STATUS  = :VIEW_STATUS,")
                .append(" MODIFIED_DATE = :MODIFIED_DATE ")
                .append(" WHERE ")
                .append(" MESSENGER_CONVERSATION_ID IN (SELECT MESSENGER_CONVERSATION_ID FROM MESSENGER_CONVERSATION WHERE MESSENGER_ID = :MESSENGER_ID) ")
                .append(" AND RECIPIENT_TYPE IN (:RECIPIENT_TYPE) ")
                .append(" AND RECIPIENT_ID IN (:RECIPIENT_ID) ")
                .append(" AND STATUS IN (:STATUS) ")
                .toString()
                ;

public static final String QRY_TO_GET_MESSENGER_PERSONS_INVOLVED = new StringBuilder()                                  
                .append(" SELECT ")
                .append(" EMP.CS_EMP_ID AS CS_EMP_ID,")                        
                .append(" EMP.EMP_ID AS  EMPLOYEE_ID, ")                                    
                .append(" EMP.FIRST_NAME AS FIRST_NAME, ")                             
                .append(" EMP.LAST_NAME AS LAST_NAME, ")                                
                .append(" CONCAT(CONCAT(EMP .FIRST_NAME,''),EMP.LAST_NAME) AS EMP_NAME,")
                .append(" EMP.EMAIL AS EMAIL, ")                                    
                .append(" EMP.STATUS_ID AS STATUS_ID,")                                                
                .append(" EMP.MOBILE_NO AS MOBILE_NO,")                              
                .append(" EMP.USER_PROFILE AS USER_PROFILE ")
                .append(" FROM MESSENGER_PERSONS_INVOLVED MPI ")
                .append(" INNER JOIN EMPLOYEE EMP ")
                .append(" ON EMP.EMP_ID = MPI.TYPE_ID AND MPI.TYPE IN (:TYPE) AND MPI.RECIPENT IN (:RECIPENT) AND MPI.STATUS IN (:STATUS_ID) ")
                .append(" WHERE MPI.MESSENGER_ID IN (:MESSENGER_ID) ")
                .toString();


public static final String QRY_TO_GET_MEESENGER_LEVEL_MASTER = new StringBuilder()  
                .append("   SELECT    ")
                .append("   M_L_M.ID, ")
                .append("   M_L_M.LEVELID, ")
                .append("   M_L_M.SITE_ID, ")
                .append("   M_L_M.DEPT_ID, ")
                .append("   M_L_M.EMP_ID, ")
                .append("   M_L_M.STATUS_ID, ")
                .append("   M_L_M.CREATED_DATE, ")
                .append("   M_L_M.MODIFIED_DATE ")
                .append(" FROM MEESENGER_LEVEL_MASTER M_L_M WHERE 1=1 ")
                .toString();
                
public static final String QRY_TO_GET_MEESENGER_LEVEL_MASTER_WRT_SITE_DEPT_ID = new StringBuilder()                 
                .append(" AND  M_L_M.SITE_ID IN (:SITE_ID) AND M_L_M.DEPT_ID IN  (:DEPT_ID) AND M_L_M.STATUS_ID IN (:STATUS_ID)  ")
                .toString(); 

public static final String QRY_TO_GET_MESSENGER_CONVERS_VIEW_STATUS_WRT_CUST = new StringBuilder()
                 .append(" SELECT ")
                 .append(" MCVS.MESSENGER_CONVERSATION_ID AS MESSENGER_CONVERSATION_ID,")
                 .append(" MCVS.VIEW_STATUS AS VIEW_STATUS ")
                 .append(" FROM MESSENGER_CONVERS_VIEW_STATUS MCVS WHERE ")
                 .append(" MESSENGER_CONVERSATION_ID ")
                 .append(" IN( ")
                 .append(" :MESSENGER_CONVERSATION_ID ")
                 .append(" ) ")
                 .append(" AND ")
                 .append(" RECIPIENT_TYPE IN (:RECIPIENT_TYPE) ")
                 .append(" AND ")
                 .append(" RECIPIENT_ID ")
                 .append(" IN ")
                 .append(" ( ")
                 .append(" SELECT ")
                 .append(" SEND_TO ")
                 .append(" FROM MESSENGER MES WHERE MESSENGER_ID IN(SELECT MESSENGER_ID FROM MESSENGER_CONVERSATION MC ")
                 .append(" WHERE MESSENGER_CONVERSATION_ID IN (:MESSENGER_CONVERSATION_ID)  and STATUS  in (:STATUS_ID)      ) ")
                 .append(" ) and STATUS in (:STATUS_ID) ")
                 .toString();



public static final String QRY_TO_GET_EMP_DROPDOWN_ = new StringBuilder()
                 .append(" SELECT ")
                 .append(" DISTINCT ")
                 .append(" EMP.EMP_ID AS EMPLOYEE_ID,")
                 .append(" UPPER(EMP.FIRST_NAME || EMP.LAST_NAME) AS EMP_NAME ")
                 .append(" FROM ")
                 .append(" EMPLOYEE EMP ")
                 .append(" INNER JOIN ")
                 .append(" EMPLOYEE_DEPARTMENT_MAPING EDM ")
                 .append(" ON EMP.EMP_ID = EDM.EMPLOYEE_ID AND EMP.STATUS_ID = :STATUS_ID ")
                 .append(" INNER JOIN EMPLOYEE_ROLE_MENU_GROUPING ERMG ")
                 .append(" ON EDM.DEPARTMENT_ROLE_MAPPING_ID = ERMG.DEPARTMENT_ROLE_MAPPING_ID AND EDM.STATUS = :STATUS_ID AND ERMG.STATUS_ID = :STATUS_ID ")
                 .append(" INNER JOIN EMPLOYEE_MENU_SUBMENU_MAPPING EMSM ")
                 .append(" ON EMSM.MENU_SUB_MENU_MAPPING_ID =  ERMG.MENU_MAPPING_ID  AND EMSM.MODULE_ID = :MODULE_ID AND  EMSM.SUBMODULE_ID = :SUBMODULE_ID ")
                 .append(" ORDER BY EMP_NAME ")
                 .toString();
                 
		/* QRY_TO_SEARCH_ALL_CLOSED_TICKETS_CUSTOMERS */
		public static final String QRY_TO_SEARCH_ALL_CLOSED_TICKETS_CUSTOMERS = new StringBuilder(" SELECT DISTINCT ")
				.append(" CUST.CUST_ID AS CUST_ID, (CUST.FIRST_NAME || ' ' || CUST.LAST_NAME) AS CUSTOMER_NAME ")
				.append(" FROM CUSTOMER CUST JOIN FLAT_BOOKING FLATB ON(FLATB.CUST_ID=CUST.CUST_ID) ")
				.append(" JOIN TICKET TK ON (TK.BOOKING_ID=FLATB.FLAT_BOOK_ID) ")
				.toString();
		
		
		/*   ========================MPR sql query===========================  */
		
		/* QRY_TO_INSERT_INTO_MPR is for inserting all MPR Details */
		public static final String QRY_TO_INSERT_INTO_MPR = new StringBuilder(" INSERT INTO ")
				.append(" MPR(MPR_ID, ")
				.append(" MPR_NAME, ")
				.append(" REMARKS, ")
				.append(" TYPE, ")
				.append(" TYPE_ID, ")
				.append(" CREATED_DATE, ")
				.append(" CREATED_BY, ")
				.append(" STATUS_ID, ")
				.append(" ALERT_NO_OF_FLATS_TO_BE_SENT) ")
				.append(" VALUES(MPR_SEQ.NEXTVAL, ")
				.append(" :mprName, ")
				.append(" :remarks, ")
				.append(" :type, ")
				.append(" :typeId, ")
				.append(" SYSDATE, ")
				.append(" :createdBy, ")
				.append(" :statusId, ")
				.append(" :alertNoOfflatsToBeSent) ")
				.toString();
		
		/* QRY_TO_INSERT_INTO_MPR_DOCUMENTS is for inserting all MPR Documents */
		public static final String QRY_TO_INSERT_INTO_MPR_DOCUMENTS = new StringBuilder(" INSERT INTO ")
				.append(" MPR_DOCUMENTS ")
				.append(" (MPR_DOC_ID, ")
				.append(" MPR_ID, ")
				.append(" LOCATION_TYPE, ")
				.append(" DOCUMENT_LOCATION, ")
				.append(" CREATED_DATE, ")
				.append(" CREATED_BY, ")
				.append(" STATUS_ID) ")
				.append(" VALUES ")
				.append(" (MPR_DOC_SEQ.NEXTVAL, ")
				.append(" :mprId, ")
				.append(" :locationType, ")
				.append(" :documentLocation, ")
				.append(" SYSDATE, ")
				.append(" :createdBy, ")
				.append(" :statusId) ")
				.toString();
		
		/* QRY_TO_GET_MPR_ROWS_FETCH is for getting all MPR Details based on Site Ids */
		public static final String QRY_TO_GET_MPR_ROWS_FETCH = new StringBuilder(" SELECT ")
				.append(" MPR.MPR_ID,MPR.MPR_NAME, ")
				.append(" MPR.REMARKS,MPR.TYPE,MPR.TYPE_ID, ")
				.append(" MPR.CREATED_DATE,MPR.CREATED_BY, ")
				.append(" MPR.MODIFIED_DATE,MPR.MODIFIED_BY, ")
				.append(" MPR.STATUS_ID, ST.NAME AS TYPE_NAME ")
				.append(" FROM MPR MPR ")
				.toString();
		
		/* QRY_TO_GET_MPR_ROWS_COUNT is for getting all the rows */
		public static final String QRY_TO_GET_MPR_ROWS_COUNT = new StringBuilder(" SELECT ")
				.append(" COUNT(*) FROM MPR MPR ")
				.toString();
		
		/* QRY_TO_GET_MPR_DOCUMENTS is for getting all MPR Documents Details based on mpr_id */
		public static final String QRY_TO_GET_MPR_DOCUMENTS = new StringBuilder(" SELECT ")
				.append(" MPD.MPR_DOC_ID,MPD.MPR_ID, ")
				.append(" MPD.LOCATION_TYPE,MPD.DOCUMENT_LOCATION, ")
				.append(" MPD.CREATED_DATE,MPD.CREATED_BY, ")
				.append(" MPD.MODIFIED_DATE,MPD.MODIFIED_BY, ")
				.append(" MPD.STATUS_ID FROM MPR_DOCUMENTS MPD ")
				.append(" WHERE MPD.STATUS_ID=:STATUS_ID ")
				.append(" AND MPD.MPR_ID=:MPR_ID ")
				.append(" ORDER BY MPD.CREATED_DATE ")
				.toString();
		
		/* QRY_TO_GET_CUSTOMER_MPR_DETAILS is for getting all Customer MPR Details based on site_id */
		public static final String QRY_TO_GET_CUSTOMER_MPR_DETAILS = new StringBuilder(" SELECT DISTINCT ")
				.append(" MPR.MPR_ID,MPR.MPR_NAME, ")
				.append(" MPR.REMARKS,MPR.TYPE,MPR.TYPE_ID, ")
				.append(" MPR.CREATED_DATE,MPR.CREATED_BY, ")
				.append(" MPR.MODIFIED_DATE,MPR.MODIFIED_BY, ")
				.append(" MPR.STATUS_ID, ST.NAME AS TYPE_NAME FROM MPR MPR ")
				.append(" JOIN SITE ST ON(ST.SITE_ID=MPR.TYPE_ID) ")
				.append(" JOIN BLOCK_DETAILS BD ON(BD.SITE_ID=ST.SITE_ID) ")
				.append(" JOIN FLOOR_DETAILS FLD ON(FLD.BLOCK_DET_ID=BD.BLOCK_DET_ID) ")
				.append(" JOIN FLAT FT ON(FT.FLOOR_DET_ID=FLD.FLOOR_DET_ID) ")
				.append(" JOIN FLAT_BOOKING FB ON(FB.FLAT_ID=FT.FLAT_ID) ")
				.append(" WHERE FB.STATUS_ID=:STATUS_ID AND FT.STATUS_ID=:STATUS_ID ")
				.append(" AND FB.FLAT_BOOK_ID=:FLAT_BOOK_ID ")
				.append(" AND MPR.TYPE=:TYPE AND MPR.STATUS_ID=:STATUS_ID ")
				.append(" AND TRUNC(CASE ")
				.append(" WHEN FB.AGREEMENT_DATE IS NOT NULL THEN FB.AGREEMENT_DATE ")
				.append(" WHEN FB.BOOKING_DATE IS NOT NULL THEN FB.BOOKING_DATE ")
				.append(" ELSE FB.CREATED_DATE ")
				.append(" END)<=MPR.CREATED_DATE ")
				.append(" ORDER BY MPR.CREATED_DATE DESC ")
				.toString();
		
		/* QRY_TO_CHECK_MPR_NAME_EXISTENCE inorder to maintain unique MPR_NAME */
		public static final String QRY_TO_CHECK_MPR_NAME_EXISTENCE = new StringBuilder(" SELECT COUNT(*) ")
				.append(" FROM MPR WHERE UPPER(MPR.MPR_NAME)=:MPR_NAME ")
				.append(" AND MPR.STATUS_ID=:STATUS_ID ")
				.toString();
		
		/* QRY_TO_INACTIVE_MPR_DETAILS to inactive MPR Details */
		public static final String QRY_TO_INACTIVE_MPR_DETAILS = new StringBuilder(" UPDATE MPR ")
				.append(" SET MPR.STATUS_ID=:NEW_STATUS_ID, ")
				.append(" MPR.MODIFIED_DATE=SYSDATE, ")
				.append(" MPR.MODIFIED_BY=:MODIFIED_BY ")
				.append(" WHERE MPR.MPR_ID IN (:MPR_ID) ")
				.append(" AND MPR.STATUS_ID=:OLD_STATUS_ID ")
				.toString();
		
		
		/* QRY_TO_SEARCH_ALL_CUSTOMER_FLAT_NOS for view Customer with Flat Search */
		public static final String QRY_TO_SEARCH_ALL_CUSTOMER_FLAT_NOS = new StringBuilder(" SELECT DISTINCT ")
				.append(" CUST.CUST_ID AS CUST_ID, FT.FLAT_NO AS FLAT_NO, FT.FLAT_ID, FLATB.FLAT_BOOK_ID, ")
				.append(" (CUST.FIRST_NAME || '-' || FT.FLAT_NO) AS CUST_NAME_FLAT_NO ")
				.append(" FROM CUSTOMER CUST ")
				.append(" JOIN FLAT_BOOKING FLATB ON(FLATB.CUST_ID=CUST.CUST_ID) ")  
				.append(" JOIN FLAT FT ON(FT.FLAT_ID=FLATB.FLAT_ID) ")
				.append(" JOIN FLOOR_DETAILS FLRD ON(FLRD.FLOOR_DET_ID=FT.FLOOR_DET_ID) ")
				.append(" JOIN BLOCK_DETAILS BLCKDT ON(BLCKDT.BLOCK_DET_ID=FLRD.BLOCK_DET_ID) ")
				.append(" JOIN SITE ST ON(ST.SITE_ID=BLCKDT.SITE_ID) ")
				.toString();
		
		
		/* QRY_TO_GET_MPR_ALL_DETAILS is for getting all MPR Details based on Site Ids */
		public static final String QRY_TO_GET_MPR_ALL_DETAILS = new StringBuilder(" SELECT DISTINCT ")
				.append(" MPR.MPR_ID,MPR.MPR_NAME, ")
				.append(" MPR.REMARKS,MPR.TYPE,MPR.TYPE_ID, ")
				.append(" MPR.CREATED_DATE,MPR.CREATED_BY, ")
				.append(" MPR.MODIFIED_DATE,MPR.MODIFIED_BY, ")
				.append(" MPR.STATUS_ID,ST.NAME AS TYPE_NAME, ")
				.append(" MPD.MPR_DOC_ID,MPD.LOCATION_TYPE, ")
				.append(" MPD.DOCUMENT_LOCATION ")
				.append(" FROM MPR MPR ")
				.append(" JOIN MPR_DOCUMENTS MPD ON(MPD.MPR_ID=MPR.MPR_ID) ")
				.append(" JOIN SITE ST ON(ST.SITE_ID=MPR.TYPE_ID) ")
				.append(" WHERE MPR.STATUS_ID=:STATUS_ID ")
				.append(" AND MPD.STATUS_ID=:STATUS_ID ")
				.append(" AND MPR.TYPE=:TYPE AND MPR.TYPE_ID IN (:TYPE_ID) ")
				.append(" ORDER BY MPR.CREATED_DATE DESC ")
				.toString();
		
		
		/* QRY_TO_GET_CUSTOMER_ALL_MPR_DETAILS is for getting Customer all MPR Details based on site_id and flat booking id */
		public static final String QRY_TO_GET_CUSTOMER_ALL_MPR_DETAILS = new StringBuilder(" SELECT DISTINCT ")
				.append(" MPR.MPR_ID,MPR.MPR_NAME, ")
				.append(" MPR.REMARKS,MPR.TYPE,MPR.TYPE_ID, ")
				.append(" MPR.CREATED_DATE,MPR.CREATED_BY, ")
				.append(" MPR.MODIFIED_DATE,MPR.MODIFIED_BY, ")
				.append(" MPR.STATUS_ID,ST.NAME AS TYPE_NAME, ")
				.append(" MPD.MPR_DOC_ID,MPD.LOCATION_TYPE, ")
				.append(" MPD.DOCUMENT_LOCATION, ")
				.append(" (SELECT DISTINCT   MSD.MPR_ID FROM  MPR_SENT_DETAILS MSD WHERE MSD.MPR_ID=MPR.MPR_ID AND  MSD.ISVIEWED =1  AND MSD.FLAT_BOOKING_ID=:FLAT_BOOK_ID) AS ISVIEWED, ")
				//.append(" (SELECT APP_REG_ID FROM APP_REGISTRATION WHERE DEVICE_ID=MSD.DEVICE_ID AND STATUS_ID=:STATUS_ID)AS APP_REG_ID, ")
				.append("   MSD.DEVICE_ID,APP.APP_REG_ID AS APP_REG_ID, ")
				.append("  MSD.ISVIEWED AS DEVICE_VIEW_STATUS ")
				.append(" FROM MPR MPR ")
				.append(" JOIN MPR_DOCUMENTS MPD ON(MPD.MPR_ID=MPR.MPR_ID) ")
				.append(" JOIN SITE ST ON(ST.SITE_ID=MPR.TYPE_ID) ")
				.append(" JOIN BLOCK_DETAILS BD ON(BD.SITE_ID=ST.SITE_ID) ")
				.append(" JOIN FLOOR_DETAILS FLD ON(FLD.BLOCK_DET_ID=BD.BLOCK_DET_ID) ")
				.append(" JOIN FLAT FT ON(FT.FLOOR_DET_ID=FLD.FLOOR_DET_ID) ")
				.append(" JOIN FLAT_BOOKING FB ON(FB.FLAT_ID=FT.FLAT_ID) ")
				//.append(" INNER JOIN MPR_SENT_DETAILS MSD ON MSD.MPR_ID=MPR.MPR_ID  ")
				.append(" LEFT OUTER JOIN MPR_SENT_DETAILS MSD ON MSD.MPR_ID=MPR.MPR_ID  ")
				.append(" LEFT OUTER JOIN APP_REGISTRATION APP ON APP.DEVICE_ID=MSD.DEVICE_ID AND APP.STATUS_ID=6  ")
			//	.append("  INNER  JOIN APP_REGISTRATION APP ON(FB.CUST_ID=APP.CUST_ID)  ")
				.append(" WHERE FB.STATUS_ID=:STATUS_ID AND FT.STATUS_ID=:STATUS_ID ")
				//.append(" AND MSD.FLAT_BOOKING_ID=:FLAT_BOOK_ID ")
				.append(" AND FB.FLAT_BOOK_ID=:FLAT_BOOK_ID ")
				.append(" AND MPR.TYPE=:TYPE AND MPR.STATUS_ID=:STATUS_ID ")
				.append(" AND MPD.STATUS_ID=:STATUS_ID ")
				.append(" AND TRUNC(CASE ")
				.append(" WHEN FB.AGREEMENT_DATE IS NOT NULL THEN FB.AGREEMENT_DATE ")
				.append(" WHEN FB.BOOKING_DATE IS NOT NULL THEN FB.BOOKING_DATE ")
				.append(" ELSE FB.CREATED_DATE ")
				.append(" END)<=MPR.CREATED_DATE ")
				.append(" ORDER BY MPR.CREATED_DATE DESC ")
				.toString();
		
		public static final String MPR_SENT_DETAILS=new StringBuilder("INSERT INTO MPR_SENT_DETAILS(FLAT_BOOKING_ID,MPR_ID,ISDELIVERED,DELIVERED_TIME,OS_TYPE,DEVICE_ID) ")
				.append(" VALUES(:FLAT_BOOKING_ID,:MPR_ID,:ISDELIVERED,SYSDATE,:OS_TYPE,:DEVICE_ID) ").toString();
		

		/* To Update Complaint Status in Ticket Table by Employees */
		public static final String QRY_TO_GET_VIEW_REPORT = new StringBuilder(" SELECT ")
				.append(" DISTINCT MPR.MPR_ID AS MPR_ID, ")
				.append(" MPR.MPR_NAME,MPR.CREATED_DATE AS UPLOADED_DATE,S.NAME SITE_NAME, ")
				.append(" CASE WHEN MPR.ALERT_NO_OF_FLATS_TO_BE_SENT IS NULL THEN 0 ELSE MPR.ALERT_NO_OF_FLATS_TO_BE_SENT END AS ALERT_NO_OF_FLATS_TO_BE_SENT,  ")
				.append(" ( SELECT COUNT(DISTINCT FLAT_BOOKING_ID) FROM MPR_SENT_DETAILS MSD WHERE MSD.MPR_ID=MPR.MPR_ID) AS TOTAL_FLAT_TO_BE_SENT ")
				.append(" FROM MPR MPR ")
				.append(" INNER JOIN SITE S ON S.SITE_ID=MPR.TYPE_ID ")
				.append(" WHERE MPR.MPR_ID=:MPR_ID ")
				.toString();

		/* To Update Complaint Status in Ticket Table by Employees */
		public static final String QRY_TO_GET_RECIEVED_COUNT = new StringBuilder(" SELECT ")
				.append(" COUNT(DISTINCT FLAT_BOOKING_ID) RECIEVED_COUNT ")
				.append(" FROM MPR_SENT_DETAILS MPRSD ")
				.append(" WHERE MPRSD.MPR_ID=:MPR_ID AND MPRSD.ISDELIVERED=:ISDELIVERED ")
				.toString();

		/* To Update Complaint Status in Ticket Table by Employees */
		public static final String QRY_TO_GET_VIEW_COUNT = new StringBuilder(" SELECT ")
				.append(" COUNT(DISTINCT FLAT_BOOKING_ID) AS VIEW_COUNT ")
				.append(" FROM MPR_SENT_DETAILS MPRSD ")
				.append(" WHERE MPRSD.MPR_ID=:MPR_ID AND MPRSD.ISVIEWED=:ISVIEWED  ")
				.toString();

		/* To Update Complaint Status in Ticket Table by Employees */
		public static final String QRY_TO_GET_VIEW_DETAILS_LIST = new StringBuilder(" SELECT ")
				.append(" MPRSD.FLAT_BOOKING_ID,F.FLAT_NO, ")
				.append(" CASE WHEN MPRSD.OS_TYPE IS NULL THEN '-' ELSE MPRSD.OS_TYPE END AS OS_TYPE,C.FIRST_NAME ||' '|| C.LAST_NAME AS CUST_NAME, ")
				.append(" CASE WHEN MPRSD.ISVIEWED=1    THEN 'VIEWED' ELSE 'NOT VIEWED' END AS VIEW_STATUS , ")
				.append(" CASE WHEN MPRSD.ISDELIVERED=21 THEN 'RECEIVED' WHEN MPRSD.ISDELIVERED=22 THEN 'NOT RECEIVED' WHEN MPRSD.ISDELIVERED=115 THEN 'APP NOT REGISTERED' END AS DELIVERED_STATUS, ")
				.append(" CASE WHEN MPRSD.ISDELIVERED=21 THEN MPRSD.DELIVERED_TIME WHEN MPRSD.ISDELIVERED=22 THEN NULL END AS DELIVERED_TIME,MPRSD.VIEWED_TIME ")
				.append(" FROM MPR MPR ")
				.append(" INNER JOIN MPR_SENT_DETAILS MPRSD  ")
				.append(" ON MPR.MPR_ID=MPRSD.MPR_ID  ")
				.append(" INNER JOIN FLAT_BOOKING FB ON FB.FLAT_BOOK_ID=MPRSD.FLAT_BOOKING_ID ")
				.append(" INNER JOIN CUSTOMER C ON FB.CUST_ID=C.CUST_ID  ")
				.append(" INNER JOIN FLAT F ON F.FLAT_ID=FB.FLAT_ID ")
				.append(" WHERE MPRSD.MPR_ID=:MPR_ID  ")
				.append(" AND FB.STATUS_ID=:STATUS_ID  ")
				.append(" AND C.STATUS_ID=:STATUS_ID ")
				.toString();
		
		   public static final String UPDATE_MPR_VIEW_STATUS=" UPDATE MPR_SENT_DETAILS SET ISVIEWED=:ISVIEWED,VIEWED_TIME=SYSDATE WHERE MPR_ID=:MPR_ID AND FLAT_BOOKING_ID IN(:FLATIDS) AND DEVICE_ID IN (SELECT DEVICE_ID FROM APP_REGISTRATION WHERE APP_REG_ID=:APP_REG_ID) ";
		
		   public static final String QRY_TO_GET_FLAT_BOOK_IDS = new StringBuilder(" SELECT ")
		         .append(" FLAT_BOOK_ID FROM FLAT_BOOKING WHERE CUST_ID=:CUST_ID ")
			     .toString();
		
		/* QRY_TO_GET_CUSTOMER_DETAILS_BY_FLAT_ID for getting customer details based on flat Id */
		public static final String QRY_TO_GET_CUSTOMER_DETAILS_BY_FLAT_ID = new StringBuilder(" SELECT DISTINCT ")
				.append(" CUST.CUST_ID AS CUST_ID, FT.FLAT_NO AS FLAT_NO, FT.FLAT_ID, FLATB.FLAT_BOOK_ID, ")
				.append(" (CUST.FIRST_NAME || '-' || FT.FLAT_NO) AS CUST_NAME")
				.append(" FROM CUSTOMER CUST ")
				.append(" JOIN FLAT_BOOKING FLATB ON(FLATB.CUST_ID=CUST.CUST_ID) ")  
				.append(" JOIN FLAT FT ON(FT.FLAT_ID=FLATB.FLAT_ID) ")
				.append(" JOIN FLOOR_DETAILS FLRD ON(FLRD.FLOOR_DET_ID=FT.FLOOR_DET_ID) ")
				.append(" JOIN BLOCK_DETAILS BLCKDT ON(BLCKDT.BLOCK_DET_ID=FLRD.BLOCK_DET_ID) ")
				.append(" JOIN SITE ST ON(ST.SITE_ID=BLCKDT.SITE_ID) ")
				.append(" WHERE FLATB.STATUS_ID=:STATUS_ID AND CUST.STATUS_ID=:STATUS_ID ")
				.append(" AND FT.STATUS_ID=:STATUS_ID AND FT.FLAT_ID=:FLAT_ID ")
				.append(" ORDER BY FLATB.FLAT_BOOK_ID ")
				.toString();
		
		/* QRY_TO_GET_CUSTOMER_TICKET_LIST for getting customer tickets based on flatbooking id */
		public static final String QRY_TO_GET_CUSTOMER_TICKET_LIST = new StringBuilder(" SELECT DISTINCT        ")
				.append(" T.TICKET_ID AS TICKET_NO,                                                             ")
				.append(" T.TICKET_TYPE_DETAILS_ID AS TICKET_TYPE_DETAILS_ID,                                   ")
				.append(" T.TITLE,                                                                              ")
				.append(" T.RESOLVED_DATE,                                                                      ")
				.append(" CUST.NAME_PREFIX ||' '|| CUST.FIRST_NAME ||' '|| CUST.LAST_NAME AS CUST_NAME,         ")
				.append(" S.NAME AS SITE_NAME,                                                                  ")
				.append(" TMT.NAME ||' / '|| TT.NAME AS TICKET_TYPE,                                            ")
				.append(" CASE                                                                                  ")
				.append(" WHEN T.ESTIMATED_RESOLVED_DATE_STATUS IS NOT NULL AND T.TICKET_STATUS NOT IN(11) THEN ")
				.append(" (SELECT DISTINCT 'LEVEL-' ||TELVM.LEVEL_ID || '-' || EMP.FIRST_NAME                   ")
				.append(" || '-' || DT.NAME FROM TICKET_ESCALATION TE                                           ")
				.append(" INNER JOIN TICKET_ESCA_LVL_MAP TELVM                                                  ")
				.append(" ON TELVM.ID = TE.TICKET_ESC_LVL_MAP_ID                                                ")
				.append(" INNER JOIN TICKET_ESC_LEVEL_EMP_MAP TELEM                                             ")
				.append(" ON TELEM.TICKET_ESC_LVL_MAP_ID = TELVM.ID                                             ")
				.append(" INNER JOIN EMPLOYEE EMP                                                               ")
				.append(" ON TELEM.EMPLOYEE_ID = EMP.EMP_ID                                                     ")
				.append(" INNER JOIN EMPLOYEE_DEPARTMENT_MAPING EDM                                             ")
				.append(" ON EDM.EMPLOYEE_ID=EMP.EMP_ID AND EDM.STATUS=:STATUS_ID                               ")
				.append(" INNER JOIN DEPARTMENT_ROLE_MAPPING DRM                                                ")
				.append(" ON DRM.DEPARTMENT_ROLE_MAPPING_ID=EDM.DEPARTMENT_ROLE_MAPPING_ID                      ")
				.append(" AND DRM.STATUS=:STATUS_ID                                                             ")
				.append(" INNER JOIN DEPARTMENT DT                                                              ")
				.append(" ON DT.DEPT_ID=DRM.DEPT_ID AND DT.STATUS_ID=:STATUS_ID                                 ")
				.append(" WHERE TE.TICKET_ID = T.TICKET_ID AND TE.STATUS = :STATUS_ID                           ")
				.append(" AND TELVM.STATUS_ID = :STATUS_ID AND TELEM.STATUS_ID = :STATUS_ID)                    ")
				.append(" WHEN T.DEPARTMENT_ID IS NOT NULL AND  T.DEPARTMENT_ID <> 0 THEN  DEPT.NAME            ")
				.append(" WHEN T.ASSIGNMENT_TO IS NOT NULL AND T.ASSIGNMENT_TO <>  0 THEN                       ")
				.append(" (SELECT DISTINCT EMP.FIRST_NAME || '-' || DT.NAME                                     ")
				.append(" FROM EMPLOYEE EMP                                                                     ")
				.append(" INNER JOIN EMPLOYEE_DEPARTMENT_MAPING EDM                                             ")
				.append(" ON EDM.EMPLOYEE_ID=EMP.EMP_ID AND EDM.STATUS=:STATUS_ID                               ")
				.append(" INNER JOIN DEPARTMENT_ROLE_MAPPING DRM                                                ")
				.append(" ON DRM.DEPARTMENT_ROLE_MAPPING_ID=EDM.DEPARTMENT_ROLE_MAPPING_ID                      ")
				.append(" AND DRM.STATUS=:STATUS_ID                                                             ")
				.append(" INNER JOIN DEPARTMENT DT                                                              ")
				.append(" ON DT.DEPT_ID=DRM.DEPT_ID AND DT.STATUS_ID=:STATUS_ID                                 ")
				.append(" WHERE EMP.EMP_ID = T.ASSIGNMENT_TO AND EMP.STATUS_ID = :STATUS_ID)                    ")
				.append(" ELSE E.FIRST_NAME || '-'|| DT.NAME                                                    ")
				.append(" END AS PENDING_DEPT_EMP,                                                              ")
				.append(" T.TICKET_STATUS AS HIGHLEVEL_STATUS,                                                  ")                      
				.append(" (SELECT STATUS FROM STATUS TST WHERE TST.STATUS_ID =  T.TICKET_STATUS)                ")
				.append(" AS TICKET_HIGHLEVEL_STATUS,                                                           ")
				.append(" T.CREATED_DATE AS RECIVED_DATE,                                                       ")                     
				.append(" T.ESTIMATED_RESOLVED_DATE AS ESCALATION_DATE,                                         ")                   
				.append(" E.FIRST_NAME AS TICKET_OWNER,                                                         ")
				.append(" E.EMP_ID AS EMP_ID,                                                                   ")
				.append(" CASE                                                                                  ")
				.append(" WHEN T.ESTIMATED_RESOLVED_DATE_STATUS IS NOT NULL                                     ")
				.append(" AND T.TICKET_STATUS NOT IN(11) THEN ST.STATUS                                         ")
				.append(" ELSE                                                                                  ")
				.append(" S.STATUS                                                                              ")
				.append(" END AS TICKET_STATUS,                                                                 ")
				.append(" T.RATING,                                                                             ")
				.append(" T.FEEDBACK_DESC                                                                       ")
				.append(" FROM TICKET T                                                                         ")
				.append(" INNER JOIN TICKET_TYPE_DETAILS TTD                                                    ")
				.append(" ON T.TICKET_TYPE_DETAILS_ID = TTD.TICKET_TYPE_DETAILS_ID                              ")
				.append(" INNER JOIN TICKET_TYPE TT                                                             ")
				.append(" ON TT.TICKET_TYPE_ID = TTD.TICKET_TYPE_ID                                             ")
				.append(" INNER JOIN EMPLOYEE_DETAILS ED                                                        ")
				.append(" ON TTD.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID                                        ")
				.append(" INNER JOIN EMPLOYEE E                                                                 ")
				.append(" ON ED.EMPLOYEE_ID = E.EMP_ID                                                          ")
				.append(" INNER JOIN EMPLOYEE_DEPARTMENT_MAPING EDM                                             ")
				.append(" ON EDM.EMPLOYEE_ID=E.EMP_ID AND EDM.STATUS=:STATUS_ID                                 ")
				.append(" INNER JOIN DEPARTMENT_ROLE_MAPPING DRM                                                ")
				.append(" ON DRM.DEPARTMENT_ROLE_MAPPING_ID=EDM.DEPARTMENT_ROLE_MAPPING_ID                      ")
				.append(" AND DRM.STATUS=:STATUS_ID                                                             ")
				.append(" INNER JOIN DEPARTMENT DT                                                              ")
				.append(" ON DT.DEPT_ID=DRM.DEPT_ID AND DT.STATUS_ID=:STATUS_ID                                 ")
				.append(" INNER JOIN  FLAT_BOOKING FB                                                           ")
				.append(" ON FB.FLAT_BOOK_ID=T.BOOKING_ID                                                       ")
				.append(" INNER JOIN CUSTOMER CUST                                                              ")
				.append(" ON CUST.CUST_ID=FB.CUST_ID                                                            ")
				.append(" INNER JOIN FLAT F                                                                     ")
				.append(" ON FB.FLAT_ID = F.FLAT_ID AND F.STATUS_ID = :STATUS_ID                                ")
				.append(" INNER JOIN FLOOR_DETAILS FD                                                           ")
				.append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID                    ")
				.append(" INNER JOIN FLOOR FL                                                                   ")
				.append(" ON FL.FLOOR_ID = FD.FLOOR_ID                                                          ")
				.append(" INNER JOIN BLOCK_DETAILS BD                                                           ")
				.append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID                    ")
				.append(" INNER JOIN BLOCK BL                                                                   ")
				.append(" ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID                           ")
				.append(" INNER JOIN SITE S                                                                     ")
				.append(" ON BD.SITE_ID = S.SITE_ID                                                             ")
				.append(" LEFT JOIN STATUS ST                                                                   ")
				.append(" ON T.ESTIMATED_RESOLVED_DATE_STATUS = ST.STATUS_ID                                    ")
				.append(" LEFT JOIN STATUS S                                                                    ")
				.append(" ON S.STATUS_ID = T.TICKET_STATUS                                                      ")
				.append(" LEFT JOIN DEPARTMENT DEPT                                                             ")
				.append(" ON T.DEPARTMENT_ID = DEPT.DEPT_ID                                                     ")
				.append(" LEFT JOIN TICKET_MAIN_TYPE TMT                                                        ")
				.append(" ON TT.TICKET_MAIN_TYPE_ID = TMT.ID                                                    ")
				.append(" WHERE                                                                                 ")
				//.append(" T.STATUS=:STATUS_ID AND                                                               ")  
				.append(" T.BOOKING_ID=:FLAT_BOOKING_ID                                                         ")
				.append(" ORDER BY T.TICKET_ID DESC                                                             ")
				.toString();
		
		
		/* QRY_TO_GET_ALL_TICKET_DETAILS FROM TICKET */
		public static final String QRY_TO_GET_ALL_TICKET_DETAILS = new StringBuilder(" SELECT                      ")
				.append(" F.FLAT_NO , T.TICKET_ID AS TICKET_ID,                                                    ")
				.append(" T.TITLE AS TITLE,                                                                        ")
				.append(" T.CREATED_DATE AS CREATED_DATE,                                                          ")
				.append(" T.MODIFIED_DATE AS MODIFIED_DATE,                                                        ")
				.append(" T.STATUS AS STATUS,                                                                      ")
				.append(" T.TICKET_TYPE_DETAILS_ID AS TICKET_TYPE_DETAILS_ID,                                      ")
				.append(" T.DEPARTMENT_ID AS DEPARTMENT_ID,                                                        ")
				.append(" T.ASSIGNMENT_TO AS ASSIGNMENT_TO,                                                        ")
				.append(" T.ASSIGNED_BY AS ASSIGNED_BY,                                                            ")
				.append(" T.ASSIGNED_DATE  AS ASSIGNED_DATE,                                                       ")
				.append(" T.BOOKING_ID AS BOOKING_ID,                                                              ")
				.append(" T.ESTIMATED_RESOLVED_DATE AS ESTIMATED_RESOLVED_DATE,                                    ")
				.append(" T.ESTIMATED_RESOLVED_DATE_STATUS AS ESTIMATED_RESOLVED_DATE_STATUS,                      ")
				.append(" T.EXT_ESTIMATED_RESOLVED_DATE  AS EXT_ESTIMATED_RESOLVED_DATE,                           ")
				.append(" T.RESOLVED_DATE AS RESOLVED_DATE,                                                        ")
				.append(" T.STATUS_UPDATED_BY AS STATUS_UPDATED_BY,                                                ")
				.append(" T.STATUS_UPDATE_TYPE AS STATUS_UPDATE_TYPE,                                              ")
				.append(" T.DOCUMENT_LOCATION AS DOCUMENT_LOCATION,                                                ")
				.append(" T.TICKET_TYPE_ID AS TICKET_TYPE_ID,                                                      ")
				.append(" T.TICKET_STATUS AS TICKET_STATUS,                                                        ")
				.append(" T.DESCRIPTION AS DESCRIPTION,                                                            ")
				.append(" T.INVIDUAL_TICKET_STATUS AS DEPARTMENT_TICKET_STATUS,                                    ")
				.append(" T.RATING AS RATING,                                                                      ")
				.append(" T.FEEDBACK_DESC AS FEEDBACK_DESC,                                                        ")
				.append(" T.TICKET_TYPE_CHANGE_REQUEST AS TICKET_TYPE_CHANGE_REQUEST,                              ")
				.append(" NVL(T.COMPLAINT_STATUS,86) AS COMPLAINT_STATUS,                                          ")
				.append(" T.COMPLAINT_CREATED_BY,                                                                  ")
				.append(" T.COMPLAINT_CREATED_DATE,                                                                ")
				.append(" (SELECT EMP.FIRST_NAME FROM EMPLOYEE EMP WHERE EMP.EMP_ID=T.COMPLAINT_CREATED_BY)        ")
				.append(" AS COMPLAINT_CREATED_BY_EMP_NAME,                                                        ")
				.append(" CUST.NAME_PREFIX ||' '|| CUST.FIRST_NAME AS CUST_NAME,                                   ")
				.append(" CUST.CUST_ID,                                                                            ")
				.append(" S.NAME AS SITE_NAME,                                                                     ")
				.append(" TMT.NAME ||' / '|| TT.NAME AS TICKET_TYPE,                                               ")
				.append(" E.FIRST_NAME || '-'|| DT.NAME AS TICKET_OWNER,                                           ")
				.append(" CASE                                                                                     ")
				.append(" WHEN T.ESTIMATED_RESOLVED_DATE_STATUS IS NOT NULL AND T.TICKET_STATUS NOT IN(11) THEN    ")
				.append(" (SELECT DISTINCT 'LEVEL-' ||TELVM.LEVEL_ID || '-' || EMP.FIRST_NAME                      ")
				.append(" || '-' || DT.NAME FROM TICKET_ESCALATION TE                                              ")
				.append(" INNER JOIN TICKET_ESCA_LVL_MAP TELVM                                                     ")
				.append(" ON TELVM.ID = TE.TICKET_ESC_LVL_MAP_ID                                                   ")
				.append(" INNER JOIN TICKET_ESC_LEVEL_EMP_MAP TELEM                                                ")
				.append(" ON TELEM.TICKET_ESC_LVL_MAP_ID = TELVM.ID                                                ")
				.append(" INNER JOIN EMPLOYEE EMP                                                                  ")
				.append(" ON TELEM.EMPLOYEE_ID = EMP.EMP_ID                                                        ")
				.append(" INNER JOIN EMPLOYEE_DEPARTMENT_MAPING EDM                                                ")
				.append(" ON EDM.EMPLOYEE_ID=EMP.EMP_ID AND EDM.STATUS=:STATUS                                     ")
				.append(" INNER JOIN DEPARTMENT_ROLE_MAPPING DRM                                                   ")
				.append(" ON DRM.DEPARTMENT_ROLE_MAPPING_ID=EDM.DEPARTMENT_ROLE_MAPPING_ID                         ")
				.append(" AND DRM.STATUS=:STATUS                                                                   ")
				.append(" INNER JOIN DEPARTMENT DT                                                                 ")
				.append(" ON DT.DEPT_ID=DRM.DEPT_ID AND DT.STATUS_ID=:STATUS                                       ")
				.append(" WHERE TE.TICKET_ID = T.TICKET_ID AND TE.STATUS = :STATUS                                 ")
				.append(" AND TELVM.STATUS_ID = :STATUS AND TELEM.STATUS_ID = :STATUS)                             ")
				.append(" WHEN T.DEPARTMENT_ID IS NOT NULL AND  T.DEPARTMENT_ID <> 0 THEN  DEPT.NAME               ")
				.append(" WHEN T.ASSIGNMENT_TO IS NOT NULL AND T.ASSIGNMENT_TO <>  0 THEN                          ")
				.append(" (SELECT DISTINCT EMP.FIRST_NAME || '-' || DT.NAME                                        ")
				.append(" FROM EMPLOYEE EMP                                                                        ")
				.append(" INNER JOIN EMPLOYEE_DEPARTMENT_MAPING EDM                                                ")
				.append(" ON EDM.EMPLOYEE_ID=EMP.EMP_ID AND EDM.STATUS=:STATUS                                     ")
				.append(" INNER JOIN DEPARTMENT_ROLE_MAPPING DRM                                                   ")
				.append(" ON DRM.DEPARTMENT_ROLE_MAPPING_ID=EDM.DEPARTMENT_ROLE_MAPPING_ID                         ")
				.append(" AND DRM.STATUS=:STATUS                                                                   ")
				.append(" INNER JOIN DEPARTMENT DT                                                                 ")
				.append(" ON DT.DEPT_ID=DRM.DEPT_ID AND DT.STATUS_ID=:STATUS                                       ")
				.append(" WHERE EMP.EMP_ID = T.ASSIGNMENT_TO AND EMP.STATUS_ID = :STATUS)                          ")
				.append(" ELSE E.FIRST_NAME || '-'|| DT.NAME                                                       ")
				.append(" END AS PENDING_DEPT_EMP,                                                                 ")
				.append(" CASE                                                                                     ")
				.append(" WHEN T.ESTIMATED_RESOLVED_DATE_STATUS IS NOT NULL AND T.TICKET_STATUS NOT IN(11) THEN    ")
				.append(" (SELECT EMP.EMP_ID FROM TICKET_ESCALATION TE                                             ")
				.append(" INNER JOIN TICKET_ESCA_LVL_MAP TELVM                                                     ")
				.append(" ON TELVM.ID = TE.TICKET_ESC_LVL_MAP_ID                                                   ")
				.append(" INNER JOIN TICKET_ESC_LEVEL_EMP_MAP TELEM                                                ")
				.append(" ON TELEM.TICKET_ESC_LVL_MAP_ID = TELVM.ID                                                ")
				.append(" INNER JOIN EMPLOYEE EMP                                                                  ")
				.append(" ON TELEM.EMPLOYEE_ID = EMP.EMP_ID                                                        ")
				.append(" INNER JOIN EMPLOYEE_DEPARTMENT_MAPING EDM                                                ")
				.append(" ON EDM.EMPLOYEE_ID=EMP.EMP_ID AND EDM.STATUS=:STATUS                                     ")
				.append(" INNER JOIN DEPARTMENT_ROLE_MAPPING DRM                                                   ")
				.append(" ON DRM.DEPARTMENT_ROLE_MAPPING_ID=EDM.DEPARTMENT_ROLE_MAPPING_ID                         ")
				.append(" AND DRM.STATUS=:STATUS                                                                   ")
				.append(" INNER JOIN DEPARTMENT DT                                                                 ")
				.append(" ON DT.DEPT_ID=DRM.DEPT_ID AND DT.STATUS_ID=:STATUS                                       ")
				.append(" WHERE TE.TICKET_ID = T.TICKET_ID AND TE.STATUS = :STATUS                                 ")
				.append(" AND TELVM.STATUS_ID = :STATUS AND TELEM.STATUS_ID = :STATUS)                             ")
				.append(" WHEN T.ASSIGNMENT_TO IS NOT NULL AND T.ASSIGNMENT_TO <>  0 THEN                          ")
				.append(" (SELECT EMP.EMP_ID FROM EMPLOYEE EMP                                                     ")
				.append(" INNER JOIN EMPLOYEE_DEPARTMENT_MAPING EDM                                                ")
				.append(" ON EDM.EMPLOYEE_ID=EMP.EMP_ID AND EDM.STATUS=:STATUS                                     ")
				.append(" INNER JOIN DEPARTMENT_ROLE_MAPPING DRM                                                   ")
				.append(" ON DRM.DEPARTMENT_ROLE_MAPPING_ID=EDM.DEPARTMENT_ROLE_MAPPING_ID                         ")
				.append(" AND DRM.STATUS=:STATUS                                                                   ")
				.append(" INNER JOIN DEPARTMENT DT                                                                 ")
				.append(" ON DT.DEPT_ID=DRM.DEPT_ID AND DT.STATUS_ID=:STATUS                                       ")
				.append(" WHERE EMP.EMP_ID = T.ASSIGNMENT_TO AND EMP.STATUS_ID = :STATUS)                          ")
				.append(" ELSE E.EMP_ID                                                                            ")
				.append(" END AS PENDING_EMP_ID,                                                                   ")
				.append(" CASE                                                                                     ")
				.append(" WHEN (T.ESTIMATED_RESOLVED_DATE_STATUS IS NULL OR T.ESTIMATED_RESOLVED_DATE_STATUS       ")
				.append(" NOT IN(17)) AND T.TICKET_STATUS NOT IN(11) AND                                           ")
				.append(" T.DEPARTMENT_ID IS NOT NULL AND  T.DEPARTMENT_ID <> 0 THEN  T.DEPARTMENT_ID              ")
				.append(" ELSE NULL                                                                                ")
				.append(" END AS PENDING_DEPT_ID,                                                                  ")
				.append(" CASE                                                                                     ")
				.append(" WHEN STATUS_UPDATE_TYPE=7 THEN (SELECT 'CUSTOMER-' || NAME_PREFIX ||' '                  ")
				.append(" || FIRST_NAME FROM CUSTOMER WHERE CUST_ID=T.STATUS_UPDATED_BY)                           ")
				.append(" WHEN STATUS_UPDATE_TYPE=8 THEN 'EMPLOYEE-' || E.FIRST_NAME                               ")
				.append(" ELSE NULL                                                                                ")
				.append(" END AS CLOSED_BY                                                                         ")
				.append(" FROM TICKET T                                                                            ")
				.append(" INNER JOIN                                                                               ")
				.append(" FLAT_BOOKING FB                                                                          ")
				.append(" ON T.BOOKING_ID = FB.FLAT_BOOK_ID                                                        ")
				.append(" INNER JOIN                                                                               ")
				.append(" CUSTOMER CUST                                                                            ")
				.append(" ON CUST.CUST_ID=FB.CUST_ID                                                               ")
				.append(" INNER JOIN FLAT F                                                                        ")
				.append(" ON FB.FLAT_ID = F.FLAT_ID                                                                ")
				.append(" INNER JOIN FLOOR_DETAILS FD                                                              ")
				.append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID                                                      ")
				.append(" INNER JOIN FLOOR FL                                                                      ")
				.append(" ON FL.FLOOR_ID = FD.FLOOR_ID                                                             ")
				.append(" INNER JOIN BLOCK_DETAILS BD                                                              ")
				.append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID                                                     ")
				.append(" INNER JOIN BLOCK BL                                                                      ")
				.append(" ON BL.BLOCK_ID = BD.BLOCK_ID                                                             ")
				.append(" INNER JOIN SITE S                                                                        ")
				.append(" ON BD.SITE_ID = S.SITE_ID                                                                ")
				.append(" INNER JOIN                                                                               ")
				.append(" TICKET_TYPE_DETAILS TYD                                                                  ")
				.append(" ON T.TICKET_TYPE_DETAILS_ID = TYD.TICKET_TYPE_DETAILS_ID                                 ")
				.append(" INNER JOIN TICKET_TYPE TT                                                                ")
				.append(" ON TT.TICKET_TYPE_ID = TYD.TICKET_TYPE_ID                                                ")
				.append(" INNER JOIN EMPLOYEE_DETAILS ED                                                           ")
				.append(" ON TYD.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID                                           ")
				.append(" INNER JOIN EMPLOYEE E                                                                    ")
				.append(" ON ED.EMPLOYEE_ID = E.EMP_ID                                                             ")
				.append(" INNER JOIN DEPARTMENT DT                                                                 ")
				.append(" ON DT.DEPT_ID=TYD.DEPARTMENT_ID                                                          ")                                                   
				.append(" LEFT JOIN DEPARTMENT DEPT                                                                ")
				.append(" ON T.DEPARTMENT_ID = DEPT.DEPT_ID                                                        ")
				.append(" LEFT JOIN TICKET_MAIN_TYPE TMT                                                           ")
				.append(" ON TT.TICKET_MAIN_TYPE_ID = TMT.ID                                                       ")
				.append(" LEFT JOIN TICKET_ESCALATION TES                                                          ")
				.append(" ON(TES.TICKET_ID=T.TICKET_ID AND TES.STATUS=:STATUS)                                     ")
				.append(" LEFT JOIN TICKET_ESC_LEVEL_EMP_MAP TESLEM                                                ")
				.append(" ON(TESLEM.TICKET_ESC_LVL_MAP_ID=TES.TICKET_ESC_LVL_MAP_ID AND TESLEM.STATUS_ID=:STATUS)  ")
				.toString();
		
		/* QRY_TO_GET_ALL_TICKET_DETAILS_COUNT FROM TICKET */
		public static final String QRY_TO_GET_ALL_TICKET_DETAILS_COUNT = new StringBuilder(" SELECT  COUNT(*)      ")
				.append(" FROM TICKET T                                                                            ")
				.append(" INNER JOIN                                                                               ")
				.append(" FLAT_BOOKING FB                                                                          ")
				.append(" ON T.BOOKING_ID = FB.FLAT_BOOK_ID                                                        ")
				.append(" INNER JOIN                                                                               ")
				.append(" CUSTOMER CUST                                                                            ")
				.append(" ON CUST.CUST_ID=FB.CUST_ID                                                               ")
				.append(" INNER JOIN FLAT F                                                                        ")
				.append(" ON FB.FLAT_ID = F.FLAT_ID                                                                ")
				.append(" INNER JOIN FLOOR_DETAILS FD                                                              ")
				.append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID                                                      ")
				.append(" INNER JOIN FLOOR FL                                                                      ")
				.append(" ON FL.FLOOR_ID = FD.FLOOR_ID                                                             ")
				.append(" INNER JOIN BLOCK_DETAILS BD                                                              ")
				.append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID                                                     ")
				.append(" INNER JOIN BLOCK BL                                                                      ")
				.append(" ON BL.BLOCK_ID = BD.BLOCK_ID                                                             ")
				.append(" INNER JOIN SITE S                                                                        ")
				.append(" ON BD.SITE_ID = S.SITE_ID                                                                ")
				.append(" INNER JOIN                                                                               ")
				.append(" TICKET_TYPE_DETAILS TYD                                                                  ")
				.append(" ON T.TICKET_TYPE_DETAILS_ID = TYD.TICKET_TYPE_DETAILS_ID                                 ")
				.append(" INNER JOIN TICKET_TYPE TT                                                                ")
				.append(" ON TT.TICKET_TYPE_ID = TYD.TICKET_TYPE_ID                                                ")
				.append(" INNER JOIN EMPLOYEE_DETAILS ED                                                           ")
				.append(" ON TYD.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID                                           ")
				.append(" INNER JOIN EMPLOYEE E                                                                    ")
				.append(" ON ED.EMPLOYEE_ID = E.EMP_ID                                                             ")
				.append(" INNER JOIN DEPARTMENT DT                                                                 ")
				.append(" ON DT.DEPT_ID=TYD.DEPARTMENT_ID                                                          ")                                                   
				.append(" LEFT JOIN DEPARTMENT DEPT                                                                ")
				.append(" ON T.DEPARTMENT_ID = DEPT.DEPT_ID                                                        ")
				.append(" LEFT JOIN TICKET_MAIN_TYPE TMT                                                           ")
				.append(" ON TT.TICKET_MAIN_TYPE_ID = TMT.ID                                                       ")
				.append(" LEFT JOIN TICKET_ESCALATION TES                                                          ")
				.append(" ON(TES.TICKET_ID=T.TICKET_ID AND TES.STATUS=:STATUS)                                     ")
				.append(" LEFT JOIN TICKET_ESC_LEVEL_EMP_MAP TESLEM                                                ")
				.append(" ON(TESLEM.TICKET_ESC_LVL_MAP_ID=TES.TICKET_ESC_LVL_MAP_ID AND TESLEM.STATUS_ID=:STATUS)  ")
				.toString();
		
		
		/* QRY_TO_GET_DEPT_EMP_DETAILS */
		public static final String QRY_TO_GET_DEPT_EMP_DETAILS = new StringBuilder(" SELECT  DISTINCT                   ")
				.append(" DT.DEPT_ID AS DEPT_ID,                                                                        ")
				.append(" DT.NAME AS NAME,                                                                              ")
				.append(" EMP.EMP_ID,                                                                                   ")
				.append(" EMP.FIRST_NAME AS EMP_NAME,                                                                   ")
				.append(" EMP.EMAIL AS EMP_MAIL                                                                         ")
				.append(" FROM EMPLOYEE_DEPARTMENT_MAPING EDM                                                           ")
				.append(" JOIN DEPARTMENT_ROLE_MAPPING DRM ON                                                           ")
				.append(" DRM.DEPARTMENT_ROLE_MAPPING_ID=EDM.DEPARTMENT_ROLE_MAPPING_ID AND DRM.STATUS=:STATUS_ID       ")
				.append(" JOIN DEPARTMENT DT ON                                                                         ")
				.append(" DT.DEPT_ID=DRM.DEPT_ID AND DT.STATUS_ID=:STATUS_ID                                            ")
				.append(" JOIN EMPLOYEE EMP ON                                                                          ")
				.append(" EMP.EMP_ID=EDM.EMPLOYEE_ID AND EMP.STATUS_ID=:STATUS_ID                                       ")
				.append(" JOIN EMPLOYEE_ROLE_MENU_GROUPING ERMG ON                                                      ")
				.append(" ERMG.DEPARTMENT_ROLE_MAPPING_ID=DRM.DEPARTMENT_ROLE_MAPPING_ID AND ERMG.STATUS_ID=:STATUS_ID  ")
				.append(" JOIN EMPLOYEE_MENU_SUBMENU_MAPPING EMSM ON                                                    ")
				.append(" EMSM.MENU_SUB_MENU_MAPPING_ID=ERMG.MENU_MAPPING_ID AND EMSM.STATUS_ID=:STATUS_ID              ")
				.append(" JOIN EMPLOYEE_SUBMENU_SITE_MAPPING ESSM ON                                                    ")
				.append(" ESSM.MENU_SUB_MENU_MAPPING_ID=EMSM.MENU_SUB_MENU_MAPPING_ID AND ESSM.STATUS_ID=:STATUS_ID     ")
				.append(" JOIN BLOCK_DETAILS BD ON BD.SITE_ID=ESSM.SITE_ID                                              ")
				.append(" JOIN FLOOR_DETAILS FLD ON FLD.BLOCK_DET_ID=BD.BLOCK_DET_ID                                    ")
				.append(" JOIN FLAT FT ON FT.FLOOR_DET_ID=FLD.FLOOR_DET_ID                                              ")
				.append(" JOIN FLAT_BOOKING FB ON FB.FLAT_ID=FT.FLAT_ID                                                 ")
				.append(" WHERE EDM.STATUS=:STATUS_ID AND FB.FLAT_BOOK_ID=:FLAT_BOOK_ID                                 ")
				.append(" AND EMSM.MODULE_ID=:MODULE_ID AND DT.DEPT_ID=:DEPT_ID                                         ")
				.append(" ORDER BY EMP_ID                                                                               ")
				.toString();
		
		/* To Update Complaint Status in Ticket Table by Employees */
		public static final String QRY_TO_UPDATE_TICKET_COMPLAINT_STATUS = new StringBuilder(" UPDATE TICKET SET ")
				.append(" COMPLAINT_STATUS=:COMPLAINT_STATUS, ")
				.append(" COMPLAINT_CREATED_BY=:EMP_ID,       ")
				.append(" COMPLAINT_CREATED_DATE=SYSDATE      ")
				.append(" WHERE STATUS=:STATUS_ID             ")
				.append(" AND TICKET_ID IN(:TICKET_IDS)       ")
				.toString();
		
		/* To Update extend date in Ticket ESCALATION Table  */
		public static final String QRY_TO_UPDATE_TICKETESCALATION_DATE = new StringBuilder(" UPDATE TICKET_ESCALATION ")
				.append(" SET ASSIGNED_DATE=:ESTDATE  ")
				.toString();
		
		/* To Update extend date in Ticket  Table  */
		public static final String QRY_TO_UPDATE_TICKETE_DATE = new StringBuilder(" UPDATE TICKET ")
				.append(" SET ESTIMATED_RESOLVED_DATE=:ESTDATE  ")
				.toString();
		/* To Update extend date in Ticket  Table  */
		public static final String QRY_TO_GET_TICKET_ESCALATION_ID = new StringBuilder(" SELECT ")
				.append(" max(TICKET_ESCALATION_ID) AS TICKET_ESCALATION_ID, ")
				.append(" ASSIGNED_DATE AS ASSIGNED_DATE ")
				.append(" FROM TICKET_ESCALATION  ")
				.toString();
		
		/* For Ticket Reporting - Project wise Feedback count table */
		public static final String QRY_TO_GET_PROJECT_WISE_FEEDBACK_TICKET_LIST = new StringBuilder(" SELECT ")
				.append(" TKT.TICKET_ID AS TICKET_NO,                                              ")
				.append(" TKT.TICKET_TYPE_ID,                                                      ")
				.append(" TKT.TICKET_TYPE_DETAILS_ID,                                              ")
				.append(" TKT.RATING,                                                              ")
				.append(" TKT.FEEDBACK_DESC,                                                       ")
				.append(" ST.SITE_ID,                                                              ")
				.append(" ST.NAME AS SITE_NAME                                                     ")
				.append(" FROM TICKET TKT                                                          ")
				.append(" JOIN TICKET_TYPE_DETAILS TTD                                             ")
				.append(" ON(TTD.TICKET_TYPE_DETAILS_ID=TKT.TICKET_TYPE_DETAILS_ID)                ")
				.append(" JOIN FLAT_BOOKING FB                                                     ")
				.append(" ON(FB.FLAT_BOOK_ID=TKT.BOOKING_ID)                                       ")
				.append(" JOIN FLAT FT                                                             ")
				.append(" ON(FT.FLAT_ID=FB.FLAT_ID)                                                ")
				.append(" JOIN FLOOR_DETAILS FD                                                    ")
				.append(" ON(FD.FLOOR_DET_ID=FT.FLOOR_DET_ID)                                      ")
				.append(" JOIN BLOCK_DETAILS BD                                                    ")
				.append(" ON(BD.BLOCK_DET_ID=FD.BLOCK_DET_ID)                                      ")
				.append(" JOIN SITE ST                                                             ")
				.append(" ON(ST.SITE_ID=BD.SITE_ID)                                                ")
				.append(" WHERE (TKT.RESOLVED_DATE IS NOT NULL OR TKT.INVIDUAL_TICKET_STATUS=11 OR ") 
				.append(" TKT.TICKET_STATUS=11)                                                    ")
				.append(" AND TKT.STATUS = :STATUS_ID                                              ")
				.append(" AND TKT.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE                     ")
				.append(" AND TTD.DEPARTMENT_ID IN (:DEPARTMENT_IDS)                               ")
				.append(" AND TKT.RATING IS NOT NULL                                               ")
				.append(" ORDER BY ST.SITE_ID, TKT.RATING                                          ")
				.toString();
		
		/* For Ticket Reporting - Getting Ticket Report based on Selection */
		public static final String QRY_TO_GET_SPECIFIC_TICKET_REPORT = new StringBuilder(" SELECT DISTINCT ")
				.append(" TKT.TICKET_ID AS TICKET_NO,                                                      ")              
				.append(" TKT.TICKET_TYPE_ID,                                                              ")               
				.append(" TKT.TICKET_TYPE_DETAILS_ID,                                                      ")               
				.append(" TKT.RATING,                                                                      ")               
				.append(" TKT.FEEDBACK_DESC,                                                               ")
				.append(" TKT.TICKET_STATUS AS TICKET_STATUS_ID,                                           ")
				.append(" TKT.CREATED_DATE,                                                                ")
				.append(" TKT.RESOLVED_DATE,                                                               ")
				.append(" (SELECT COUNT(*) FROM TICKET_ESCALATION TE                              		   ")
				.append(" WHERE TE.TICKET_ID=TKT.TICKET_ID) AS ESCALATED_COUNT,                  		   ")
				.append(" TKT.CREATED_DATE,                                                      		   ")
				.append(" EMP.EMP_ID,                                                            		   ")
				.append(" ST.SITE_ID,                                                            		   ")               
				.append(" ST.NAME AS SITE_NAME                                                    		   ")
				.append(" FROM TICKET TKT                                                         		   ")               
				.append(" JOIN TICKET_TYPE_DETAILS TTD                                           		   ")               
				.append(" ON(TTD.TICKET_TYPE_DETAILS_ID=TKT.TICKET_TYPE_DETAILS_ID)               		   ") 
				.append(" JOIN EMPLOYEE_DETAILS ED                                                		   ")
				.append(" ON(ED.EMP_DETAILS_ID=TTD.EMPLOYEE_DETAILS_ID)                          		   ")
				.append(" JOIN EMPLOYEE EMP                                                      		   ")
				.append(" ON(EMP.EMP_ID=ED.EMPLOYEE_ID)                                           		   ")
				.append(" JOIN FLAT_BOOKING FB                                                             ")               
				.append(" ON(FB.FLAT_BOOK_ID=TKT.BOOKING_ID)                                               ")               
				.append(" JOIN FLAT FT                                                                     ")               
				.append(" ON(FT.FLAT_ID=FB.FLAT_ID)                                                        ")               
				.append(" JOIN FLOOR_DETAILS FD                                                            ")               
				.append(" ON(FD.FLOOR_DET_ID=FT.FLOOR_DET_ID)                                              ")               
				.append(" JOIN BLOCK_DETAILS BD                                                            ")               
				.append(" ON(BD.BLOCK_DET_ID=FD.BLOCK_DET_ID)                                              ")               
				.append(" JOIN SITE ST                                                                     ")               
				.append(" ON(ST.SITE_ID=BD.SITE_ID)                                                        ")
				.append(" LEFT JOIN TICKET_ESCALATION TES                                                  ")
                .append(" ON(TES.TICKET_ID=TKT.TICKET_ID)                                                  ")
                .append(" LEFT JOIN TICKET_ESCA_LVL_MAP TELM                                               ")
                .append(" ON(TELM.ID=(SELECT MAX(TESC.TICKET_ESC_LVL_MAP_ID) FROM TICKET_ESCALATION TESC   ")
                .append(" WHERE TESC.TICKET_ID=TKT.TICKET_ID AND TELM.STATUS_ID=:STATUS_ID))               ")
                .append(" LEFT JOIN TICKET_ESC_LEVEL_EMP_MAP TELEM                                         ")
                .append(" ON(TELEM.TICKET_ESC_LVL_MAP_ID=TELM.ID AND TELEM.STATUS_ID=:STATUS_ID)           ")
                .append(" LEFT JOIN EMPLOYEE EMPL                                                          ")
                .append(" ON(EMPL.EMP_ID=TELEM.EMPLOYEE_ID AND EMPL.STATUS_ID=:STATUS_ID)                  ")
				.append(" WHERE TKT.STATUS = :STATUS_ID                                                    ")                 
				.append(" AND TKT.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE                             ") 
				.append(" AND TKT.TICKET_STATUS IS NOT NULL                                                ") 
				.toString();
		
		/* QRY_TO_CHECK_TICKET_OWNER FROM TICKET - GET TICKET DETAILS */
		public static final String QRY_TO_CHECK_TICKET_OWNER = new StringBuilder(" SELECT COUNT(*) ")
				.append(" FROM TICKET_TYPE_DETAILS TTD                                             ")
				.append(" JOIN EMPLOYEE_DETAILS ED ON(TTD.EMPLOYEE_DETAILS_ID=ED.EMP_DETAILS_ID)   ")
				.append(" JOIN EMPLOYEE EMP ON(EMP.EMP_ID=ED.EMPLOYEE_ID)                          ")
				.append(" WHERE TTD.STATUS=:STATUS_ID AND ED.STATUS_ID=:STATUS_ID                  ")
				.append(" AND EMP.STATUS_ID=:STATUS_ID AND EMP.EMP_ID=:EMP_ID                      ")
				.toString();
		
		/* QRY_TO_GET_EMPLOYEE_NAME_WITH_DEPARTMENT_NAME FROM TICKET - GET TICKET DETAILS */
		public static final String QRY_TO_GET_EMPLOYEE_NAME_WITH_DEPARTMENT_NAME  = new StringBuilder(" SELECT  ")
				.append(" EMP .CS_EMP_ID AS CS_EMP_ID,                                               ")
				.append(" EMP .EMP_ID AS  EMP_ID,                                                    ")
				.append(" EMP .FIRST_NAME AS FIRST_NAME,                                             ")
				.append(" EMP .LAST_NAME AS LAST_NAME,                                               ")
				.append(" CONCAT(CONCAT(EMP .FIRST_NAME,'-'),DT.NAME) AS EMP_NAME,                   ")
				.append(" EMP .EMAIL AS EMAIL,                                                       ")
				.append(" EMP .STATUS_ID AS STATUS_ID,                                               ")
				.append(" EMP .CREATED_DATE AS CREATED_DATE,                                         ")
				.append(" EMP .MODIFIED_DATE AS  MODIFIED_DATE,                                      ")
				.append(" EMP .MOBILE_NO AS MOBILE_NO,                                               ")
				.append(" EMP .USER_PROFILE AS USER_PROFILE                                          ")
				.append(" FROM EMPLOYEE EMP                                                          ")
				.append(" JOIN EMPLOYEE_DEPARTMENT_MAPING EDM                                        ")
				.append(" ON(EDM.EMPLOYEE_ID=EMP.EMP_ID)                                             ")
				.append(" JOIN DEPARTMENT_ROLE_MAPPING DRM                                           ")
				.append(" ON(DRM.DEPARTMENT_ROLE_MAPPING_ID=EDM.DEPARTMENT_ROLE_MAPPING_ID)          ")
				.append(" JOIN DEPARTMENT DT                                                         ")
				.append(" ON(DT.DEPT_ID=DRM.DEPT_ID)                                                 ")
				.append(" WHERE EMP.STATUS_ID=:STATUS_ID AND EDM.STATUS=:STATUS_ID                   ")
				.append(" AND DRM.STATUS=:STATUS_ID AND DT.STATUS_ID=:STATUS_ID                      ")
				.append(" AND EMP.EMP_ID=:EMP_ID                                                     ")
	            .toString();
		
		/* QRY_TO_GET_TICKET_OWNER_NAME_WITH_DEPARTMENT_NAME FROM TICKET - GET TICKET DETAILS */
		public static final String QRY_TO_GET_TICKET_OWNER_NAME_WITH_DEPARTMENT_NAME  = new StringBuilder(" SELECT  ")
				.append(" EMP .CS_EMP_ID AS CS_EMP_ID,                                    ")
				.append(" EMP .EMP_ID AS  EMP_ID,                                         ")
				.append(" EMP .FIRST_NAME AS FIRST_NAME,                                  ")
				.append(" EMP .LAST_NAME AS LAST_NAME,                                    ")
				.append(" CONCAT(CONCAT(EMP .FIRST_NAME,'-'),DT.NAME) AS EMP_NAME,        ")
				.append(" EMP .EMAIL AS EMAIL,                                            ")
				.append(" EMP .STATUS_ID AS STATUS_ID,                                    ")
				.append(" EMP .CREATED_DATE AS CREATED_DATE,                              ")
				.append(" EMP .MODIFIED_DATE AS  MODIFIED_DATE,                           ")
				.append(" EMP .MOBILE_NO AS MOBILE_NO,                                    ")
				.append(" EMP .USER_PROFILE AS USER_PROFILE                               ")
				.append(" FROM TICKET_TYPE_DETAILS TTD                                    ")
				.append(" JOIN EMPLOYEE_DETAILS ED                                        ")
				.append(" ON(ED.EMP_DETAILS_ID=TTD.EMPLOYEE_DETAILS_ID)                   ")
				.append(" JOIN EMPLOYEE EMP                                               ")
				.append(" ON(EMP.EMP_ID=ED.EMPLOYEE_ID)                                   ")
				.append(" JOIN DEPARTMENT DT                                              ")
				.append(" ON(DT.DEPT_ID=TTD.DEPARTMENT_ID)                                ")
				.append(" WHERE ED.STATUS_ID=:STATUS_ID AND TTD.STATUS=:STATUS_ID         ")
				.append(" AND EMP.STATUS_ID=:STATUS_ID AND DT.STATUS_ID=:STATUS_ID        ")
				.append(" AND TTD.TICKET_TYPE_DETAILS_ID=:TICKET_TYPE_DETAILS_ID          ")
	            .toString();
		
		/* QRY_TO_GET_CUSTOMER_DETAILS_FOR_CONSOLIDATED_RECEIPT - FOR CONSOLIDATED RECEIPT */
		public static final String QRY_TO_GET_CUSTOMER_DETAILS_FOR_CONSOLIDATED_RECEIPT  = new StringBuilder(" SELECT  ")
				.append(" FB.FLAT_BOOK_ID, FB.CUST_ID, FB.FLAT_ID, ST.SITE_ID,              ")
				.append(" (CUST.NAME_PREFIX || ' ' || CUST.FIRST_NAME) AS CUST_NAME,        ")
				.append(" ST.NAME AS SITE_NAME, FB.BOOKING_DATE, FT.FLAT_NO,                ")
				.append(" FD.SBUA, FC.FLAT_COST                                            ")
				.append(" ,NVL(FSO.FLAT_SALE_OWNER,'') AS FLAT_SALE_OWNER ")
/*				.append(" FB.BOOKING_DATE,")
				.append(" FB.AGREEMENT_DATE,")
				.append(" NVL(FB.MILESTONE_DAYS,0) AS MILESTONE_DAYS ")
*/				.append(" FROM FLAT_BOOKING FB                                              ")
				.append(" JOIN CUSTOMER CUST ON(CUST.CUST_ID=FB.CUST_ID)                    ")
				.append(" JOIN CUSTOMER_APPLICATION CA ON(CA.FLAT_BOOK_ID=FB.FLAT_BOOK_ID)  ")
				.append(" JOIN SITE ST ON(ST.SITE_ID=CA.SITE_ID)                            ")
				.append(" JOIN FLAT_COST FC ON(FC.FLAT_ID=FB.FLAT_ID)                       ")
				.append(" JOIN FLAT_DETAILS FD ON(FD.FLAT_ID=FB.FLAT_ID)                    ")
				.append(" FULL JOIN FLATS_SALE_OWNERS FSO ON FSO.FLATS_SALE_OWNERS_ID = FD.FLATS_SALE_OWNERS_ID AND FSO.STATUS_ID = 6 ")
				.append(" JOIN FLAT FT ON(FT.FLAT_ID=FB.FLAT_ID)                            ")
				.append(" WHERE FB.STATUS_ID=:STATUS_ID AND CUST.STATUS_ID=:STATUS_ID       ")
				.append(" AND CA.STATUS_ID=:STATUS_ID AND FC.STATUS_ID=:STATUS_ID           ")
				.append(" AND FD.STATUS_ID=:STATUS_ID AND FT.STATUS_ID=:STATUS_ID           ")
				.append(" AND FB.FLAT_BOOK_ID=:FLAT_BOOK_ID                                 ")
	            .toString();
		/* QRY_TO_GET_CUSTOMER_DETAILS_FOR_CONSOLIDATED_RECEIPT - FOR CONSOLIDATED RECEIPT */
		public static final String QRY_TO_GET_CUSTOMER_DETAILS_FOR_CONSOLIDATED_RECEIPT_FB_WITHOUT_STATUS  = new StringBuilder(" SELECT  ")
				.append(" FB.FLAT_BOOK_ID, FB.CUST_ID, FB.FLAT_ID, ST.SITE_ID,              ")
				.append(" (CUST.NAME_PREFIX || ' ' || CUST.FIRST_NAME) AS CUST_NAME,        ")
				.append(" ST.NAME AS SITE_NAME, FB.BOOKING_DATE, FT.FLAT_NO,                ")
				.append(" FD.SBUA, FC.FLAT_COST                                            ")
				.append(" ,NVL(FSO.FLAT_SALE_OWNER,'') AS FLAT_SALE_OWNER ")
/*				.append(" FB.BOOKING_DATE,")
				.append(" FB.AGREEMENT_DATE,")
				.append(" NVL(FB.MILESTONE_DAYS,0) AS MILESTONE_DAYS ")
*/				.append(" FROM FLAT_BOOKING FB                                              ")
				.append(" JOIN CUSTOMER CUST ON(CUST.CUST_ID=FB.CUST_ID)                    ")
				.append(" JOIN CUSTOMER_APPLICATION CA ON(CA.FLAT_BOOK_ID=FB.FLAT_BOOK_ID)  ")
				.append(" JOIN SITE ST ON(ST.SITE_ID=CA.SITE_ID)                            ")
				.append(" JOIN FLAT_COST FC ON(FC.FLAT_ID=FB.FLAT_ID)                       ")
				.append(" JOIN FLAT_DETAILS FD ON(FD.FLAT_ID=FB.FLAT_ID)                    ")
				.append(" FULL JOIN FLATS_SALE_OWNERS FSO ON FSO.FLATS_SALE_OWNERS_ID = FD.FLATS_SALE_OWNERS_ID AND FSO.STATUS_ID = 6 ")
				.append(" JOIN FLAT FT ON(FT.FLAT_ID=FB.FLAT_ID)                            ")
				.append(" WHERE  CUST.STATUS_ID=:STATUS_ID       ")
				.append(" AND CA.STATUS_ID=:STATUS_ID AND FC.STATUS_ID=:STATUS_ID           ")
				.append(" AND FD.STATUS_ID=:STATUS_ID AND FT.STATUS_ID=:STATUS_ID           ")
				.append(" AND FB.FLAT_BOOK_ID=:FLAT_BOOK_ID                                 ")
	            .toString();
		
		/* QRY_TO_GET_TRANSACTION_DETAILS_FOR_CONSOLIDATED_RECEIPT - FOR CONSOLIDATED RECEIPT */
		public static final String QRY_TO_GET_TRANSACTION_DETAILS_FOR_CONSOLIDATED_RECEIPT  = new StringBuilder(" SELECT  ")
				.append(" FTE.RECEIVED_DATE, FTE.PAYMENT_DATE,                            ")    
				.append(" CASE                                                            ")
				.append(" WHEN FTE.FIN_TRANSACTION_MODE_ID=1 THEN FTC.CHEQUE_NO           ")
				.append(" WHEN FTE.FIN_TRANSACTION_MODE_ID=2 THEN FTO.REFERENCE_NO        ")  
				.append(" END AS REFERENCE_NO,                                            ")
				.append(" FTSO.SET_OFF_AMOUNT,                                            ")
				.append(" FTE.TRANSACTION_STATUS_ID,                                      ")
				.append(" STS.STATUS AS TRANSACTION_STATUS_NAME,                          ")
				.append(" FTE.FIN_TRANSACTION_TYPE_ID                                     ")
				.append(" FROM FIN_TRANSACTION_ENTRY FTE                                  ")
				.append(" LEFT JOIN FIN_TRANSACTION_CHEQUE FTC                            ")
				.append(" ON(FTC.FIN_TRANSACTION_ENTRY_ID=FTE.FIN_TRANSACTION_ENTRY_ID)   ")
				.append(" LEFT JOIN FIN_TRANSACTION_ONLINE FTO                            ")
				.append(" ON(FTO.FIN_TRANSACTION_ENTRY_ID=FTE.FIN_TRANSACTION_ENTRY_ID)   ")
				.append(" JOIN FIN_TRANSACTION_SET_OFF_ENTRY FTSOE                        ")
				.append(" ON(FTSOE.FIN_TRANSACTION_ENTRY_ID=FTE.FIN_TRANSACTION_ENTRY_ID) ")
				.append(" JOIN FIN_TRANSACTION_SET_OFF FTSO                               ")
				.append(" ON(FTSO.FIN_TRN_SET_OFF_ENT_ID=FTSOE.FIN_TRN_SET_OFF_ENT_ID)    ")
				.append(" JOIN STATUS STS ON(STS.STATUS_ID=FTE.TRANSACTION_STATUS_ID)     ")
				.append(" WHERE FTE.STATUS_ID=:STATUS_ID AND FTSO.STATUS_ID=:STATUS_ID    ")
				.append(" AND FTE.BOOKING_FORM_ID=:BOOKING_FORM_ID                        ")
				.append(" AND FTE.TRANSACTION_STATUS_ID IN (:TRANSACTION_STATUS_IDS)      ")
				.append(" ORDER BY FTE.RECEIVED_DATE ")
	            .toString();
		
		
		/* QRY_TO_GET_TICKET_DETAILS_REPORT - FOR TICKET RECEIPT */
		public static final String QRY_TO_GET_TICKET_DETAILS_REPORT  = new StringBuilder(" SELECT                    ")
				.append(" T.TICKET_ID AS TICKET_NO,                                                                  ")                                                             
				.append(" T.TITLE AS TITLE,                                                                          ")
				.append(" T.CREATED_DATE AS CREATED_DATE,                                                            ")
				.append(" T.TICKET_TYPE_DETAILS_ID AS TICKET_TYPE_DETAILS_ID,                                        ")
				.append(" T.RESOLVED_DATE AS RESOLVED_DATE,                                                          ")
				.append(" T.TICKET_TYPE_ID AS TICKET_TYPE_ID,                                                        ")
				.append(" T.TICKET_STATUS AS TICKET_STATUS,                                                          ")
				.append(" T.DESCRIPTION AS DESCRIPTION,                                                              ")
				.append(" T.INVIDUAL_TICKET_STATUS AS DEPARTMENT_TICKET_STATUS,                                      ")
				.append(" T.RATING AS RATING,                                                                        ")
				.append(" T.FEEDBACK_DESC AS FEEDBACK_DESC,                                                          ")
				.append(" F.FLAT_NO,                                                                                 ")
				.append(" NVL(T.COMPLAINT_STATUS,86) AS COMPLAINT_STATUS,                                            ")
				.append(" S.NAME AS SITE_NAME,                                                                       ")
				.append(" CASE                                                                                       ")
				.append(" WHEN T.COMPLAINT_STATUS=85 THEN 'Complaint'                                                ")
				.append(" ELSE 'Query'                                                                               ")
				.append(" END AS COMPLAINT_OR_QUERY,                                                                 ")
				.append(" (SELECT DISTINCT EMPL.FIRST_NAME FROM TICKET_ESCALATION TES                                ")              
				.append(" INNER JOIN TICKET_ESCA_LVL_MAP TESLVM                                                      ")
				.append(" ON TESLVM.ID = (SELECT MAX(TESC.TICKET_ESC_LVL_MAP_ID)                                     ")
				.append(" FROM TICKET_ESCALATION TESC WHERE TESC.TICKET_ID=T.TICKET_ID)                              ")                     
				.append(" INNER JOIN TICKET_ESC_LEVEL_EMP_MAP TESLEM                                                 ")
				.append(" ON TESLEM.TICKET_ESC_LVL_MAP_ID = TESLVM.ID                                                ")
				.append(" INNER JOIN EMPLOYEE EMPL                                                                   ")
				.append(" ON TESLEM.EMPLOYEE_ID = EMPL.EMP_ID                                                        ")                                      
				.append(" WHERE TESLVM.STATUS_ID = :STATUS_ID                                                        ")
				.append(" AND TESLEM.STATUS_ID = :STATUS_ID) AS ESCALATION_LEVEL_EMP,                                ")
				.append(" CUST.NAME_PREFIX ||' '|| CUST.FIRST_NAME AS CUST_NAME,                                     ")
				.append(" TMT.NAME ||' / '|| TT.NAME AS TICKET_TYPE,                                                 ")
				.append(" E.FIRST_NAME || '-'|| DT.NAME AS TICKET_OWNER,                                             ")
				.append(" CASE                                                                                       ")
				.append(" WHEN T.ESTIMATED_RESOLVED_DATE_STATUS IS NOT NULL AND T.TICKET_STATUS NOT IN(11) THEN      ")
				.append(" (SELECT DISTINCT 'LEVEL-' ||TELVM.LEVEL_ID || '-' || EMP.FIRST_NAME                        ")
				.append(" || '-' || DT.NAME FROM TICKET_ESCALATION TE                                                ")
				.append(" INNER JOIN TICKET_ESCA_LVL_MAP TELVM                                                       ")
				.append(" ON TELVM.ID = TE.TICKET_ESC_LVL_MAP_ID                                                     ")
				.append(" INNER JOIN TICKET_ESC_LEVEL_EMP_MAP TELEM                                                  ")
				.append(" ON TELEM.TICKET_ESC_LVL_MAP_ID = TELVM.ID                                                  ")
				.append(" INNER JOIN EMPLOYEE EMP                                                                    ")
				.append(" ON TELEM.EMPLOYEE_ID = EMP.EMP_ID                                                          ")
				.append(" INNER JOIN EMPLOYEE_DEPARTMENT_MAPING EDM                                                  ")
				.append(" ON EDM.EMPLOYEE_ID=EMP.EMP_ID AND EDM.STATUS=:STATUS_ID                                    ")
				.append(" INNER JOIN DEPARTMENT_ROLE_MAPPING DRM                                                     ")
				.append(" ON DRM.DEPARTMENT_ROLE_MAPPING_ID=EDM.DEPARTMENT_ROLE_MAPPING_ID                           ")
				.append(" AND DRM.STATUS=:STATUS_ID                                                                  ")
				.append(" INNER JOIN DEPARTMENT DT                                                                   ")
				.append(" ON DT.DEPT_ID=DRM.DEPT_ID AND DT.STATUS_ID=:STATUS_ID                                      ")
				.append(" WHERE TE.TICKET_ID = T.TICKET_ID AND TE.STATUS = :STATUS_ID                                ")
				.append(" AND TELVM.STATUS_ID = :STATUS_ID AND TELEM.STATUS_ID = :STATUS_ID)                         ")
				.append(" WHEN T.DEPARTMENT_ID IS NOT NULL AND  T.DEPARTMENT_ID <> 0 THEN  DEPT.NAME                 ")
				.append(" WHEN T.ASSIGNMENT_TO IS NOT NULL AND T.ASSIGNMENT_TO <>  0 THEN                            ")
				.append(" (SELECT DISTINCT EMP.FIRST_NAME || '-' || DT.NAME                                          ")
				.append(" FROM EMPLOYEE EMP                                                                          ")
				.append(" INNER JOIN EMPLOYEE_DEPARTMENT_MAPING EDM                                                  ")
				.append(" ON EDM.EMPLOYEE_ID=EMP.EMP_ID AND EDM.STATUS=:STATUS_ID                                    ")
				.append(" INNER JOIN DEPARTMENT_ROLE_MAPPING DRM                                                     ")
				.append(" ON DRM.DEPARTMENT_ROLE_MAPPING_ID=EDM.DEPARTMENT_ROLE_MAPPING_ID                           ")
				.append(" AND DRM.STATUS=:STATUS_ID                                                                  ")
				.append(" INNER JOIN DEPARTMENT DT                                                                   ")
				.append(" ON DT.DEPT_ID=DRM.DEPT_ID AND DT.STATUS_ID=:STATUS_ID                                      ")
				.append(" WHERE EMP.EMP_ID = T.ASSIGNMENT_TO AND EMP.STATUS_ID = :STATUS_ID)                         ")
				.append(" ELSE E.FIRST_NAME || '-'|| DT.NAME                                                         ")
				.append(" END AS PENDING_DEPT_EMP                                                                    ")
				.append(" FROM TICKET T                                                                              ")
				.append(" INNER JOIN                                                                                 ")
				.append(" FLAT_BOOKING FB                                                                            ")
				.append(" ON T.BOOKING_ID = FB.FLAT_BOOK_ID                                                          ")
				.append(" INNER JOIN                                                                                 ")
				.append(" CUSTOMER CUST                                                                              ")
				.append(" ON CUST.CUST_ID=FB.CUST_ID                                                                 ")
				.append(" INNER JOIN FLAT F                                                                          ")
				.append(" ON FB.FLAT_ID = F.FLAT_ID                                                                  ")
				.append(" INNER JOIN FLOOR_DETAILS FD                                                                ")
				.append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID                                                        ")
				.append(" INNER JOIN FLOOR FL                                                                        ")
				.append(" ON FL.FLOOR_ID = FD.FLOOR_ID                                                               ")
				.append(" INNER JOIN BLOCK_DETAILS BD                                                                ")
				.append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID                                                       ")
				.append(" INNER JOIN BLOCK BL                                                                        ")
				.append(" ON BL.BLOCK_ID = BD.BLOCK_ID                                                               ")
				.append(" INNER JOIN SITE S                                                                          ")
				.append(" ON BD.SITE_ID = S.SITE_ID                                                                  ")
				.append(" INNER JOIN                                                                                 ")
				.append(" TICKET_TYPE_DETAILS TYD                                                                    ")
				.append(" ON T.TICKET_TYPE_DETAILS_ID = TYD.TICKET_TYPE_DETAILS_ID                                   ")
				.append(" INNER JOIN TICKET_TYPE TT                                                                  ")
				.append(" ON TT.TICKET_TYPE_ID = TYD.TICKET_TYPE_ID                                                  ")
				.append(" INNER JOIN EMPLOYEE_DETAILS ED                                                             ")
				.append(" ON TYD.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID                                             ")
				.append(" INNER JOIN EMPLOYEE E                                                                      ")
				.append(" ON ED.EMPLOYEE_ID = E.EMP_ID                                                               ")
				.append(" INNER JOIN DEPARTMENT DT                                                                   ")
				.append(" ON DT.DEPT_ID=TYD.DEPARTMENT_ID                                                            ")                                                 
				.append(" LEFT JOIN DEPARTMENT DEPT                                                                  ")
				.append(" ON T.DEPARTMENT_ID = DEPT.DEPT_ID                                                          ")
				.append(" LEFT JOIN TICKET_MAIN_TYPE TMT                                                             ")
				.append(" ON TT.TICKET_MAIN_TYPE_ID = TMT.ID                                                         ")
				.append(" WHERE T.STATUS = :STATUS_ID                                                                ")
				.append(" AND T.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE                                         ")
				.append(" AND TYD.DEPARTMENT_ID IN (:DEPARTMENT_IDS)                                                 ")
				.append(" ORDER BY T.CREATED_DATE DESC                                                               ")
				.toString();
		
		
		/* QRY_TO_GET_ESCALATION_LEVEL_DETAILS - FOR TICKET RECEIPT */
		public static final String QRY_TO_GET_ESCALATION_LEVEL_DETAILS  = new StringBuilder(" SELECT                 ")
				.append(" DISTINCT EMP.FIRST_NAME AS ESCALATION_LEVEL_EMP, EMP.EMP_ID                                ")
				.append(" FROM TICKET_ESC_LEVEL_EMP_MAP TELEM                                                        ")
				.append(" JOIN TICKET_ESCA_LVL_MAP TELM                                                              ")
				.append(" ON(TELM.ID=TELEM.TICKET_ESC_LVL_MAP_ID AND TELM.STATUS_ID=:STATUS_ID)                      ")
				.append(" JOIN TICKET_ESCA_EXT_APPROVAL_LEVAL TEEAL                                                  ")
				.append(" ON(TEEAL.ID=TELM.TICKET_ESC_APR_LVL_ID AND TEEAL.STATUS=:STATUS_ID)                        ")
				.append(" JOIN TICKET_TYPE_DETAILS TTD                                                               ")
				.append(" ON(TTD.TICKET_TYPE_ID=TEEAL.TICKET_TYPE_ID AND TTD.STATUS=:STATUS_ID)                      ")
				.append(" JOIN EMPLOYEE EMP                                                                          ")
				.append(" ON(EMP.EMP_ID=TELEM.EMPLOYEE_ID AND EMP.STATUS_ID=:STATUS_ID)                              ")
				.append(" WHERE TELEM.STATUS_ID=:STATUS_ID                                                           ")
				.append(" AND TTD.DEPARTMENT_ID IN (:DEPARTMENT_IDS)                                                 ")
				.append(" ORDER BY EMP.FIRST_NAME                                                                    ")
				.toString();
		
		/* CAR PARKING ALLOTMENT */
		/* QRY_TO_GET_CAR_PARKING_BASEMENT_DETAILS for alloting car parking slot to customer */
		public static final String QRY_TO_GET_CAR_PARKING_BASEMENT_DETAILS  = new StringBuilder(" SELECT DISTINCT    ")
				.append(" CPBM.BASEMENT_ID,                                                                          ")
				.append(" CPBM.BASEMENT_NAME,                                                                        ")
				.append(" CPBM.STATUS_ID,                                                                            ")
				.append(" CPBM.CREATED_BY,                                                                           ")
				.append(" CPBM.CREATED_DATE,                                                                         ")
				.append(" CPBM.SITE_ID                                                                               ")
				.append(" FROM CARPARKING_BASEMENTS CPBM                                                             ")
				.append(" WHERE CPBM.STATUS_ID=:STATUS_ID                                                            ")
				.append(" AND CPBM.SITE_ID=:SITE_ID                                                                  ")
				.append(" ORDER BY CPBM.BASEMENT_NAME                                                                ")
				.toString();
		
		/* QRY_TO_GET_CAR_PARKING_SLOT_DETAILS for alloting car parking slot to customer */
		public static final String QRY_TO_GET_CAR_PARKING_SLOT_DETAILS  = new StringBuilder(" SELECT DISTINCT        ")
				.append(" CPSL.SLOT_ID,                                                                              ")  
				.append(" CPSL.SLOT_NAME,                                                                            ")
				.append(" CPSL.STATUS_ID,                                                                            ")
				.append(" CPSL.CREATED_BY,                                                                           ")
				.append(" CPSL.CREATED_DATE,                                                                         ")
				.append(" CPSL.SLOT_STATUS_ID,                                                                       ")
				.append(" CPBM.BASEMENT_ID,                                                                          ")
				.append(" CPBM.SITE_ID                                                                               ")
				.append(" FROM CARPARKING_SLOTS CPSL                                                                 ")
				.append(" JOIN CARPARKING_BASEMENTS CPBM                                                             ")
				.append(" ON(CPBM.BASEMENT_ID=CPSL.BASEMENT_ID)                                                      ")
				.append(" WHERE CPBM.STATUS_ID=:STATUS_ID                                                            ")
				.append(" AND CPSL.STATUS_ID=:STATUS_ID                                                              ")
				.append(" AND CPSL.SLOT_STATUS_ID=:SLOT_STATUS_ID                                                    ")
				.append(" AND CPSL.BASEMENT_ID=:BASEMENT_ID                                                          ")
				.append(" ORDER BY CPSL.SLOT_NAME                                                                    ")
				.toString();
		
		
		/* QRY_TO_UPDATE_CAR_PARKING_SLOT_STATUS for updating car parking slot status Allot */
		public static final String QRY_TO_UPDATE_CAR_PARKING_SLOT_STATUS  = new StringBuilder(" UPDATE               ")
				.append(" CARPARKING_SLOTS SET                                                                       ")
				.append(" SLOT_STATUS_ID=:SLOT_STATUS_ID,                                                            ")
				.append(" MODIFIED_BY=:EMP_ID,                                                                       ")
				.append(" MODIFIED_DATE=SYSDATE                                                                      ")
				.append(" WHERE SLOT_ID=:SLOT_ID                                                                     ")
				.append(" AND STATUS_ID=:STATUS_ID                                                                   ")
				.toString();
		
		/* QRY_TO_INSERT_CAR_PARKING_ALLOTMENT_DETAILS for inserting Car Parking Allotment Details */
		public static final String QRY_TO_INSERT_CAR_PARKING_ALLOTMENT_DETAILS  = new StringBuilder(" INSERT INTO    ")
				.append(" CARPARKING_ALLOTMENT(ALLOTMENT_ID,                                                         ")
				.append(" SLOT_ID,                                                                                   ")
				.append(" STATUS_ID,                                                                                 ")
				.append(" CREATED_BY,                                                                                ")
				.append(" CREATED_DATE,                                                                              ")
				.append(" FLAT_BOOK_ID,                                                                              ")
				.append(" ALLOTMENT_LETTER_PATH,                                                                     ")
				.append(" ALLOTMENT_DATE)                                                                            ")
				.append(" VALUES(CARPARKING_ALLOTMENT_SEQ.NEXTVAL,                                                   ")
				.append(" :slotId,                                                                                   ")
				.append(" :statusId,                                                                                 ")
				.append(" :createdBy,                                                                                ")
				.append(" SYSDATE,                                                                                   ")
				.append(" :flatBookId,                                                                               ")
				.append(" :allotmentLetterPath,                                                                      ")
				.append(" SYSDATE)                                                                                   ")
				.toString();
		
		/* QRY_TO_GET_CAR_PARKING_ALLOTMENT_PDF_DETAILS for generate pdf to customer */
		public static final String QRY_TO_GET_CAR_PARKING_ALLOTMENT_PDF_DETAILS  = new StringBuilder(" SELECT DISTINCT ")
				.append(" CPSL.SLOT_NAME,                                                                            ")
				.append(" CPBM.BASEMENT_NAME,                                                                        ")
				.append(" FT.FLAT_NO,                                                                                ")
				.append(" CUST.FIRST_NAME AS CUST_NAME,                                                              ")
				.append(" UPPER(ST.NAME) AS SITE_NAME,                                                               ")
				.append(" INITCAP(AD.SURVEY_NO || ', ' || AD.STREET || ', ' || AD.DISTRICT                           ")
				.append(" || ', ' || AD.AREA || ', ' || AD.CITY || '-' || AD.PINCODE) AS SITE_ADDRESS,               ")
				.append(" FB.FLAT_BOOK_ID,                                                                           ")
				.append(" ST.SITE_ID,                                                                                ")
				.append(" CPSL.SLOT_ID,                                                                              ")
				.append(" FTSO.FLATS_SALE_OWNERS_ID,                                                                 ")
				.append(" FTSO.FLAT_SALE_OWNER                                                                       ")
				.append(" FROM CARPARKING_SLOTS CPSL                                                                 ")
				.append(" JOIN CARPARKING_BASEMENTS CPBM                                                             ")
				.append(" ON(CPBM.BASEMENT_ID=CPSL.BASEMENT_ID)                                                      ")
				.append(" JOIN FLAT_BOOKING FB                                                                       ")
				.append(" ON(FB.FLAT_BOOK_ID=:FLAT_BOOK_ID)                                                          ")
				.append(" JOIN CUSTOMER CUST                                                                         ")
				.append(" ON(CUST.CUST_ID=FB.CUST_ID)                                                                ")
				.append(" JOIN FLAT FT                                                                               ")
				.append(" ON(FT.FLAT_ID=FB.FLAT_ID)                                                                  ")
				.append(" JOIN FLOOR_DETAILS FD                                                                      ")
				.append(" ON(FD.FLOOR_DET_ID=FT.FLOOR_DET_ID)                                                        ")
				.append(" JOIN BLOCK_DETAILS BD                                                                      ")
				.append(" ON(BD.BLOCK_DET_ID=FD.BLOCK_DET_ID)                                                        ")              
				.append(" JOIN SITE ST                                                                               ")              
				.append(" ON(ST.SITE_ID=BD.SITE_ID)                                                                  ")  
				.append(" JOIN ADDRESS AD                                                                            ")
				.append(" ON(AD.ADDRESS_ID=ST.ADDRESS_ID)                                                            ")
				.append(" JOIN FLAT_DETAILS FTD                                                                      ")
				.append(" ON(FTD.FLAT_ID=FB.FLAT_ID)                                                                 ")
				.append(" LEFT JOIN FLATS_SALE_OWNERS FTSO                                                           ")
				.append(" ON(FTSO.FLATS_SALE_OWNERS_ID=FTD.FLATS_SALE_OWNERS_ID)                                     ")
				.append(" WHERE CPSL.SLOT_ID=:SLOT_ID                                                                ")
				.toString();
		
		/* QRY_TO_GET_ALL_CAR_PARKING_ALLOTMENT_DETAILS for getting All Allotment Details Except Cancelled */
		public static final String QRY_TO_GET_ALL_CAR_PARKING_ALLOTMENT_DETAILS  = new StringBuilder(" SELECT DISTINCT ")
				.append(" CPSL.SLOT_ID,                                                                              ") 
				.append(" CPSL.SLOT_NAME,                                                                            ")   
				.append(" CPBM.SITE_ID,                                                                              ")   
				.append(" STS.STATUS_ID AS SLOT_STATUS_ID,                                                           ")   
				.append(" STS.STATUS AS SLOT_STATUS_NAME,                                                            ")   
				.append(" CPBM.BASEMENT_ID,                                                                          ")   
				.append(" CPBM.BASEMENT_NAME,                                                                        ")   
				.append(" CPAL.ALLOTMENT_ID,                                                                         ")   
				.append(" CPAL.FLAT_BOOK_ID,                                                                         ")   
				.append(" CPAL.ALLOTMENT_LETTER_PATH,                                                                ")   
				.append(" CPAL.ALLOTMENT_DATE,                                                                       ")   
				.append(" CPAL.STATUS_ID AS ALLOTMENT_STATUS_ID,                                                     ")   
				.append(" CPAL.CREATED_BY,                                                                           ")   
				.append(" CPAL.CREATED_DATE,                                                                         ")   
				.append(" CUST.FIRST_NAME AS CUST_NAME,                                                              ")   
				.append(" FT.FLAT_NO AS FLAT_NO,                                                                     ")   
				.append(" BL.NAME AS BLOCK_NAME,                                                                     ")   
				.append(" ST.NAME AS SITE_NAME,                                                                      ")   
				.append(" CASE                                                                                       ")   
				.append(" WHEN CPAL.CREATED_DATE IS NULL THEN 0                                                      ")   
				.append(" ELSE 1                                                                                     ")   
				.append(" END AS SORTING_ORDER,                                                                      ")
				.append(" CSLEM.EMP_ID AS APPROVER_EMP_ID,                                                           ")
				.append(" CPA.COMMENTS AS APPROVAL_COMMENTS                                                          ")
				.append(" FROM CARPARKING_SLOTS CPSL                                                                 ")   
				.append(" JOIN CARPARKING_BASEMENTS CPBM                                                             ")   
				.append(" ON(CPBM.BASEMENT_ID=CPSL.BASEMENT_ID)                                                      ")   
				.append(" JOIN STATUS STS                                                                            ")   
				.append(" ON(STS.STATUS_ID=CPSL.SLOT_STATUS_ID)                                                      ")   
				.append(" LEFT JOIN CARPARKING_ALLOTMENT CPAL                                                        ")   
				.append(" ON(CPAL.SLOT_ID=CPSL.SLOT_ID AND CPAL.STATUS_ID <> :ALLOTMENT_STATUS_ID)                   ")   
				.append(" LEFT JOIN FLAT_BOOKING FB                                                                  ")   
				.append(" ON(FB.FLAT_BOOK_ID=CPAL.FLAT_BOOK_ID)                                                      ")   
				.append(" LEFT JOIN CUSTOMER CUST                                                                    ")   
				.append(" ON(CUST.CUST_ID=FB.CUST_ID)                                                                ")   
				.append(" LEFT JOIN FLAT FT                                                                          ")   
				.append(" ON(FT.FLAT_ID=FB.FLAT_ID)                                                                  ")   
				.append(" LEFT JOIN FLOOR_DETAILS FD                                                                 ")   
				.append(" ON(FD.FLOOR_DET_ID=FT.FLOOR_DET_ID)                                                        ")   
				.append(" LEFT JOIN BLOCK_DETAILS BD                                                                 ")   
				.append(" ON(BD.BLOCK_DET_ID=FD.BLOCK_DET_ID)                                                        ")     
				.append(" LEFT JOIN SITE ST                                                                          ")   
				.append(" ON(ST.SITE_ID=BD.SITE_ID)                                                                  ")   
				.append(" LEFT JOIN BLOCK BL                                                                         ")   
				.append(" ON(BL.BLOCK_ID=BD.BLOCK_ID)                                                                ")
				.append(" LEFT JOIN CARPARKING_APPROVAL CPA                                                          ")
				.append(" ON(CPA.ALLOTMENT_ID=CPAL.ALLOTMENT_ID AND CPA.STATUS_ID=:APPROVAL_STATUS_ID)               ")
				.append(" LEFT JOIN CARPARKING_APPROVAL_LEVELS CAL                                                   ")
				.append(" ON(CAL.CP_APR_LEV_ID=CPA.CP_APR_LEV_ID)                                                    ")
				.append(" LEFT JOIN CARPARKING_SET_OF_LEVELS CSL                                                     ")
				.append(" ON(CSL.CP_SET_OF_LEV_ID=CAL.CP_SET_OF_LEV_ID                                               ")
				.append(" AND CSL.STATUS_ID=:STATUS_ID AND CAL.STATUS_ID=:STATUS_ID)                                 ")
				.append(" LEFT JOIN CARPARKING_SET_OF_LEVELS_EMP_MAP CSLEM                                           ")
				.append(" ON(CSLEM.CP_SET_OF_LEV_ID=CSL.CP_SET_OF_LEV_ID AND CSLEM.STATUS_ID=:STATUS_ID)             ")
				.append(" WHERE CPSL.STATUS_ID=:STATUS_ID                                                            ")   
				.append(" AND CPBM.STATUS_ID=:STATUS_ID                                                              ")   
				.append(" AND (CPAL.STATUS_ID <> :INACTIVE_STATUS_ID OR CPAL.STATUS_ID IS NULL)                      ")
				.toString();
		
		/* QRY_TO_GET_CANCELLED_CAR_PARKING_ALLOTMENT_DETAILS for getting Cancelled Allotment Details */
		public static final String QRY_TO_GET_CANCELLED_CAR_PARKING_ALLOTMENT_DETAILS  = new StringBuilder(" SELECT DISTINCT ")
				.append(" CPSL.SLOT_ID,                                                                                      ")
				.append(" CPSL.SLOT_NAME,                                                                                    ")
				.append(" CPBM.SITE_ID,                                                                                      ")
				.append(" STS.STATUS_ID AS SLOT_STATUS_ID,                                                                   ")
				.append(" STS.STATUS AS SLOT_STATUS_NAME,                                                                    ")
				.append(" CPBM.BASEMENT_ID,                                                                                  ")
				.append(" CPBM.BASEMENT_NAME,                                                                                ")
				.append(" CPAL.ALLOTMENT_ID,                                                                                 ")
				.append(" CPAL.FLAT_BOOK_ID,                                                                                 ")
				.append(" CPAL.ALLOTMENT_LETTER_PATH,                                                                        ")
				.append(" CPAL.ALLOTMENT_DATE,                                                                               ")
				.append(" CPAL.STATUS_ID AS ALLOTMENT_STATUS_ID,                                                             ")
				.append(" CPAL.CREATED_BY,                                                                                   ")
				.append(" CPAL.CREATED_DATE,                                                                                 ")
				.append(" CUST.FIRST_NAME AS CUST_NAME,                                                                      ")
				.append(" FT.FLAT_NO AS FLAT_NO,                                                                             ")
				.append(" BL.NAME AS BLOCK_NAME,                                                                             ")
				.append(" ST.NAME AS SITE_NAME,                                                                              ")
				.append(" CASE                                                                                               ")
				.append(" WHEN CPAL.CREATED_DATE IS NULL THEN 0                                                              ")
				.append(" ELSE 1                                                                                             ")
				.append(" END AS SORTING_ORDER,                                                                              ")
				.append(" NULL AS APPROVER_EMP_ID,                                                                           ")
				.append(" NULL AS APPROVAL_COMMENTS                                                                          ")
				.append(" FROM CARPARKING_SLOTS CPSL                                                                         ")
				.append(" JOIN CARPARKING_BASEMENTS CPBM                                                                     ")
				.append(" ON(CPBM.BASEMENT_ID=CPSL.BASEMENT_ID)                                                              ")
				.append(" JOIN CARPARKING_ALLOTMENT CPAL                                                                     ")
				.append(" ON(CPAL.SLOT_ID=CPSL.SLOT_ID)                                                                      ")
				.append(" JOIN STATUS STS                                                                                    ")
				.append(" ON(STS.STATUS_ID=CPAL.STATUS_ID)                                                                   ")
				.append(" JOIN FLAT_BOOKING FB                                                                               ")
				.append(" ON(FB.FLAT_BOOK_ID=CPAL.FLAT_BOOK_ID)                                                              ")
				.append(" JOIN CUSTOMER CUST                                                                                 ")
				.append(" ON(CUST.CUST_ID=FB.CUST_ID)                                                                        ")
				.append(" JOIN FLAT FT                                                                                       ")
				.append(" ON(FT.FLAT_ID=FB.FLAT_ID)                                                                          ")
				.append(" JOIN FLOOR_DETAILS FD                                                                              ")
				.append(" ON(FD.FLOOR_DET_ID=FT.FLOOR_DET_ID)                                                                ")
				.append(" JOIN BLOCK_DETAILS BD                                                                              ")
				.append(" ON(BD.BLOCK_DET_ID=FD.BLOCK_DET_ID)                                                                ")  
				.append(" JOIN SITE ST                                                                                       ")
				.append(" ON(ST.SITE_ID=BD.SITE_ID)                                                                          ")
				.append(" JOIN BLOCK BL                                                                                      ")
				.append(" ON(BL.BLOCK_ID=BD.BLOCK_ID)                                                                        ")
				.append(" WHERE CPSL.STATUS_ID=:STATUS_ID                                                                    ")
				.append(" AND CPBM.STATUS_ID=:STATUS_ID                                                                      ")
				.append(" AND CPAL.STATUS_ID=:ALLOTMENT_STATUS_ID                                                            ")
				.toString();
		
		/* QRY_TO_GET_CUSTOMER_CAR_PARKING_ALLOTMENT_DETAILS getting Allotment Details for Customer */
		public static final String QRY_TO_GET_CUSTOMER_CAR_PARKING_ALLOTMENT_DETAILS  = new StringBuilder(" SELECT ")
				.append(" CPAL.ALLOTMENT_ID,                                                                       ")
				.append(" CPAL.SLOT_ID,                                                                            ")
				.append(" CPAL.STATUS_ID,                                                                          ")
				.append(" CPAL.CREATED_BY,                                                                         ")
				.append(" CPAL.CREATED_DATE,                                                                       ")
				.append(" CPAL.FLAT_BOOK_ID,                                                                       ")
				.append(" CPAL.ALLOTMENT_LETTER_PATH,                                                              ")
				.append(" CPAL.ALLOTMENT_DATE                                                                      ")
				.append(" FROM CARPARKING_ALLOTMENT CPAL                                                           ")
				.append(" WHERE CPAL.FLAT_BOOK_ID=:FLAT_BOOK_ID                                                    ")
				.append(" AND CPAL.STATUS_ID IN (:STATUS_IDS)                                                      ")
				.append(" ORDER BY CPAL.CREATED_DATE DESC                                                          ")
				.toString();
		
		/* QRY_TO_UPDATE_CARPARKING_ALLOTMENT_STATUS for updating car parking allotment status */
		public static final String QRY_TO_UPDATE_CARPARKING_ALLOTMENT_STATUS  = new StringBuilder(" UPDATE ")
				.append(" CARPARKING_ALLOTMENT                                                             ")
				.append(" SET MODIFIED_DATE=SYSDATE,                                                       ")
				.append(" MODIFIED_BY=:EMP_ID,                                                             ")
				.append(" STATUS_ID=:STATUS_ID                                                             ") 
				.append(" WHERE STATUS_ID <> :INACTIVE_STATUS_ID                                           ")
				.toString();
		
		/* QRY_TO_UPDATE_CARPARKING_ALLOTMENT_DETAILS for updating car parking allotment details */
		public static final String QRY_TO_UPDATE_CARPARKING_ALLOTMENT_DETAILS  = new StringBuilder(" UPDATE ")
				.append(" CARPARKING_ALLOTMENT                                                              ")
				.append(" SET MODIFIED_DATE=SYSDATE,                                                        ")
				.append(" MODIFIED_BY=:EMP_ID,                                                              ")
				.append(" STATUS_ID=:STATUS_ID,                                                             ")
				.append(" ALLOTMENT_LETTER_PATH=:ALLOTMENT_LETTER_PATH,                                     ")
				.append(" ALLOTMENT_DATE=SYSDATE                                                            ") 
				.append(" WHERE STATUS_ID <> :INACTIVE_STATUS_ID                                            ")
				.toString();
		
		/* QRY_TO_GET_CARPARKING_APPROVAL_LEVELS for getting car parking approval level details */
		public static final String QRY_TO_GET_CARPARKING_APPROVAL_LEVELS  = new StringBuilder(" SELECT      ")
				.append(" CAL.CP_APR_LEV_ID,                                                                ")
				.append(" CAL.CP_SET_OF_LEV_ID,                                                             ")
				.append(" CAL.NXT_CP_SET_OF_LEV_ID,                                                         ")
				.append(" CSLEM.CP_SET_OF_LVL_EMP_MAP_ID,                                                   ")
				.append(" CSLEM.EMP_ID,                                                                     ")
				.append(" EMP.FIRST_NAME AS EMP_NAME,                                                       ")
				.append(" EMP.EMAIL AS EMP_MAIL                                                             ")
				.append(" FROM CARPARKING_APPROVAL_LEVELS CAL                                               ")
				.append(" JOIN CARPARKING_SET_OF_LEVELS CSL                                                 ")
				.append(" ON(CSL.CP_SET_OF_LEV_ID=CAL.CP_SET_OF_LEV_ID                                      ")
				.append(" AND CSL.STATUS_ID=:STATUS_ID AND CAL.STATUS_ID=:STATUS_ID)                        ")
				.append(" JOIN CARPARKING_SET_OF_LEVELS_EMP_MAP CSLEM                                       ")
				.append(" ON(CSLEM.CP_SET_OF_LEV_ID=CSL.CP_SET_OF_LEV_ID AND CSLEM.STATUS_ID=:STATUS_ID)    ")
				.append(" JOIN EMPLOYEE EMP                                                                 ")
				.append(" ON(EMP.EMP_ID=CSLEM.EMP_ID)                                                       ")
				.toString();
		
		/* QRY_TO_SAVE_CARPARKING_APPROVAL_DETAILS for saving car parking approval details */
		public static final String QRY_TO_SAVE_CARPARKING_APPROVAL_DETAILS  = new StringBuilder(" INSERT    ")
				.append(" INTO CARPARKING_APPROVAL                                                          ")
				.append(" (CP_APR_ID,                                                                       ")
				.append(" ALLOTMENT_ID,                                                                     ")
				.append(" CP_APR_LEV_ID,                                                                    ")
				.append(" COMMENTS,                                                                         ")
				.append(" CREATED_DATE,                                                                     ")
				.append(" CREATED_BY,                                                                       ")
				.append(" STATUS_ID)                                                                        ")
				.append(" VALUES(CARPARKING_APPROVAL_SEQ.NEXTVAL,                                           ")
				.append(" :allotmentId,                                                                     ")
				.append(" :cpAprLevId,                                                                      ")
				.append(" :comments,                                                                        ")
				.append(" SYSDATE,                                                                          ")
				.append(" :createdBy,                                                                       ")
				.append(" :statusId)                                                                        ")
				.toString();
		
		/* QRY_TO_GET_CARPARKING_APPROVAL_DETAILS for getting car parking approval details */
		public static final String QRY_TO_GET_CARPARKING_APPROVAL_DETAILS  = new StringBuilder(" SELECT    ")
				.append(" CPA.CP_APR_ID,                                                                   ")
				.append(" CPA.ALLOTMENT_ID,                                                                ")
				.append(" CPA.CP_APR_LEV_ID,                                                               ")
				.append(" CPA.COMMENTS,                                                                    ")
				.append(" CPA.CREATED_DATE,                                                                ")
				.append(" CPA.CREATED_BY,                                                                  ")
				.append(" CPA.MODIFIED_DATE,                                                               ")
				.append(" CPA.MODIFIED_BY,                                                                 ")
				.append(" CPA.STATUS_ID                                                                    ")
				.append(" FROM CARPARKING_APPROVAL CPA                                                     ")
				.append(" WHERE CPA.ALLOTMENT_ID=:ALLOTMENT_ID                                             ")
				.toString();
		
		/* QRY_TO_SAVE_CARPARKING_APPROVAL_STATISTICS for saving car parking approval statistics */
		public static final String QRY_TO_SAVE_CARPARKING_APPROVAL_STATISTICS  = new StringBuilder("INSERT ")
				.append(" INTO CARPARKING_APPROVAL_STATISTICS                                              ")
				.append(" (CP_APR_STCS_ID,                                                                 ")
				.append(" ALLOTMENT_ID,                                                                    ")
				.append(" CP_APR_LEV_ID,                                                                   ")
				.append(" COMMENTS,                                                                        ")
				.append(" CREATED_DATE,                                                                    ")
				.append(" CREATED_BY,                                                                      ")
				.append(" MODIFIED_DATE,                                                                   ")
				.append(" MODIFIED_BY,                                                                     ")
				.append(" STATUS_ID)                                                                       ")
				.append(" VALUES(                                                                          ")
				.append(" CARPARKING_APPROVAL_STATISTICS_SEQ.NEXTVAL,                                      ")
				.append(" :allotmentId,                                                                    ")
				.append(" :cpAprLevId,                                                                     ")
				.append(" :comments,                                                                       ")
				.append(" :createdDate,                                                                    ")
				.append(" :createdBy,                                                                      ")
				.append(" :modifiedDate,                                                                   ")
				.append(" :modifiedBy,                                                                     ")
				.append(" :statusId)                                                                       ")
				.toString();
		
		/* QRY_TO_GET_CARPARKING_ALLOTMENT_EMPLOYEE_MAIL_DETAILs for getting carparking allotment mail details */
		public static final String QRY_TO_GET_CARPARKING_ALLOTMENT_EMPLOYEE_MAIL_DETAILs  = new StringBuilder("SELECT ")
				.append(" CPAL.ALLOTMENT_ID,                                                               ")
				.append(" EMP.EMP_ID,                                                                      ")
				.append(" EMP.FIRST_NAME AS EMP_NAME,                                                      ")
				.append(" EMP.EMAIL AS EMP_MAIL,                                                           ")
				.append(" CPSL.SLOT_NAME,                                                                  ")              
				.append(" CPBM.BASEMENT_NAME,                                                              ")              
				.append(" FT.FLAT_NO,                                                                      ")              
				.append(" CUST.FIRST_NAME AS CUST_NAME,                                                    ")              
				.append(" ST.NAME AS SITE_NAME,                                                            ")                       
				.append(" FB.FLAT_BOOK_ID,                                                                 ")              
				.append(" ST.SITE_ID,                                                                      ")              
				.append(" CPSL.SLOT_ID                                                                     ")
				.append(" FROM CARPARKING_ALLOTMENT CPAL                                                   ")
				.append(" JOIN CARPARKING_SLOTS CPSL                                                       ")
				.append(" ON(CPSL.SLOT_ID=CPAL.SLOT_ID)                                                    ")                 
				.append(" JOIN CARPARKING_BASEMENTS CPBM                                                   ")              
				.append(" ON(CPBM.BASEMENT_ID=CPSL.BASEMENT_ID)                                            ")              
				.append(" JOIN FLAT_BOOKING FB                                                             ")              
				.append(" ON(FB.FLAT_BOOK_ID=CPAL.FLAT_BOOK_ID)                                            ")                  
				.append(" JOIN CUSTOMER CUST                                                               ")              
				.append(" ON(CUST.CUST_ID=FB.CUST_ID)                                                      ")              
				.append(" JOIN FLAT FT                                                                     ")              
				.append(" ON(FT.FLAT_ID=FB.FLAT_ID)                                                        ")              
				.append(" JOIN FLOOR_DETAILS FD                                                            ")
				.append(" ON(FD.FLOOR_DET_ID=FT.FLOOR_DET_ID)                                              ")
				.append(" JOIN BLOCK_DETAILS BD                                                            ")
				.append(" ON(BD.BLOCK_DET_ID=FD.BLOCK_DET_ID)                                              ")              
				.append(" JOIN SITE ST                                                                     ")              
				.append(" ON(ST.SITE_ID=BD.SITE_ID)                                                        ")              
				.append(" JOIN EMPLOYEE EMP                                                                ")
				.append(" ON(EMP.EMP_ID=CPAL.CREATED_BY)                                                   ")          
				.append(" WHERE CPAL.ALLOTMENT_ID=:ALLOTMENT_ID                                            ")
				.toString();
		
		/* QRY_TO_UPDATE_CARPARKING_APPROVAL_DETAILS for updating car parking approval details */
		public static final String QRY_TO_UPDATE_CARPARKING_APPROVAL_DETAILS  = new StringBuilder(" UPDATE ")
				.append(" CARPARKING_APPROVAL CPA SET                                                      ")
				.append(" CPA.COMMENTS=:comments,                                                          ")
				.append(" CPA.MODIFIED_DATE=SYSDATE,                                                       ")
				.append(" CPA.MODIFIED_BY=:modifiedBy,                                                     ")
				.append(" CPA.STATUS_ID=:statusId                                                          ")
				.toString();

				public static final String QRY_TO_UPDATE_MESSENGER_CONVERSATION_VIEW_AS_UNREAD = new StringBuilder()
                .append(" UPDATE MESSENGER_CONVERS_VIEW_STATUS ")
                .append(" SET ")
                .append(" VIEW_STATUS  = :VIEW_STATUS,")
                .append(" MODIFIED_DATE = :MODIFIED_DATE ")
                .append(" WHERE ")
                .append(" MESSENGER_CONVERSATION_ID =:MESSENGER_CONVERSATION_ID ")
                .append(" AND RECIPIENT_TYPE IN (:RECIPIENT_TYPE) ")
                .append(" AND RECIPIENT_ID IN (:RECIPIENT_ID) ")
                .append(" AND STATUS IN (:STATUS) ")
                .toString()
                ;
		
		/* QRY_TO_SEARCH_ALL_CUSTOMER_FLAT_NOS for view Customer with Flat Search */
		public static final String QRY_TO_SEARCH_ALL_CUSTOMER_FLAT_NOS_WITH_STATUS = new StringBuilder(" SELECT DISTINCT ")
				.append(" CUST.CUST_ID AS CUST_ID, FT.FLAT_NO AS FLAT_NO, FT.FLAT_ID, FLATB.FLAT_BOOK_ID, ")
				.append(" (CUST.FIRST_NAME || '-' || FT.FLAT_NO || '-' ||S.STATUS) AS CUST_NAME_FLAT_NO , ")
				.append(" S.STATUS_ID , S.STATUS, ")
				.append(" FLATB.SALESFORCE_BOOKING_ID , ST.SALES_FORCE_SITE_NAME AS SALES_FORCE_SITE_NAME ")
				.append(" FROM CUSTOMER CUST ")
				.append(" JOIN FLAT_BOOKING FLATB ON(FLATB.CUST_ID=CUST.CUST_ID) ")  
				.append(" JOIN FLAT FT ON(FT.FLAT_ID=FLATB.FLAT_ID) ")
				.append(" JOIN FLOOR_DETAILS FLRD ON(FLRD.FLOOR_DET_ID=FT.FLOOR_DET_ID) ")
				.append(" JOIN BLOCK_DETAILS BLCKDT ON(BLCKDT.BLOCK_DET_ID=FLRD.BLOCK_DET_ID) ")
				.append(" JOIN SITE ST ON(ST.SITE_ID=BLCKDT.SITE_ID) ")
				.append(" JOIN STATUS S ON(FLATB.STATUS_ID=S.STATUS_ID)  ")
				.append(" WHERE FT.STATUS_ID=:STATUS_ID AND  ST.SITE_ID=:SITE_ID  ORDER BY CUST_NAME_FLAT_NO ")
				.toString();
		  /* QRY_TO_GET_FLAT_FLAT_BOOKING_FLOOR_BLOCK_SITE_DETAILS  */
				public static final String QRY_TO_GET_FLAT_FLAT_BOOKING_FLOOR_BLOCK_SITE_DETAILS_FOR_ALL_STATUS = new StringBuilder("SELECT DISTINCT ")
						.append(" FD.FLAT_ID,")
						.append(" F.FLAT_NO,")
						.append(" FLD.FLOOR_ID,")
						.append(" FL.NAME AS FLOOR_NAME,")
						.append(" BD.BLOCK_ID,")
						.append(" B.NAME AS BLOCK_NAME,")
						.append(" S.SITE_ID,")
						.append(" AD.STATE_ID AS STATE_ID,")
						.append(" S.NAME AS SITE_NAME, ")
						.append(" FB.FLAT_BOOK_ID, ")
						.append(" FB.CUST_ID,")
						.append(" (CUST.NAME_PREFIX || ' ' || CUST.FIRST_NAME || ' ' || CUST.LAST_NAME) AS CUSTOMER_NAME ")
						.append(" FROM FLAT_DETAILS FD ")
						.append(" INNER JOIN FLAT F ")
						.append(" ON FD.FLAT_ID=F.FLAT_ID ")
						.append(" INNER JOIN FLOOR_DETAILS FLD ")
						.append(" ON FD.FLOOR_DET_ID=FLD.FLOOR_DET_ID ")
						.append(" INNER JOIN FLOOR FL ")
						.append(" ON FLD.FLOOR_ID=FL.FLOOR_ID ")
						.append(" INNER JOIN BLOCK_DETAILS BD ")
						.append(" ON FLD.BLOCK_DET_ID=BD.BLOCK_DET_ID ")
						.append(" INNER JOIN BLOCK B ")
						.append(" ON BD.BLOCK_ID=B.BLOCK_ID ")
						.append(" INNER JOIN SITE S ")
						.append(" ON BD.SITE_ID=S.SITE_ID ")
						.append(" INNER JOIN ADDRESS AD ")
						.append(" ON AD.ADDRESS_ID = S.ADDRESS_ID ")
						.append(" JOIN FLAT_BOOKING FB ")
						.append(" ON(FB.FLAT_ID=F.FLAT_ID ) ")
						.append(" JOIN CUSTOMER CUST ")
						.append(" ON(CUST.CUST_ID=FB.CUST_ID AND CUST.STATUS_ID=:STATUS_ID) ")
						.toString ();
				
				//VENKATESH B 
				//TO GET NEXT APPROVAL ID
				public static final String QRY_TO_GET_NEXT_FIN_APPROVA_ID = new StringBuilder(" SELECT ")
						.append(" FSOAL.NEXT_FIN_SET_OFF_APPR_LVL_ID  ")
						.append(" FROM  FIN_EMP_SET_OFF_LEVEL_MAPPING FEMAPPING ")
						.append(" INNER JOIN FIN_SET_OFF_APPROVAL_LEVEL FSOAL ON (FSOAL.FIN_SET_OFF_LEVEL_ID=FEMAPPING.FIN_SET_OFF_LEVEL_ID) ")
						.append(" INNER JOIN FIN_SET_OFF_LEVEL FSOL ON (FSOL.FIN_SET_OFF_LEVEL_ID=FEMAPPING.FIN_SET_OFF_LEVEL_ID) ")
						.append(" WHERE FSOL.STATUS_ID=:STATUS_ID AND FEMAPPING.STATUS_ID=:STATUS_ID AND FSOL.TYPE=:TYPE ")
						.toString();
				
				 public static final String QRY_TO_INSERT_FIN_MODI_INVOICE_APPR_REJ = new StringBuilder("")
						  .append("INSERT INTO FIN_MODI_INVOICE_APPR_REJ(")
						  .append("MODI_INVOICE_APPR_REJ_ID")
						    .append(",FIN_BOK_FRM_MODI_COST_ID")
						    .append(",ACTION_TYPE")
						    .append(",EMP_ID")
						    .append(",COMMENTS")
						    .append(",CREATED_DATE")
						   .append(") VALUES(")
						    .append("FIN_MODI_INVOICE_APPR_REJ_SEQ.NEXTVAL")
						    .append(",:finBookingFormModiCostId")
						    .append(",:actionType")
						    .append(",:empId")
						    .append(",:comments")
						    .append(",SYSDATE")
						 .append(" )")
						  .toString();
				 public static final String QRY_TO_GET_FIN_PENDING_MOD_INVOICES = new StringBuilder(" SELECT ")
							.append(" FBFMC.BOOKING_FORM_ID, FBFMC.FIN_BOK_FRM_MODI_COST_ID,FBFMC.TAX_AMOUNT,FBFMC.TOTAL_AMOUNT,FBFMC.BASIC_AMOUNT,  ")
							.append(" FBFMC.CREATED_BY,FBFMC.CREATED_DATE,FBFMC.MODIFICATION_STATUS_ID, ")
							.append(" S.SITE_ID,(S.NAME) AS SITE_NAME,(S.SHORT_FORM) AS SITE_SHORT_FORM, ")
							.append(" (C.FIRST_NAME||' '||C.LAST_NAME) AS CUSTOMER_NAME, ")
							.append(" FB.FLAT_ID,FB.CUST_ID,F.FLAT_NO,BD.BLOCK_ID,FL.FLOOR_ID, ")
							.append("(E.FIRST_NAME ||' '||E.LAST_NAME) AS EMP_NAME ")
							.append(" FROM FIN_BOOKING_FORM_MODI_COST FBFMC  ")
							.append(" INNER JOIN FIN_SET_OFF_APPROVAL_LEVEL FSOAL ON(FSOAL.FIN_SET_OFF_APPR_LVL_ID=FBFMC.FIN_SET_OFF_APPR_LVL_ID) ")
							.append(" INNER JOIN FIN_EMP_SET_OFF_LEVEL_MAPPING FESOLM ON (FSOAL.FIN_SET_OFF_LEVEL_ID= FESOLM.FIN_SET_OFF_LEVEL_ID) ")
							.append(" INNER JOIN FIN_SET_OFF_LEVEL FSOL ON(FSOL.FIN_SET_OFF_LEVEL_ID=FESOLM.FIN_SET_OFF_LEVEL_ID) ")
							.append(" INNER JOIN FLAT_BOOKING FB ON(FB.FLAT_BOOK_ID=FBFMC.BOOKING_FORM_ID) ")
							.append(" INNER JOIN FLAT F 		ON FB.FLAT_ID = F.FLAT_ID  ")
							.append(" INNER JOIN FLAT_COST FC ON FB.FLAT_ID = FC.FLAT_ID AND FC.STATUS_ID = 6 ")
							.append(" INNER JOIN FLAT_DETAILS FD ON FD.FLAT_ID = FB.FLAT_ID AND FD.STATUS_ID = 6 ")
							.append(" INNER JOIN FLOOR_DETAILS FD ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  ")
							.append(" INNER JOIN FLOOR FL ON FL.FLOOR_ID = FD.FLOOR_ID ")
							.append(" INNER JOIN BLOCK_DETAILS BD ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID  ")
							.append(" INNER JOIN BLOCK BL ON BL.BLOCK_ID = BD.BLOCK_ID  ")
							.append(" INNER JOIN SITE S ON BD.SITE_ID = S.SITE_ID ")
							.append(" INNER JOIN CUSTOMER C ON FB.CUST_ID=C.CUST_ID ")
							.append(" INNER JOIN EMPLOYEE E ON(E.EMP_ID=FESOLM.EMP_ID) ")
							.append(" WHERE FBFMC.FIN_SET_OFF_APPR_LVL_ID IN (:FIN_SET_OFF_APPR_LVL_ID) ")
							.append(" AND FESOLM.EMP_ID=:EMP_ID  ")
							.append(" AND FBFMC.MODIFICATION_STATUS_ID IN (:MODIFICATION_STATUS_ID) ")
							.append(" AND FBFMC.STATUS_ID IN (:STATUS_ID) ")
							.append(" AND FBFMC.BOOKING_FORM_ID ")
							.append(" IN(SELECT DISTINCT FBFMC.BOOKING_FORM_ID  ")
							.append(" FROM FIN_BOOKING_FORM_MODI_COST FBFMC  INNER JOIN FLAT_BOOKING FB ON(FB.FLAT_BOOK_ID=FBFMC.BOOKING_FORM_ID) ")
							.append(" INNER JOIN FLAT F 		ON FB.FLAT_ID = F.FLAT_ID  ")
							.append(" INNER JOIN FLAT_COST FC ON FB.FLAT_ID = FC.FLAT_ID AND FC.STATUS_ID = 6 ")
							.append(" INNER JOIN FLAT_DETAILS FD ON FD.FLAT_ID = FB.FLAT_ID AND FD.STATUS_ID = 6 ")
							.append(" INNER JOIN FLOOR_DETAILS FD ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  ")
							.append(" INNER JOIN FLOOR FL ON FL.FLOOR_ID = FD.FLOOR_ID  ")
							.append(" INNER JOIN BLOCK_DETAILS BD ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID  ")
							.append(" INNER JOIN BLOCK BL ON BL.BLOCK_ID = BD.BLOCK_ID  ")
							.append(" INNER JOIN SITE S ON BD.SITE_ID = S.SITE_ID ")
							.toString();
					//VENKATESH B 
					//TO GET APPROVAL ID
					public static final String QRY_TO_GET_FIN_APPROVA_ID = new StringBuilder(" SELECT ")
							.append(" FIN_SET_OFF_APPR_LVL_ID   ")
							.append(" FROM FIN_SET_OFF_APPROVAL_LEVEL FSOAL ")
							.append(" INNER JOIN FIN_EMP_SET_OFF_LEVEL_MAPPING FESOLM ON (FESOLM.FIN_SET_OFF_LEVEL_ID=FSOAL.FIN_SET_OFF_LEVEL_ID) ")
							.append(" INNER JOIN FIN_SET_OFF_LEVEL FSOL ON (FESOLM.FIN_SET_OFF_LEVEL_ID=FSOL.FIN_SET_OFF_LEVEL_ID) ")
							.append(" WHERE FESOLM.EMP_ID=:EMP_ID ")
							.append(" AND FESOLM.STATUS_ID=:STATUS_ID  ")
							.append(" AND  FSOL.TYPE=:TYPE  ")
							.toString();
					 public static final String QRY_TO_GET_FIN_PENDING_MOD_INVOICE_DETAILS = new StringBuilder(" SELECT ")
								.append(" FBFMC.BOOKING_FORM_ID, FBFMC.FIN_BOK_FRM_MODI_COST_ID,  ")
								.append(" FBFMC.TAX_AMOUNT,FBFMC.TOTAL_AMOUNT,FBFMC.BASIC_AMOUNT, ")
								.append(" FBFMC.CREATED_BY,FBFMC.CREATED_DATE,FBFMC.MODIFICATION_STATUS_ID, ")
								.append(" (SELECT (E.FIRST_NAME ||' '||E.LAST_NAME) FROM EMPLOYEE E WHERE E.EMP_ID=FBFMC.CREATED_BY)  AS CREATED_EMP_NAME, ")
								.append(" FBFMCD.FIN_BOK_MODI_COST_DTLS_ID, ")
								.append(" FBFMCD.MODIFICATION_DESC,FBFMCD.UNITS, ")
								.append(" FBFMCD.QUANTITY,FBFMCD.RATE,FBFMCD.MODIFICATION_AMOUNT, ")
								.append(" S.SITE_ID,S.NAME AS SITE_NAME,S.SHORT_FORM AS SITE_SHORT_FORM, ")
								.append(" C.FIRST_NAME||' '||C.LAST_NAME AS CUSTOMER_NAME, ")
								.append(" FB.FLAT_ID,FB.CUST_ID,F.FLAT_NO,BD.BLOCK_ID,FL.FLOOR_ID,(E.FIRST_NAME ||' '||E.LAST_NAME) AS EMP_NAME ")
								.append(" FROM FIN_BOOKING_FORM_MODI_COST FBFMC  ")
								.append(" INNER JOIN FIN_BOOKING_FORM_MODI_COST_DTLS FBFMCD ON (FBFMC.FIN_BOK_FRM_MODI_COST_ID=FBFMCD.FIN_BOK_FRM_MODI_COST_ID) ")
								.append(" INNER JOIN FIN_BOK_FRM_MODI_COST_TAX FBFMCT ON (FBFMC.FIN_BOK_FRM_MODI_COST_ID=FBFMCT.FIN_BOK_FRM_MODI_COST_ID) ")
								.append(" INNER JOIN FIN_SET_OFF_APPROVAL_LEVEL FSOAL ON(FSOAL.FIN_SET_OFF_APPR_LVL_ID=FBFMC.FIN_SET_OFF_APPR_LVL_ID) ")
								.append(" INNER JOIN FIN_EMP_SET_OFF_LEVEL_MAPPING FESOLM ON (FSOAL.FIN_SET_OFF_LEVEL_ID= FESOLM.FIN_SET_OFF_LEVEL_ID) ")
								.append(" INNER JOIN FIN_SET_OFF_LEVEL FSOL ON(FSOL.FIN_SET_OFF_LEVEL_ID=FESOLM.FIN_SET_OFF_LEVEL_ID) ")
								.append(" INNER JOIN FLAT_BOOKING FB ON(FB.FLAT_BOOK_ID=FBFMC.BOOKING_FORM_ID) ")
								.append(" INNER JOIN FLAT F ON FB.FLAT_ID = F.FLAT_ID  ")
								.append(" INNER JOIN FLAT_COST FC ON FB.FLAT_ID = FC.FLAT_ID AND FC.STATUS_ID = 6 ")
								.append(" INNER JOIN FLAT_DETAILS FD ON FD.FLAT_ID = FB.FLAT_ID AND FD.STATUS_ID = 6 ")
								.append(" INNER JOIN FLOOR_DETAILS FD ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  ")
								.append(" INNER JOIN FLOOR FL ON FL.FLOOR_ID = FD.FLOOR_ID  ")
								.append(" INNER JOIN BLOCK_DETAILS BD ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID  ")
								.append(" INNER JOIN BLOCK BL ON BL.BLOCK_ID = BD.BLOCK_ID  ")
								.append(" INNER JOIN SITE S ON BD.SITE_ID = S.SITE_ID ")
								.append(" INNER JOIN CUSTOMER C ON FB.CUST_ID=C.CUST_ID ")
								.append(" INNER JOIN EMPLOYEE E ON(E.EMP_ID=FESOLM.EMP_ID) ")
								.toString();
					 
					
}

