package com.sumadhura.employeeservice.enums;

public enum SqlQueryTwo {
	;
	
	/* QRY_TO_GET_OLD_FLAT_BOOKING_DETAILS getting Old Booking Details by Salesforce Booking Id */
    public static final String QRY_TO_GET_OLD_FLAT_BOOKING_DETAILS = new StringBuilder(" SELECT ")
    		.append(" FB.FLAT_BOOK_ID AS FLAT_BOOK_ID,                                          ")
            .append(" FB.CUST_ID AS CUST_ID,                                                    ")
            .append(" FB.FLAT_ID AS  FLAT_ID,                                                   ")
            .append(" FB.REG_DATE AS REG_DATE,                                                  ")
            .append(" FB.PAYMENT_ID AS PAYMENT_ID,                                              ")
            .append(" FB.STATUS_ID   AS  STATUS_ID,                                             ")
            .append(" FB.CREATED_DATE AS CREATED_DATE,                                          ")
            .append(" FB.BOOKING_RECIEPT_FRONT AS BOOKING_RECIEPT_FRONT,                        ")
            .append(" FB.BOOKING_RECIEPT_BACK  AS   BOOKING_RECIEPT_BACK,                       ")
            .append(" FB.BOOKING_DATE  AS BOOKING_DATE,                                         ")
            .append(" FT.FLAT_NO  AS FLAT_NO                                                    ")
            .append(" ,FB.AGREEMENT_DATE                                                        ")
            .append(" ,NVL(FB.MILESTONE_DAYS,0) AS MILESTONE_DAYS                               ")
            .append(" ,FB.SALE_DEED_NO                                                          ")
            .append(" ,FB.SALE_DEED_DATE                                                        ")
            .append(" ,FB.SALE_DEED_VALUE                                                       ")
            .append(" ,FB.REGISTRATION_STATUS                                                   ")
            .append(" ,FB.SALE_DEED_CD_NO                                                       ")
            .append(" ,CBI.CUST_BOOK_INFO_ID                                                    ")
            .append(" ,CBI.CUST_APP_ID                                                          ")
            .append(" ,CBI.CUST_PROFFISIONAL_ID                                                 ")
            .append(" ,BD.BLOCK_ID                                                              ")
            .append(" ,ST.SITE_ID			                                ")//,ST.NAME AS SITE_NAME
            .append("  FROM FLAT_BOOKING FB                                                     ")
            .append("  JOIN FLAT FT                                                             ")
            .append("  ON(FB.FLAT_ID=FT.FLAT_ID)                                                ")
            .append("  JOIN CUST_BOOK_INFO CBI                                                  ")
            .append("  ON(CBI.FLAT_BOOK_ID=FB.FLAT_BOOK_ID)                                     ")
            .append("  JOIN FLOOR_DETAILS FD                                                    ")
            .append("  ON(FD.FLOOR_DET_ID=FT.FLOOR_DET_ID)                                      ")
            .append("  JOIN BLOCK_DETAILS BD                                                    ")
            .append("  ON(BD.BLOCK_DET_ID=FD.BLOCK_DET_ID)                                      ")
            .append("  JOIN SITE ST                                                             ")
            .append("  ON(ST.SITE_ID=BD.SITE_ID)                                                ")
			.toString();
    
    /* QRY_TO_UPDATE_NEW_FLAT_BOOKING_ID_IN_TICKET updating new booking id in TICKET table */
    public static final String QRY_TO_UPDATE_NEW_FLAT_BOOKING_ID_IN_TICKET = new StringBuilder(" UPDATE ")
    		.append(" TICKET SET                                                                        ")
            .append(" STATUS = :STATUS_ID,                                                              ")
            .append(" BOOKING_ID = :NEW_FLAT_BOOK_ID                                                    ")
            .append(" WHERE BOOKING_ID = :OLD_FLAT_BOOK_ID                                              ")
			.toString();
    
    /* QRY_TO_UPDATE_NEW_CUSTOMER_ID_IN_TICKET updating new customer id in TICKET table */
    public static final String QRY_TO_UPDATE_NEW_CUSTOMER_ID_IN_TICKET = new StringBuilder(" UPDATE     ")
    		.append(" TICKET SET                                                                        ")
            .append(" STATUS_UPDATED_BY = :NEW_CUSTOMER_ID                                              ")
            .append(" WHERE BOOKING_ID = :FLAT_BOOK_ID                                                  ")
            .append(" AND STATUS_UPDATE_TYPE = :STATUS_UPDATE_TYPE                                      ")
			.toString();
    
    /* QRY_TO_UPDATE_NEW_CUSTOMER_ID_IN_TICKET_CONVERSATION updating new customer id in TICKET_CONVERSATION table */
    public static final String QRY_TO_UPDATE_FROM_ID_IN_TICKET_CONVERSATION = new StringBuilder(" UPDATE ")
    		.append(" TICKET_CONVERSATION SET                                                            ")
            .append(" FROM_ID = :NEW_CUSTOMER_ID                                                         ")
            .append(" WHERE FROM_TYPE = :TYPE                                                            ")
            .append(" AND TICKET_ID IN (SELECT TICKET_ID FROM TICKET                                     ")
            .append(" WHERE BOOKING_ID = :FLAT_BOOK_ID)                                                  ")
			.toString();
    
    /* QRY_TO_UPDATE_NEW_CUSTOMER_ID_IN_TICKET_CONVERSATION updating new customer id in TICKET_CONVERSATION table */
    public static final String QRY_TO_UPDATE_TO_ID_IN_TICKET_CONVERSATION = new StringBuilder(" UPDATE   ")
    		.append(" TICKET_CONVERSATION SET                                                            ")
            .append(" TO_ID = :NEW_CUSTOMER_ID                                                           ")
            .append(" WHERE TO_TYPE = :TYPE                                                              ")
            .append(" AND TICKET_ID IN (SELECT TICKET_ID FROM TICKET                                     ")
            .append(" WHERE BOOKING_ID = :FLAT_BOOK_ID)                                                  ")
			.toString();
    
    /* QRY_TO_UPDATE_APP_REGISTRATION_STATUS updating minimum record status to active in APP_REGISTRATION table */
    public static final String QRY_TO_UPDATE_APP_REGISTRATION_STATUS = new StringBuilder(" UPDATE        ")
    		.append(" APP_REGISTRATION SET                                                               ")
            .append(" UPDATED_DATE = SYSDATE,                                                            ")
            .append(" STATUS_ID = :STATUS_ID                                                             ")
            .append(" WHERE CUST_ID = :CUST_ID                                                           ")
            .append(" AND APP_REG_ID =(SELECT MIN(APP_REG_ID)                                            ")
            .append(" FROM APP_REGISTRATION WHERE CUST_ID = :CUST_ID)                                    ")
			.toString();
    
    /* QRY_TO_UPDATE_NEW_FLAT_BOOKING_ID_IN_MESSENGER updating new booking id in Messenger table */
    public static final String QRY_TO_UPDATE_NEW_FLAT_BOOKING_ID_IN_MESSENGER = new StringBuilder(" UPDATE ")
    		.append(" MESSENGER SET                                                                        ")
            .append(" SEND_TO = :NEW_FLAT_BOOK_ID                                                          ")
            .append(" WHERE SEND_TYPE = :TYPE                                                              ")
            .append(" AND SEND_TO = :OLD_FLAT_BOOK_ID                                                      ")
			.toString();
    
    /* QRY_TO_UPDATE_NEW_FLAT_BOOKING_ID_IN_MESSENGER_CONVER updating new booking id in Messenger Conversation table */
    public static final String QRY_TO_UPDATE_NEW_FLAT_BOOKING_ID_IN_MESSENGER_CONVER = new StringBuilder(" UPDATE ")
    		.append(" MESSENGER_CONVERSATION SET                                                                  ")
            .append(" CREATED_BY_ID =:NEW_FLAT_BOOK_ID                                                            ")
            .append(" WHERE CREATED_BY_TYPE = :TYPE                                                               ")
            .append(" AND CREATED_BY_ID = :OLD_FLAT_BOOK_ID                                                       ")
			.toString();
    
    /* QRY_TO_UPDATE_NEW_FLAT_BOOKING_ID_IN_MESSENGER_CONV_VIEW_STATUS updating new booking id in Messenger Convers View Status table */
    public static final String QRY_TO_UPDATE_NEW_FLAT_BOOKING_ID_IN_MESSENGER_CONV_VIEW_STATUS = new StringBuilder(" UPDATE ")
    		.append(" MESSENGER_CONVERS_VIEW_STATUS SET                                                                     ")
            .append(" RECIPIENT_ID = :NEW_FLAT_BOOK_ID                                                                      ")
            .append(" WHERE RECIPIENT_TYPE = :TYPE                                                                          ")
            .append(" AND RECIPIENT_ID = :OLD_FLAT_BOOK_ID                                                                  ")
			.toString();
    
    
    /* UPADATING QRY_TO_UPDATE_NOC_RELEASE TABLE */
    public static final String QRY_TO_UPDATE_NOC_RELEASE = new StringBuilder(" INSERT INTO ")
    		.append(" NOC_RELEASE(NOC_RELEASE_ID,FLAT_BOOKING_ID,NOC_RELEASE_DATE,STATUS_ID,CREATED_BY,CREATED_DATE,DOC_LOCATION,URL_LOCATION)              ")
    		.append(" VALUES(NOC_RELEASE_SEQ.nextval,:FLAT_BOOKING_ID,SYSDATE,:STATUS_ID,:CREATED_BY,SYSDATE,:DOC_LOCATION,:URL_LOCATION)              ")
			.toString();
    
    /* QRY_TO_GET_SHOW_NOC_DETAILS from NOC_RELEASE */
    public static final String QRY_TO_GET_SHOW_NOC_DETAILS = new StringBuilder(" SELECT NOC_RELEASE_ID,FLAT_BOOKING_ID,NOC_RELEASE_DATE,CREATED_DATE,DOC_LOCATION,CREATED_BY,URL_LOCATION FROM NOC_RELEASE WHERE FLAT_BOOKING_ID=:FLAT_BOOKING_ID AND STATUS_ID=:STATUS_ID ")
			.toString();
    
    /* UPADATING QRY_TO_UPDATE_NOC_RELEASE TABLE */
    public static final String QRY_TO_UPDATE_NOC_DOCUMENTS = new StringBuilder(" INSERT INTO ")
    		.append(" NOC_DOCUMENTS(NOC_DOCUMENTS_ID,TYPE_ID,TYPE,STATUS_ID,CREATED_BY,CREATED_DATE,DOC_LOCATION,URL_LOCATION)              ")
    		.append(" VALUES(NOC_DOCUMENTS_SEQ.nextval,:TYPE_ID,:TYPE,:STATUS_ID,:CREATED_BY,SYSDATE,:DOC_LOCATION,:URL_LOCATION)              ")
			.toString();
    
    /* QRY_TO_GET_SHOW_NOC_DETAILS from NOC_RELEASE */
    public static final String QRY_TO_GET_SHOW_NOC_DOC_DETAILS =new StringBuilder("  ")
    		   .append(" SELECT NC.NOC_RELEASE_ID,NC.FLAT_BOOKING_ID,NC.NOC_RELEASE_DATE,NC.CREATED_DATE,ND.DOC_LOCATION,NC.CREATED_BY,ND.URL_LOCATION  ")
    		   .append(" FROM NOC_RELEASE NC  ")
    		   .append(" INNER JOIN NOC_DOCUMENTS ND ON ND.TYPE_ID=NC.NOC_RELEASE_ID ")
    		   .append(" WHERE NC.FLAT_BOOKING_ID=:FLAT_BOOKING_ID AND NC.STATUS_ID=:STATUS_ID ")
			.toString();
    
    /* QRY_TO_UPDATE_TICKET_OWNER FROM TICKET  */
    public static final String QRY_TO_UPDATE_TICKET_OWNER = new StringBuilder("UPDATE TICKET ")
                        .append("  SET                                                                    ")
                        .append("  MODIFIED_DATE = SYSTIMESTAMP,                                          ")
                        .append("  TICKET_TYPE_DETAILS_ID =                                               ")
                        .append("  (                                                                      ")
                        .append("  SELECT                                                                 ")
                        .append("  TICKET_TYPE_DETAILS_ID                                                 ")
                        .append("  FROM TICKET_TYPE_DETAILS TT                                            ")
                        .append("  WHERE TT.SITE_ID IN (                                                  ")
                        .append("               SELECT                                                    ")
                        .append("               S.SITE_ID AS SITE_ID                                      ")
                        .append("               FROM  SITE S                                              ")
                        .append("               JOIN BLOCK_DETAILS BD                                     ")
                        .append("               ON(BD.SITE_ID = S.SITE_ID)                                ")
                        .append("               JOIN FLOOR_DETAILS FD                                     ")
                        .append("               ON(BD.BLOCK_DET_ID=FD.BLOCK_DET_ID)                       ")
                        .append("               JOIN  FLAT F                                              ")
                        .append("               ON(F.FLOOR_DET_ID=FD.FLOOR_DET_ID)                        ")
                        .append("               JOIN                                                      ")
                        .append("               FLAT_BOOKING FB                                           ")
                        .append("               ON(F.FLAT_ID=FB.FLAT_ID)                                  ")
                        .append("               INNER JOIN TICKET T                                       ")
                        .append("               ON (T.BOOKING_ID = FB.FLAT_BOOK_ID)                       ")
                        .append("               WHERE T.TICKET_ID IN (:TICKET_ID)                         ")
                        .append("               AND BD.STATUS_ID=:STATUS AND FD.STATUS_ID=:STATUS         ")
                        .append("               AND F.STATUS_ID=:STATUS AND ROWNUM=1 )                    ")
                        .append("  AND TT.TICKET_TYPE_ID IN (:TICKET_TYPE_ID) AND TT.STATUS IN (:STATUS)  ")
                        .append("  AND TT.BLOCK_ID IN (                                               ")
                        .append("               SELECT                                                    ")
                        .append("               DISTINCT BL.BLOCK_ID FROM BLOCK BL                        ")
                        .append("               JOIN BLOCK_DETAILS BD ON(BD.BLOCK_ID=BL.BLOCK_ID)         ")
                        .append("               JOIN FLOOR_DETAILS FD                                     ")
                        .append("               ON(BD.BLOCK_DET_ID=FD.BLOCK_DET_ID)                       ")
                        .append("               JOIN  FLAT F                                              ")
                        .append("               ON(F.FLOOR_DET_ID=FD.FLOOR_DET_ID)                        ")
                        .append("               JOIN                                                      ")
                        .append("               FLAT_BOOKING FB                                           ")
                        .append("               ON(F.FLAT_ID=FB.FLAT_ID)                                  ")
                        .append("               INNER JOIN TICKET T                                       ")
                        .append("               ON (T.BOOKING_ID = FB.FLAT_BOOK_ID)                       ")
                        .append("               WHERE T.TICKET_ID IN (:TICKET_ID)                         ")
                        .append("               AND BD.STATUS_ID=:STATUS AND FD.STATUS_ID=:STATUS         ")
                        .append("               AND F.STATUS_ID=:STATUS AND ROWNUM=1 )                    ")
                        .append("  ),                                                                     ")
                        .append("  DEPARTMENT_ID = NULL,                                                  ")
                        .append("  ASSIGNMENT_TO = NULL                                                   ")
                        .append("  WHERE                                                                  ")
                        .append("  TICKET_ID IN (:TICKET_ID) AND STATUS = :STATUS                         ")
                        .toString();
    
    
    /* CAR PARKING ALLOTMENT */
    /* QRY_TO_GET_CARPARKING_ALLOTMENT_DETAILS_BY_ID FROM CARPARKING_ALLOTMENT BY ALLOTMENT_ID */
    public static final String QRY_TO_GET_CARPARKING_ALLOTMENT_DETAILS_BY_ID = new StringBuilder(" SELECT ")
    		.append(" CA.ALLOTMENT_ID,                      ")
    		.append(" CA.SLOT_ID,                           ")
    		.append(" CA.STATUS_ID,                         ")
    		.append(" CA.CREATED_BY,                        ")
    		.append(" CA.CREATED_DATE,                      ")
    		.append(" CA.MODIFIED_BY,                       ")
    		.append(" CA.MODIFIED_DATE,                     ")
    		.append(" CA.FLAT_BOOK_ID,                      ")
    		.append(" CA.ALLOTMENT_LETTER_PATH,             ")
    		.append(" CA.ALLOTMENT_DATE,                    ")
    		.append(" BLD.SITE_ID                           ")
    		.append(" FROM CARPARKING_ALLOTMENT CA          ")
    		.append(" INNER JOIN FLAT_BOOKING FB            ")
    		.append(" ON(FB.FLAT_BOOK_ID=CA.FLAT_BOOK_ID)   ")
    		.append(" INNER JOIN FLAT FT                    ")
    		.append(" ON(FT.FLAT_ID=FB.FLAT_ID)             ")
    		.append(" INNER JOIN FLOOR_DETAILS FLD          ")
    		.append(" ON(FLD.FLOOR_DET_ID=FT.FLOOR_DET_ID)  ")
    		.append(" INNER JOIN BLOCK_DETAILS BLD          ")
    		.append(" ON(BLD.BLOCK_DET_ID=FLD.BLOCK_DET_ID) ")
    		.append(" WHERE CA.ALLOTMENT_ID=:ALLOTMENT_ID   ")
			.toString();
    
    /* QRY_TO_UPDATE_CARPARKING_ALLOTMENT_LETTER_NEW_PATH updating Allotment Letter New Path BY ALLOTMENT_ID */
    public static final String QRY_TO_UPDATE_CARPARKING_ALLOTMENT_LETTER_NEW_PATH = new StringBuilder(" UPDATE ")
    		.append(" CARPARKING_ALLOTMENT                               ")
    		.append(" SET ALLOTMENT_LETTER_PATH=:ALLOTMENT_LETTER_PATH   ")
    		.append(" WHERE ALLOTMENT_ID=:ALLOTMENT_ID                   ")
			.toString();
			
	/* APPOINTMENT BOOKING */
	/* QRY_TO_GET_APPOINTMENT_BOOKING_DETAILS_FOR_CUSTOMER for Customer Purpose viewing his own appointments */
	public static final String QRY_TO_GET_APPOINTMENT_BOOKING_DETAILS_FOR_CUSTOMER  = new StringBuilder(" SELECT ")
			.append(" APTBK.APPTMT_BOOKINGS_ID,                                                                  ")  
			.append(" APTBK.APPTMT_SLOT_TIMES_ID,                                                                ")
			.append(" APTBK.APPTMT_SUB_TYPE_ID,                                                                  ")
			.append(" APTSD.APPTMT_DATE,                                                                         ")
			.append(" TO_CHAR(APTST.START_TIME,'HH:MI PM') AS SLOT_TIME,                                         ")
			.append(" APTST.START_TIME,                                                                          ")
			.append(" STS.STATUS AS APPTMT_STATUS_NAME,                                                          ")
			.append(" APTBK.APPTMT_STATUS_ID,                                                                    ")
			.append(" APTBK.STATUS_ID,                                                                           ")
			.append(" APTSTY.APPTMT_SUB_TYPE_NAME,                                                               ")
			.append(" APTSD.TYPE,                                                                                ")
			.append(" APTSD.TYPE_ID,                                                                             ")
			.append(" CASE                                                                                       ")
			.append(" WHEN APTBK.APPTMT_REQ_COMMENTS IS NOT NULL THEN APTBK.APPTMT_REQ_COMMENTS                  ")
			.append(" ELSE '-'                                                                                   ")
			.append(" END AS APPTMT_REQ_COMMENTS,                                                                ")
			.append(" CASE                                                                                       ")
			.append(" WHEN APTSD.TYPE=8 THEN 'Employee'                                                          ")
			.append(" ELSE NULL                                                                                  ")
			.append(" END AS ASSIGNED_TYPE,                                                                      ")
			.append(" CASE                                                                                       ")
			.append(" WHEN APTSD.TYPE=8 THEN EMP.FIRST_NAME                                                      ")
			.append(" ELSE NULL                                                                                  ")
			.append(" END AS ASSIGNED_TYPE_NAME,                                                                 ")
			.append(" TO_TIMESTAMP(TO_CHAR(APTSD.APPTMT_DATE,'DD-MM-YYYY') ||                                    ")
			.append(" TO_CHAR(APTST.START_TIME,'HH24:MI:SS.FF'),'DD-MM-YYYY HH24:MI:SS.FF')                      ")
			.append(" AS SLOT_TIME_FOR_SORTING                                                                   ")
			.append(" FROM                                                                                       ")
			.append(" APPTMT_BOOKINGS APTBK                                                                      ")
			.append(" JOIN APPTMT_SLOT_TIMES APTST                                                               ")
			.append(" ON(APTST.APPTMT_SLOT_TIMES_ID=APTBK.APPTMT_SLOT_TIMES_ID)                                  ")
			.append(" JOIN APPTMT_SLOT_DATES APTSD                                                               ")
			.append(" ON(APTSD.APPTMT_SLOT_DATES_ID=APTST.APPTMT_SLOT_DATES_ID)                                  ")
			.append(" JOIN APPTMT_SUB_TYPE APTSTY                                                                ")
			.append(" ON(APTSTY.APPTMT_SUB_TYPE_ID=APTBK.APPTMT_SUB_TYPE_ID)                                     ")
			.append(" JOIN STATUS STS                                                                            ")
			.append(" ON(STS.STATUS_ID=APTBK.APPTMT_STATUS_ID)                                                   ")
			.append(" LEFT JOIN EMPLOYEE EMP                                                                     ")
			.append(" ON(EMP.EMP_ID=APTSD.TYPE_ID AND APTSD.TYPE=8)                                              ")
			.append(" WHERE APTBK.STATUS_ID=:STATUS_ID                                                           ")
			.append(" AND APTSD.STATUS_ID=:STATUS_ID                                                             ")
			.append(" AND APTST.STATUS_ID=:STATUS_ID                                                             ")
			.toString();
	
	
	/* QRY_TO_GET_APPOINTMENT_BOOKING_DETAILS_FOR_EMPLOYEE for Employee Purpose Viewing Assigned Appointments */
	public static final String QRY_TO_GET_APPOINTMENT_BOOKING_DETAILS_FOR_EMPLOYEE  = new StringBuilder(" SELECT ")
			.append(" APTBK.APPTMT_BOOKINGS_ID,                                                                  ")
			.append(" APTBK.APPTMT_SLOT_TIMES_ID,                                                                ")
			.append(" APTBK.APPTMT_SUB_TYPE_ID,                                                                  ")
			.append(" STS.STATUS AS APPTMT_STATUS_NAME,                                                          ")
			.append(" APTSTY.APPTMT_SUB_TYPE_NAME,                                                               ")
			.append(" APTBK.APPTMT_STATUS_ID,                                                                    ")
			.append(" APTBK.STATUS_ID,                                                                           ")
			.append(" APTBK.APPTMT_SUMMARY,                                                                      ")
			.append(" APTSD.TYPE,                                                                                ")
			.append(" APTSD.TYPE_ID,                                                                             ")
			.append(" CASE                                                                                       ")
			.append(" WHEN APTBK.APPTMT_REQ_COMMENTS IS NOT NULL THEN APTBK.APPTMT_REQ_COMMENTS                  ")
			.append(" ELSE '-'                                                                                   ")
			.append(" END AS APPTMT_REQ_COMMENTS,                                                                ")
			.append(" (CUST.NAME_PREFIX || ' ' || CUST.FIRST_NAME) AS CUST_NAME,                                 ")
			.append(" ST.SITE_ID,                                                                                ")
			.append(" ST.NAME AS SITE_NAME,                                                                      ")
			.append(" BL.NAME AS BLOCK_NAME,                                                                     ")
			.append(" FT.FLAT_NO AS FLAT_NO,                                                                     ")
			.append(" APTSD.APPTMT_DATE,                                                                         ")
			.append(" (TO_CHAR(APTSD.APPTMT_DATE, 'DY') || ' '                                                   ")
			.append(" || TO_CHAR(APTST.START_TIME, 'HH:MI PM') || '-'                                            ")
			.append(" || TO_CHAR(APTST.END_TIME, 'HH:MI PM')) AS SLOT_TIME,                                      ")
			.append(" TO_TIMESTAMP(TO_CHAR(APTSD.APPTMT_DATE,'DD-MM-YYYY') ||                                    ")
			.append(" TO_CHAR(APTST.START_TIME,'HH24:MI:SS.FF'),'DD-MM-YYYY HH24:MI:SS.FF')                      ")
			.append(" AS SLOT_TIME_FOR_SORTING,                                                                  ")
			.append(" CASE                                                                                       ")
			.append(" WHEN APTBK.TYPE=7 THEN APTBK.TYPE_ID                                                       ")
			.append(" ELSE NULL                                                                                  ")
			.append(" END AS FLAT_BOOK_ID,                                                                       ")
			.append(" APTSD.TYPE_ID AS EMP_OR_DEPT_ID,                                                           ")
			.append(" APTSD.TYPE AS EMP_OR_DEPT_TYPE,                                                            ")
			.append(" CASE                                                                                       ")
			.append(" WHEN APTSD.TYPE=8 THEN (SELECT FIRST_NAME FROM EMPLOYEE WHERE EMP_ID=APTSD.TYPE_ID)        ")
			.append(" WHEN APTSD.TYPE=9 THEN (SELECT NAME FROM DEPARTMENT WHERE DEPT_ID=APTSD.TYPE_ID)           ")
			.append(" ELSE NULL                                                                                  ")
			.append(" END AS EMP_OR_DEPT_NAME,                                                                   ")
			.append(" CASE                                                                                       ") 
			.append(" WHEN (TO_TIMESTAMP(TO_CHAR(APTSD.APPTMT_DATE, 'DD-MM-YYYY') ||                             ") 
			.append(" TO_CHAR(APTST.START_TIME, 'HH24:MI:SS.FF'), 'DD-MM-YYYY HH24:MI:SS.FF'))                   ") 
			.append(" <=(SELECT SYSDATE FROM DUAL) THEN 1                                                        ") 
			.append(" ELSE 0                                                                                     ") 
			.append(" END AS IS_TIME_COMPLETED,                                                                  ")
			.append(" TO_TIMESTAMP(TO_CHAR(APTSD.APPTMT_DATE,'DD-MM-YYYY') ||                                    ")                          
			.append(" TO_CHAR(APTST.START_TIME,'HH24:MI:SS.FF'),'DD-MM-YYYY HH24:MI:SS.FF') AS START_TIME,       ")
			.append(" TO_TIMESTAMP(TO_CHAR(APTSD.APPTMT_DATE,'DD-MM-YYYY') ||                                    ")
			.append(" TO_CHAR(APTST.END_TIME,'HH24:MI:SS.FF'),'DD-MM-YYYY HH24:MI:SS.FF') AS END_TIME,           ")
			.append(" TO_CHAR(APTSD.APPTMT_DATE,'DD/MM/YYYY') || ', ' ||                                         ")
			.append(" TO_CHAR(APTST.START_TIME,'HH:MI PM') AS APPOINTMENT_TIME                                   ") 
			.append(" FROM                                                                                       ")
			.append(" APPTMT_BOOKINGS APTBK                                                                      ")
			.append(" JOIN APPTMT_SLOT_TIMES APTST                                                               ")
			.append(" ON(APTST.APPTMT_SLOT_TIMES_ID=APTBK.APPTMT_SLOT_TIMES_ID)                                  ")
			.append(" JOIN APPTMT_SLOT_DATES APTSD                                                               ")
			.append(" ON(APTSD.APPTMT_SLOT_DATES_ID=APTST.APPTMT_SLOT_DATES_ID)                                  ")
			.append(" JOIN APPTMT_SUB_TYPE APTSTY                                                                ")
			.append(" ON(APTSTY.APPTMT_SUB_TYPE_ID=APTBK.APPTMT_SUB_TYPE_ID)                                     ")
			.append(" JOIN STATUS STS                                                                            ")
			.append(" ON(STS.STATUS_ID=APTBK.APPTMT_STATUS_ID)                                                   ")
			.append(" LEFT JOIN FLAT_BOOKING FB                                                                  ")
			.append(" ON(FB.FLAT_BOOK_ID=APTBK.TYPE_ID AND APTBK.TYPE=7)                                         ")
			.append(" LEFT JOIN CUSTOMER CUST                                                                    ")
			.append(" ON(CUST.CUST_ID=FB.CUST_ID)                                                                ")
			.append(" LEFT JOIN FLAT FT                                                                          ")
			.append(" ON(FT.FLAT_ID=FB.FLAT_ID)                                                                  ")
			.append(" LEFT JOIN FLAT_DETAILS FTD                                                                 ")
			.append(" ON(FTD.FLAT_ID=FT.FLAT_ID)                                                                 ")
			.append(" LEFT JOIN FLOOR_DETAILS FLD                                                                ")
			.append(" ON(FLD.FLOOR_DET_ID=FTD.FLOOR_DET_ID)                                                      ")
			.append(" LEFT JOIN BLOCK_DETAILS BLD                                                                ")
			.append(" ON(BLD.BLOCK_DET_ID=FLD.BLOCK_DET_ID)                                                      ")
			.append(" LEFT JOIN BLOCK BL                                                                         ")
			.append(" ON(BL.BLOCK_ID=BLD.BLOCK_ID)                                                               ")
			.append(" LEFT JOIN SITE ST                                                                          ")
			.append(" ON(ST.SITE_ID=BLD.SITE_ID)                                                                 ")     
			.append(" WHERE APTBK.STATUS_ID=:STATUS_ID                                                           ")
			.append(" AND APTSD.STATUS_ID=:STATUS_ID                                                             ")
			.append(" AND APTST.STATUS_ID=:STATUS_ID                                                             ")
			.toString();
	
	/* QRY_TO_VALIDATE_APPOINTMENT_TIME_SLOTS_FOR_EMPLOYEE for Validating Employee Time slots */
	public static final String QRY_TO_VALIDATE_APPOINTMENT_TIME_SLOTS_FOR_EMPLOYEE  = new StringBuilder(" SELECT ")
			.append(" COUNT(*)                                                                                   ")                                        
			.append(" FROM APPTMT_SLOT_TIMES APTST                                                               ")
			.append(" JOIN APPTMT_SLOT_DATES APTSD                                                               ")
			.append(" ON(APTSD.APPTMT_SLOT_DATES_ID=APTST.APPTMT_SLOT_DATES_ID)                                  ")
			.append(" WHERE APTSD.STATUS_ID=:STATUS_ID                                                           ")
			.append(" AND APTST.STATUS_ID=:STATUS_ID                                                             ")
			.append(" AND APTST.SLOT_STATUS_ID NOT IN (:SLOT_STATUS_IDS)                                         ")
			.append(" AND (:START_TIME BETWEEN                                                                   ")
			.append(" TO_TIMESTAMP(TO_CHAR(APTSD.APPTMT_DATE, 'YYYY-MM-DD')||                                    ")
			.append(" TO_CHAR(APTST.START_TIME, 'HH24:MI:SS.FF'),'YYYY-MM-DD HH24:MI:SS.FF') AND                 ")
			.append(" TO_TIMESTAMP(TO_CHAR(APTSD.APPTMT_DATE, 'YYYY-MM-DD')||                                    ")
			.append(" TO_CHAR(APTST.END_TIME, 'HH24:MI:SS.FF'),'YYYY-MM-DD HH24:MI:SS.FF')                       ")
			.append(" OR :END_TIME BETWEEN                                                                       ")
			.append(" TO_TIMESTAMP(TO_CHAR(APTSD.APPTMT_DATE, 'YYYY-MM-DD')||                                    ")
			.append(" TO_CHAR(APTST.START_TIME, 'HH24:MI:SS.FF'),'YYYY-MM-DD HH24:MI:SS.FF') AND                 ")
			.append(" TO_TIMESTAMP(TO_CHAR(APTSD.APPTMT_DATE, 'YYYY-MM-DD')||                                    ")
			.append(" TO_CHAR(APTST.END_TIME, 'HH24:MI:SS.FF'),'YYYY-MM-DD HH24:MI:SS.FF')                       ")
			.append(" OR TO_TIMESTAMP(TO_CHAR(APTSD.APPTMT_DATE, 'YYYY-MM-DD')||                                 ")
			.append(" TO_CHAR(APTST.START_TIME, 'HH24:MI:SS.FF'),'YYYY-MM-DD HH24:MI:SS.FF') BETWEEN             ")
			.append(" :START_TIME AND :END_TIME                                                                  ")
			.append(" OR TO_TIMESTAMP(TO_CHAR(APTSD.APPTMT_DATE, 'YYYY-MM-DD')||                                 ")
			.append(" TO_CHAR(APTST.END_TIME, 'HH24:MI:SS.FF'),'YYYY-MM-DD HH24:MI:SS.FF') BETWEEN               ")
			.append(" :START_TIME AND :END_TIME)                                                                 ")
			.append(" AND APTSD.TYPE=:TYPE                                                                       ")
			.append(" AND APTSD.TYPE_ID=:TYPE_ID                                                                 ")
			.toString();
	
	/* QRY_TO_GET_APPTMT_SLOT_DATES getting Apptmt Slot Dates Details */
	public static final String QRY_TO_GET_APPTMT_SLOT_DATES  = new StringBuilder(" SELECT                        ")
			.append(" APTSD.APPTMT_SLOT_DATES_ID,                                                                ")
			.append(" APTSD.APPTMT_DATE,                                                                         ")
			.append(" APTSD.TYPE,                                                                                ")
			.append(" APTSD.TYPE_ID,                                                                             ")
			.append(" APTSD.CREATED_BY,                                                                          ")
			.append(" APTSD.CREATED_DATE,                                                                        ")
			.append(" APTSD.STATUS_ID                                                                            ")
			.append(" FROM APPTMT_SLOT_DATES APTSD                                                               ")
			.append(" WHERE APTSD.STATUS_ID=:STATUS_ID                                                           ")
			.append(" AND APTSD.TYPE=:TYPE                                                                       ")
			.append(" AND APTSD.TYPE_ID=:TYPE_ID                                                                 ")
			.append(" AND APTSD.APPTMT_DATE=:APPTMT_DATE                                                         ")
			.append(" ORDER BY APPTMT_SLOT_DATES_ID DESC                                                         ") 
			.toString();
	
	/* QRY_TO_INSERT_INTO_APPTMT_SLOT_DATES inserting apptmt Slot Dates Details */
	public static final String QRY_TO_INSERT_INTO_APPTMT_SLOT_DATES  = new StringBuilder(" INSERT INTO           ")
			.append(" APPTMT_SLOT_DATES(                                                                         ")
			.append(" APPTMT_SLOT_DATES_ID,                                                                      ")
			.append(" APPTMT_DATE,                                                                               ")
			.append(" TYPE,                                                                                      ")
			.append(" TYPE_ID,                                                                                   ")
			.append(" CREATED_BY,                                                                                ")
			.append(" CREATED_DATE,                                                                              ")
			.append(" STATUS_ID)                                                                                 ")
			.append(" VALUES(                                                                                    ")
			.append(" (SELECT NVL(MAX(APPTMT_SLOT_DATES_ID), 0)+1 FROM APPTMT_SLOT_DATES),                       ")
			.append(" :apptmtDate,                                                                               ")
			.append(" :type,                                                                                     ")
			.append(" :typeId,                                                                                   ")
			.append(" :createdBy,                                                                                ")
			.append(" SYSDATE,                                                                                   ")
			.append(" :statusId)                                                                                 ")
			.toString();
	
	/* QRY_TO_INSERT_INTO_APPTMT_SLOT_TIMES inserting apptmt Slot Times Details */
	public static final String QRY_TO_INSERT_INTO_APPTMT_SLOT_TIMES  = new StringBuilder(" INSERT INTO           ")
			.append(" APPTMT_SLOT_TIMES(                                                                         ")
			.append(" APPTMT_SLOT_TIMES_ID,                                                                      ")
			.append(" APPTMT_SLOT_DATES_ID,                                                                      ")
			.append(" START_TIME,                                                                                ")
			.append(" END_TIME,                                                                                  ")
			.append(" CREATED_BY,                                                                                ")
			.append(" CREATED_DATE,                                                                              ")
			.append(" STATUS_ID,                                                                                 ")
			.append(" SLOT_STATUS_ID)                                                                            ")
			.append(" VALUES(                                                                                    ")
			.append(" (SELECT NVL(MAX(APPTMT_SLOT_TIMES_ID), 0)+1 FROM APPTMT_SLOT_TIMES),                       ")
			.append(" :apptmtSlotDatesId,                                                                        ")
			.append(" :startTime,                                                                                ")
			.append(" :endTime,                                                                                  ")
			.append(" :createdBy,                                                                                ")
			.append(" SYSDATE,                                                                                   ")
			.append(" :statusId,                                                                                 ")
			.append(" :slotStatusId)                                                                             ")
			.toString();
	
	/* QRY_TO_INSERT_INTO_APPTMT_SLOT_EMP_PROJECT_WISE inserting apptmt Slot Emp Project Wise Details */
	public static final String QRY_TO_INSERT_INTO_APPTMT_SLOT_EMP_PROJECT_WISE = new StringBuilder(" INSERT INTO ")
			.append(" APPTMT_SLOT_EMP_PROJECT_WISE(                                                              ")
			.append(" APPTMT_SLOT_EMP_PROJECT_WISE_ID,                                                           ")
			.append(" SITE_ID,                                                                                   ")
			.append(" TYPE,                                                                                      ")
			.append(" TYPE_ID,                                                                                   ")
			.append(" APPTMT_SLOT_TIMES_ID,                                                                      ")
			.append(" CREATED_BY,                                                                                ")
			.append(" CREATED_DATE,                                                                              ")
			.append(" STATUS_ID)                                                                                 ")
			.append(" VALUES(                                                                                    ")
			.append(" APPTMT_SLOT_EMP_PROJECT_WISE_ID_SEQ.NEXTVAL,                                               ")
			.append(" :siteId,                                                                                   ")
			.append(" :type,                                                                                     ")
			.append(" :typeId,                                                                                   ")
			.append(" :apptmtSlotTimesId,                                                                        ")
			.append(" :createdBy,                                                                                ")
			.append(" SYSDATE,                                                                                   ")
			.append(" :statusId)                                                                                 ")
			.toString();
	
	/* QRY_TO_GET_APPTMT_SLOT_TIMES_DETAILS for getting Appointment Slot Times Details  */
	public static final String QRY_TO_GET_APPTMT_SLOT_TIMES_DETAILS = new StringBuilder(" SELECT  DISTINCT       ")
			.append(" APTSD.APPTMT_SLOT_DATES_ID,                                                                ")                                                              
			.append(" APTST.APPTMT_SLOT_TIMES_ID,                                                                ")            
			.append(" ST.SITE_ID,                                                                                ")
			.append(" ST.NAME AS SITE_NAME,                                                                      ")
			.append(" APTSD.CREATED_BY,                                                                          ")
			.append(" APTSD.CREATED_DATE,                                                                        ")
			.append(" APTSD.APPTMT_DATE,                                                                         ")
			.append(" (TO_CHAR(APTST.START_TIME, 'HH:MI PM') || '-'                                              ")
			.append(" || TO_CHAR(APTST.END_TIME, 'HH:MI PM')) AS SLOT_TIME,                                      ")
			.append(" (TO_TIMESTAMP(TO_CHAR(APTSD.APPTMT_DATE, 'DD-MM-YYYY') ||                                  ")
			.append(" TO_CHAR(APTST.START_TIME, 'HH24:MI:SS.FF'), 'DD-MM-YYYY HH24:MI:SS.FF')) AS START_TIME,    ")
			.append(" STS.STATUS_ID AS SLOT_STATUS_ID,                                                           ")
			.append(" STS.STATUS AS SLOT_STATUS_NAME,                                                            ")
			.append(" CASE                                                                                       ")
			.append(" WHEN (TO_TIMESTAMP(TO_CHAR(APTSD.APPTMT_DATE, 'DD-MM-YYYY') ||                             ")
			.append(" TO_CHAR(APTST.START_TIME, 'HH24:MI:SS.FF'), 'DD-MM-YYYY HH24:MI:SS.FF'))                   ")
			.append(" <=(SELECT SYSDATE FROM DUAL) THEN 1                                                        ")
			.append(" ELSE 0                                                                                     ")
			.append(" END AS IS_TIME_COMPLETED                                                                   ")
			.append(" FROM APPTMT_SLOT_DATES APTSD                                                               ")
			.append(" JOIN APPTMT_SLOT_TIMES APTST                                                               ")
			.append(" ON(APTST.APPTMT_SLOT_DATES_ID=APTSD.APPTMT_SLOT_DATES_ID)                                  ")
			.append(" JOIN APPTMT_SLOT_EMP_PROJECT_WISE APTSEPW                                                  ")
			.append(" ON(APTSEPW.APPTMT_SLOT_TIMES_ID=APTST.APPTMT_SLOT_TIMES_ID)                                ")
			.append(" JOIN SITE ST                                                                               ")
			.append(" ON(ST.SITE_ID=APTSEPW.SITE_ID)                                                             ")
			.append(" JOIN STATUS STS                                                                            ")
			.append(" ON(STS.STATUS_ID=APTST.SLOT_STATUS_ID)                                                     ")                                                             
			.append(" WHERE APTSD.STATUS_ID=:STATUS_ID                                                           ")
			.append(" AND APTST.STATUS_ID=:STATUS_ID                                                             ")
			.append(" AND APTSEPW.STATUS_ID=:STATUS_ID                                                           ")
			.append(" AND APTSD.TYPE=:TYPE                                                                       ")
			.append(" AND APTSD.TYPE_ID=:TYPE_ID                                                                 ")
			.toString();
	
	/* QRY_TO_UPDATE_APPOINTMENT_BOOKINGS_DETAILS_STATUS for Updating Apptmt Status */
	public static final String QRY_TO_UPDATE_APPOINTMENT_BOOKINGS_DETAILS_STATUS = new StringBuilder(" UPDATE    ")
			.append(" APPTMT_BOOKINGS SET                                                                        ")
			.append(" MODIFIED_BY=:EMP_ID,                                                                       ")
			.append(" MODIFIED_DATE=SYSDATE,                                                                     ")
			.append(" APPTMT_STATUS_ID=:APPTMT_STATUS_ID                                                         ")
			.toString();
	
	/* QRY_TO_UPDATE_APPTMT_SLOT_TIMES_STATUS for Updating Apptmt Slot Status */
	public static final String QRY_TO_UPDATE_APPTMT_SLOT_TIMES_STATUS = new StringBuilder(" UPDATE               ")
			.append(" APPTMT_SLOT_TIMES SET                                                                      ")
			.append(" MODIFIED_BY=:EMP_ID,                                                                       ")
			.append(" MODIFIED_DATE=SYSDATE,                                                                     ")
			.append(" SLOT_STATUS_ID=:SLOT_STATUS_ID                                                             ")
			.append(" WHERE STATUS_ID=:STATUS_ID                                                                 ")
			.append(" AND APPTMT_SLOT_TIMES_ID=:APPTMT_SLOT_TIMES_ID                                             ")
			.toString();
	
	/* QRY_TO_GET_COMPLETED_APPTMT_SLOT_TIMES for getting Completed Apptmt Slot Time Details */
	public static final String QRY_TO_GET_COMPLETED_APPTMT_SLOT_TIMES = new StringBuilder(" SELECT               ")
			.append(" APTST.APPTMT_SLOT_TIMES_ID,                                                                ")
			.append(" APTST.APPTMT_SLOT_DATES_ID,                                                                ")
			.append(" (TO_TIMESTAMP(TO_CHAR(APTSD.APPTMT_DATE, 'DD-MM-YYYY') ||                                  ")
			.append(" TO_CHAR(APTST.START_TIME, 'HH24:MI:SS.FF'), 'DD-MM-YYYY HH24:MI:SS.FF')) AS START_TIME,    ")
			.append(" (TO_TIMESTAMP(TO_CHAR(APTSD.APPTMT_DATE, 'DD-MM-YYYY') ||                                  ")
			.append(" TO_CHAR(APTST.END_TIME, 'HH24:MI:SS.FF'), 'DD-MM-YYYY HH24:MI:SS.FF')) AS END_TIME,        ")
			.append(" APTST.CREATED_BY,                                                                          ")
			.append(" APTST.CREATED_DATE,                                                                        ")
			.append(" APTST.STATUS_ID,                                                                           ")
			.append(" APTST.SLOT_STATUS_ID                                                                       ")
			.append(" FROM APPTMT_SLOT_TIMES APTST                                                               ")
			.append(" JOIN APPTMT_SLOT_DATES APTSD                                                               ")
			.append(" ON(APTSD.APPTMT_SLOT_DATES_ID=APTST.APPTMT_SLOT_DATES_ID)                                  ")
			.append(" WHERE APTST.STATUS_ID=:STATUS_ID                                                           ")
			.append(" AND APTSD.STATUS_ID=:STATUS_ID                                                             ")
			.toString();
	
	/* QRY_TO_GET_APPTMT_BOOKING_DETAILS for getting Apptmt Booking Details */
	public static final String QRY_TO_GET_APPTMT_BOOKING_DETAILS = new StringBuilder(" SELECT                    ")
			.append(" APTBK.APPTMT_BOOKINGS_ID,                                                                  ")
			.append(" APTBK.APPTMT_SLOT_TIMES_ID,                                                                ")
			.append(" APTBK.TYPE,                                                                                ")
			.append(" APTBK.TYPE_ID,                                                                             ")
			.append(" APTBK.CREATED_BY,                                                                          ")
			.append(" APTBK.CREATED_DATE,                                                                        ")
			.append(" APTBK.MODIFIED_BY,                                                                         ")
			.append(" APTBK.MODIFIED_DATE,                                                                       ")
			.append(" APTBK.STATUS_ID,                                                                           ")
			.append(" APTBK.APPTMT_SUB_TYPE_ID,                                                                  ")
			.append(" APTBK.APPTMT_REQ_COMMENTS,                                                                 ")
			.append(" APTBK.APPTMT_STATUS_ID,                                                                    ")
			.append(" APTBK.APPTMT_SUMMARY,                                                                      ")
			.append(" APTBK.GOOGLE_CALENDAR_EVENT_ID,                                                            ")
			.append(" CASE                                                                                       ")
			.append(" WHEN APTBK.TYPE=7 THEN APTBK.TYPE_ID                                                       ")
			.append(" ELSE NULL                                                                                  ")
			.append(" END AS FLAT_BOOK_ID                                                                        ")
			.append(" FROM APPTMT_BOOKINGS APTBK                                                                 ")
			.append(" WHERE APTBK.STATUS_ID=:STATUS_ID                                                           ")
			.toString();
	
	/* QRY_TO_GET_APPTMT_SLOT_TYPES_DETAILS for getting Apptmt slot types */
	public static final String QRY_TO_GET_APPTMT_SLOT_TYPES_DETAILS = new StringBuilder(" SELECT ")
			.append(" ASEPW.APPTMT_SLOT_TIMES_ID,                            ")
			.append(" ASEPW.TYPE,                                            ")
			.append(" ASEPW.TYPE_ID,                                         ")
			.append(" CASE                                                   ")
			.append(" WHEN ASEPW.TYPE=:SITE_TYPE THEN                        ")
			.append(" (SELECT NAME FROM SITE WHERE SITE_ID=ASEPW.TYPE_ID)    ")
			.append(" WHEN ASEPW.TYPE=:BLOCK_TYPE THEN                       ")
			.append(" (SELECT BL.NAME FROM BLOCK_DETAILS BLD                 ")
			.append(" INNER JOIN BLOCK BL ON(BLD.BLOCK_ID=BL.BLOCK_ID)       ")
			.append(" WHERE BLD.BLOCK_DET_ID=ASEPW.TYPE_ID)                  ")
			.append(" WHEN ASEPW.TYPE=:FLOOR_TYPE THEN                       ")
			.append(" (SELECT FL.NAME FROM FLOOR_DETAILS FLD                 ")
			.append(" INNER JOIN FLOOR FL ON(FLD.FLOOR_ID=FL.FLOOR_ID)       ")
			.append(" WHERE FLD.FLOOR_DET_ID=ASEPW.TYPE_ID)                  ")
			.append(" WHEN ASEPW.TYPE=:FLAT_TYPE THEN                        ")
			.append(" (SELECT FLAT_NO FROM FLAT WHERE FLAT_ID=ASEPW.TYPE_ID) ")
			.append(" WHEN ASEPW.TYPE=:BOOKING_FLAT_TYPE THEN                ")
			.append(" (SELECT FT.FLAT_NO FROM FLAT_BOOKING FB                ")
			.append(" INNER JOIN FLAT FT ON(FT.FLAT_ID=FB.FLAT_ID)           ")
			.append(" WHERE FB.FLAT_BOOK_ID=ASEPW.TYPE_ID)                   ")
			.append(" ELSE NULL                                              ")
			.append(" END AS TYPE_NAME                                       ")
			.append(" FROM APPTMT_SLOT_EMP_PROJECT_WISE ASEPW                ")
			.append(" WHERE ASEPW.STATUS_ID=:STATUS_ID                       ")
			.toString();
	
	/* Project - Block Details and Floor Details */
	/* This query is for getting all block details by site */
	public static final String QRY_TO_GET_ALL_BLOCK_DETAILS = new StringBuilder(" SELECT ")
			.append(" ST.SITE_ID,                    ")
			.append(" BLD.BLOCK_DET_ID,              ")
			.append(" BLD.BLOCK_ID,                  ")
			.append(" BL.NAME                        ")
			.append(" FROM                           ")
			.append(" BLOCK_DETAILS BLD              ")
			.append(" INNER JOIN BLOCK BL            ")
			.append(" ON(BL.BLOCK_ID=BLD.BLOCK_ID    ")
			.append(" AND BL.STATUS_ID=:STATUS_ID)   ")
			.append(" INNER JOIN SITE ST             ")
			.append(" ON(ST.SITE_ID=BLD.SITE_ID)     ")
			.append(" WHERE BLD.STATUS_ID=:STATUS_ID ")
			.append(" AND ST.SITE_ID=:SITE_ID        ")
			.append(" ORDER BY BL.NAME               ")
			.toString();
	
	/* This query is for getting all floor details by site or block */
	public static final String QRY_TO_GET_ALL_FLOOR_DETAILS = new StringBuilder(" SELECT ")
			.append(" FLD.FLOOR_DET_ID,                    ")    
			.append(" FL.FLOOR_ID,                         ")
			.append(" FL.NAME,                             ")
			.append(" BLD.BLOCK_DET_ID,                    ")
			.append(" BLD.BLOCK_ID,                        ")
			.append(" BL.NAME AS BLOCK_NAME                ")
			.append(" FROM                                 ")
			.append(" FLOOR_DETAILS FLD                    ")
			.append(" INNER JOIN FLOOR FL                  ")
			.append(" ON(FL.FLOOR_ID=FLD.FLOOR_ID)         ")
			.append(" INNER JOIN BLOCK_DETAILS BLD         ")
			.append(" ON(BLD.BLOCK_DET_ID=FLD.BLOCK_DET_ID ")
			.append(" AND BLD.STATUS_ID=:STATUS_ID)        ")
			.append(" INNER JOIN BLOCK BL                  ")
			.append(" ON(BL.BLOCK_ID=BLD.BLOCK_ID          ")
			.append(" AND BL.STATUS_ID=:STATUS_ID)         ")
			.append(" INNER JOIN SITE ST                   ")
			.append(" ON(ST.SITE_ID=BLD.SITE_ID)           ")
			.append(" WHERE FLD.STATUS_ID=:STATUS_ID       ")
			.toString();
	
	/* This query is for getting all flat details by site or block or floor */
	public static final String QRY_TO_GET_ALL_FLAT_DETAILS = new StringBuilder(" SELECT ")
			.append(" FT.FLAT_ID,                          ")
			.append(" FT.FLAT_NO,                          ")
			.append(" FLD.FLOOR_DET_ID,                    ") 
			.append(" FL.FLOOR_ID,                         ")
			.append(" FL.NAME,                             ")
			.append(" BLD.BLOCK_DET_ID,                    ")
			.append(" BLD.BLOCK_ID,                        ")
			.append(" BL.NAME AS BLOCK_NAME                ")
			.append(" FROM                                 ")
			.append(" FLOOR_DETAILS FLD                    ")
			.append(" INNER JOIN FLAT FT                   ")
			.append(" ON(FT.FLOOR_DET_ID=FLD.FLOOR_DET_ID) ")            
			.append(" INNER JOIN FLOOR FL                  ")
			.append(" ON(FL.FLOOR_ID=FLD.FLOOR_ID)         ")
			.append(" INNER JOIN BLOCK_DETAILS BLD         ")
			.append(" ON(BLD.BLOCK_DET_ID=FLD.BLOCK_DET_ID ")
			.append(" AND BLD.STATUS_ID=:STATUS_ID)        ")
			.append(" INNER JOIN BLOCK BL                  ")
			.append(" ON(BL.BLOCK_ID=BLD.BLOCK_ID          ")
			.append(" AND BL.STATUS_ID=:STATUS_ID)         ")
			.append(" INNER JOIN SITE ST                   ")
			.append(" ON(ST.SITE_ID=BLD.SITE_ID)           ")
			.append(" WHERE FLD.STATUS_ID=:STATUS_ID       ")
			.append(" AND FT.STATUS_ID=:STATUS_ID          ")
			.toString();
	
	/* This query is for getting all booking flats by site and booking date */
	public static final String QRY_TO_GET_ALL_BOOKING_FLATS = new StringBuilder(" SELECT ")
			.append(" FT.FLAT_ID,                          ")                         
			.append(" FT.FLAT_NO,                          ")
			.append(" FB.FLAT_BOOK_ID                      ")
			.append(" FROM FLOOR_DETAILS FLD               ")
			.append(" INNER JOIN FLAT FT                   ")
			.append(" ON(FT.FLOOR_DET_ID=FLD.FLOOR_DET_ID) ")            
			.append(" INNER JOIN FLOOR FL                  ")
			.append(" ON(FL.FLOOR_ID=FLD.FLOOR_ID)         ")
			.append(" INNER JOIN BLOCK_DETAILS BLD         ")
			.append(" ON(BLD.BLOCK_DET_ID=FLD.BLOCK_DET_ID ")
			.append(" AND BLD.STATUS_ID=:STATUS_ID)        ")
			.append(" INNER JOIN BLOCK BL                  ")
			.append(" ON(BL.BLOCK_ID=BLD.BLOCK_ID          ")
			.append(" AND BL.STATUS_ID=:STATUS_ID)         ")
			.append(" INNER JOIN SITE ST                   ")
			.append(" ON(ST.SITE_ID=BLD.SITE_ID)           ")
			.append(" INNER JOIN FLAT_BOOKING FB           ")
			.append(" ON(FB.FLAT_ID=FT.FLAT_ID)            ")
			.append(" WHERE FLD.STATUS_ID=:STATUS_ID       ")
			.append(" AND FT.STATUS_ID=:STATUS_ID          ")
			.append(" AND FB.STATUS_ID=:STATUS_ID          ")
			.append(" AND ST.SITE_ID=:SITE_ID              ")
			.toString();

	/*this query to get flat book id with flat id and site id*/
	public static final String QRY_TO_GET_BOOKING_ID = new StringBuilder()
            .append(" SELECT FB.FLAT_BOOK_ID,S.NAME AS SITE_NAME, ")
            .append(" (SELECT  DISTINCT  CASE WHEN COUNT(AR.CUST_ID)>0 THEN 'Registered' ELSE 'Not Registered' END AS APP_STATUS FROM CUSTOMER CUST INNER JOIN APP_REGISTRATION AR ON CUST.CUST_ID=AR.CUST_ID WHERE AR.STATUS_ID=6 AND CUST.CUST_ID=FB.CUST_ID) AS APP_STATUS ")
            .append(" FROM  FLAT_BOOKING FB INNER JOIN FLAT F  ")
            .append(" ON FB.FLAT_ID = F.FLAT_ID  ")
            .append(" INNER JOIN FLOOR_DETAILS FD  ")
            .append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  ")
            .append(" INNER JOIN FLOOR FL  ")
            .append(" ON FL.FLOOR_ID = FD.FLOOR_ID  ")
            .append(" INNER JOIN BLOCK_DETAILS BD  ")
            .append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID  ")
            .append(" INNER JOIN BLOCK BL  ")
            .append(" ON BL.BLOCK_ID = BD.BLOCK_ID  ")
            .append(" INNER JOIN SITE S  ")
            .append(" ON BD.SITE_ID = S.SITE_ID   ")
            .append(" WHERE F.FLAT_NO=:FLAT_NO AND S.SITE_ID=:SITE_ID AND FB.STATUS_ID=:STATUS_ID ")
            .toString()
            ;
	
	/* Ticketing */
	/* This query is for getting all closed tickets */
	public static final String QRY_TO_GET_ALL_CLOSED_TICKETS = new StringBuilder(" SELECT                   ")
			.append(" F.FLAT_NO,                                                                            ")
			.append(" T.TICKET_ID AS TICKET_ID,                                                             ")                                                             
			.append(" T.CREATED_DATE AS CREATED_DATE,                                                       ")                          
			.append(" T.TICKET_TYPE_DETAILS_ID AS TICKET_TYPE_DETAILS_ID,                                   ")                                                        
			.append(" T.BOOKING_ID AS BOOKING_ID,                                                           ")                          
			.append(" T.TICKET_TYPE_ID AS TICKET_TYPE_ID,                                                   ") 
			.append(" T.TICKET_STATUS AS TICKET_STATUS,                                                     ")                                                          
			.append(" T.INVIDUAL_TICKET_STATUS AS DEPARTMENT_TICKET_STATUS,                                 ") 
			.append(" T.RATING AS RATING,                                                                   ") 
			.append(" T.FEEDBACK_DESC AS FEEDBACK_DESC,                                                     ")
			.append(" T.RESOLVED_DATE,                                                                      ")
			.append(" CUST.NAME_PREFIX ||' '|| CUST.FIRST_NAME AS CUST_NAME,                                ") 
			.append(" CUST.CUST_ID,                                                                         ") 
			.append(" S.NAME AS SITE_NAME,                                                                  ") 
			.append(" TMT.NAME ||' / '|| TT.NAME AS TICKET_TYPE,                                            ")
			.append(" CASE                                                                                  ") 
			.append(" WHEN T.ESTIMATED_RESOLVED_DATE_STATUS IS NOT NULL AND T.TICKET_STATUS NOT IN(11) THEN ") 
			.append(" (SELECT DISTINCT 'LEVEL-' ||TELVM.LEVEL_ID || '-' || EMP.FIRST_NAME                   ") 
			.append(" || '-' || DT.NAME FROM TICKET_ESCALATION TE                                           ") 
			.append(" INNER JOIN TICKET_ESCA_LVL_MAP TELVM                                                  ") 
			.append(" ON TELVM.ID = TE.TICKET_ESC_LVL_MAP_ID                                                ") 
			.append(" INNER JOIN TICKET_ESC_LEVEL_EMP_MAP TELEM                                             ") 
			.append(" ON TELEM.TICKET_ESC_LVL_MAP_ID = TELVM.ID                                             ") 
			.append(" INNER JOIN EMPLOYEE EMP                                                               ") 
			.append(" ON TELEM.EMPLOYEE_ID = EMP.EMP_ID                                                     ") 
			.append(" INNER JOIN EMPLOYEE_DEPARTMENT_MAPING EDM                                             ") 
			.append(" ON EDM.EMPLOYEE_ID=EMP.EMP_ID AND EDM.STATUS=:STATUS                                  ") 
			.append(" INNER JOIN DEPARTMENT_ROLE_MAPPING DRM                                                ") 
			.append(" ON DRM.DEPARTMENT_ROLE_MAPPING_ID=EDM.DEPARTMENT_ROLE_MAPPING_ID                      ") 
			.append(" AND DRM.STATUS=:STATUS                                                                ") 
			.append(" INNER JOIN DEPARTMENT DT                                                              ") 
			.append(" ON DT.DEPT_ID=DRM.DEPT_ID AND DT.STATUS_ID=:STATUS                                    ") 
			.append(" WHERE TE.TICKET_ID = T.TICKET_ID AND TE.STATUS = :STATUS                              ") 
			.append(" AND TELVM.STATUS_ID = :STATUS AND TELEM.STATUS_ID = :STATUS)                          ") 
			.append(" WHEN T.DEPARTMENT_ID IS NOT NULL AND  T.DEPARTMENT_ID <> 0 THEN  DEPT.NAME            ") 
			.append(" WHEN T.ASSIGNMENT_TO IS NOT NULL AND T.ASSIGNMENT_TO <>  0 THEN                       ") 
			.append(" (SELECT DISTINCT EMP.FIRST_NAME || '-' || DT.NAME                                     ") 
			.append(" FROM EMPLOYEE EMP                                                                     ") 
			.append(" INNER JOIN EMPLOYEE_DEPARTMENT_MAPING EDM                                             ") 
			.append(" ON EDM.EMPLOYEE_ID=EMP.EMP_ID AND EDM.STATUS=:STATUS                                  ") 
			.append(" INNER JOIN DEPARTMENT_ROLE_MAPPING DRM                                                ") 
			.append(" ON DRM.DEPARTMENT_ROLE_MAPPING_ID=EDM.DEPARTMENT_ROLE_MAPPING_ID                      ") 
			.append(" AND DRM.STATUS=:STATUS                                                                ") 
			.append(" INNER JOIN DEPARTMENT DT                                                              ") 
			.append(" ON DT.DEPT_ID=DRM.DEPT_ID AND DT.STATUS_ID=:STATUS                                    ") 
			.append(" WHERE EMP.EMP_ID = T.ASSIGNMENT_TO AND EMP.STATUS_ID = :STATUS)                       ") 
			.append(" ELSE E.FIRST_NAME || '-'|| DT.NAME                                                    ") 
			.append(" END AS PENDING_DEPT_EMP,                                                              ") 
			.append(" CASE                                                                                  ") 
			.append(" WHEN STATUS_UPDATE_TYPE=7 THEN (SELECT 'CUSTOMER-' || NAME_PREFIX ||' '               ") 
			.append(" || FIRST_NAME FROM CUSTOMER WHERE CUST_ID=T.STATUS_UPDATED_BY)                        ") 
			.append(" WHEN STATUS_UPDATE_TYPE=8 THEN 'EMPLOYEE-' || E.FIRST_NAME                            ") 
			.append(" ELSE NULL                                                                             ") 
			.append(" END AS CLOSED_BY                                                                      ") 
			.append(" FROM TICKET T                                                                         ") 
			.append(" INNER JOIN                                                                            ") 
			.append(" FLAT_BOOKING FB                                                                       ") 
			.append(" ON T.BOOKING_ID = FB.FLAT_BOOK_ID                                                     ") 
			.append(" INNER JOIN                                                                            ") 
			.append(" CUSTOMER CUST                                                                         ") 
			.append(" ON CUST.CUST_ID=FB.CUST_ID                                                            ") 
			.append(" INNER JOIN FLAT F                                                                     ") 
			.append(" ON FB.FLAT_ID = F.FLAT_ID                                                             ") 
			.append(" INNER JOIN FLOOR_DETAILS FD                                                           ") 
			.append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID                                                   ") 
			.append(" INNER JOIN FLOOR FL                                                                   ") 
			.append(" ON FL.FLOOR_ID = FD.FLOOR_ID                                                          ") 
			.append(" INNER JOIN BLOCK_DETAILS BD                                                           ") 
			.append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID                                                  ") 
			.append(" INNER JOIN BLOCK BL                                                                   ") 
			.append(" ON BL.BLOCK_ID = BD.BLOCK_ID                                                          ") 
			.append(" INNER JOIN SITE S                                                                     ") 
			.append(" ON BD.SITE_ID = S.SITE_ID                                                             ") 
			.append(" INNER JOIN                                                                            ") 
			.append(" TICKET_TYPE_DETAILS TYD                                                               ") 
			.append(" ON T.TICKET_TYPE_DETAILS_ID = TYD.TICKET_TYPE_DETAILS_ID                              ") 
			.append(" INNER JOIN TICKET_TYPE TT                                                             ") 
			.append(" ON TT.TICKET_TYPE_ID = TYD.TICKET_TYPE_ID                                             ") 
			.append(" INNER JOIN EMPLOYEE_DETAILS ED                                                        ") 
			.append(" ON TYD.EMPLOYEE_DETAILS_ID = ED.EMP_DETAILS_ID                                        ") 
			.append(" INNER JOIN EMPLOYEE E                                                                 ") 
			.append(" ON ED.EMPLOYEE_ID = E.EMP_ID                                                          ") 
			.append(" INNER JOIN DEPARTMENT DT                                                              ") 
			.append(" ON DT.DEPT_ID=TYD.DEPARTMENT_ID                                                       ")                                             
			.append(" LEFT JOIN DEPARTMENT DEPT                                                             ") 
			.append(" ON T.DEPARTMENT_ID = DEPT.DEPT_ID                                                     ") 
			.append(" LEFT JOIN TICKET_MAIN_TYPE TMT                                                        ") 
			.append(" ON TT.TICKET_MAIN_TYPE_ID = TMT.ID                                                    ") 
			.toString();
	
	/* This query is for getting Ticket Pending Dept or Emp Details */
	public static final String QRY_TO_GET_TICKET_PENDING_DEPT_DTLS = new StringBuilder(" SELECT              ")
			.append(" DISTINCT 'LEVEL-' ||TELVM.LEVEL_ID || '-' || EMP.FIRST_NAME                            ")        
			.append(" || '-' || DT.NAME AS PENDING_EMP_OR_DEPT_NAME, EMP.EMP_ID AS PENDING_EMP_OR_DEPT_ID,   ")
			.append(" 114 AS TYPE_ID                                                                         ")
			.append(" FROM TICKET_ESCA_LVL_MAP TELVM                                                         ")        
			.append(" INNER JOIN TICKET_ESC_LEVEL_EMP_MAP TELEM                                              ")
			.append(" ON (TELEM.TICKET_ESC_LVL_MAP_ID = TELVM.ID)                                            ")
			.append(" INNER JOIN EMPLOYEE EMP                                                                ")
			.append(" ON (TELEM.EMPLOYEE_ID = EMP.EMP_ID)                                                    ")
			.append(" INNER JOIN EMPLOYEE_DEPARTMENT_MAPING EDM                                              ")
			.append(" ON (EDM.EMPLOYEE_ID=EMP.EMP_ID AND EDM.STATUS=:STATUS)                                 ")
			.append(" INNER JOIN DEPARTMENT_ROLE_MAPPING DRM                                                 ")
			.append(" ON (DRM.DEPARTMENT_ROLE_MAPPING_ID=EDM.DEPARTMENT_ROLE_MAPPING_ID                      ")
			.append(" AND DRM.STATUS=:STATUS)                                                                ")
			.append(" INNER JOIN DEPARTMENT DT                                                               ")
			.append(" ON (DT.DEPT_ID=DRM.DEPT_ID AND DT.STATUS_ID=:STATUS)                                   ")
			.append(" INNER JOIN TICKET_ESCA_EXT_APPROVAL_LEVAL TEEAL                                        ")
			.append(" ON(TEEAL.ID=TELVM.TICKET_ESC_APR_LVL_ID)                                               ")
			.append(" INNER JOIN TICKET_TYPE TT                                                              ")
			.append(" ON(TT.TICKET_TYPE_ID=TEEAL.TICKET_TYPE_ID AND TT.STATUS_ID=:STATUS)                    ")
			.append(" INNER JOIN TICKET_TYPE_DETAILS TTD                                                     ")
			.append(" ON(TTD.TICKET_TYPE_ID=TT.TICKET_TYPE_ID AND TTD.DEPARTMENT_ID=:DEPARTMENT_ID           ")
			.append(" AND TTD.STATUS=:STATUS  AND TTD.BLOCK_ID IS NOT NULL)                                  ")
			.append(" WHERE TELVM.STATUS_ID=:STATUS AND  TTD.DEPARTMENT_ID=:DEPARTMENT_ID                    ")
			.append(" AND TEEAL.SITE_ID IN (:SITE_IDS) AND TTD.SITE_ID IN (:SITE_IDS)                        ")
			.append(" UNION ALL                                                                              ")
			.append(" SELECT DISTINCT DT.NAME AS PENDING_EMP_OR_DEPT_NAME,                                   ")
			.append(" TFM.GENERIC_ID AS PENDING_EMP_OR_DEPT_ID,                                              ")
			.append(" 9 AS TYPE_ID                                                                           ")
			.append(" FROM TICKET_FORWARD_MENU TFM                                                           ")
			.append(" JOIN DEPARTMENT DT                                                                     ")
			.append(" ON(DT.DEPT_ID=TFM.GENERIC_ID AND TFM.TYPE_OF=9)                                        ")
			.append(" WHERE TFM.STATUS_ID=:STATUS AND TFM.DEPARTMENT_ID=:DEPARTMENT_ID                       ")
			.append(" UNION ALL                                                                              ")
			.append(" SELECT DISTINCT EMP.FIRST_NAME || '-' || DT.NAME AS PENDING_EMP_OR_DEPT_NAME,          ")
			.append(" EMP.EMP_ID AS PENDING_EMP_OR_DEPT_ID, 8 AS TYPE_ID                                     ")
			.append(" FROM EMPLOYEE EMP                                                                      ")
			.append(" INNER JOIN EMPLOYEE_DEPARTMENT_MAPING EDM                                              ")
			.append(" ON EDM.EMPLOYEE_ID=EMP.EMP_ID AND EDM.STATUS=:STATUS                                   ")
			.append(" INNER JOIN DEPARTMENT_ROLE_MAPPING DRM                                                 ")
			.append(" ON DRM.DEPARTMENT_ROLE_MAPPING_ID=EDM.DEPARTMENT_ROLE_MAPPING_ID                       ")
			.append(" AND DRM.STATUS=:STATUS                                                                 ")
			.append(" INNER JOIN DEPARTMENT DT                                                               ")
			.append(" ON DT.DEPT_ID=DRM.DEPT_ID AND DT.STATUS_ID=:STATUS                                     ")
			.append(" WHERE EMP.STATUS_ID=:STATUS AND EMP.EMP_ID=:EMP_ID                                     ")
			.append(" ORDER BY TYPE_ID, PENDING_EMP_OR_DEPT_NAME                                             ")
			.toString();
	
	
	
	   /**********INBOX *********************/
	  /*QUERY TO GET WITH SITE_IDS*/
	  public static final String QRY_TO_GET_MESSAGES_WRT_SITEIDS = new StringBuilder()
              .append(" AND  S.SITE_ID IN (:SITE_IDS)  ")
              .toString();
	  /*QUERY TO GET WITH BLOCK_IDS*/
	  public static final String QRY_TO_GET_MESSAGES_WRT_BLOCKSIDS = new StringBuilder()
              .append(" AND BD.BLOCK_ID IN (:BLOCK_IDS)  ")
              .toString();
	  /*QUERY TO GET WITH FLOOR_IDS*/
	  public static final String QRY_TO_GET_MESSAGES_WRT_FLOOR_IDS = new StringBuilder()
              .append(" AND FD.FLOOR_DET_ID  IN (:FLOOR_IDS)  ")
              .toString();
	  /*QUERY TO GET WITH SUBJECT*/
	  public static final String QRY_TO_GET_MESSAGES_WRT_SUBJECT = new StringBuilder()
              .append(" AND LOWER(MSG.SUBJECT) LIKE :SUBJECT  ")
              .toString();
	  /*QUERY TO GET WITH CUSTOMER(FLAT_BOOK_ID)*/
	  public static final String QRY_TO_GET_MESSAGES_WRT_CUSTOMER = new StringBuilder()
              .append(" AND FB.FLAT_BOOK_ID=:FLAT_BOOK_ID  ")
              .toString();
	  
	  /*QUERY TO GET SITE DETAILS*/
	  public static final String QRY_TO_GET_SITES = new StringBuilder()
              .append(" SELECT  ")
              .append(" DISTINCT S.NAME AS SITE_NAME ,S.SITE_ID,'nonCCSite' AS siteStatus  ")
              .append(" FROM SITE S  ")
              .append(" WHERE S.SITE_ID IN(:SITE_ID) ")
              .append(" UNION   ")
              .append(" SELECT  ")
              .append(" DISTINCT S.NAME AS SITE_NAME ,S.SITE_ID ,'CCSite' AS siteStatus ")
              .append(" FROM  ")
              .append(" FLAT_BOOKING FB INNER JOIN FLAT F ON FB.FLAT_ID = F.FLAT_ID   ")
              .append(" INNER JOIN FLOOR_DETAILS FD  ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID   ")
              .append(" INNER JOIN BLOCK_DETAILS BD  ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID  ")
              .append(" INNER JOIN SITE S  ON BD.SITE_ID = S.SITE_ID   ")
              .append(" WHERE FB.FLAT_BOOK_ID IN(  ")
              .append(" SELECT DISTINCT MS.SEND_TO  ")
              .append(" FROM  ")
              .append(" MESSENGER MS  ")
              .append(" INNER JOIN  ")
              .append(" MESSENGER_PERSONS_INVOLVED MPI ON MS.MESSENGER_ID=MPI.MESSENGER_ID  ")
              .append(" WHERE  ")
              .append(" MPI.TYPE_ID=:TYPE_ID AND MPI.RECIPENT=:RECIPENT)  ")
              .append(" AND S.SITE_ID NOT IN (SELECT DISTINCT S.SITE_ID  ")
              .append(" FROM SITE S   ")
              .append(" WHERE S.SITE_ID IN(:SITE_ID) ) ")
              .append(" ORDER BY  SITE_NAME  ")
              .toString();
	  
	  public static final String QRY_TO_GET_MESSAGES = new StringBuilder()
              .append(" SELECT ")
              .append(" MSG.MESSENGER_ID AS MESSENGER_ID, ")
              .append(" MSG.MESSAGE_ID AS MESSAGE_ID, ")
              .append(" MSG.CREATED_BY_ID AS CREATED_BY_ID , ")
              .append(" MSG.CREATED_BY_TYPE AS CREATED_BY_TYPE, ")
              .append(" MSG.STATUS AS STATUS, ")
              .append(" UPPER(ST.STATUS) AS MESSANGER_STATUS, ")
              .append(" MSG.SEND_TO AS SEND_TO, ")
              .append(" MSG.SEND_TYPE AS SEND_TYPE, ")
              .append(" MSG.CREATED_DATE AS CREATED_DATE, ")
              .append(" MSG.LAST_CHATTED_DATE AS LAST_CHATTED_DATE, ")
              .append(" MSG.SUBJECT AS SUBJECT, ")
              .append(" FB.FLAT_BOOK_ID AS FLAT_BOOK_ID, ")
              .append(" CUST.CUST_ID AS CUST_ID, ")
              .append(" CUST.NAME_PREFIX ||' '|| CUST.FIRST_NAME AS CUST_NAME, ")
              .append(" EMP.FIRST_NAME AS EMP_NAME,")
              .append(" EMP.FIRST_NAME AS CREATED_BY_NAME,")
              .append(" DEPT.NAME AS DEPT_NAME,")
              .append(" DEPT.DEPT_ID AS DEPT_ID,")
              .append(" EMP.EMP_ID AS EMP_ID,")  
              .append(" F.FLAT_ID AS FLAT_ID,  ")
              .append(" F.FLAT_NO AS FLAT_NO,  ")
              .append(" FL.NAME AS FLOOR_NAME, ")
              .append(" BL.NAME AS BLOCK_NAME, ")
              .append(" S.NAME AS SITE_NAME,  ")
              .append(" S.SITE_ID AS SITE_ID,  ")
              
              .append(" (SELECT  ")
              .append(" CASE WHEN  MCVS.VIEW_STATUS=85 THEN 'VIEWED' ELSE 'NOT_VIEWED' END AS  RESULTS  ")
              .append(" FROM MESSENGER_CONVERS_VIEW_STATUS MCVS   ")
              .append(" INNER JOIN MESSENGER_CONVERSATION MC  ")
              .append(" ON MC.MESSENGER_CONVERSATION_ID = MCVS.MESSENGER_CONVERSATION_ID   ")
              .append(" WHERE MCVS.RECIPIENT_TYPE IN (:RECIPIENT_TYPE)   ")
              .append(" AND MCVS.RECIPIENT_ID IN (:RECIPIENT_ID) ")
              .append(" AND MC.MESSENGER_ID IN(MSG.MESSENGER_ID)  ")
              .append(" AND MCVS.STATUS IN(:STATUS_ID)   ")
              .append(" order by MCVS.MESSENGER_CONVERSATION_ID DESC FETCH FIRST 1 ROWS ONLY) AS VIEW_DETAILS  ")
              
              .append(" FROM MESSENGER MSG  ")
              .append(" INNER JOIN EMPLOYEE EMP ")
              .append(" ON MSG.CREATED_BY_ID = EMP.EMP_ID	 ")															 
			  .append(" INNER JOIN EMPLOYEE_DETAILS ED ")
			  .append(" ON ED.EMPLOYEE_ID = EMP.EMP_ID ")
			  .append(" INNER JOIN DEPARTMENT DEPT ")
			  .append(" ON ED.DEPT_ID = DEPT.DEPT_ID ")
              .append(" INNER JOIN FLAT_BOOKING FB  ")
              .append(" ON MSG.SEND_TO = FB.FLAT_BOOK_ID AND  MSG.STATUS IN (:STATUS_ID)  ")
              .append(" INNER JOIN  ")
              .append(" FLAT F  ")
              .append(" ON F.FLAT_ID = FB.FLAT_ID AND FB.STATUS_ID IN (:STATUS_ID)  ")
              .append(" INNER JOIN FLOOR_DETAILS FD  ")                                                                          
              .append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID in (:STATUS_ID)  AND F.STATUS_ID IN (:STATUS_ID)  ")                                  
              .append(" INNER JOIN FLOOR FL   ")                                                                                    
              .append(" ON FL.FLOOR_ID = FD.FLOOR_ID  ")                                                                            
              .append(" INNER JOIN BLOCK_DETAILS BD   ")                                                                            
              .append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID IN (:STATUS_ID)  ")                                   
              .append(" INNER JOIN BLOCK BL  ")                                                                                     
              .append(" ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID IN (:STATUS_ID)  ")
              .append(" INNER JOIN SITE S  ")
              .append(" ON BD.SITE_ID = S.SITE_ID  ")
              .append(" INNER JOIN CUSTOMER CUST  ")
              .append(" ON FB.CUST_ID = CUST.CUST_ID AND CUST.STATUS_ID IN (:STATUS_ID)  ")
              .append(" INNER JOIN STATUS ST  ")
              .append(" ON ST.STATUS_ID = MSG.STATUS  ")
              .append(" WHERE 1=1 ")
              .toString()
              ;
		
		/* QRY_TO_SEARCH_ALL_CUSTOMER_FLAT_NOS for view Customer with Flat Search */
		public static final String QRY_TO_SEARCH_ALL_CUSTOMER_FLAT_NOS = new StringBuilder(" SELECT DISTINCT ")
				.append(" CUST.CUST_ID AS CUST_ID, FT.FLAT_NO AS FLAT_NO, FT.FLAT_ID, FLATB.FLAT_BOOK_ID, ")
				.append(" (CUST.FIRST_NAME || '-' || FT.FLAT_NO) AS CUST_NAME_FLAT_NO ")
				.append(" FROM CUSTOMER CUST ")
				.append(" JOIN FLAT_BOOKING FLATB ON(FLATB.CUST_ID=CUST.CUST_ID) ")  
				.append(" JOIN FLAT FT ON(FT.FLAT_ID=FLATB.FLAT_ID) ")
				.append(" JOIN FLOOR_DETAILS FLRD ON(FLRD.FLOOR_DET_ID=FT.FLOOR_DET_ID) ")
				.append(" INNER JOIN FLOOR FL ON FL.FLOOR_ID = FLRD.FLOOR_ID ")
				.append(" JOIN BLOCK_DETAILS BLCKDT ON(BLCKDT.BLOCK_DET_ID=FLRD.BLOCK_DET_ID) ")
				.append(" INNER JOIN BLOCK BL ON BL.BLOCK_ID = BLCKDT.BLOCK_ID  AND BL.STATUS_ID IN (:STATUS_ID) ")
				.append(" JOIN SITE ST ON(ST.SITE_ID=BLCKDT.SITE_ID) ")
				.append(" JOIN APP_REGISTRATION APPR ON(FLATB.CUST_ID=APPR.CUST_ID AND APPR.STATUS_ID=6)  ")
				.append(" JOIN DEVICE DEVICE ON(APPR.DEVICE_ID=DEVICE.DEVICE_ID AND DEVICE.STATUS_ID=6)   ")
				.toString();
		
		 /*QUERY TO GET WITH SITE_IDS*/
		  public static final String QRY_TO_GET_CUSTOMER_WRT_SITEIDS = new StringBuilder()
	              .append(" AND  ST.SITE_ID IN (:SITE_IDS)  ")
	              .toString();
		  /*QUERY TO GET WITH BLOCK_IDS*/
		  public static final String QRY_TO_GET_CUSTOMER_WRT_BLOCKSIDS = new StringBuilder()
	              .append(" AND BL.BLOCK_ID IN (:BLOCK_IDS)  ")
	              .toString();
		  /*QUERY TO GET WITH FLOOR_IDS*/
		  public static final String QRY_TO_GET_CUSTOMER_WRT_FLOOR_IDS = new StringBuilder()
	              .append(" AND FLRD.FLOOR_DET_ID IN (:FLOOR_IDS)  ")
	              .toString();
		  /*QUERY TO GET WITH FLAT_IDS*/
		  public static final String QRY_TO_GET_CUSTOMER_WRT_FLATIDS = new StringBuilder()
                  .append(" AND FT.FLAT_ID IN (:FLAT_IDS)  ")
                  .toString();
		  
		  public static final String QRY_TO_GET_APP_NOT_REGISTERED_CUST = new StringBuilder()
                  .append(" SELECT DISTINCT FB.FLAT_BOOK_ID,FT.FLAT_ID ")
                  .append(" FROM  ")
                  .append(" FLAT_BOOKING FB ")
                  .append(" JOIN FLAT FT ON(FT.FLAT_ID=FB.FLAT_ID) ")
                  .append(" JOIN FLOOR_DETAILS FLD ON(FLD.FLOOR_DET_ID=FT.FLOOR_DET_ID) ")
                  .append(" JOIN BLOCK_DETAILS BD ON(BD.BLOCK_DET_ID=FLD.BLOCK_DET_ID) ")
                  .append(" JOIN SITE ST ON(ST.SITE_ID=BD.SITE_ID) ")
                  .append(" WHERE FB.STATUS_ID=6 AND FT.STATUS_ID=6 ")
                  .append(" AND ST.SITE_ID IN (:TYPE_ID) AND FB.FLAT_BOOK_ID  ")
                  .append(" NOT IN ( SELECT  ")
                  .append(" DISTINCT FB.FLAT_BOOK_ID  ")
                  .append(" FROM DEVICE DE ")
                  .append(" JOIN APP_REGISTRATION APP ON (APP.DEVICE_ID=DE.DEVICE_ID ")
                  .append(" AND APP.STATUS_ID=:STATUS_ID) ")
                  .append(" JOIN FLAT_BOOKING FB ON (FB.CUST_ID=APP.CUST_ID) ")
                  .append(" JOIN FLAT FT ON(FT.FLAT_ID=FB.FLAT_ID) ")
                  .append(" JOIN FLOOR_DETAILS FLD ON(FLD.FLOOR_DET_ID=FT.FLOOR_DET_ID) ")
                  .append(" JOIN BLOCK_DETAILS BD ON(BD.BLOCK_DET_ID=FLD.BLOCK_DET_ID) ")
                  .append(" JOIN SITE ST ON(ST.SITE_ID=BD.SITE_ID) ")
                  .append(" WHERE FB.STATUS_ID=:STATUS_ID AND FT.STATUS_ID=:STATUS_ID ")
                  .append(" AND ST.SITE_ID IN (:TYPE_ID) ")
                  .append(" AND TRUNC(CASE  ")
                  .append(" WHEN FB.AGREEMENT_DATE IS NOT NULL THEN FB.AGREEMENT_DATE ")
                  .append(" WHEN FB.BOOKING_DATE IS NOT NULL THEN FB.BOOKING_DATE ")
                  .append(" ELSE FB.CREATED_DATE  ")
                  .append(" END)<=SYSDATE)  ")
                  .toString();
		  
		  /***********MPR MODULE***************/
		   public static final String UPDATE_MPR_VIEW_STATUS_NOT_REG_CUST=" UPDATE MPR_SENT_DETAILS SET ISVIEWED=:ISVIEWED,VIEWED_TIME=SYSDATE,OS_TYPE=(SELECT OS_TYPE FROM DEVICE WHERE DEVICE_ID=(SELECT DEVICE_ID FROM APP_REGISTRATION WHERE APP_REG_ID=:APP_REG_ID)) WHERE MPR_ID=:MPR_ID AND FLAT_BOOKING_ID IN(:FLATIDS) AND ISDELIVERED=:ISDELIVERED AND ISVIEWED IS NULL  ";
			
		  
			
		   public static final String INSERT_MPR_VIEW_STATUS_NOT_REG_CUST=" INSERT INTO MPR_SENT_DETAILS (FLAT_BOOKING_ID,MPR_ID,ISDELIVERED,ISVIEWED,VIEWED_TIME,DEVICE_ID,OS_TYPE) VALUES(:FLAT_BOOKING_ID, :MPR_ID,:ISDELIVERED,:ISVIEWED,sysdate,(SELECT DEVICE_ID FROM APP_REGISTRATION WHERE APP_REG_ID=:APP_REG_ID),(SELECT OS_TYPE FROM DEVICE WHERE DEVICE_ID=(SELECT DEVICE_ID FROM APP_REGISTRATION WHERE APP_REG_ID=:APP_REG_ID))) ";
				
		   public static final String QRY_TO_GET_NOC_VALIDATION_DETAILS = new StringBuilder("")
				   .append(" SELECT NCM.NOC_CHECLIST_ID,  NCM.CHARGE_NAME,")
				   .append("   NCM.STATUS_ID,  NCM.MATA_DATA_TYPE_ID,  NCSW.NOC_CHECKLIST_SITE_WISE_ID,")
				   .append("   NCSW.NOC_CHECLIST_ID,  NCSW.STATUS_ID,  NCSW.IS_VALIDATION_REQUIRED,")
				   .append("   NCSW.SITE_ID,  NCSW.SITE_OTHER_CHARGES_ID,  SOC.SITE_OTHER_CHARGES_ID,")
				   .append("   SOC.AMOUNT,  SOC.SITE_ID,  SOC.STATUS_ID,")//  SOC.METE_DATA_TYPE_ID,
				   .append("   SOC.CREATED_BY,  SOC.CREATED_DATE,  SOC.SR_NO,  SOC.AMT_FOR_YEARS,  SOC.FLATS_SALE_OWNERS_ID,")
				   .append("   SOC.UNIT ")
				   .append("FROM NOC_CHECKLIST_SITE_WISE  NCSW,")
				   .append("   NOC_CHECKLIST_MASTER NCM LEFT OUTER JOIN ")
				   .append("   SITE_OTHER_CHARGES  SOC ON SOC.METE_DATA_TYPE_ID = NCM.MATA_DATA_TYPE_ID")
				   .append("   AND SOC.STATUS_ID = :STATUS_ID AND SOC.SITE_ID = :SITE_ID  ")
				   .append("WHERE NCM.NOC_CHECLIST_ID = NCSW.NOC_CHECLIST_ID  ")
				   .append(" AND NCSW.SITE_ID = :SITE_ID   AND  NCSW.IS_VALIDATION_REQUIRED = 1 ")
				   .append(" order by NCM.NOC_CHECLIST_ID ")
				   .toString();
		   //1 means validation is required		  
		   
		   public static final String QRY_TO_GET_EXTRA_CAR_PARKING_DETAILS1 = new StringBuilder("")
			   .append(" SELECT ECPD.EXTRA_CAR_PARKING_DTLS_ID,  ECPD.BOOKING_FORM_ID,  ECPD.SITE_ID,  ECPD.NUMBER_OF_CAR_PARKING, ")
			   .append("   ECPD.CAR_PARKING_AMOUNT,  ECPD.PAID_AMOUNT,  ECPD.STATUS_ID ")
			   .append(" FROM EXTRA_CAR_PARKING_DETAILS ECPD WHERE ECPD.BOOKING_FORM_ID = :BOOKING_FORM_ID AND ECPD.STATUS_ID = :STATUS_ID ")
			   .toString();

		   public static final String QRY_TO_GET_EXTRA_CAR_PARKING_DETAILS = new StringBuilder("")
		    .append(" SELECT  SUM(ECPD.CAR_PARKING_AMOUNT) AS CAR_PARKING_AMOUNT,  SUM(ECPD.PAID_AMOUNT) AS PAID_AMOUNT ")
		    .append(" FROM EXTRA_CAR_PARKING_DETAILS ECPD WHERE ECPD.BOOKING_FORM_ID = 1296  ")
		    .append(" AND ECPD.STATUS_ID = 6 ")
		    .toString();
	   
          /* Booking Form Module */
		  /*QUERY to update Customer Application Details in CUSTOMER_APPLICATION Table by flatBookId */
		  public static final String QRY_TO_UPDATE_CUSTOMER_APPLICATION = new StringBuilder(" UPDATE ")
		          .append(" CUSTOMER_APPLICATION SET ")
		          .append(" LEAD_ID=:leadId ")
		          .append(" ,ACK_ID=:ackId ")
		          .append(" ,APP_NO=:appNo ")
		          .append(" ,MODIFIED_DATE=SYSDATE ")
		          .append(" ,STM_ID=:stmId ")
		          .append(" ,REASON_FOR_NOKYC=:reasonForNoKYC ")
		          .append(" WHERE FLAT_BOOK_ID=:flatBookId ")
		          .toString();
		  
		  //reports module
			public static final String QRY_TO_GET_TICKETTYPE_WISE_TICKET_COUNT = new StringBuilder()	   
					.append("  SELECT   COUNT(DISTINCT T.TICKET_ID) AS TICKET_COUNT,   TT.TICKET_TYPE_ID AS TICKET_TYPE_ID,   TMT.NAME ||'/'|| TT.NAME AS TICKET_TYPE,  ")  
					.append("  T.TICKET_STATUS AS TICKET_STATUS_ID,   S.STATUS AS TICKET_STATUS  ")    
					.append("  ,COUNT(DISTINCT TE.TICKET_ID ) AS ESCALATION_TICKET_COUNT   ,T.TICKET_ID AS TICKET_IDS ")    
					.append("  FROM   TICKET T   INNER JOIN TICKET_TYPE TT   ON T.TICKET_TYPE_ID = TT.TICKET_TYPE_ID    ")    
					.append("  LEFT OUTER JOIN TICKET_MAIN_TYPE TMT   ON TMT.ID = TT.TICKET_MAIN_TYPE_ID   ")    
					.append("  LEFT OUTER JOIN TICKET_ESCALATION TE ON (T.TICKET_ID =TE.TICKET_ID AND TE.TICKET_ESCALATION_ID=(SELECT MAX(TICKET_ESCALATION_ID) FROM TICKET_ESCALATION WHERE TICKET_ID=T.TICKET_ID)) ")    
					.append("  INNER JOIN STATUS S   ON T.TICKET_STATUS = S.STATUS_ID   ")    
					.append("  JOIN TICKET_TYPE_DETAILS TTD ON TTD.TICKET_TYPE_DETAILS_ID=T.TICKET_TYPE_DETAILS_ID  ")    
					.append("  AND TTD.STATUS = :STATUS_ID  ")    
					.append("  WHERE T.STATUS = :STATUS_ID  ")    
					.append("  AND T.BOOKING_ID IN (  ")    
					.append("  SELECT              FB.FLAT_BOOK_ID  ")    
					.append("  FROM  FLAT_BOOKING FB  ")    
					.append("  INNER JOIN FLAT F     ")    
					.append("  ON FB.FLAT_ID = F.FLAT_ID   ")    
					.append("  AND FB.STATUS_ID = :STATUS_ID AND F.STATUS_ID = :STATUS_ID   ")    
					.append("  INNER JOIN FLOOR_DETAILS FD             ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID = :STATUS_ID    ")    
					.append("  INNER JOIN FLOOR FL            ON FL.FLOOR_ID = FD.FLOOR_ID  ")    
					.append("  INNER JOIN BLOCK_DETAILS BD              ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID = :STATUS_ID    ")    
					.append("  INNER JOIN BLOCK BL            ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID = :STATUS_ID   ")    
					.append("  INNER JOIN SITE S              ON BD.SITE_ID = S.SITE_ID  AND S.SITE_ID IN (:SITE_ID)) ")    
					.append(" AND T.CREATED_DATE BETWEEN :STARTDATE AND :ENDDATE ")
					.append(" AND TTD.DEPARTMENT_ID IN (:DEPARTMENT_IDS) ")
					.append(" GROUP BY T.TICKET_STATUS,S.STATUS,TT.TICKET_TYPE_ID,TT.NAME,TMT.NAME,T.TICKET_ID ")
					.append(" ORDER BY TT.TICKET_TYPE_ID ")
					.toString();
					
					
					   /* MESSENGER QUERIES */
		   /* For Customer Single Page Data request */
           public static final String QRY_TO_GET_MESSAGES_WITHOUT_BOOKING_STATUS = new StringBuilder()
                   .append(" SELECT ")
                   .append(" MSG.MESSENGER_ID AS MESSENGER_ID, ")
                   .append(" MSG.MESSAGE_ID AS MESSAGE_ID, ")
                   .append(" MSG.CREATED_BY_ID AS CREATED_BY_ID , ")
                   .append(" MSG.CREATED_BY_TYPE AS CREATED_BY_TYPE, ")
                   .append(" MSG.STATUS AS STATUS, ")
                   .append(" UPPER(ST.STATUS) AS MESSANGER_STATUS, ")
                   .append(" MSG.SEND_TO AS SEND_TO, ")
                   .append(" MSG.SEND_TYPE AS SEND_TYPE, ")
                   .append(" MSG.CREATED_DATE AS CREATED_DATE, ")
                   .append(" MSG.LAST_CHATTED_DATE AS LAST_CHATTED_DATE, ")
                   .append(" MSG.SUBJECT AS SUBJECT, ")
                   .append(" FB.FLAT_BOOK_ID AS FLAT_BOOK_ID, ")
                   .append(" CUST.CUST_ID AS CUST_ID, ")
                   .append(" CUST.NAME_PREFIX ||' '|| CUST.FIRST_NAME AS CUST_NAME, ")
                   .append(" EMP.FIRST_NAME AS EMP_NAME,")
                   .append(" EMP.FIRST_NAME AS CREATED_BY_NAME,")
                   .append(" DEPT.NAME AS DEPT_NAME,")
                   .append(" DEPT.DEPT_ID AS DEPT_ID,")
                   .append(" EMP.EMP_ID AS EMP_ID,")  
                   .append(" F.FLAT_ID AS FLAT_ID,  ")
                   .append(" F.FLAT_NO AS FLAT_NO,  ")
                   .append(" FL.NAME AS FLOOR_NAME, ")
                   .append(" BL.NAME AS BLOCK_NAME, ")
                   .append(" S.NAME AS SITE_NAME,  ")
                   .append(" S.SITE_ID AS SITE_ID  ")
                   .append(" FROM MESSENGER MSG  ")
                   .append(" INNER JOIN EMPLOYEE EMP ")
                   .append(" ON MSG.CREATED_BY_ID = EMP.EMP_ID	 ")															 
				   .append(" INNER JOIN EMPLOYEE_DETAILS ED ")
				   .append(" ON ED.EMPLOYEE_ID = EMP.EMP_ID ")
				   .append(" INNER JOIN DEPARTMENT DEPT ")
				   .append(" ON ED.DEPT_ID = DEPT.DEPT_ID ")
                   .append(" INNER JOIN FLAT_BOOKING FB  ")
                   .append(" ON MSG.SEND_TO = FB.FLAT_BOOK_ID AND  MSG.STATUS IN (:STATUS_ID)  ")
                   .append(" INNER JOIN  ")
                   .append(" FLAT F  ")
                   .append(" ON F.FLAT_ID = FB.FLAT_ID ")
                   .append(" INNER JOIN FLOOR_DETAILS FD  ")                                                                          
                   .append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  AND FD.STATUS_ID in (:STATUS_ID)  AND F.STATUS_ID IN (:STATUS_ID)  ")                                  
                   .append(" INNER JOIN FLOOR FL   ")                                                                                    
                   .append(" ON FL.FLOOR_ID = FD.FLOOR_ID  ")                                                                            
                   .append(" INNER JOIN BLOCK_DETAILS BD   ")                                                                            
                   .append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID AND BD.STATUS_ID IN (:STATUS_ID)  ")                                   
                   .append(" INNER JOIN BLOCK BL  ")                                                                                     
                   .append(" ON BL.BLOCK_ID = BD.BLOCK_ID  AND BL.STATUS_ID IN (:STATUS_ID)  ")
                   .append(" INNER JOIN SITE S  ")
                   .append(" ON BD.SITE_ID = S.SITE_ID  ")
                   .append(" INNER JOIN CUSTOMER CUST  ")
                   .append(" ON FB.CUST_ID = CUST.CUST_ID ")
                   .append(" INNER JOIN STATUS ST  ")
                   .append(" ON ST.STATUS_ID = MSG.STATUS  ")
                   .append(" WHERE 1=1 ")
                   .toString();
           
      
           
           // home loan
           
       	
       	/* QRY_TO_GET_EMPLOYEE_DETAILS_FOR_MAIL FROM CUSTOMER */
       	public static final String QRY_TO_GET_EMPLOYEE_DETAILS_FOR_MAIL = new StringBuilder("SELECT ")
       			.append(" DISTINCT EDSM.EMPLOYEE_ID,EMP.EMAIL AS EMAIL,EMP.EMAIL AS EMP_EMAIL ")
       			.append(" ,(SELECT CONCAT(CONCAT(EMP.FIRST_NAME,' '),EMP.LAST_NAME) FROM EMPLOYEE EMP WHERE EMP.EMP_ID=EDSM.EMPLOYEE_ID) AS EMP_NAME ")
       			//.append(" ,(SELECT EMP.EMAIL FROM EMPLOYEE EMP WHERE EMP.EMP_ID=EDSM.EMPLOYEE_ID) AS EMP_EMAIL ")
       			//.append(" EDSM.BLOCK_ID, ")
       		//	.append(" EDSM.DEPT_ID, ")
       			//.append(" EDSM.ROLE_ID,EDSM.SITE_ID ")
       			.append(" FROM EMPLOYEE_DEPT_SITE_MAPPING EDSM,EMPLOYEE EMP ")
       			.append(" WHERE  ")
       			.append(" EDSM.SITE_ID=:SITE_ID AND EMP.EMP_ID=EDSM.EMPLOYEE_ID ")
       			.append(" AND EDSM.ROLE_ID IN (:ROLE_ID) ")
       			.append(" AND EDSM.DEPT_ID IN(:DEPT_IDS) ")
       			.append(" AND EDSM.STATUS_ID=:STATUS_ID")
       			.toString();
           
           
    	/* QRY_TO_GET_BANK_LIST */
		public static final String   QRY_TO_GET_BANK_EMAIL_ON_BOOKING= new StringBuilder("  ")
				.append(" SELECT BL.BANKERS_LIST_ID,BL.BANKER_NAME,BPD.EMAIL,BL.IFSC_CODE,BL.ADDRESS,BPD.CONTACT_PERSON,BPD.CONTACT_PERSON_PHONE ")
				.append(" FROM LOAN_BANKERS_LIST BL ")
				.append(" INNER JOIN LOAN_BANKERS_PEOJECTWISE_DEFAULT  BPD ON  BPD.BANKERS_LIST_ID=BL.BANKERS_LIST_ID ")
				.append(" WHERE  BPD.PROJECT_ID=:PROJECT_ID ")
				.append(" AND BL.STATUS_ID=:STATUS_ID ")
				.append(" AND BPD.STATUS_ID=:STATUS_ID ")
				.toString();
           
		/* QRY_TO_GET_CUSTOMER_PROPERTY_DETAILS  FROM FLAT_BOOKING,FLAT,FLOOR,BLOCK,SITE  */
		public static final String QRY_TO_GET_CUSTOMER_PROPERTY_DETAILS_FOR_APPLY_LOAN = new StringBuilder(" SELECT ")
				.append(" FB.STATUS_ID, ")
				.append("(SELECT  CUST.CUST_ID  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS CUST_ID,")
				.append("(SELECT  CUST.NAME_PREFIX  ||' '|| CUST.FIRST_NAME ||' '|| CUST.LAST_NAME  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS CUST_NAME,")
				//.append("(SELECT  CBI.EMAIL FROM CUST_BOOK_INFO CBI WHERE CBI.FLAT_BOOK_ID = FB.FLAT_BOOK_ID AND CBI.CUST_ID = FB.CUST_ID ) AS CUST_EMAIL,")
				.append("(SELECT  CI.EMAIL_ID FROM CONTACT_INFORMATION  CI WHERE  CI.FLATBOOKING_ID = FB.FLAT_BOOK_ID ) AS CUST_EMAIL,")
				.append("(SELECT  CI.CONTACT_NO FROM CONTACT_INFORMATION  CI WHERE  CI.FLATBOOKING_ID = FB.FLAT_BOOK_ID ) AS CONTACT_NO,")
				.append("(SELECT  CUST.PROFILE_PIC FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS CUST_PROFILE_PIC,")
				.append("(SELECT  CBI.SALES_TEAM_LEAD_ID FROM CUST_BOOK_INFO CBI WHERE CBI.FLAT_BOOK_ID = FB.FLAT_BOOK_ID AND CBI.CUST_ID = FB.CUST_ID ) AS SALES_TEAM_LEAD_ID,")
				.append("(SELECT  FC.FLAT_COST FROM FLAT_COST FC WHERE FB.FLAT_ID = FC.FLAT_ID AND FC.STATUS_ID = 6 FETCH FIRST ROW ONLY) AS TOTAL_COST_WITH_GST,")
				.append("(SELECT  FC.FLAT_COST FROM FLAT_COST FC WHERE FB.FLAT_ID = FC.FLAT_ID AND FC.STATUS_ID = 6 FETCH FIRST ROW ONLY) AS TOTAL_COST,")
				.append(" FSO.FLATS_SALE_OWNERS_ID as FLATS_SALE_OWNERS_ID,")
				.append(" NVL(FSO.FLAT_SALE_OWNER,' ') AS FLAT_SALE_OWNER,")
				.append("FB.FLAT_BOOK_ID AS FLAT_BOOK_ID,")
				.append("FB.BOOKING_DATE,")
				.append("NVL(FB.MILESTONE_DAYS,0) AS MILESTONE_DAYS,")
				.append("F.FLAT_ID AS FLAT_ID,")
				.append("F.FLAT_NO AS FLAT_NO,")
				.append("FD.FLOOR_ID AS FLOOR_ID,")
				.append("FL.NAME AS FLOOR_NAME,")
				.append("BD.BLOCK_ID AS BLOCK_ID,")
				.append("BL.NAME AS BLOCK_NAME,")
				.append("S.SITE_ID AS SITE_ID,")
				.append("S.SALES_FORCE_SITE_NAME AS SITE_NAME,")
				.append("S.SHORT_FORM AS SHORT_FORM ")
				.append(" FROM FLAT_BOOKING FB INNER JOIN FLAT F ")
				.append("ON FB.FLAT_ID = F.FLAT_ID ")
				.append("INNER JOIN FLOOR_DETAILS FD ")
				.append("ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID ")
				.append("INNER JOIN FLOOR FL ")
				.append("ON FL.FLOOR_ID = FD.FLOOR_ID ")
				.append("INNER JOIN BLOCK_DETAILS BD ")
				.append("ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID ")
				.append("INNER JOIN BLOCK BL ")
				.append("ON BL.BLOCK_ID = BD.BLOCK_ID ")
				.append("INNER JOIN SITE S ")
				.append("ON BD.SITE_ID = S.SITE_ID ")
				.append(" INNER JOIN FLAT_DETAILS FDT ")
				.append(" ON (FDT.FLAT_ID=F.FLAT_ID) ")
				.append(" FULL JOIN FLATS_SALE_OWNERS FSO ON FSO.FLATS_SALE_OWNERS_ID = FDT.FLATS_SALE_OWNERS_ID AND FSO.STATUS_ID = 6 ")
				.toString();
           
		public static final String   QRY_TO_SAVE_DEFAULT_MAIL_TO_BANKER= new StringBuilder("  ")
				.append("  INSERT INTO LOAN_DEFAULT_MAIL_TO_BANKER(DEFAULT_MAIL_TO_BANKER_ID ,FLAT_BOOKING_ID ,MAIL_SENT_TO ,BANKERS_PROJECTWISWISE_DEFAULT_ID,CREATTION_DATE,STATUS_ID) ")
				.append("  VALUES(DEFAULT_MAIL_TO_BANKER_SEQ.nextval,:FLAT_BOOKING_ID,:MAIL_SENT_TO,:BANKERS_PROJECTWISWISE_DEFAULT_ID,SYSDATE,:STATUS_ID) ")
				.toString();
		
		public static final String   QRY_TO_GET_MAIL_SENT_TO_BANKER_OR_NOT= new StringBuilder("  ")
				.append("  SELECT COUNT(*) FROM  LOAN_DEFAULT_MAIL_TO_BANKER WHERE STATUS_ID=:STATUS_ID AND FLAT_BOOKING_ID=:FLAT_BOOKING_ID ")
				.toString();
		 
	    /* QRY_TO_GET_SHOW_NOC_DETAILS from NOC_RELEASE */
	    public static final String QRY_TO_GET_NOC_DETAILS_LIST =new StringBuilder("  ")
	    		   .append(" SELECT FB.FLAT_BOOK_ID,FB.STATUS_ID, ")
	    		   .append(" FB.CUST_ID,C.FIRST_NAME AS CUST_NAME, ")
	    		   .append(" FD.FLAT_ID,F.FLAT_NO,FLD.FLOOR_ID,FL.NAME AS FLOOR_NAME, ")
	    		   .append(" BD.BLOCK_ID,B.NAME AS BLOCK_NAME,S.SITE_ID, ")
	    		   .append(" S.NAME AS SITE_NAME,NR.NOC_RELEASE_DATE, ")
	    		   .append(" NR.NOC_RELEASE_ID,ND.DOC_LOCATION,ND.URL_LOCATION,ND.NOC_DOCUMENTS_ID,NR.CREATED_BY ")
	    		   .append(" FROM FLAT_DETAILS FD  ")
	    		   .append(" INNER JOIN FLAT F ON FD.FLAT_ID=F.FLAT_ID  ")
	    		   .append(" INNER JOIN FLOOR_DETAILS FLD ON FD.FLOOR_DET_ID=FLD.FLOOR_DET_ID  ")
	    		   .append(" INNER JOIN FLOOR FL ON FLD.FLOOR_ID=FL.FLOOR_ID  ")
	    		   .append(" INNER JOIN BLOCK_DETAILS BD ON FLD.BLOCK_DET_ID=BD.BLOCK_DET_ID  ")
	    		   .append(" INNER JOIN BLOCK B ON BD.BLOCK_ID=B.BLOCK_ID  ")
	    		   .append(" INNER JOIN SITE S ON BD.SITE_ID=S.SITE_ID  ")
	    		   .append(" INNER JOIN FLAT_BOOKING FB ON FB.FLAT_ID=F.FLAT_ID ")
	    		   .append(" INNER JOIN CUSTOMER C ON C.CUST_ID=FB.CUST_ID ")
	    		   .append(" LEFT OUTER JOIN NOC_RELEASE NR ON NR.FLAT_BOOKING_ID=FB.FLAT_BOOK_ID ")
	    		   .append(" LEFT OUTER JOIN NOC_DOCUMENTS ND ON ND.TYPE_ID=NR.NOC_RELEASE_ID ")
	    		   .append(" WHERE FB.STATUS_ID=:STATUS_ID ")
	    		   .append("  ")
				.toString();
	    
		 
	    /* QRY_TO_GET_SHOW_NOC_DETAILS from NOC_RELEASE */
	    public static final String QRY_TO_GET_NOC_PENDING_DETAILS_LIST =new StringBuilder("  ")
	    		   .append(" SELECT FB.FLAT_BOOK_ID,FB.STATUS_ID, ")
	    		   .append(" FB.CUST_ID,C.FIRST_NAME AS CUST_NAME, ")
	    		   .append(" FD.FLAT_ID,F.FLAT_NO,FLD.FLOOR_ID,FL.NAME AS FLOOR_NAME, ")
	    		   .append(" BD.BLOCK_ID,B.NAME AS BLOCK_NAME,S.SITE_ID, ")
	    		   .append(" S.NAME AS SITE_NAME ")
	    		//   .append(" ,NR.NOC_RELEASE_DATE,NR.NOC_RELEASE_ID,ND.DOC_LOCATION,ND.URL_LOCATION,ND.NOC_DOCUMENTS_ID,NR.CREATED_BY ")
	    		   .append(" FROM FLAT_DETAILS FD  ")
	    		   .append(" INNER JOIN FLAT F ON FD.FLAT_ID=F.FLAT_ID  ")
	    		   .append(" INNER JOIN FLOOR_DETAILS FLD ON FD.FLOOR_DET_ID=FLD.FLOOR_DET_ID  ")
	    		   .append(" INNER JOIN FLOOR FL ON FLD.FLOOR_ID=FL.FLOOR_ID  ")
	    		   .append(" INNER JOIN BLOCK_DETAILS BD ON FLD.BLOCK_DET_ID=BD.BLOCK_DET_ID  ")
	    		   .append(" INNER JOIN BLOCK B ON BD.BLOCK_ID=B.BLOCK_ID  ")
	    		   .append(" INNER JOIN SITE S ON BD.SITE_ID=S.SITE_ID  ")
	    		   .append(" INNER JOIN FLAT_BOOKING FB ON FB.FLAT_ID=F.FLAT_ID ")
	    		   .append(" INNER JOIN CUSTOMER C ON C.CUST_ID=FB.CUST_ID ")
	    		   .append(" LEFT OUTER JOIN NOC_RELEASE NR ON NR.FLAT_BOOKING_ID=FB.FLAT_BOOK_ID ")
	    		   .append(" LEFT OUTER JOIN NOC_DOCUMENTS ND ON ND.TYPE_ID=NR.NOC_RELEASE_ID ")
	    		   .append(" WHERE FB.STATUS_ID=:STATUS_ID ")
	    		   .append("  ")
				.toString();
	    
	    
	    
	    /* QRY_TO_GET_CUSTOMER_PROPERTY_DETAILS  FROM FLAT_BOOKING,FLAT,FLOOR,BLOCK,SITE  */
		public static final String QRY_TO_GET_CUSTOMER_DATA= new StringBuilder(" SELECT ")
				.append(" FB.STATUS_ID, ")
				.append("(SELECT  CUST.CUST_ID  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS CUST_ID,")
				.append("(SELECT  CUST.NAME_PREFIX  ||' '|| CUST.FIRST_NAME ||' '|| CUST.LAST_NAME  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS CUST_NAME,")
				.append("(SELECT  CBI.SALES_TEAM_LEAD_ID FROM CUST_BOOK_INFO CBI WHERE CBI.FLAT_BOOK_ID = FB.FLAT_BOOK_ID AND CBI.CUST_ID = FB.CUST_ID ) AS SALES_TEAM_LEAD_ID,")
				.append("FB.FLAT_BOOK_ID AS FLAT_BOOK_ID,")
				.append("FB.BOOKING_DATE,")
				.append("F.FLAT_ID AS FLAT_ID,")
				.append("F.FLAT_NO AS FLAT_NO,")
				.append("FD.FLOOR_ID AS FLOOR_ID,")
				.append("FL.NAME AS FLOOR_NAME,")
				.append("BD.BLOCK_ID AS BLOCK_ID,")
				.append("BL.NAME AS BLOCK_NAME,")
				.append("S.SITE_ID AS SITE_ID,")
				.append("S.SALES_FORCE_SITE_NAME AS SITE_NAME,")
				.append("S.SHORT_FORM AS SHORT_FORM, ")
				.append("FB.SALESFORCE_BOOKING_ID AS SALESFORCE_BOOKING_ID,STATUS.STATUS ")
				.append(" FROM FLAT_BOOKING FB INNER JOIN FLAT F ")
				.append("ON FB.FLAT_ID = F.FLAT_ID ")
				.append("INNER JOIN FLOOR_DETAILS FD ")
				.append("ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID ")
				.append("INNER JOIN FLOOR FL ")
				.append("ON FL.FLOOR_ID = FD.FLOOR_ID ")
				.append("INNER JOIN BLOCK_DETAILS BD ")
				.append("ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID ")
				.append("INNER JOIN BLOCK BL ")
				.append("ON BL.BLOCK_ID = BD.BLOCK_ID ")
				.append("INNER JOIN SITE S ")
				.append("ON BD.SITE_ID = S.SITE_ID ")
				.append("LEFT OUTER JOIN STATUS STATUS ")
				.append(" ON FB.STATUS_ID = STATUS.STATUS_ID ")
				.toString();
           
		//QRY_TO_GET_EMP_EMAILS_TO_FOR_RATE_OF_INTEREST this query and below query is same QRY_TO_GET_EMPLOYEE_DETAILS
		/* QRY_TO_GET_EMPLOYEE_DETAILS_FOR_MAIL FROM CUSTOMER */
       	public static final String QRY_TO_GET_EMPLOYEE_DETAILS = new StringBuilder("SELECT ")
       			.append(" DISTINCT EDSM.EMPLOYEE_ID, ")
       			.append(" (SELECT CONCAT(CONCAT(EMP.FIRST_NAME,' '),EMP.LAST_NAME) FROM EMPLOYEE EMP WHERE EMP.EMP_ID=EDSM.EMPLOYEE_ID) AS EMP_NAME , ")
       			.append(" (SELECT EMP.EMAIL FROM EMPLOYEE EMP WHERE EMP.EMP_ID=EDSM.EMPLOYEE_ID) AS EMP_EMAIL, ")
       			.append(" (SELECT EMP.MOBILE_NO FROM EMPLOYEE EMP WHERE EMP.EMP_ID=EDSM.EMPLOYEE_ID) AS MOBILE_NO  ")
       			//.append(" EDSM.BLOCK_ID, ")
       		//	.append(" EDSM.DEPT_ID, ")
       			//.append(" EDSM.ROLE_ID,EDSM.SITE_ID ")
       			.append(" FROM EMPLOYEE_DEPT_SITE_MAPPING EDSM ")
       			.append(" WHERE  ")
       			.append(" EDSM.SITE_ID=:SITE_ID ")
       			.append(" AND EDSM.ROLE_ID IN (:ROLE_ID) ")
       			.append(" AND EDSM.DEPT_ID IN(:DEPT_IDS) ")
       			.append(" AND EDSM.STATUS_ID=:STATUS_ID")
       			.toString();
           
      // 	escslation tickets
    	/* QRY_TO_GET_CRM_EMPLOYEES */
       	public static final String QRY_TO_GET_CRM_EMPLOYEES = new StringBuilder("SELECT ")
       			.append(" DISTINCT EDSM.EMPLOYEE_ID, ")
       			.append(" (SELECT ED.EMP_DETAILS_ID FROM EMPLOYEE_DETAILS ED WHERE ED.EMPLOYEE_ID=EDSM.EMPLOYEE_ID) AS EMP_DETAILS_ID , ")
       			.append(" (SELECT CONCAT(CONCAT(EMP.FIRST_NAME,' '),EMP.LAST_NAME) FROM EMPLOYEE EMP WHERE EMP.EMP_ID=EDSM.EMPLOYEE_ID) AS EMP_NAME , ")
       			.append(" (SELECT EMP.EMAIL FROM EMPLOYEE EMP WHERE EMP.EMP_ID=EDSM.EMPLOYEE_ID) AS EMP_EMAIL ")
       			//.append(" EDSM.BLOCK_ID, ")
       		//	.append(" EDSM.DEPT_ID, ")
       			//.append(" EDSM.ROLE_ID,EDSM.SITE_ID ")
       			.append(" FROM EMPLOYEE_DEPT_SITE_MAPPING EDSM ")
       			.append(" WHERE  ")
       			.append(" EDSM.ROLE_ID IN (:ROLE_ID) ")
       			.append(" AND EDSM.DEPT_ID IN(:DEPT_IDS) ")
       			.append(" AND EDSM.STATUS_ID=:STATUS_ID")
       			.toString();
       	
      	
    	/* QRY_TO_GET_TICKET_TYPES */
       	public static final String QRY_TO_GET_TICKET_TYPES = new StringBuilder("SELECT ")
       			.append(" DISTINCT TICKET_TYPE_ID ")
       			.append(" FROM  ")
       			.append(" TICKET_TYPE ")
       			.append(" WHERE TICKET_DEPT_TYPE=:TICKET_DEPT_TYPE AND STATUS_ID=:STATUS_ID ")
       			.toString();
       	
    	/* SAVE_TICKET_TYPE_DETAILS */
       	public static final String SAVE_TICKET_TYPE_DETAILS = new StringBuilder(" ")
       			.append(" INSERT INTO TICKET_TYPE_DETAILS (TICKET_TYPE_DETAILS_ID, SITE_ID, TICKET_TYPE_ID, DEPARTMENT_ID, EMPLOYEE_DETAILS_ID, STATUS, CREATED_DATE, BLOCK_ID)   ")
       			.append(" VALUES (TICKET_TYPE_DETAILS_SEQ.nextval, :SITE_ID, :TICKET_TYPE_ID, :DEPARTMENT_ID, :EMPLOYEE_DETAILS_ID, :STATUS, SYSDATE, :BLOCK_ID) ")
       			.toString();
       	/* QRY_TO_GET_TICKET_TYPES */
       	public static final String QRY_TO_IS_EMPLOYEE_CONFIGURED = new StringBuilder("SELECT ")
       			.append(" COUNT(TICKET_TYPE_ID) ")
       			.append(" FROM  ")
       			.append(" TICKET_TYPE_DETAILS ")
       			.append(" WHERE SITE_ID=:SITE_ID AND STATUS=:STATUS_ID AND BLOCK_ID=:BLOCK_ID AND DEPARTMENT_ID=:DEPT_ID ")
       			.toString();
           
       	
    	/* QRY_TO_GET_LEVELS */
       	public static final String QRY_TO_GET_LEVELS = new StringBuilder("SELECT ")
       			.append(" DISTINCT LEVEL_ID,NAME AS LEVEL_NAME ")
       			.append(" FROM  ")
       			.append(" LEVEL_MASTER ")
       			.toString();
       	
    	/* QRY_TO_GET_TICKET_TYPES */
       	public static final String QRY_TO_GET_LEVEL_EMPLOYESS = new StringBuilder("SELECT ")
       			.append(" DISTINCT E.EMP_ID,E.FIRST_NAME AS EMP_NAME,ED.EMP_DETAILS_ID,D.DEPT_ID,D.NAME AS DEPT_NAME,ER.ROLE_ID,ER.NAME AS ROLE_NAME ")
       			.append(" FROM EMPLOYEE_DEPT_SITE_MAPPING EDSP  ")
       			.append(" INNER JOIN EMPLOYEE E ON EDSP.EMPLOYEE_ID=E.EMP_ID ")
       			.append(" INNER JOIN EMPLOYEE_DETAILS ED ON ED.EMP_DETAILS_ID=E.EMP_ID ")
       			.append(" INNER JOIN DEPARTMENT D ON D.DEPT_ID=EDSP.DEPT_ID ")
       			.append(" INNER JOIN EMPLOYEE_ROLES ER ON ER.ROLE_ID=EDSP.ROLE_ID ")
       			.append(" WHERE EDSP.SITE_ID=:SITE_ID  ")
       			.append(" AND EDSP.DEPT_ID IN (:DEPT_IDS)  ")
       			.append(" AND EDSP.ROLE_ID NOT IN (:ROLE_IDS) ")
       			.append(" AND EDSP.STATUS_ID=:STATUS_ID ")
       			.toString();
       	
       	
    	/* QRY_TO_GET_TICKET_TYPES */
       	public static final String QRY_TO_GET_ALL_TICKET_TYPES = new StringBuilder("SELECT ")
       			.append(" DISTINCT TICKET_TYPE_ID ")
       			.append(" FROM  ")
       			.append(" TICKET_TYPE ")
       			.append(" WHERE  STATUS_ID=:STATUS_ID AND TICKET_DEPT_TYPE=:TICKET_DEPT_TYPE ")
       			.toString();
       	
    	/* SAVE_TICKET_TYPE_DETAILS */
       	public static final String SAVE_TICKET_ESCA_EXT_APPROVAL_LEVAL= new StringBuilder(" ")
       			.append(" INSERT INTO TICKET_ESCA_EXT_APPROVAL_LEVAL (ID, TICKET_TYPE_ID, TYPE, STATUS, CREATED_DATE, SITE_ID)   ")
       			.append(" VALUES (TICKET_ESC_EXT_APR_LVL_EMP_MAP_SEQ.NEXTVAL, :TICKET_TYPE_ID, :TYPE, :STATUS, SYSDATE, :SITE_ID) ")
       			.toString();
       	
       	
       	/* QRY_TO_GET_TICKET_TYPES */
       	public static final String QRY_TO_GET_TICKET_ESCA_EXT_APPROVAL_LEVAL = new StringBuilder("SELECT ")
       			.append(" TEEAP.ID AS ESC_LEVEL_ID ")
       			.append(" FROM  TICKET_ESCA_EXT_APPROVAL_LEVAL TEEAP   ")
       			.append(" INNER JOIN  TICKET_TYPE TT ON TEEAP.TICKET_TYPE_ID=TT.TICKET_TYPE_ID ")
       			.append(" WHERE TT.TICKET_DEPT_TYPE=:TICKET_DEPT_TYPE ")
       			.append(" AND TEEAP.SITE_ID=:SITE_ID ")
       			.append(" AND TEEAP.STATUS=:STATUS_ID ")
       			.toString();

       	
    	
       	/* QRY_TO_GET_TICKET_TYPES */
       	public static final String QRY_TO_GET_TICKET_ESC_LEVEL_EMP_MAP = new StringBuilder("SELECT ")
       			.append("  NVL(max(ID),0)+1 FROM TICKET_ESCA_LVL_MAP ")
       			.toString();
       	
       	
    	/* SAVE_TICKET_ESCA_LVL_MAP */
       	public static final String SAVE_TICKET_ESCA_LVL_MAP= new StringBuilder(" ")
       			.append(" INSERT INTO TICKET_ESCA_LVL_MAP (ID, LEVEL_ID, TICKET_ESCA_NXT_LVL_MAP_ID, TICKET_ESC_APR_LVL_ID, TICKET_HOLD_TIME, TICKET_EXTENDED_TIME,STATUS_ID,CREATED_DATE)   ")
       			.append(" VALUES (:TICKET_ESCA_LVL_MAP_ID, :LEVEL_ID, :TICKET_ESCA_NXT_LVL_MAP_ID, :TICKET_ESC_APR_LVL_ID, :TICKET_HOLD_TIME, :TICKET_EXTENDED_TIME,:STATUS_ID,SYSDATE) ")
       			.toString();
       	
       	
       	/* SAVE_TICKET_ESCA_LVL_MAP */
       	public static final String SAVE_TICKET_ESC_LEVEL_EMP_MAP= new StringBuilder(" ")
       			.append(" INSERT INTO TICKET_ESC_LEVEL_EMP_MAP (ID, EMPLOYEE_ID, TICKET_ESC_LVL_MAP_ID, STATUS_ID, CREATED_DATE)   ")
       			.append(" VALUES (:TICKET_ESC_LEVEL_EMP_MAP_ID, :EMPLOYEE_ID, :TICKET_ESC_LVL_MAP_ID, :STATUS_ID, SYSDATE) ")
       			.toString();
       	
       	
    	
       	/* QRY_TO_GET_TICKET_TYPES */
       	public static final String QRY_TO_IS_ESCALTION_CREATED = new StringBuilder("SELECT ")
       			.append(" COUNT( TELM.ID) ")
       			.append(" FROM TICKET_ESCA_LVL_MAP TELM ")
       			.append(" INNER JOIN TICKET_ESCA_EXT_APPROVAL_LEVAL TEEAL ON TELM.TICKET_ESC_APR_LVL_ID=TEEAL.ID ")
       			.append(" INNER JOIN TICKET_TYPE TT ON TT.TICKET_TYPE_ID=TEEAL.TICKET_TYPE_ID ")
       			.append(" WHERE TT.TICKET_DEPT_TYPE=:TICKET_DEPT_TYPE AND TEEAL.SITE_ID=:SITE_ID AND TELM.STATUS_ID=6   ")
       			.toString();
       	
    	/* GET_TICKET_ESCA_EXT_APPROVAL_LEVAL_COUNT */
       	public static final String GET_TICKET_ESCA_EXT_APPROVAL_LEVAL_COUNT = new StringBuilder(" ")
       			.append(" SELECT COUNT(*) FROM TICKET_ESCA_EXT_APPROVAL_LEVAL TEEAL  ")
       			.append(" INNER JOIN TICKET_TYPE TT ON TT.TICKET_TYPE_ID=TEEAL.TICKET_TYPE_ID    ")
       			.append(" WHERE SITE_ID=:SITE_ID AND TT.TICKET_DEPT_TYPE=:TICKET_DEPT_TYPE AND  TEEAL.STATUS=6 ")
       			.toString();
       	
    	
       	/* QRY_TO_GET_TICKET_TYPES */
       	public static final String QRY_TO_GET_TICKET_ESCA_EXT_APR_LVL_MAP = new StringBuilder("SELECT ")
       			.append("  NVL(max(ID),0)+1 FROM TICKET_ESCA_EXT_APR_LVL_MAP ")
       			.toString();
       	
       	
    	/* SAVE_TICKET_ESCA_LVL_MAP */
       	public static final String SAVE_TICKET_ESCA_EXT_APR_LVL_MAP= new StringBuilder(" ")
       			.append(" INSERT INTO TICKET_ESCA_EXT_APR_LVL_MAP (ID, LEVEL_ID, TICKET_ESC_EXT_REQ_NXT_LVL_ID, TICKET_ESC_EXT_APR_LVL_ID, STATUS_ID,CREATED_DATE,NO_OF_DAYS)   ")
       			.append(" VALUES (:TICKET_ESCA_EXT_LVL_MAP_ID, :LEVEL_ID, :TICKET_ESC_EXT_REQ_NXT_LVL_ID, :TICKET_ESC_EXT_APR_LVL_ID, :STATUS_ID,SYSDATE,:NO_OF_DAYS) ")
       			.toString();
       	
      	/* SAVE_TICKET_ESCA_LVL_MAP */
       	public static final String SAVE_TICKET_ESC_EXT_APR_LVL_EMP_MAP= new StringBuilder(" ")
       			.append(" INSERT INTO TICKET_ESC_EXT_APR_LVL_EMP_MAP (ID, EMPLOYEE_ID, TICKET_ESCA_EXT_APR_LVL_MAP_ID, STATUS_ID, CREATED_DATE)   ")
       			.append(" VALUES (:TICKET_ESC_LEVEL_EMP_MAP_ID, :EMPLOYEE_ID, :TICKET_ESCA_EXT_APR_LVL_MAP_ID, :STATUS_ID, SYSDATE) ")
       			.toString();
       	
    	
       	/* QRY_TO_GET_TICKET_TYPES */
       	public static final String QRY_TO_IS_ESCALTION_CREATED_FOR_EXT = new StringBuilder("SELECT ")
       			.append(" COUNT( TELM.ID) ")
       			.append(" FROM TICKET_ESCA_EXT_APR_LVL_MAP TELM ")
       			.append(" INNER JOIN TICKET_ESCA_EXT_APPROVAL_LEVAL TEEAL ON TELM.TICKET_ESC_EXT_APR_LVL_ID=TEEAL.ID ")
       			.append(" INNER JOIN TICKET_TYPE TT ON TT.TICKET_TYPE_ID=TEEAL.TICKET_TYPE_ID ")
       			.append(" WHERE TT.TICKET_DEPT_TYPE=:TICKET_DEPT_TYPE AND TEEAL.SITE_ID=:SITE_ID AND TELM.STATUS_ID=6 ")
       			.toString();

       	public static final String QRY_TO_EMP_EMAIL_PASS = new StringBuilder("")
		       	.append(" SELECT EMP.EMP_ID,EMP.EMP_ENCRYPTED_PASS,EMP.EMAIL,EMP.KEY ")
		       	.append(" FROM EMPLOYEE_LOGIN EL, ")
		       	.append(" EMPLOYEE EMP ")
		       	.append(" WHERE EMP.EMP_ID = EL.EMPLOYEE_ID ")
		       	.append(" AND EMP.EMP_ID = :EMP_ID ").toString();
       	
       	public static final String QRY_TO_LOAN_APPLIED_LEADD_ETAILS = new StringBuilder(" ")
       			.append(" SELECT LCLED.CUSTOMER_LOAN_EOI_DETAILS_ID,LBL.BANKERS_LIST_ID,LBL.BANKER_NAME ")
       			.append(" ,LCLED.BANKER_COMMENTS,LCLED.BANKER_LEAD_VIEW_STATUS_ID,LCLED.LEAD_STATUS_ID ")
       			.append(" ,(SELECT ST.STATUS FROM STATUS ST WHERE ST.STATUS_ID = LCLED.BANKER_LEAD_VIEW_STATUS_ID)AS BANKER_LEAD_VIEW_STATUS ")
       			.append(" ,(SELECT ST.STATUS FROM STATUS ST WHERE ST.STATUS_ID = LCLED.LEAD_STATUS_ID)AS LEAD_STATUS ")
       			.append(" ,S.SITE_ID,S.NAME AS SITE_NAME,BL.NAME AS BLOCK_NAME ")
       			.append(" ,F.FLAT_NO AS FLAT_NO,FB.FLAT_ID,FB.FLAT_BOOK_ID,BD.BLOCK_ID ")
       			.append(" ,(SELECT  CUST.CUST_ID  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS CUST_ID ")
       			.append(" ,(SELECT  CUST.NAME_PREFIX || ' '|| CUST.FIRST_NAME ||' '|| CUST.LAST_NAME  FROM CUSTOMER CUST WHERE CUST.CUST_ID = FB.CUST_ID ) AS CUST_NAME  ")
       			.append(" ,LCLED.CREATTION_DATE AS CREATTION_DATE ") 
       			.append(" ,FC.FLAT_COST ")
       			.append(" FROM FLAT_BOOKING FB INNER JOIN FLAT F  ")
       			.append(" ON FB.FLAT_ID = F.FLAT_ID     INNER JOIN FLAT_COST FC ON FB.FLAT_ID = FC.FLAT_ID AND FC.STATUS_ID = FB.STATUS_ID ")
       			.append(" INNER JOIN FLAT_DETAILS FD ON FD.FLAT_ID = FB.FLAT_ID AND FD.STATUS_ID = 6 ")
       			.append(" INNER JOIN FLOOR_DETAILS FD 	ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID  ")
       			.append(" INNER JOIN FLOOR FL 	ON FL.FLOOR_ID = FD.FLOOR_ID  ")
       			.append(" INNER JOIN BLOCK_DETAILS BD 	ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID  ")
       			.append(" INNER JOIN BLOCK BL 	ON BL.BLOCK_ID = BD.BLOCK_ID ")
       			.append(" INNER JOIN SITE S 	ON BD.SITE_ID = S.SITE_ID")
       			.append(" INNER JOIN LOAN_CUSTOMER_LOAN_EOI_DETAILS LCLED ON LCLED.FLAT_BOOKING_ID = FB.FLAT_BOOK_ID")
       			.append(" INNER JOIN LOAN_BANKERS_LIST LBL ON  LCLED.INTRESTED_BANK_ID = LBL.BANKERS_LIST_ID")
       			.toString();

       	public static final String QRY_TO_GET_DISPLY_DOCUMENTS  = new StringBuilder(" ")
       			.append(" SELECT LCLEAD.CUST_LOAN_EOI_ATTACHED_DOCS_ID,   LCLEAD.CUSTOMER_LOAN_EOI_DETAILS_ID, LCLEAD.DOCUMENT_ID, ")
       			.append("    LD.DOCUMENT_NAME AS DOC_TYPE,LCLEAD.STATUS_ID,   LCLEAD.DOC_LOCATION,   LCLEAD.URL_LOCATION ")
       			.append(" FROM LOAN_CUST_LOAN_EOI_ATTACHED_DOCS LCLEAD ")
       			.append(" INNER JOIN LOAN_DOCUMENTS LD ON LCLEAD.DOCUMENT_ID = LD.DOCUMENT_ID ")
       			.append(" WHERE ")
       			.append(" LCLEAD.CUSTOMER_LOAN_EOI_DETAILS_ID = :CUSTOMER_LOAN_EOI_DETAILS_ID ")
       			.append(" AND LCLEAD.STATUS_ID = :STATUS_ID ") 
       			.toString();       			

       	public static final String QRY_TO_UPDATE_BANKER_SEEN_LEAD_DETAILS  = new StringBuilder(" ")
       			.append(" UPDATE LOAN_CUSTOMER_LOAN_EOI_DETAILS SET BANKER_LEAD_VIEW_STATUS_ID = :BANKER_LEAD_VIEW_STATUS_ID ")
       			.append(" WHERE CUSTOMER_LOAN_EOI_DETAILS_ID = :CUSTOMER_LOAN_EOI_DETAILS_ID ")
       			.toString(); 
       	
       	public static final String QRY_TO_UPDATE_LEAD_DETAILS  = new StringBuilder(" ")
       			.append(" UPDATE LOAN_CUSTOMER_LOAN_EOI_DETAILS SET BANKER_COMMENTS = :BANKER_COMMENTS ")
       			.append(" ,LEAD_STATUS_ID = :LEAD_STATUS_ID")
       			//.append(" , BANKER_LEAD_VIEW_STATUS_ID = :BANKER_LEAD_VIEW_STATUS_ID ")
       			.append(" WHERE CUSTOMER_LOAN_EOI_DETAILS_ID = :CUSTOMER_LOAN_EOI_DETAILS_ID ")
       			.toString();       			

       	/* QRY_TO_GET_BANK_LIST */
		public static final String   QRY_TO_GET_BANK_LIST= new StringBuilder("  ")
				.append(" SELECT BL.BANKERS_LIST_ID,BL.BANKER_NAME,BL.EMAIL,BL.IFSC_CODE,BL.ADDRESS,BL.REGION_STATE ")
				.append(" ,CITY.CITY_NAME,BL.URL_LOCATION ")
				.append(" FROM LOAN_BANKERS_LIST BL  ")
				.append(" LEFT OUTER JOIN CITY CITY ON BL.REGION_STATE=CITY.CITY_ID  ")
				.append(" WHERE  BL.STATUS_ID = 6  ")
				.append(" ")
				.toString();
		
		
		/* QRY_TO_GET_CUSTOMER_KYC_DETAILS  */
		public static final String QRY_TO_GET_CUSTOMER_KYC_DETAILS = new StringBuilder(" SELECT DISTINCT ")
				.append(" CKDM.DOCUMENT_ID,CKDM.DOCUMENT_NAME ")
				.append(" FROM  ")
				.append(" CUSTOMER_KYC_DOC_MASTER CKDM WHERE CKDM.STATUS_ID=:STATUS_ID ")
				.toString();
		
		/* QRY_TO_GET_CUSTOMER_KYC_DETAILS  */
		public static final String QRY_TO_GET_AMINITIES_DETAILS = new StringBuilder(" SELECT DISTINCT ")
				.append(" AIM.AMINITITES_INFRA_ID,AIM.AMINITITES_INFRA_NAME,AISW.AMINITITES_INFRA_SITE_WISE_ID,AISW.AMINITITES_INFRA_ID,AISW.SITE_ID, ")
				.append(" AIFW.AMINITITES_INFRA_FLAT_WISE_ID,AIFW.FLAT_ID,AIFW.PER_SQFT_COST,AIFW.AMINITITES_INFRA_COST,AIFW.TOTAL_COST  ")
				.append(" FROM  ")
				.append(" AMINITITES_INFRA_MASTER AIM ")
				.append(" INNER JOIN AMINITITES_INFRA_SITE_WISE AISW ON AISW.AMINITITES_INFRA_ID=AIM.AMINITITES_INFRA_ID ")
				.append(" INNER JOIN AMINITITES_INFRA_FLAT_WISE AIFW ON AIFW.AMINITITES_INFRA_SITE_WISE_ID=AISW.AMINITITES_INFRA_SITE_WISE_ID ")
				.append(" WHERE AIFW.FLAT_ID=:FLAT_ID AND AIM.STATUS=:STATUS_ID AND AISW.STATUS=:STATUS_ID ")
				.toString();
		/* QRY_TO_GET_CUSTOMER_KYC_DETAILS  */
		public static final String QRY_TO_GET_FLAT_DETAILS = new StringBuilder(" SELECT DISTINCT ")
				.append(" S.SITE_ID,S.NAME AS SITE_NAME ,FL.FLOOR_ID,FL.NAME AS FLOOR_NAME ,F.FLAT_ID,F.FLAT_NO AS FLAT_NAME,BL.BLOCK_ID ,BL.NAME AS BLOCK_NAME ")
				.append(" FROM FLAT F   ")
				.append("  INNER JOIN FLOOR_DETAILS FD    ")
				.append(" ON F.FLOOR_DET_ID = FD.FLOOR_DET_ID   ")
				.append(" INNER JOIN FLOOR FL     ")
				.append(" ON FL.FLOOR_ID = FD.FLOOR_ID     ")
				.append(" INNER JOIN BLOCK_DETAILS BD     ")
				.append(" ON FD.BLOCK_DET_ID = BD.BLOCK_DET_ID     ")
				.append(" INNER JOIN BLOCK BL      ")
				.append(" ON BL.BLOCK_ID = BD.BLOCK_ID     ")
				.append(" INNER JOIN SITE S       ")
				.append(" ON BD.SITE_ID = S.SITE_ID     ")
				.toString();
       	
		/* QRY_TO_GET_NON_BOOKED_FLATS for view Customer with Flat Search */
		public static final String QRY_TO_GET_NON_BOOKED_BLOCKS = new StringBuilder(" SELECT DISTINCT ")
				.append(" BLCKDT.BLOCK_DET_ID,B.NAME AS BLOCK_NAME ,ST.SITE_ID,ST.SALES_FORCE_SITE_NAME AS SITE_NAME ")
				.append(" FROM  ")
				.append(" FLAT FT ")
				.append(" JOIN FLOOR_DETAILS FLRD ON(FLRD.FLOOR_DET_ID=FT.FLOOR_DET_ID) ")
				.append(" INNER JOIN FLOOR FL ON FLRD.FLOOR_ID=FL.FLOOR_ID  ")
				.append(" JOIN BLOCK_DETAILS BLCKDT ON(BLCKDT.BLOCK_DET_ID=FLRD.BLOCK_DET_ID) ")
				.append(" INNER JOIN BLOCK B ON BLCKDT.BLOCK_ID=B.BLOCK_ID   ")
				.append(" JOIN SITE ST ON(ST.SITE_ID=BLCKDT.SITE_ID) ")
				.append("  WHERE  BLCKDT.STATUS_ID=:STATUS_ID AND FT.FLAT_ID NOT IN (SELECT  DISTINCT FB.FLAT_ID FROM FLAT_BOOKING FB WHERE FB.STATUS_ID =:STATUS_ID )")
				.toString();
		
		/* QRY_TO_GET_NON_BOOKED_FLATS for view Customer with Flat Search */
		public static final String QRY_TO_GET_NON_BOOKED_FLOORS = new StringBuilder(" SELECT DISTINCT ")
				.append(" FLRD.FLOOR_DET_ID,FL.NAME AS FLOOR_NAME, BLCKDT.BLOCK_DET_ID,B.NAME AS BLOCK_NAME ,ST.SITE_ID,ST.SALES_FORCE_SITE_NAME AS SITE_NAME ")
				.append(" FROM  ")
				.append(" FLAT FT ")
				.append(" JOIN FLOOR_DETAILS FLRD ON(FLRD.FLOOR_DET_ID=FT.FLOOR_DET_ID) ")
				.append(" INNER JOIN FLOOR FL ON FLRD.FLOOR_ID=FL.FLOOR_ID  ")
				.append(" JOIN BLOCK_DETAILS BLCKDT ON(BLCKDT.BLOCK_DET_ID=FLRD.BLOCK_DET_ID) ")
				.append(" INNER JOIN BLOCK B ON BLCKDT.BLOCK_ID=B.BLOCK_ID   ")
				.append(" JOIN SITE ST ON(ST.SITE_ID=BLCKDT.SITE_ID) ")
				.append("  WHERE  BLCKDT.STATUS_ID=:STATUS_ID AND FLRD.STATUS_ID=:STATUS_ID AND FT.FLAT_ID NOT IN (SELECT  DISTINCT FB.FLAT_ID FROM FLAT_BOOKING FB WHERE FB.STATUS_ID =:STATUS_ID )")
				.toString();
		
		/* QRY_TO_GET_NON_BOOKED_FLATS for view Customer with Flat Search */
		public static final String QRY_TO_GET_NON_BOOKED_FLATS = new StringBuilder(" SELECT DISTINCT ")
				.append(" FT.FLAT_ID,FT.FLAT_NO AS FLAT_NO,ST.SITE_ID,ST.SALES_FORCE_SITE_NAME AS SITE_NAME,FLRD.FLOOR_DET_ID,FL.NAME AS FLOOR_NAME,BLCKDT.BLOCK_DET_ID,B.NAME AS BLOCK_NAME ")
				.append(" FROM  ")
				.append(" FLAT FT ")
				.append(" JOIN FLOOR_DETAILS FLRD ON(FLRD.FLOOR_DET_ID=FT.FLOOR_DET_ID) ")
				.append(" INNER JOIN FLOOR FL ON FLRD.FLOOR_ID=FL.FLOOR_ID  ")
				.append(" JOIN BLOCK_DETAILS BLCKDT ON(BLCKDT.BLOCK_DET_ID=FLRD.BLOCK_DET_ID) ")
				.append(" INNER JOIN BLOCK B ON BLCKDT.BLOCK_ID=B.BLOCK_ID   ")
				.append(" JOIN SITE ST ON(ST.SITE_ID=BLCKDT.SITE_ID) ")
				.append("  WHERE FT.STATUS_ID=:STATUS_ID AND BLCKDT.STATUS_ID=:STATUS_ID AND FLRD.STATUS_ID=:STATUS_ID ")
				.append("  AND  FT.FLAT_ID NOT IN (SELECT  DISTINCT FB.FLAT_ID FROM FLAT_BOOKING FB WHERE FB.STATUS_ID  IN (20,6) )")
				.toString();
				
					/* QRY_TO_GET_CITY_LIST */
		public static final String QRY_TO_GET_CITY_LIST= new StringBuilder(" SELECT ")
				.append(" C.CITY_ID AS CITY_ID,C.CITY_NAME AS CITY_NAME,C.CITY_ICON AS CITY_ICON")
				.append(" FROM CITY C ")
				.toString();
			
					/* QRY_TO_GET_COUNTRY_LIST */
		public static final String QRY_TO_GET_COUNTRY_LIST= new StringBuilder(" SELECT ")	
			   .append("COUNTRY_ID,COUNTRY_NAME AS COUNTRY ")
			   .append(" FROM COUNTRY ")
			   .toString();
		
		
		/* QRY_TO_GET_COUNTRY_LIST */
         public static final String QRY_TO_GET_SCHEMES= new StringBuilder(" SELECT DISTINCT ")	
	            .append(" F.FIN_SCHEME_ID,F.NAME AS FIN_SCHEME_NAME ,P.PERCENTAGE_ID,P.PERCENTAGE,FT.FIN_TAX_ID,FT.NAME TAX_NAME ")
	            .append(" FROM  ")
	            .append(" FIN_SCHEME_TAX_MAPPING FSTM  ")
	            .append(" INNER JOIN FIN_SCHEME F ON F.FIN_SCHEME_ID=FSTM.FIN_SCHEME_ID ")
	            .append(" LEFT OUTER JOIN FIN_TAX FT ON  FT.FIN_TAX_ID=FSTM.FIN_TAX_ID ")
	            .append(" INNER JOIN  PERCENTAGES P ON P.PERCENTAGE_ID=FSTM.PERCENTAGE_ID ")
	            .toString();
         
         /* QRY_TO_GET_COUNTRY_LIST */
         public static final String QRY_TO_GET_SALSEFORCEBOOKINGS= new StringBuilder(" SELECT DISTINCT ")	
        		 .append("  FLATB.FLAT_BOOK_ID, FLAT.FLAT_ID AS FLAT_ID  ")
        		 .append(" ,FLAT.FLAT_NO ")
        		 .append(" ,FLATB.STATUS_ID ")
        		 .append(" ,FLATB.SALESFORCE_BOOKING_ID  ")
        		 .append(" ,FLATB.SALESFORCE_OLD_BOOKING_ID  ")
        		 .append("  FROM SITE SITE  ")
        		 .append("  JOIN BLOCK_DETAILS BLOCKD ON(SITE.SITE_ID=BLOCKD.SITE_ID AND SITE.STATUS_ID=2 AND BLOCKD.STATUS_ID=6) ")
        		 .append("  JOIN BLOCK BLOCK ON(BLOCKD.BLOCK_ID=BLOCK.BLOCK_ID)  ")
        		 .append("  JOIN FLOOR_DETAILS FLOORD ")
        		 .append("  JOIN FLOOR FLOOR ON(FLOORD.FLOOR_ID=FLOOR.FLOOR_ID) ON(FLOORD.BLOCK_DET_ID=BLOCKD.BLOCK_DET_ID AND FLOORD.STATUS_ID=6 ) ")
        		 .append("  JOIN FLAT_DETAILS FLATD ON(FLATD.FLOOR_DET_ID=FLOORD.FLOOR_DET_ID AND FLATD.STATUS_ID=6)  ")
        		 .append("  JOIN FLAT FLAT ON(FLAT.FLAT_ID=FLATD.FLAT_ID) ")
        		 .append("  JOIN FLAT_BOOKING FLATB ON(FLATB.FLAT_ID = FLATD.FLAT_ID )  ")
        		// .append("  AND FLATB.FLAT_BOOK_ID IN (SELECT MAX(FLAT_BOOK_ID) FROM FLAT_BOOKING WHERE FLAT_ID=FLATD.FLAT_ID) ")
        		 .append("  JOIN STATUS S ON(FLATB.STATUS_ID=S.STATUS_ID)  ")
        		 .append("  ")
	            .toString();
         
         
         /* QRY_TO_GET_COUNTRY_LIST */
         public static final String QRY_TO_GET_COUNTRY_ID_BY_COUNTRY_NAME= new StringBuilder("  ")	
        		 .append("  SELECT DISTINCT C.COUNTRY_ID FROM COUNTRY C ")
	            .toString();
         
         /* QRY_TO_GET_COUNTRY_LIST */
         public static final String QRY_TO_GET_CITY_ID_BY_CITY_NAME= new StringBuilder("  ")	
        		 .append(" SELECT DISTINCT C.CITY_ID FROM CITY C ")
	            .toString();
         /* QRY_TO_GET_COUNTRY_LIST */
         public static final String QRY_TO_GET_STATE_ID_BY_STATE_NAME= new StringBuilder("  ")	
        		 .append("  SELECT DISTINCT S.STATE_ID FROM STATE S ")
	            .toString();
         
         
 		/* QRY_TO_SEARCH_ALL_CUSTOMER_FLAT_NOS for view Customer with Flat Search */
 		public static final String QRY_TO_SEARCH_ALL_CUSTOMER_FLAT_NOS_WITH_STATUS = new StringBuilder(" SELECT DISTINCT ")
 				.append(" CUST.CUST_ID AS CUST_ID, FT.FLAT_NO AS FLAT_NO, FT.FLAT_ID, FLATB.FLAT_BOOK_ID, ")
 				.append(" (CUST.FIRST_NAME || '-' || FT.FLAT_NO || '-' ||S.STATUS) AS CUST_NAME_FLAT_NO , ")
 				.append(" S.STATUS_ID , S.STATUS, ")
 				.append(" FLATB.SALESFORCE_BOOKING_ID , ST.SALES_FORCE_SITE_NAME AS SALES_FORCE_SITE_NAME ")
 				.append(" FROM CUSTOMER CUST ")
 				.append(" JOIN FLAT_BOOKING FLATB ON(FLATB.CUST_ID=CUST.CUST_ID) ")  
 				.append(" JOIN FLAT FT ON(FT.FLAT_ID=FLATB.FLAT_ID) ")
 				.append(" JOIN FLOOR_DETAILS FLRD ON(FLRD.FLOOR_DET_ID=FT.FLOOR_DET_ID) ")
 				.append(" JOIN BLOCK_DETAILS BLCKDT ON(BLCKDT.BLOCK_DET_ID=FLRD.BLOCK_DET_ID) ")
 				.append(" JOIN SITE ST ON(ST.SITE_ID=BLCKDT.SITE_ID) ")
 				.append(" JOIN STATUS S ON(FLATB.STATUS_ID=S.STATUS_ID)  ")
 				.append(" WHERE FT.STATUS_ID=:STATUS_ID AND  ST.SITE_ID=:SITE_ID and FLATB.STATUS_ID IN (20,6)  ORDER BY CUST_NAME_FLAT_NO ")
 				.toString();
 		
 		public static final String QRY_TO_NON_CUST_INFO = new StringBuilder(" SELECT DISTINCT ")
 				.append(" D.DEVICE_ID AS DEVICE_ID,D.UUID AS UUID,NC.SITE_ID AS SITE_ID,")
 				.append(" CASE WHEN D.MODIFIED_DATE IS NULL then D.CREATED_DATE else  D.MODIFIED_DATE END AS CREATED_DATE  ")
 				.append(" FROM DEVICE D ")
 				.append(" INNER JOIN NON_CUSTOMER NC ON ")
 				.append(" NC.DEVICE_ID=D.DEVICE_ID ")
 				.toString();
 		public static final String QRY_TO_GET_NON_CUST_MPR_ALL_DETAILS = new StringBuilder(" SELECT DISTINCT ")
 				.append(" MPR.MPR_ID,MPR.MPR_NAME, ")
				.append(" MPR.REMARKS,MPR.TYPE,MPR.TYPE_ID, ")
				.append(" MPR.CREATED_DATE,MPR.CREATED_BY, ")
				.append(" MPR.MODIFIED_DATE,MPR.MODIFIED_BY, ")
				.append(" MPR.STATUS_ID,ST.NAME AS TYPE_NAME, ")
				.append(" MPD.MPR_DOC_ID,MPD.LOCATION_TYPE, ")
				.append(" MPD.DOCUMENT_LOCATION, ")
				//.append(" (SELECT DISTINCT   MSD.MPR_ID FROM  MPR_SENT_DETAILS MSD WHERE MSD.MPR_ID=MPR.MPR_ID AND  MSD.ISVIEWED =1  AND MSD.DEVICE_ID=NC.DEVICE_ID) AS ISVIEWED, ")
				.append(" D.DEVICE_ID AS DEVICE_ID, ")
				.append(" D.UUID AS UUID, ")
				.append(" MSD.ISVIEWED AS DEVICE_VIEW_STATUS  ")
				.append(" FROM MPR MPR ")
				.append(" LEFT OUTER JOIN MPR_DOCUMENTS MPD ON(MPD.MPR_ID=MPR.MPR_ID) ")
				.append(" LEFT OUTER JOIN MPR_SENT_DETAILS MSD ON MSD.MPR_ID=MPR.MPR_ID ")
				.append(" LEFT OUTER JOIN NON_CUSTOMER NC ON (NC.SITE_ID=MPR.TYPE_ID)")
				.append(" LEFT OUTER JOIN SITE ST ON(ST.SITE_ID=MPR.TYPE_ID) ")
				.append(" LEFT OUTER JOIN DEVICE D ON D.DEVICE_ID=MSD.DEVICE_ID ")
				.append(" WHERE MPR.STATUS_ID=:STATUS_ID ")
				.append(" AND MPD.STATUS_ID=:STATUS_ID ")
				.append(" AND MPR.TYPE=:TYPE AND MPR.TYPE_ID IN (:TYPE_ID) ")
 				.toString();
 		
 	  public static final String UPDATE_NON_CUST_MPR_VIEW_STATUS=new StringBuilder(" UPDATE MPR_SENT_DETAILS SET ISVIEWED=:ISVIEWED,ISDELIVERED=:ISDELIVERED,VIEWED_TIME=SYSDATE ")
 		     .append( "WHERE MPR_ID=:MPR_ID AND DEVICE_ID IN (:DEVICE_ID) AND ISVIEWED IS NULL")
 		     .toString();
 		
 	  public static final String Insert_NON_CUST_MPR_VIEW_STATUS=new StringBuilder(" INSERT INTO MPR_SENT_DETAILS (MPR_ID,ISDELIVERED,ISVIEWED,VIEWED_TIME,DEVICE_ID,OS_TYPE) VALUES(:MPR_ID,:ISDELIVERED,:ISVIEWED,sysdate,:DEVICE_ID,(SELECT OS_TYPE FROM DEVICE WHERE DEVICE_ID=:DEVICE_ID)) ")
 			   .toString();
 	 public static final String Insert_NON_CUST_MPR_VIEW_STATUS_COUNT="SELECT COUNT(*) FROM MPR_SENT_DETAILS WHERE DEVICE_ID=:DEVICE_ID AND MPR_ID=:MPR_ID ";
 	         
 	public static final String QRY_TO_GET_NON_CUST_DEVICE_DETAILS_BY_SITE_ID_ = new StringBuilder(" SELECT DISTINCT ")
 			.append("DE.DEVICE_TOKEN AS DEVICE_TOKEN,DE.DEVICE_MODEL AS DEVICE_MODEL,")
 			.append(" DE.DEVICE_ID AS DEVICE_ID,DE.APP_VERSION AS APP_VERSION, ")
 			.append(" DE.OS_TYPE AS OS_TYPE,DE.OS_VERSION AS OS_VERSION, ")
 			.append(" DE.IMEI_NO AS IMEI_NO,DE.DEVICE_STATUS AS DEVICE_STATUS, ")
 			.append(" DE.USER_AGENT AS USER_AGENT,DE.USER_XID AS USER_XID, ")
 			.append(" DE.UUID AS UUID,DE.SERIAL_NO AS SERIAL_NO ")
 			.append(" FROM DEVICE DE ")
 			.append(" INNER JOIN NON_CUSTOMER NC ON ")
 			.append(" NC.DEVICE_ID=DE.DEVICE_ID  ")
 			.append(" JOIN SITE ST ON(ST.SITE_ID=NC.SITE_ID)")
 			.toString();
 	
	public static final String QRY_TO_GET_NON_CUST_VIEW_COUNT = new StringBuilder(" SELECT ")
			.append(" COUNT(DISTINCT DEVICE_ID) AS VIEW_COUNT ")
			.append(" FROM MPR_SENT_DETAILS MPRSD ")
			.append(" WHERE MPRSD.MPR_ID=:MPR_ID AND MPRSD.ISVIEWED=:ISVIEWED  ")
			.toString();
	public static final String QRY_TO_NON_CUST_VIEW_INFO = new StringBuilder(" SELECT NC.NAME AS CUST_NAME,")
				.append(" CASE WHEN MPRSD.OS_TYPE IS NULL THEN '-' ELSE MPRSD.OS_TYPE END AS OS_TYPE,")
				.append(" CASE WHEN MPRSD.ISVIEWED=1    THEN 'VIEWED' ELSE 'NOT VIEWED' END AS VIEW_STATUS , ")
				.append(" CASE WHEN MPRSD.ISDELIVERED=21 THEN 'RECEIVED' WHEN MPRSD.ISDELIVERED=22 THEN 'NOT RECEIVED' WHEN MPRSD.ISDELIVERED=115 THEN 'APP NOT REGISTERED'  WHEN MPRSD.ISDELIVERED=5 THEN 'NOT RECEIVED' END AS DELIVERED_STATUS, ")
				.append(" CASE WHEN MPRSD.ISDELIVERED=21 THEN MPRSD.DELIVERED_TIME WHEN MPRSD.ISDELIVERED=22 THEN NULL END AS DELIVERED_TIME,MPRSD.VIEWED_TIME ")
				.append(" FROM MPR MPR ")
				.append(" JOIN MPR_SENT_DETAILS MPRSD ON MPRSD.MPR_ID=MPR.MPR_ID ")
				.append(" INNER JOIN NON_CUSTOMER NC ON ")
				.append(" NC.DEVICE_ID=MPRSD.DEVICE_ID ")
				.append(" WHERE MPRSD.MPR_ID=:MPR_ID  ")
				.toString();
	
	public static final String QRY_TO_GET_TICKET_TYPE = new StringBuilder()	
			.append("   SELECT DISTINCT tt.TICKET_TYPE_ID AS TICKET_TYPE_ID from  TICKET_TYPE tt where tt.STATUS_ID=6 and tt.TICKET_DEPT_TYPE IN (:TICKET_DEPT_TYPE) ")
			.toString();
	
	 /* QRY_TO_GET_SOURCE_MASTER */
	public static final String QRY_TO_GET_SOURCE_MASTER = new StringBuilder("SELECT ")
			.append("SOURCE_ID AS SOURCE_ID,")
			.append("SOURCE_NAME AS SOURCE_NAME,")
			.append("SOURCE_DESC AS SOURCE_DESC,")
			.append("SOURCE_TYPE AS SOURCE_TYPE,")
			.append("SOURCE_STATUS AS SOURCE_STATUS,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("MODIFIED_DATE AS MODIFIED_DATE ")
			.append(" FROM LEAD_SOURCE where SOURCE_STATUS = 'A'")
			.toString();
	
	public static final String QRY_TO_GET_MARKETING_TYPE_MASTER = new StringBuilder("SELECT ")
			.append("MARKETING_TYPE_ID AS MARKETING_TYPE_ID,")
			.append("MARKETING_TYPE_NAME AS MARKETING_TYPE_NAME,")
			.append("CHANNEL_PARTNER_LEAD AS CHANNEL_PARTNER_LEAD,")
			.append("CHANNEL_PARTNER_NAME AS CHANNEL_PARTNER_NAME,")
			.append("CHANNEL_PARTNER_ADDRESS AS CHANNEL_PARTNER_ADDRESS,")
			.append("CHANNEL_PARTNER_NUMBER AS CHANNEL_PARTNER_NUMBER,")
			.append("MARKETING_TYPE_STATUS AS MARKETING_TYPE_STATUS,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("MODIFIED_DATE AS MODIFIED_DATE ")
			.append(" FROM Marketing_Type where MARKETING_TYPE_STATUS = 'A'")
			.toString();
	
	public static final String QRY_TO_GET_INACTIVE_REMARKS_MASTER = new StringBuilder("SELECT ")
			.append("INACTIVE_REMARK_ID AS INACTIVE_REMARK_ID,")
			.append("INACTIVE_REMARK_NAME AS INACTIVE_REMARK_NAME,")
			.append("INACTIVE_REMARK_STATUS AS INACTIVE_REMARK_STATUS,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("MODIFIED_DATE AS MODIFIED_DATE ")
			.append(" FROM LEAD_INACTIVE_REMARKS_MASTER where INACTIVE_REMARK_STATUS = 'A'")
			.toString();
	
	public static final String QRY_TO_GET_LEAD_COMMENTS = new StringBuilder("SELECT ")
			.append("LEAD_COMMENT_ID AS LEAD_COMMENT_ID,")
			.append("LEAD_COMMENT AS LEAD_COMMENT,")
			.append("LEAD_COMMENT_OWNER AS LEAD_COMMENT_OWNER,")
			.append("LEAD_COMMENT_DATE AS LEAD_COMMENT_DATE")
			.append(" FROM lead_comments ")
			.append(" WHERE LEAD_COMMENT_ID =:LEAD_COMMENT_ID")
			.toString();
	
	
	public static final String QRY_TO_GET_Lead_Sub_Status_MASTER = new StringBuilder("SELECT ")
			.append("LEAD_SUB_STATUS_ID AS LEAD_SUB_STATUS_ID,")
			.append("LEAD_SUB_STATUS_TYPE AS LEAD_SUB_STATUS_TYPE,")
			.append("LEAD_SUB_STATUS AS LEAD_SUB_STATUS,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("MODIFIED_DATE AS MODIFIED_DATE ")
			.append(" FROM Lead_Sub_Status where LEAD_SUB_STATUS = 'A'")
			.toString();
	
	public static final String QRY_TO_GET_HOUSING_REQUIREMENT_MASTER = new StringBuilder("SELECT ")
			.append("HOUSING_ID AS HOUSING_ID,")
			.append("HOUSING_TYPE AS HOUSING_TYPE,")
			.append("HOUSING_STATUS AS HOUSING_STATUS,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("MODIFIED_DATE AS MODIFIED_DATE ")
			.append(" FROM Housing_Requirement where HOUSING_STATUS = 'A'")
			.toString();
	
	public static final String QRY_TO_GET_TIME_FRAME_TO_PURCHASE_MASTER = new StringBuilder("SELECT ")
			.append("TIME_FRAME_TO_PURCHASE_ID AS TIME_FRAME_TO_PURCHASE_ID,")
			.append("TIME_FRAME AS TIME_FRAME,")
			.append("TIME_FRAME_STATUS AS TIME_FRAME_STATUS,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("MODIFIED_DATE AS MODIFIED_DATE ")
			.append(" FROM Time_Frame_To_Purchase where TIME_FRAME_STATUS = 'A'")
			.toString();
	
	public static final String QRY_TO_GET_PROJECT_PREFERRED_LOCATION_MASTER = new StringBuilder("SELECT ")
			.append("LOCATION_ID AS LOCATION_ID,")
			.append("LOCATION_NAME AS LOCATION_NAME,")
			.append("LOCATION_STATUS AS LOCATION_STATUS,")
			.append("CREATED_DATE AS CREATED_DATE,")
			.append("MODIFIED_DATE AS MODIFIED_DATE ")
			.append(" FROM Project_Preferred_Location where LOCATION_STATUS = 'A'")
			.toString();
	
	public static final String SAVE_LEAD_CREATION= new StringBuilder(" ")
   			.append(" Insert into LEAD_CREATION (LEAD_ID,CUSTOMER_NAME,COMPANY,DESIGNATION,REGISTERED_CREATED,LEAD_CREATED_TO_SITE_SCHEDULED,EMAIL,ALTERNATE_EMAIL1,ALTERNATE_EMAIL2,MOBILE,ADDITIONAL_MOBILE1,ADDITIONAL_MOBILE2,PHONE,EXTENSION,PROJECT_ID,PREFERED_PROJECT_LOCATION,FIRST_SOURCE_ID,LAST_SOURCE_ID,LEAD_OWNER_ID,MIN_BUDGET,MAX_BUDGET,BUDGET_RANGE,REQUIREMENT_TYPE,MIN_FLAT_AREA,MAX_FLAT_AREA,TIME_FRAME_TO_PURCHASE,HOUSING_REQUIREMENT,CUSTOMER_COMMENTS,CUSTOMER_ADDRESS_AREA,CUSTOMER_LOCALITY,CUSTOMER_ALTERNATE_ADDRESS,CUSTOMER_CITY,CUSTOMER_STATE,MARKETING_ID,LEAD_CREATION_STATUS,LEAD_SUB_STATUS_ID,CREATED_DATE,MODIFIED_DATE,LEAD_TASK_COMMENTS,CHANNEL_PARTNER_LEAD_ID,CHANNEL_PARTNER_NAME,CHANNEL_PARTNER_ADDRESS,CHANNEL_PARTNER_NUMBER,LEAD_INACTIVE_COMMENTS,PROJECT_NAME,SALES_REPLY,MEET_COMMENTS)   ")
   			.append(" values (lead_creation_seq.nextval,:CUSTOMER_NAME,:COMPANY,:DESIGNATION,sysdate,:LEAD_CREATED_TO_SITE_SCHEDULED,:EMAIL,:ALTERNATE_EMAIL1,:ALTERNATE_EMAIL2,:MOBILE,:ADDITIONAL_MOBILE1,:ADDITIONAL_MOBILE2,:PHONE,:EXTENSION,:PROJECT_ID,:PREFERED_PROJECT_LOCATION,:FIRST_SOURCE_ID,:LAST_SOURCE_ID,:LEAD_OWNER_ID,:MIN_BUDGET,:MAX_BUDGET,:BUDGET_RANGE,:REQUIREMENT_TYPE,:MIN_FLAT_AREA,:MAX_FLAT_AREA,:TIME_FRAME_TO_PURCHASE,:HOUSING_REQUIREMENT,:CUSTOMER_COMMENTS,:CUSTOMER_ADDRESS_AREA,:CUSTOMER_LOCALITY,:CUSTOMER_ALTERNATE_ADDRESS,:CUSTOMER_CITY,:CUSTOMER_STATE,:MARKETING_ID,'A',:LEAD_SUB_STATUS_ID,sysdate,sysdate,:LEAD_TASK_COMMENTS,:CHANNEL_PARTNER_LEAD_ID,:CHANNEL_PARTNER_NAME,:CHANNEL_PARTNER_ADDRESS,:CHANNEL_PARTNER_NUMBER,:LEAD_INACTIVE_COMMENTS,:PROJECT_NAME,:SALES_REPLY,:MEET_COMMENTS) ")
   			.toString();
	
	public static final String UPDATE_LEAD_CREATION= new StringBuilder(" ")
   			.append(" update LEAD_CREATION set CUSTOMER_NAME = :CUSTOMER_NAME, COMPANY = :COMPANY, DESIGNATION = :DESIGNATION, LEAD_CREATED_TO_SITE_SCHEDULED = :LEAD_CREATED_TO_SITE_SCHEDULED,EMAIL = :EMAIL,ALTERNATE_EMAIL1 = :ALTERNATE_EMAIL1,ALTERNATE_EMAIL2 = :ALTERNATE_EMAIL2,MOBILE = :MOBILE,ADDITIONAL_MOBILE1 = :ADDITIONAL_MOBILE1,ADDITIONAL_MOBILE2 = :ADDITIONAL_MOBILE2,PHONE = :PHONE,EXTENSION = :EXTENSION,PROJECT_ID = :PROJECT_ID,PREFERED_PROJECT_LOCATION = :PREFERED_PROJECT_LOCATION,FIRST_SOURCE_ID = :FIRST_SOURCE_ID,LAST_SOURCE_ID = :LAST_SOURCE_ID,LEAD_OWNER_ID = :LEAD_OWNER_ID,MIN_BUDGET = :MIN_BUDGET,MAX_BUDGET = :MAX_BUDGET,BUDGET_RANGE = :BUDGET_RANGE,REQUIREMENT_TYPE = :REQUIREMENT_TYPE,MIN_FLAT_AREA = :MIN_FLAT_AREA,MAX_FLAT_AREA = :MAX_FLAT_AREA,TIME_FRAME_TO_PURCHASE = :TIME_FRAME_TO_PURCHASE,HOUSING_REQUIREMENT = :HOUSING_REQUIREMENT,CUSTOMER_COMMENTS = :CUSTOMER_COMMENTS,CUSTOMER_ADDRESS_AREA = :CUSTOMER_ADDRESS_AREA,CUSTOMER_LOCALITY = :CUSTOMER_LOCALITY,CUSTOMER_ALTERNATE_ADDRESS = :CUSTOMER_ALTERNATE_ADDRESS,CUSTOMER_CITY = :CUSTOMER_CITY,CUSTOMER_STATE = :CUSTOMER_STATE,MARKETING_ID = :MARKETING_ID,LEAD_SUB_STATUS_ID = :LEAD_SUB_STATUS_ID,MODIFIED_DATE = sysdate,LEAD_TASK_COMMENTS=:LEAD_TASK_COMMENTS,CHANNEL_PARTNER_LEAD_ID=:CHANNEL_PARTNER_LEAD_ID,CHANNEL_PARTNER_NAME=:CHANNEL_PARTNER_NAME,CHANNEL_PARTNER_ADDRESS=:CHANNEL_PARTNER_ADDRESS,CHANNEL_PARTNER_NUMBER=:CHANNEL_PARTNER_NUMBER,LEAD_INACTIVE_COMMENTS=:LEAD_INACTIVE_COMMENTS,MARK_AS_SITE_VISIT=:MARK_AS_SITE_VISIT,MARK_AS_BOOKING=:MARK_AS_BOOKING,PROJECT_NAME=:PROJECT_NAME,SALES_REPLY=:SALES_REPLY,MEET_COMMENTS=:MEET_COMMENTS   ")
   			.append(" WHERE LEAD_ID =:LEAD_ID")
   			.toString();
	
	public static final String SAVE_LEAD_SITE_VISIT= new StringBuilder(" ")
   			.append(" Insert into lead_site_visit (lead_site_visit_id,LEAD_ID,lead_project_id,lead_project_name,lead_date_visit,lead_site_visit_status,lead_site_visit_status_name,lead_sales_rep,lead_sales_met_comments,CREATED_DATE,MODIFIED_DATe)   ")
   			.append(" values (LEAD_SITE_VISIT_SEQ.nextval,:LEAD_ID, :lead_project_id, :lead_project_name, :lead_date_visit,:lead_site_visit_status,:lead_site_visit_status_name,:lead_sales_rep,:lead_sales_met_comments,sysdate,sysdate ) ")
   			.toString();
	
	public static final String UPDATE_LEAD_SITE_VISIT = new StringBuilder(" ")
   			.append(" update lead_site_visit set lead_project_id = :lead_project_id, lead_project_name = :lead_project_name, lead_date_visit = :lead_date_visit, lead_site_visit_status = :lead_site_visit_status,lead_site_visit_status_name = :lead_site_visit_status_name,lead_sales_rep = :lead_sales_rep,lead_sales_met_comments = :lead_sales_met_comments,MODIFIED_DATe=sysdate  ")
   			.append(" WHERE LEAD_ID =:LEAD_ID and lead_site_visit_id=:lead_site_visit_id")
   			.toString();
	
	public static final String DELETE_LEAD_CREATION= new StringBuilder(" ")
   			.append(" delete from  LEAD_CREATION  ")
   			.append(" WHERE LEAD_ID =:LEAD_ID")
   			.toString();
	
	public static final String QRY_TO_GET_CUSTOMER_LEAD_MIS_COUNT = new StringBuilder( "SELECT")
			.append(" SUM(total_lead) total_lead, ")
            .append("SUM(total_lead_generated) total_lead_generated, ")
            .append("SUM(total_lead_opportunity) total_lead_opportunity, ")
            .append("SUM(total_lead_booking) total_lead_booking ")
            .append("FROM (")
            .append("SELECT COUNT(lead_id) total_lead, ")
            .append("CASE WHEN LEAD_SUB_STATUS_ID = 0 OR LEAD_SUB_STATUS_ID = 1 OR LEAD_SUB_STATUS_ID = 2 THEN COUNT(lead_id) END AS total_lead_generated, ")
            .append("CASE WHEN LEAD_SUB_STATUS_ID = 3 OR LEAD_SUB_STATUS_ID = 4 OR LEAD_SUB_STATUS_ID = 5 THEN COUNT(lead_id) END AS total_lead_opportunity, ")
            .append("CASE WHEN LEAD_SUB_STATUS_ID = 6 OR LEAD_SUB_STATUS_ID = 7 OR LEAD_SUB_STATUS_ID = 8 THEN COUNT(lead_id) END AS total_lead_booking ")
            .append("FROM lead_creation_MIS LC").toString();
	
			
	public static final String QRY_TO_GET_CUSTOMER_LEAD = new StringBuilder( "SELECT")
			.append(" LC.LEAD_ID,")
			.append(" LC.CUSTOMER_NAME,")
			.append(" LC.COMPANY,")
			.append(" LC.DESIGNATION,")
			.append(" LC.REGISTERED_CREATED,")
			.append(" LC.LEAD_CREATED_TO_SITE_SCHEDULED,")
			.append(" LC.EMAIL,")
			.append(" LC.ALTERNATE_EMAIL1,")
			.append(" LC.ALTERNATE_EMAIL2,")
			.append(" LC.MOBILE,")
			.append(" LC.ADDITIONAL_MOBILE1,")
			.append(" LC.ADDITIONAL_MOBILE2,")
			.append(" LC.PHONE,")
			.append(" LC.EXTENSION,")
			.append(" LC.PROJECT_ID,")
			.append(" LC.PROJECT_NAME,")
			.append(" LC.SALES_REPLY,")
			.append(" LC.MEET_COMMENTS,")
			.append(" LC.PREFERED_PROJECT_LOCATION,")
			.append(" LC.FIRST_SOURCE_ID,")
			.append(" LC.LAST_SOURCE_ID,")
			.append(" LC.LEAD_OWNER_ID,")
			.append(" LC.MIN_BUDGET,")
			.append(" LC.MAX_BUDGET,")
			.append(" LC.BUDGET_RANGE,")
			.append(" LC.REQUIREMENT_TYPE,")
			.append(" LC.MIN_FLAT_AREA,")
			.append(" LC.MAX_FLAT_AREA,")
			.append(" LC.TIME_FRAME_TO_PURCHASE,")
			.append(" LC.HOUSING_REQUIREMENT,")
			.append(" LC.CUSTOMER_COMMENTS,")
			.append(" LC.CUSTOMER_ADDRESS_AREA,")
			.append(" LC.CUSTOMER_LOCALITY,")
			.append(" LC.CUSTOMER_ALTERNATE_ADDRESS,")
			.append(" LC.CUSTOMER_CITY,")
			.append(" LC.CUSTOMER_STATE,")
			.append(" LC.MARKETING_ID,")
			.append(" LC.LEAD_CREATION_STATUS,")
			.append(" LC.LEAD_SUB_STATUS_ID,")
			.append(" LSS.LEAD_SUB_STATUS_TYPE,")
			.append(" LSS.LEAD_SUB_STATUS,")
			.append(" LC.LEAD_TASK_COMMENTS,")
			.append(" LC.CHANNEL_PARTNER_LEAD_ID,")
			.append(" LC.CHANNEL_PARTNER_NAME,")
			.append(" LC.CHANNEL_PARTNER_ADDRESS,")
			.append(" LC.CHANNEL_PARTNER_NUMBER,")
			.append(" LC.LEAD_INACTIVE_COMMENTS,")
			.append(" LC.MARK_AS_SITE_VISIT,")
			.append(" LC.MARK_AS_BOOKING,")
			.append(" LC.CREATED_DATE,")
			.append(" LC.MODIFIED_DATE")
			.append("  FROM")
			.append(" LEAD_CREATION LC, lead_sub_status LSS ")
			.toString();
	
	
	public static final String QRY_TO_GET_CUSTOMER_LEAD_MIS = new StringBuilder( "SELECT")
			.append(" LC.LEAD_ID,")
			.append(" LC.CUSTOMER_NAME,")
			.append(" LC.COMPANY,")
			.append(" LC.DESIGNATION,")
			.append(" LC.REGISTERED_CREATED,")
			.append(" LC.LEAD_CREATED_TO_SITE_SCHEDULED,")
			.append(" LC.EMAIL,")
			.append(" LC.ALTERNATE_EMAIL1,")
			.append(" LC.ALTERNATE_EMAIL2,")
			.append(" LC.MOBILE,")
			.append(" LC.ADDITIONAL_MOBILE1,")
			.append(" LC.ADDITIONAL_MOBILE2,")
			.append(" LC.PHONE,")
			.append(" LC.EXTENSION,")
			.append(" LC.PROJECT_ID,")
			.append(" LC.PROJECT_NAME,")
			.append(" LC.SALES_REPLY,")
			.append(" LC.MEET_COMMENTS,")
			.append(" LC.PREFERED_PROJECT_LOCATION,")
			.append(" LC.FIRST_SOURCE_ID,")
			.append(" LC.LAST_SOURCE_ID,")
			.append(" LC.LEAD_OWNER_ID,")
			.append(" LC.MIN_BUDGET,")
			.append(" LC.MAX_BUDGET,")
			.append(" LC.BUDGET_RANGE,")
			.append(" LC.REQUIREMENT_TYPE,")
			.append(" LC.MIN_FLAT_AREA,")
			.append(" LC.MAX_FLAT_AREA,")
			.append(" LC.TIME_FRAME_TO_PURCHASE,")
			.append(" LC.HOUSING_REQUIREMENT,")
			.append(" LC.CUSTOMER_COMMENTS,")
			.append(" LC.CUSTOMER_ADDRESS_AREA,")
			.append(" LC.CUSTOMER_LOCALITY,")
			.append(" LC.CUSTOMER_ALTERNATE_ADDRESS,")
			.append(" LC.CUSTOMER_CITY,")
			.append(" LC.CUSTOMER_STATE,")
			.append(" LC.MARKETING_ID,")
			.append(" LC.LEAD_CREATION_STATUS,")
			.append(" LC.LEAD_SUB_STATUS_ID,")
			.append(" LSS.LEAD_SUB_STATUS_TYPE,")
			.append(" LSS.LEAD_SUB_STATUS,")
			.append(" LC.LEAD_TASK_COMMENTS,")
			.append(" LC.CHANNEL_PARTNER_LEAD_ID,")
			.append(" LC.CHANNEL_PARTNER_NAME,")
			.append(" LC.CHANNEL_PARTNER_ADDRESS,")
			.append(" LC.CHANNEL_PARTNER_NUMBER,")
			.append(" LC.LEAD_INACTIVE_COMMENTS,")
			.append(" LC.MARK_AS_SITE_VISIT,")
			.append(" LC.MARK_AS_BOOKING,")
			.append(" LC.CREATED_DATE,")
			.append(" LC.MODIFIED_DATE")
			.append("  FROM")
			.append(" LEAD_CREATION_MIS LC, lead_sub_status LSS ")
			.toString();
	
	public static final String QRY_TO_GET_CUSTOMER_LEAD_SITE_VISIT = new StringBuilder( "SELECT")
			.append(" LC.LEAD_ID,")
			.append(" LC.LEAD_CREATED_TO_SITE_SCHEDULED,")
			.append(" LC.PROJECT_ID,")
			.append(" LC.PROJECT_NAME,")
			.append(" LC.SALES_REPLY,")
			.append(" LC.MEET_COMMENTS,")
			//.append(" LC.LEAD_OWNER_ID,")
			.append(" LC.LEAD_CREATION_STATUS,")
			.append(" LC.LEAD_SUB_STATUS_ID,")
			.append(" LSS.LEAD_SUB_STATUS_TYPE,")
			.append(" LSS.LEAD_SUB_STATUS,")
			.append(" LC.CREATED_DATE,")
			.append(" LC.MODIFIED_DATE")
			.append("  FROM")
			.append(" LEAD_NEW_SITE_VISIT LC, lead_sub_status LSS ")
			.toString();



}

