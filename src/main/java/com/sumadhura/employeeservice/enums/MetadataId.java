package com.sumadhura.employeeservice.enums;

public enum MetadataId {
	//---------------NOTE : Don't try to chaneg existing metadata id, project will get errors
	
	SITE(1L,"SITE"),
	BLOCK(2L,"BLOCK"),
	FLOOR(3L,"FLOOR"),
	FLAT_BOOKING(4L,"FLAT_BOOKING"),
	NONCOUSTOMER(5L,"NONCOUSTOMER"),
	COMPANY_UPDATE(6L,"COMPANY_UPDATE"),
	CUSTOMER(7L,"CUSTOMER"),
	EMPLOYEE(8L,"EMPLOYEE"),
	DEPARTMENT(9L,"DEPARTMENT"),
	REFERENCES_CUSTOMER(12L,"REFERENCES_CUSTOMER"),
	CHANEL_PARTNER(10L,"CHANEL_PARTNER"),
	REFERENCES_FRIEND(11L,"REFERENCES_FRIEND"),
	APPLICANT1(13L,"APPLICANT1"),
	APPLICANT2(14L,"APPLICANT2"),
	APPLICANT3(16L,"APPLICANT3"),
	APPLICANT4(17L,"APPLICANT4"),
	APPLICANT5(18L,"APPLICANT5"),
	APPLICANT6(19L,"APPLICANT6"),
	APPLICANT7(20L,"APPLICANT7"),
	APPLICANT8(21L,"APPLICANT8"),
	APPLICANT9(22L,"APPLICANT9"),
	APPLICANT10(23L,"APPLICANT10"),
	REFRENCE_MASTER(15L,"REFRENCE_MASTER"),
	COMPANY_NOTIFICATIONS(16L,"COMPANY_NOTIFICATIONS"),
	NONCUSTOMER_COMPANY_NOTIFICATIONS(48L,"NONCUSTOMER_COMPANY_NOTIFICATIONS"),
	
	ALL_BLOCK(24L,"ALL_BLOCK"),
	SINGLE_MULTIPLE_FLAT(25L,"SINGLE/MULTIPLE_FLAT"),
	BOOKING_FORM_DEMAND_NOTE(26L,"FIN_BOOKING_FORM_DEMAND_NOTE"),
	FIN_PENALTY(27L,"FIN_PENALTY"),
	FIN_BOOKING_FORM_MILESTONE_TAX(28L,"FIN_BOOKING_FORM_MILESTONE_TAX"),
	FIN_BOOKING_FORM_MILESTONES(29L,"FIN_BOOKING_FORM_MILESTONES"),
	CRM(30L,"CRM_COMMENTS"),
	REFUND(31L,"Amount Refund"),
	
	TDS(32L,"TDS"),
	//PRINCIPAL_AMOUNT(33L,"Princial Amount"),
	PRINCIPAL_AMOUNT(33L,"Principal Amount"),
	MODIFICATION_COST(34L,"Modification Cost"),
	LEGAL_COST(35L,"Legal Cost"),//equal to FLAT_LEGAL_AND_DOCUMENTATION_CHARGES
	CANCEL_REASON(36L,"Cancel reason in flat or mile stone amount"),
	CHEQUE(37L, "Cheque"),
	ONLINE(38L, "Online"),
	FIN_BOOKING_FORM_EXCESS_AMOUNT(39L,"FIN_BOOKING_FORM_EXCESS_AMOUNT"),
	FIN_BOOKING_FORM_ACCOUNTS(40L,"FIN_BOOKING_FORM_ACCOUNTS"),
	FIN_BOOKING_FORM_ACCOUNT_SUMMARY(41L,"FIN_BOOKING_FORM_ACCOUNT_SUMMARY"),
	BANK_STATEMENT(42L, "Bank Statement"),
	FIN_ANONYMOUS_ENTRY(43L, "Fin Anonymous Entry"),
	GST(44l,"GST"),
	UPLOADED(45l,"Uploaded"),
	GENERATED(46l,"Generated"),
	SUMADHURA(47L,"Sumadhura"),
	DEFAULT_MILESTONE_DUE_DATE(48L,"15"),
	MIS(49L,"MIS"),
	FLAT_CANCELLATION(50L,"Flat_Cancellation"),
	PAYMENT(51L,"Payment"),
	//LOCAL_PORT_NUMBER(52L,"8082"),
	LOCAL_PORT_NUMBER(52L,"8181"),
	UAT_PORT_NUMBER(53L,"9999"),
	CUG_PORT_NUMBER(54L,"8888"),
	LIVE_PORT_NUMBER(55L,"8090"),
	
	RECEIVED_DATE(56l,"RECEIVED_DATE"),
	CHEQUE_DATE(57l,"CHEQUE_DATE"),
	CHEQUE_NUMBER(58l,"CHEQUE_NUMBER"),
	AMOUNT(59l,"AMOUNT"),
	BANK_NAME(60l,"BANK_NAME"),
	PAYMENT_SET_OFF_AMOUNT(61L,"PAYMENT_SET_OFF_AMOUNT"),
	REFUNDABLE_ADVANCE(62l,"Refundable_Advance"),
	FIN_SITE_PROJ_ACC_MAP_ID(63l,"Site Account Number"),
	FLAT_AGREEMENT_COMPLETED(70L,"Flat Agreement Completed"),
	FLAT_AGREEMENT_NOT_COMPLETED(71L,"Flat Agreement Not Completed"),
	DON_NOT_CALC_INTEREST_BELOW(72L,"1000"),//1000.RS
	INSUFFICIENT_BALANCE(73L,"Insufficient_Balance"),
	OTHER(74L,"Other"),
	MULTIPLE_ACCOUNTS(75l, "Multiple_Accounts"),
	CUSTOMER_TYPE(76l, "CUSTOMER_TYPE"),
	ALL(77l, "All"), 
	CUSTOMER_LEDGER(78l,"Customer_Ledger"),
	BOOKING_FORM_ID(79l,"BOOKING_FORM_ID"),
	AMOUNT_REFUND(80L,"Amount Refund"),
	HOLIDAY_SEASONAL_CELEBRATIONS_NOTIFICATION_EVENTS(81L,"HOLIDAY_SEASONAL_CELEBRATIONS_NOTIFICATION_EVENTS"),
    CC(84l,"cc"),
	YES(85L,"YES"),
	NO(86L,"NO"),
	MESSEGE_OWNER(87L,"MESSEGE_OWNER"),
	TRANSACTION_MODE(88L,"Transaction Mode"),
	FIN_BOOKING_FORM_ACCOUNTS_STATEMENT(89L,"FIN_BOOKING_FORM_ACCOUNTS_STATEMENT"),
	DEMAND_NOTE(90L, "Demand Note"),
	INTEREST_LETTER(91L, "Interest Letter"),
	SOURCE_OF_FUNDS(92L,"SOURCE_OF_FUNDS"),
	CHEQUE_DEPOSITED_DATE(93L,"CHEQUE_DEPOSITED_DATE"),
	CHEQUE_CLEARANCE_DATE(94L,"CHEQUE_CLEARANCE_DATE"),
	RECEIPT(95l,"Receipt"),
	PAID_BY(96l,"Paid By"),
	REFERENCE_NUMBER(97l,"REFERENCE_NUMBER"),
	DEMAND_NOTE_DATE(98l,"DEMAND_NOTE_DATE"),
	DUE_DATE(99l,"DUE_DATE"),
	CHEQUE_HANDOVER_DATE(100l,"CHEQUE_HANDOVER_DATE"),
	//FLAT_LEGAL_AND_DOCUMENTATION_CHARGES(101l,"Flat Legal and Documentation Charges"),
	INDIVIDUAL_FLAT_KHATA_BIFURCATION_AND_OTHER_CHARGES (102l,"Individual_Flat_Khata_bifurcation_and_other_charges"),
	MAINTENANCE_CHARGE (103l,"Maintenance_Charge"),
	CORPUS_FUND (104l,"Corpus_Fund"),
	INTEREST_WAIVER(105l,"Interest Waiver"),
	FIRST_DISBURSEMENT_DEMANDNOTE(106l,"First_Disbursement_Demandnote"),
	MILESTONE_COMPLETION_DEMANDNOTE(107l,"Milestone_Completion_Demandnote"),
	BOOKING_START_DATE(108l,"Booking Start Date"),
	BOOKING_END_DATE(109l,"Booking End Date"),
	BOOKING_SELECTED_FLATS_BY_DATES(110l,"Booking Selected Flats By Dates"),
	PROJECT_NOTIFICATIONS(111L,"PROJECT_NOTIFICATIONS"),
	COMPANY_NOTIFICATION(112L,"COMPANY_NOTIFICATION"),
	FINAL_DEMAND_NOTE(113l,"FINAL_DEMAND_NOTE"),
	ESCALATION_LEVEL(114l, "Escalation Level"),
	SYSTEM(129l,"SYSTEM"),
	CUSTOMER_APP_NOT_REGISTERED(115l,"CUSTOMER_APP_NOT_REGISTERED"),
	VIEWED_LATER(116L,"VIEWED_LATER"),
	OPEN_TO_SKY(130l,"Open to sky"),
	//SOUTH_SIDE_ID(131l,"Open to sky"),
	OPEN_TO_CORRIDOR(132l,"Open to Corridor"),
	//WEST_SIDE_ID(133l,"Open to sky"),
	EXTRA_CAR_PARKING(135l,"Extra Car Parking"),
	NOC(136l,"NOC"),
	CRM_TECH_TICKET_TYPE(140l,"CRM_TECH_TICKET_TYPE"),
	CRM_FINANCE_TICKET_TYPE(141l,"CRM_FINANCE_TICKET_TYPE"),
	DEMAND_NOTE_ACCOUNT_NUMBER(142l,"DEMAND_NOTE_ACCOUNT_NUMBER"),

	HTTPS_LIVE_PORT_NUMBER(143L,"443"),
	HTTPS_CUG_PORT_NUMBER(143L,"7777"),	
	PROJECT_COMPANY_NOTIFICATIONS(145l,"PROJECT COMPANY NOTIFICATIONS"),;
	
	private MetadataId(Long id, String name) {
		this.id = id;
		this.name = name;
	}
	private Long id;
	private String name;
	/**
	 * @return the id
	 */
	public Long getId() {
		return id;
	}
	/**
	 * @param id the id to set
	 */
	public void setId(Long id) {
		this.id = id;
	}
	/**
	 * @return the name
	 */
	public String getName() {
		return name;
	}
	/**
	 * @param name the name to set
	 */
	public void setName(String name) {
		this.name = name;
	}
}
